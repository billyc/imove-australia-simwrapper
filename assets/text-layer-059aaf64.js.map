{"version":3,"file":"text-layer-059aaf64.js","sources":["../../node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js","../../node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js","../../node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js","../../node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js","../../node_modules/@mapbox/tiny-sdf/index.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js","../../node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Layer from './layer';\nimport debug from '../debug';\nimport { flatten } from '../utils/flatten';\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return this.internalState && this.internalState.subLayers || [];\n  }\n\n  initializeState(context) {}\n\n  setState(updateObject) {\n    super.setState(updateObject);\n    this.setNeedsUpdate();\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    const {\n      object\n    } = info;\n    const isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n    return info;\n  }\n\n  filterSubLayer(context) {\n    return true;\n  }\n\n  shouldRenderSubLayer(subLayerId, data) {\n    return data && data.length;\n  }\n\n  getSubLayerClass(subLayerId, DefaultLayerClass) {\n    const {\n      _subLayerProps: overridingProps\n    } = this.props;\n    return overridingProps && overridingProps[subLayerId] && overridingProps[subLayerId].type || DefaultLayerClass;\n  }\n\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        index: -1,\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n\n        return accessor(x, i);\n      };\n    }\n\n    return accessor;\n  }\n\n  getSubLayerProps(sublayerProps = {}) {\n    var _this$props$updateTri;\n\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      id: '',\n      updateTriggers: {},\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation\n    };\n    const overridingSublayerProps = overridingProps && sublayerProps.id && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(newProps, sublayerProps, overridingSublayerProps);\n    newProps.id = \"\".concat(this.props.id, \"-\").concat(sublayerId);\n    newProps.updateTriggers = {\n      all: (_this$props$updateTri = this.props.updateTriggers) === null || _this$props$updateTri === void 0 ? void 0 : _this$props$updateTri.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _updateAutoHighlight(info) {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  _postUpdate(updateParams, forceUpdate) {\n    let subLayers = this.internalState.subLayers;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n\n    if (shouldUpdate) {\n      const subLayersList = this.renderLayers();\n      subLayers = flatten(subLayersList, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n\n}\n\n_defineProperty(CompositeLayer, \"layerName\", 'CompositeLayer');\n//# sourceMappingURL=composite-layer.js.map","export default \"#define SHADER_NAME icon-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceIconFrames;\\nattribute float instanceColorModes;\\nattribute vec2 instanceOffsets;\\nattribute vec2 instancePixelOffset;\\n\\nuniform float sizeScale;\\nuniform vec2 iconsTextureDim;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform bool billboard;\\nuniform int sizeUnits;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = angle * PI / 180.0;\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n\\n  vec2 iconSize = instanceIconFrames.zw;\\n  // convert size in meters to pixels, then scaled and clamp\\n \\n  // project meters to pixels and clamp to limits \\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \\n    sizeMinPixels, sizeMaxPixels\\n  );\\n\\n  // scale icon height to match instanceSize\\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\\n\\n  // scale and rotate vertex in \\\"pixel\\\" value and convert back to fraction in clipspace\\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\\n  pixelOffset += instancePixelOffset;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  vTextureCoords = mix(\\n    instanceIconFrames.xy,\\n    instanceIconFrames.xy + iconSize,\\n    (positions.xy + 1.0) / 2.0\\n  ) / iconsTextureDim;\\n\\n  vColor = instanceColors;\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n\\n  vColorMode = instanceColorModes;\\n}\\n\";\n//# sourceMappingURL=icon-layer-vertex.glsl.js.map","export default \"#define SHADER_NAME icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float alphaCutoff;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\\n\\n  // if colorMode == 0, use pixel color from the texture\\n  // if colorMode == 1 or rendering picking buffer, use texture as transparency mask\\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\\n  // Take the global opacity and the alpha from vColor into account for the alpha component\\n  float a = texColor.a * opacity * vColor.a;\\n\\n  if (a < alphaCutoff) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vec4(color, a);\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=icon-layer-fragment.glsl.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Texture2D, copyToTexture } from '@luma.gl/core';\nimport { ImageLoader } from '@loaders.gl/images';\nimport { load } from '@loaders.gl/core';\nimport { createIterable } from '@deck.gl/core';\nconst DEFAULT_CANVAS_WIDTH = 1024;\nconst DEFAULT_BUFFER = 4;\n\nconst noop = () => {};\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [10241]: 9987,\n  [10240]: 9729,\n  [10242]: 33071,\n  [10243]: 33071\n};\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction resizeImage(ctx, imageData, width, height) {\n  if (width === imageData.width && height === imageData.height) {\n    return imageData;\n  }\n\n  ctx.canvas.height = height;\n  ctx.canvas.width = width;\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n  return ctx.canvas;\n}\n\nfunction getIconId(icon) {\n  return icon && (icon.id || icon.url);\n}\n\nfunction resizeTexture(texture, width, height, parameters) {\n  const oldWidth = texture.width;\n  const oldHeight = texture.height;\n  const newTexture = new Texture2D(texture.gl, {\n    width,\n    height,\n    parameters\n  });\n  copyToTexture(texture, newTexture, {\n    targetY: 0,\n    width: oldWidth,\n    height: oldHeight\n  });\n  texture.delete();\n  return newTexture;\n}\n\nfunction buildRowMapping(mapping, columns, yOffset) {\n  for (let i = 0; i < columns.length; i++) {\n    const {\n      icon,\n      xOffset\n    } = columns[i];\n    const id = getIconId(icon);\n    mapping[id] = { ...icon,\n      x: xOffset,\n      y: yOffset\n    };\n  }\n}\n\nexport function buildMapping({\n  icons,\n  buffer,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0,\n  rowHeight = 0,\n  canvasWidth\n}) {\n  let columns = [];\n\n  for (let i = 0; i < icons.length; i++) {\n    const icon = icons[i];\n    const id = getIconId(icon);\n\n    if (!mapping[id]) {\n      const {\n        height,\n        width\n      } = icon;\n\n      if (xOffset + width + buffer > canvasWidth) {\n        buildRowMapping(mapping, columns, yOffset);\n        xOffset = 0;\n        yOffset = rowHeight + yOffset + buffer;\n        rowHeight = 0;\n        columns = [];\n      }\n\n      columns.push({\n        icon,\n        xOffset\n      });\n      xOffset = xOffset + width + buffer;\n      rowHeight = Math.max(rowHeight, height);\n    }\n  }\n\n  if (columns.length > 0) {\n    buildRowMapping(mapping, columns, yOffset);\n  }\n\n  return {\n    mapping,\n    rowHeight,\n    xOffset,\n    yOffset,\n    canvasWidth,\n    canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n  };\n}\nexport function getDiffIcons(data, getIcon, cachedIcons) {\n  if (!data || !getIcon) {\n    return null;\n  }\n\n  cachedIcons = cachedIcons || {};\n  const icons = {};\n  const {\n    iterable,\n    objectInfo\n  } = createIterable(data);\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const icon = getIcon(object, objectInfo);\n    const id = getIconId(icon);\n\n    if (!icon) {\n      throw new Error('Icon is missing.');\n    }\n\n    if (!icon.url) {\n      throw new Error('Icon url is missing.');\n    }\n\n    if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n      icons[id] = { ...icon,\n        source: object,\n        sourceIndex: objectInfo.index\n      };\n    }\n  }\n\n  return icons;\n}\nexport default class IconManager {\n  constructor(gl, {\n    onUpdate = noop,\n    onError = noop\n  }) {\n    _defineProperty(this, \"gl\", void 0);\n\n    _defineProperty(this, \"onUpdate\", void 0);\n\n    _defineProperty(this, \"onError\", void 0);\n\n    _defineProperty(this, \"_loadOptions\", null);\n\n    _defineProperty(this, \"_texture\", null);\n\n    _defineProperty(this, \"_externalTexture\", null);\n\n    _defineProperty(this, \"_mapping\", {});\n\n    _defineProperty(this, \"_textureParameters\", null);\n\n    _defineProperty(this, \"_pendingCount\", 0);\n\n    _defineProperty(this, \"_autoPacking\", false);\n\n    _defineProperty(this, \"_xOffset\", 0);\n\n    _defineProperty(this, \"_yOffset\", 0);\n\n    _defineProperty(this, \"_rowHeight\", 0);\n\n    _defineProperty(this, \"_buffer\", DEFAULT_BUFFER);\n\n    _defineProperty(this, \"_canvasWidth\", DEFAULT_CANVAS_WIDTH);\n\n    _defineProperty(this, \"_canvasHeight\", 0);\n\n    _defineProperty(this, \"_canvas\", null);\n\n    this.gl = gl;\n    this.onUpdate = onUpdate;\n    this.onError = onError;\n  }\n\n  finalize() {\n    var _this$_texture;\n\n    (_this$_texture = this._texture) === null || _this$_texture === void 0 ? void 0 : _this$_texture.delete();\n  }\n\n  getTexture() {\n    return this._texture || this._externalTexture;\n  }\n\n  getIconMapping(icon) {\n    const id = this._autoPacking ? getIconId(icon) : icon;\n    return this._mapping[id] || {};\n  }\n\n  setProps({\n    loadOptions,\n    autoPacking,\n    iconAtlas,\n    iconMapping,\n    textureParameters\n  }) {\n    if (loadOptions) {\n      this._loadOptions = loadOptions;\n    }\n\n    if (autoPacking !== undefined) {\n      this._autoPacking = autoPacking;\n    }\n\n    if (iconMapping) {\n      this._mapping = iconMapping;\n    }\n\n    if (iconAtlas) {\n      var _this$_texture2;\n\n      (_this$_texture2 = this._texture) === null || _this$_texture2 === void 0 ? void 0 : _this$_texture2.delete();\n      this._texture = null;\n      this._externalTexture = iconAtlas;\n    }\n\n    if (textureParameters) {\n      this._textureParameters = textureParameters;\n    }\n  }\n\n  get isLoaded() {\n    return this._pendingCount === 0;\n  }\n\n  packIcons(data, getIcon) {\n    if (!this._autoPacking || typeof document === 'undefined') {\n      return;\n    }\n\n    const icons = Object.values(getDiffIcons(data, getIcon, this._mapping) || {});\n\n    if (icons.length > 0) {\n      const {\n        mapping,\n        xOffset,\n        yOffset,\n        rowHeight,\n        canvasHeight\n      } = buildMapping({\n        icons,\n        buffer: this._buffer,\n        canvasWidth: this._canvasWidth,\n        mapping: this._mapping,\n        rowHeight: this._rowHeight,\n        xOffset: this._xOffset,\n        yOffset: this._yOffset\n      });\n      this._rowHeight = rowHeight;\n      this._mapping = mapping;\n      this._xOffset = xOffset;\n      this._yOffset = yOffset;\n      this._canvasHeight = canvasHeight;\n\n      if (!this._texture) {\n        this._texture = new Texture2D(this.gl, {\n          width: this._canvasWidth,\n          height: this._canvasHeight,\n          parameters: this._textureParameters || DEFAULT_TEXTURE_PARAMETERS\n        });\n      }\n\n      if (this._texture.height !== this._canvasHeight) {\n        this._texture = resizeTexture(this._texture, this._canvasWidth, this._canvasHeight, this._textureParameters || DEFAULT_TEXTURE_PARAMETERS);\n      }\n\n      this.onUpdate();\n      this._canvas = this._canvas || document.createElement('canvas');\n\n      this._loadIcons(icons);\n    }\n  }\n\n  _loadIcons(icons) {\n    const ctx = this._canvas.getContext('2d');\n\n    for (const icon of icons) {\n      this._pendingCount++;\n      load(icon.url, ImageLoader, this._loadOptions).then(imageData => {\n        const id = getIconId(icon);\n        const {\n          x,\n          y,\n          width,\n          height\n        } = this._mapping[id];\n        const data = resizeImage(ctx, imageData, width, height);\n\n        this._texture.setSubImageData({\n          data,\n          x,\n          y,\n          width,\n          height\n        });\n\n        this._texture.generateMipmap();\n\n        this.onUpdate();\n      }).catch(error => {\n        this.onError({\n          url: icon.url,\n          source: icon.source,\n          sourceIndex: icon.sourceIndex,\n          loadOptions: this._loadOptions,\n          error\n        });\n      }).finally(() => {\n        this._pendingCount--;\n      });\n    }\n  }\n\n}\n//# sourceMappingURL=icon-manager.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, log, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './icon-layer-vertex.glsl';\nimport fs from './icon-layer-fragment.glsl';\nimport IconManager from './icon-manager';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  iconAtlas: {\n    type: 'image',\n    value: null,\n    async: true\n  },\n  iconMapping: {\n    type: 'object',\n    value: {},\n    async: true\n  },\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  billboard: true,\n  sizeUnits: 'pixels',\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  alphaCutoff: {\n    type: 'number',\n    value: 0.05,\n    min: 0,\n    max: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getIcon: {\n    type: 'accessor',\n    value: x => x.icon\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  onIconError: {\n    type: 'function',\n    value: null,\n    compare: false,\n    optional: true\n  }\n};\nexport default class IconLayer extends Layer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.state = {\n      iconManager: new IconManager(this.context.gl, {\n        onUpdate: this._onUpdate.bind(this),\n        onError: this._onError.bind(this)\n      })\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIcon',\n        transform: this.getInstanceOffset\n      },\n      instanceIconFrames: {\n        size: 4,\n        accessor: 'getIcon',\n        transform: this.getInstanceIconFrame\n      },\n      instanceColorModes: {\n        size: 1,\n        type: 5121,\n        accessor: 'getIcon',\n        transform: this.getInstanceColorMode\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      oldProps,\n      changeFlags\n    } = params;\n    const attributeManager = this.getAttributeManager();\n    const {\n      iconAtlas,\n      iconMapping,\n      data,\n      getIcon,\n      textureParameters\n    } = props;\n    const {\n      iconManager\n    } = this.state;\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas');\n    iconManager.setProps({\n      loadOptions: props.loadOptions,\n      autoPacking: !prePacked,\n      iconAtlas,\n      iconMapping: prePacked ? iconMapping : null,\n      textureParameters\n    });\n\n    if (prePacked) {\n      if (oldProps.iconMapping !== props.iconMapping) {\n        attributeManager.invalidate('getIcon');\n      }\n    } else if (changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon)) {\n      iconManager.packIcons(data, getIcon);\n    }\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.state.iconManager.isLoaded;\n  }\n\n  finalizeState(context) {\n    super.finalizeState(context);\n    this.state.iconManager.finalize();\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels,\n      sizeUnits,\n      billboard,\n      alphaCutoff\n    } = this.props;\n    const {\n      iconManager\n    } = this.state;\n    const iconsTexture = iconManager.getTexture();\n\n    if (iconsTexture) {\n      this.state.model.setUniforms(uniforms).setUniforms({\n        iconsTexture,\n        iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n        sizeUnits: UNIT[sizeUnits],\n        sizeScale,\n        sizeMinPixels,\n        sizeMaxPixels,\n        billboard,\n        alphaCutoff\n      }).draw();\n    }\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  _onUpdate() {\n    this.setNeedsRedraw();\n  }\n\n  _onError(evt) {\n    var _this$getCurrentLayer;\n\n    const onIconError = (_this$getCurrentLayer = this.getCurrentLayer()) === null || _this$getCurrentLayer === void 0 ? void 0 : _this$getCurrentLayer.props.onIconError;\n\n    if (onIconError) {\n      onIconError(evt);\n    } else {\n      log.error(evt.error.message)();\n    }\n  }\n\n  getInstanceOffset(icon) {\n    const {\n      width,\n      height,\n      anchorX = width / 2,\n      anchorY = height / 2\n    } = this.state.iconManager.getIconMapping(icon);\n    return [width / 2 - anchorX, height / 2 - anchorY];\n  }\n\n  getInstanceColorMode(icon) {\n    const mapping = this.state.iconManager.getIconMapping(icon);\n    return mapping.mask ? 1 : 0;\n  }\n\n  getInstanceIconFrame(icon) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.state.iconManager.getIconMapping(icon);\n    return [x, y, width, height];\n  }\n\n}\n\n_defineProperty(IconLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(IconLayer, \"layerName\", 'IconLayer');\n//# sourceMappingURL=icon-layer.js.map","export default \"#define SHADER_NAME scatterplot-layer-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceRadius;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float radiusScale;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float lineWidthScale;\\nuniform float lineWidthMinPixels;\\nuniform float lineWidthMaxPixels;\\nuniform float stroked;\\nuniform bool filled;\\nuniform bool antialiasing;\\nuniform bool billboard;\\nuniform int radiusUnits;\\nuniform int lineWidthUnits;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n\\n  // Multiply out radius and clamp to limits\\n  outerRadiusPixels = clamp(\\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n  \\n  // Multiply out line width and clamp to limits\\n  float lineWidthPixels = clamp(\\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\\n    lineWidthMinPixels, lineWidthMaxPixels\\n  );\\n\\n  // outer radius needs to offset by half stroke width\\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\\n\\n  // Expand geometry to accomodate edge smoothing\\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\\n\\n  // position on the containing square in [-1, 1] space\\n  unitPosition = edgePadding * positions.xy;\\n  geometry.uv = unitPosition;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\\n  \\n  if (billboard) {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\\n  }\\n\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  // Apply opacity to instance color, or return instance picking color\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\";\n//# sourceMappingURL=scatterplot-layer-vertex.glsl.js.map","export default \"#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool filled;\\nuniform float stroked;\\nuniform bool antialiasing;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.uv = unitPosition;\\n\\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\\n  float inCircle = antialiasing ? \\n    smoothedge(distToCenter, outerRadiusPixels) : \\n    step(distToCenter, outerRadiusPixels);\\n\\n  if (inCircle == 0.0) {\\n    discard;\\n  }\\n\\n  if (stroked > 0.5) {\\n    float isLine = antialiasing ? \\n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\\n\\n    if (filled) {\\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\\n    } else {\\n      if (isLine == 0.0) {\\n        discard;\\n      }\\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\\n    }\\n  } else if (filled) {\\n    gl_FragColor = vFillColor;\\n  } else {\\n    discard;\\n  }\\n\\n  gl_FragColor.a *= inCircle;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=scatterplot-layer-fragment.glsl.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  billboard: false,\n  antialiasing: true,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nexport default class ScatterplotLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n\n    if (params.changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      antialiasing,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      stroked: stroked ? 1 : 0,\n      filled,\n      billboard,\n      antialiasing,\n      radiusUnits: UNIT[radiusUnits],\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      lineWidthUnits: UNIT[lineWidthUnits],\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\n\n_defineProperty(ScatterplotLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(ScatterplotLayer, \"layerName\", 'ScatterplotLayer');\n//# sourceMappingURL=scatterplot-layer.js.map","export default \"#define SHADER_NAME multi-icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float gamma;\\nuniform bool sdf;\\nuniform float alphaCutoff;\\nuniform float buffer;\\nuniform float outlineBuffer;\\nuniform vec4 outlineColor;\\n\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  if (!picking_uActive) {\\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\\n    vec4 color = vColor;\\n\\n    // if enable sdf (signed distance fields)\\n    if (sdf) {\\n      float distance = alpha;\\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\\n\\n      if (outlineBuffer > 0.0) {\\n        float inFill = alpha;\\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\\n        color = mix(outlineColor, vColor, inFill);\\n        alpha = inBorder;\\n      }\\n    }\\n\\n    // Take the global opacity and the alpha from color into account for the alpha component\\n    float a = alpha * color.a;\\n    \\n    if (a < alphaCutoff) {\\n      discard;\\n    }\\n\\n    gl_FragColor = vec4(color.rgb, a * opacity);\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=multi-icon-layer-fragment.glsl.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { log } from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\nimport fs from './multi-icon-layer-fragment.glsl';\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\nconst defaultProps = {\n  getIconOffsets: {\n    type: 'accessor',\n    value: x => x.offsets\n  },\n  alphaCutoff: 0.001,\n  smoothing: 0.1,\n  outlineWidth: 0,\n  outlineColor: {\n    type: 'color',\n    value: [0, 0, 0, 255]\n  }\n};\nexport default class MultiIconLayer extends IconLayer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getShaders() {\n    return { ...super.getShaders(),\n      fs\n    };\n  }\n\n  initializeState() {\n    super.initializeState();\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIconOffsets'\n      },\n      instancePickingColors: {\n        type: 5121,\n        size: 3,\n        accessor: (object, {\n          index,\n          target: value\n        }) => this.encodePickingColor(index, value)\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      oldProps\n    } = params;\n    let {\n      outlineColor\n    } = props;\n\n    if (outlineColor !== oldProps.outlineColor) {\n      outlineColor = outlineColor.map(x => x / 255);\n      outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n      this.setState({\n        outlineColor\n      });\n    }\n\n    if (!props.sdf && props.outlineWidth) {\n      log.warn(\"\".concat(this.id, \": fontSettings.sdf is required to render outline\"))();\n    }\n  }\n\n  draw(params) {\n    const {\n      sdf,\n      smoothing,\n      outlineWidth\n    } = this.props;\n    const {\n      outlineColor\n    } = this.state;\n    params.uniforms = { ...params.uniforms,\n      buffer: DEFAULT_BUFFER,\n      outlineBuffer: outlineWidth ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth)) : -1,\n      gamma: smoothing,\n      sdf: Boolean(sdf),\n      outlineColor\n    };\n    super.draw(params);\n  }\n\n  getInstanceOffset(icons) {\n    return icons ? Array.from(icons).flatMap(icon => super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n  }\n\n  getInstanceColorMode(icons) {\n    return 1;\n  }\n\n  getInstanceIconFrame(icons) {\n    return icons ? Array.from(icons).flatMap(icon => super.getInstanceIconFrame(icon)) : EMPTY_ARRAY;\n  }\n\n}\n\n_defineProperty(MultiIconLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(MultiIconLayer, \"layerName\", 'MultiIconLayer');\n//# sourceMappingURL=multi-icon-layer.js.map","'use strict';\n\nmodule.exports = TinySDF;\nmodule.exports.default = TinySDF;\n\nvar INF = 1e20;\n\nfunction TinySDF(fontSize, buffer, radius, cutoff, fontFamily, fontWeight) {\n    this.fontSize = fontSize || 24;\n    this.buffer = buffer === undefined ? 3 : buffer;\n    this.cutoff = cutoff || 0.25;\n    this.fontFamily = fontFamily || 'sans-serif';\n    this.fontWeight = fontWeight || 'normal';\n    this.radius = radius || 8;\n\n    // For backwards compatibility, we honor the implicit contract that the\n    // size of the returned bitmap will be fontSize + buffer * 2\n    var size = this.size = this.fontSize + this.buffer * 2;\n    // Glyphs may be slightly larger than their fontSize. The canvas already\n    // has buffer space, but create extra buffer space in the output grid for the\n    // \"halo\" to extend into (if metric extraction is enabled)\n    var gridSize = size + this.buffer * 2;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = size;\n\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\n\n    this.ctx.textAlign = 'left'; // Necessary so that RTL text doesn't have different alignment\n    this.ctx.fillStyle = 'black';\n\n    // temporary arrays for the distance transform\n    this.gridOuter = new Float64Array(gridSize * gridSize);\n    this.gridInner = new Float64Array(gridSize * gridSize);\n    this.f = new Float64Array(gridSize);\n    this.z = new Float64Array(gridSize + 1);\n    this.v = new Uint16Array(gridSize);\n\n    this.useMetrics = this.ctx.measureText('A').actualBoundingBoxLeft !== undefined;\n\n    // hack around https://bugzilla.mozilla.org/show_bug.cgi?id=737852\n    this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\n}\n\nfunction prepareGrids(imgData, width, height, glyphWidth, glyphHeight, gridOuter, gridInner) {\n    // Initialize grids outside the glyph range to alpha 0\n    gridOuter.fill(INF, 0, width * height);\n    gridInner.fill(0, 0, width * height);\n\n    var offset = (width - glyphWidth) / 2; // This is zero if we're not extracting metrics\n\n    for (var y = 0; y < glyphHeight; y++) {\n        for (var x = 0; x < glyphWidth; x++) {\n            var j = (y + offset) * width + x + offset;\n            var a = imgData.data[4 * (y * glyphWidth + x) + 3] / 255; // alpha value\n            if (a === 1) {\n                gridOuter[j] = 0;\n                gridInner[j] = INF;\n            } else if (a === 0) {\n                gridOuter[j] = INF;\n                gridInner[j] = 0;\n            } else {\n                var b = Math.max(0, 0.5 - a);\n                var c = Math.max(0, a - 0.5);\n                gridOuter[j] = b * b;\n                gridInner[j] = c * c;\n            }\n        }\n    }\n}\n\nfunction extractAlpha(alphaChannel, width, height, gridOuter, gridInner, radius, cutoff) {\n    for (var i = 0; i < width * height; i++) {\n        var d = Math.sqrt(gridOuter[i]) - Math.sqrt(gridInner[i]);\n        alphaChannel[i] = Math.round(255 - 255 * (d / radius + cutoff));\n    }\n}\n\nTinySDF.prototype._draw = function (char, getMetrics) {\n    var textMetrics = this.ctx.measureText(char);\n    // Older browsers only expose the glyph width\n    // This is enough for basic layout with all glyphs using the same fixed size\n    var advance = textMetrics.width;\n\n    var doubleBuffer = 2 * this.buffer;\n    var width, glyphWidth, height, glyphHeight, top;\n\n    var imgTop, imgLeft, baselinePosition;\n    // If the browser supports bounding box metrics, we can generate a smaller\n    // SDF. This is a significant performance win.\n    if (getMetrics && this.useMetrics) {\n        // The integer/pixel part of the top alignment is encoded in metrics.top\n        // The remainder is implicitly encoded in the rasterization\n        top = Math.floor(textMetrics.actualBoundingBoxAscent);\n        baselinePosition = this.buffer + Math.ceil(textMetrics.actualBoundingBoxAscent);\n        imgTop = this.buffer;\n        imgLeft = this.buffer;\n\n        // If the glyph overflows the canvas size, it will be clipped at the\n        // bottom/right\n        glyphWidth = Math.min(this.size,\n            Math.ceil(textMetrics.actualBoundingBoxRight - textMetrics.actualBoundingBoxLeft));\n        glyphHeight = Math.min(this.size - imgTop,\n            Math.ceil(textMetrics.actualBoundingBoxAscent + textMetrics.actualBoundingBoxDescent));\n\n        width = glyphWidth + doubleBuffer;\n        height = glyphHeight + doubleBuffer;\n        this.ctx.textBaseline = 'alphabetic';\n    } else {\n        width = glyphWidth = this.size;\n        height = glyphHeight = this.size;\n        // 19 points is an approximation of the \"cap height\" ascent from alphabetic\n        // baseline (even though actual drawing is from middle baseline, we can\n        // use the approximation because every glyph fills the em box)\n        top = 19 * this.fontSize / 24;\n        imgTop = imgLeft = 0;\n        baselinePosition = this.middle;\n        this.ctx.textBaseline = 'middle';\n    }\n\n    var imgData;\n    if (glyphWidth && glyphHeight) {\n        this.ctx.clearRect(imgLeft, imgTop, glyphWidth, glyphHeight);\n        this.ctx.fillText(char, this.buffer, baselinePosition);\n        imgData = this.ctx.getImageData(imgLeft, imgTop, glyphWidth, glyphHeight);\n    }\n\n    var alphaChannel = new Uint8ClampedArray(width * height);\n\n    prepareGrids(imgData, width, height, glyphWidth, glyphHeight, this.gridOuter, this.gridInner);\n\n    edt(this.gridOuter, width, height, this.f, this.v, this.z);\n    edt(this.gridInner, width, height, this.f, this.v, this.z);\n\n    extractAlpha(alphaChannel, width, height, this.gridOuter, this.gridInner, this.radius, this.cutoff);\n\n    return {\n        data: alphaChannel,\n        metrics: {\n            width: glyphWidth,\n            height: glyphHeight,\n            sdfWidth: width,\n            sdfHeight: height,\n            top: top,\n            left: 0,\n            advance: advance\n        }\n    };\n};\n\nTinySDF.prototype.draw = function (char) {\n    return this._draw(char, false).data;\n};\n\nTinySDF.prototype.drawWithMetrics = function (char) {\n    return this._draw(char, true);\n};\n\n// 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\nfunction edt(data, width, height, f, v, z) {\n    for (var x = 0; x < width; x++) edt1d(data, x, width, height, f, v, z);\n    for (var y = 0; y < height; y++) edt1d(data, y * width, 1, width, f, v, z);\n}\n\n// 1D squared distance transform\nfunction edt1d(grid, offset, stride, length, f, v, z) {\n    var q, k, s, r;\n    v[0] = 0;\n    z[0] = -INF;\n    z[1] = INF;\n\n    for (q = 0; q < length; q++) f[q] = grid[offset + q * stride];\n\n    for (q = 1, k = 0, s = 0; q < length; q++) {\n        do {\n            r = v[k];\n            s = (f[q] - f[r] + q * q - r * r) / (q - r) / 2;\n        } while (s <= z[k] && --k > -1);\n\n        k++;\n        v[k] = q;\n        z[k] = s;\n        z[k + 1] = INF;\n    }\n\n    for (q = 0, k = 0; q < length; q++) {\n        while (z[k + 1] < q) k++;\n        r = v[k];\n        grid[offset + q * stride] = f[r] + (q - r) * (q - r);\n    }\n}\n","import { log } from '@deck.gl/core';\nconst MISSING_CHAR_WIDTH = 32;\nconst SINGLE_LINE = [];\nexport function nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\nexport function buildMapping({\n  characterSet,\n  getFontWidth,\n  fontHeight,\n  buffer,\n  maxCanvasWidth,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0\n}) {\n  let row = 0;\n  let x = xOffset;\n\n  for (const char of characterSet) {\n    if (!mapping[char]) {\n      const width = getFontWidth(char);\n\n      if (x + width + buffer * 2 > maxCanvasWidth) {\n        x = 0;\n        row++;\n      }\n\n      mapping[char] = {\n        x: x + buffer,\n        y: yOffset + row * (fontHeight + buffer * 2) + buffer,\n        width,\n        height: fontHeight\n      };\n      x += width + buffer * 2;\n    }\n  }\n\n  const rowHeight = fontHeight + buffer * 2;\n  return {\n    mapping,\n    xOffset: x,\n    yOffset: yOffset + row * rowHeight,\n    canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n  };\n}\n\nfunction getTextWidth(text, startIndex, endIndex, mapping) {\n  let width = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    var _mapping$character;\n\n    const character = text[i];\n    width += ((_mapping$character = mapping[character]) === null || _mapping$character === void 0 ? void 0 : _mapping$character.width) || 0;\n  }\n\n  return width;\n}\n\nfunction breakAll(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  let rowStartCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const textWidth = getTextWidth(text, i, i + 1, iconMapping);\n\n    if (rowOffsetLeft + textWidth > maxWidth) {\n      if (rowStartCharIndex < i) {\n        target.push(i);\n      }\n\n      rowStartCharIndex = i;\n      rowOffsetLeft = 0;\n    }\n\n    rowOffsetLeft += textWidth;\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction breakWord(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  let rowStartCharIndex = startIndex;\n  let groupStartCharIndex = startIndex;\n  let groupEndCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    if (text[i] === ' ') {\n      groupEndCharIndex = i + 1;\n    } else if (text[i + 1] === ' ' || i + 1 === endIndex) {\n      groupEndCharIndex = i + 1;\n    }\n\n    if (groupEndCharIndex > groupStartCharIndex) {\n      let groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n\n      if (rowOffsetLeft + groupWidth > maxWidth) {\n        if (rowStartCharIndex < groupStartCharIndex) {\n          target.push(groupStartCharIndex);\n          rowStartCharIndex = groupStartCharIndex;\n          rowOffsetLeft = 0;\n        }\n\n        if (groupWidth > maxWidth) {\n          groupWidth = breakAll(text, groupStartCharIndex, groupEndCharIndex, maxWidth, iconMapping, target);\n          rowStartCharIndex = target[target.length - 1];\n        }\n      }\n\n      groupStartCharIndex = groupEndCharIndex;\n      rowOffsetLeft += groupWidth;\n    }\n  }\n\n  return rowOffsetLeft;\n}\n\nexport function autoWrapping(text, wordBreak, maxWidth, iconMapping, startIndex = 0, endIndex) {\n  if (endIndex === undefined) {\n    endIndex = text.length;\n  }\n\n  const result = [];\n\n  if (wordBreak === 'break-all') {\n    breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  } else {\n    breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  }\n\n  return result;\n}\n\nfunction transformRow(line, startIndex, endIndex, iconMapping, leftOffsets, rowSize) {\n  let x = 0;\n  let rowHeight = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = line[i];\n    const frame = iconMapping[character];\n\n    if (frame) {\n      if (!rowHeight) {\n        rowHeight = frame.height;\n      }\n\n      leftOffsets[i] = x + frame.width / 2;\n      x += frame.width;\n    } else {\n      log.warn(\"Missing character: \".concat(character, \" (\").concat(character.codePointAt(0), \")\"))();\n      leftOffsets[i] = x;\n      x += MISSING_CHAR_WIDTH;\n    }\n  }\n\n  rowSize[0] = x;\n  rowSize[1] = rowHeight;\n}\n\nexport function transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping) {\n  const characters = Array.from(paragraph);\n  const numCharacters = characters.length;\n  const x = new Array(numCharacters);\n  const y = new Array(numCharacters);\n  const rowWidth = new Array(numCharacters);\n  const autoWrappingEnabled = (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n  const size = [0, 0];\n  const rowSize = [0, 0];\n  let rowOffsetTop = 0;\n  let lineStartIndex = 0;\n  let lineEndIndex = 0;\n\n  for (let i = 0; i <= numCharacters; i++) {\n    const char = characters[i];\n\n    if (char === '\\n' || i === numCharacters) {\n      lineEndIndex = i;\n    }\n\n    if (lineEndIndex > lineStartIndex) {\n      const rows = autoWrappingEnabled ? autoWrapping(characters, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex) : SINGLE_LINE;\n\n      for (let rowIndex = 0; rowIndex <= rows.length; rowIndex++) {\n        const rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n        const rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n        transformRow(characters, rowStart, rowEnd, iconMapping, x, rowSize);\n\n        for (let j = rowStart; j < rowEnd; j++) {\n          y[j] = rowOffsetTop + rowSize[1] / 2;\n          rowWidth[j] = rowSize[0];\n        }\n\n        rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n        size[0] = Math.max(size[0], rowSize[0]);\n      }\n\n      lineStartIndex = lineEndIndex;\n    }\n\n    if (char === '\\n') {\n      x[lineStartIndex] = 0;\n      y[lineStartIndex] = 0;\n      rowWidth[lineStartIndex] = 0;\n      lineStartIndex++;\n    }\n  }\n\n  size[1] = rowOffsetTop;\n  return {\n    x,\n    y,\n    rowWidth,\n    size\n  };\n}\nexport function getTextFromBuffer({\n  value,\n  length,\n  stride,\n  offset,\n  startIndices,\n  characterSet\n}) {\n  const bytesPerElement = value.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : 1;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const characterCount = startIndices[length] || Math.ceil((value.length - elementOffset) / elementStride);\n  const autoCharacterSet = characterSet && new Set();\n  const texts = new Array(length);\n  let codes = value;\n\n  if (elementStride > 1 || elementOffset > 0) {\n    const ArrayType = value.constructor;\n    codes = new ArrayType(characterCount);\n\n    for (let i = 0; i < characterCount; i++) {\n      codes[i] = value[i * elementStride + elementOffset];\n    }\n  }\n\n  for (let index = 0; index < length; index++) {\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || characterCount;\n    const codesAtIndex = codes.subarray(startIndex, endIndex);\n    texts[index] = String.fromCodePoint.apply(null, codesAtIndex);\n\n    if (autoCharacterSet) {\n      codesAtIndex.forEach(autoCharacterSet.add, autoCharacterSet);\n    }\n  }\n\n  if (autoCharacterSet) {\n    for (const charCode of autoCharacterSet) {\n      characterSet.add(String.fromCodePoint(charCode));\n    }\n  }\n\n  return {\n    texts,\n    characterCount\n  };\n}\n//# sourceMappingURL=utils.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport default class LRUCache {\n  constructor(limit = 5) {\n    _defineProperty(this, \"limit\", void 0);\n\n    _defineProperty(this, \"_cache\", {});\n\n    _defineProperty(this, \"_order\", []);\n\n    this.limit = limit;\n  }\n\n  get(key) {\n    const value = this._cache[key];\n\n    if (value) {\n      this._deleteOrder(key);\n\n      this._appendOrder(key);\n    }\n\n    return value;\n  }\n\n  set(key, value) {\n    if (!this._cache[key]) {\n      if (Object.keys(this._cache).length === this.limit) {\n        this.delete(this._order[0]);\n      }\n\n      this._cache[key] = value;\n\n      this._appendOrder(key);\n    } else {\n      this.delete(key);\n      this._cache[key] = value;\n\n      this._appendOrder(key);\n    }\n  }\n\n  delete(key) {\n    const value = this._cache[key];\n\n    if (value) {\n      delete this._cache[key];\n\n      this._deleteOrder(key);\n    }\n  }\n\n  _deleteOrder(key) {\n    const index = this._order.indexOf(key);\n\n    if (index >= 0) {\n      this._order.splice(index, 1);\n    }\n  }\n\n  _appendOrder(key) {\n    this._order.push(key);\n  }\n\n}\n//# sourceMappingURL=lru-cache.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport TinySDF from '@mapbox/tiny-sdf';\nimport { log } from '@deck.gl/core';\nimport { buildMapping } from './utils';\nimport LRUCache from './lru-cache';\n\nfunction getDefaultCharacterSet() {\n  const charSet = [];\n\n  for (let i = 32; i < 128; i++) {\n    charSet.push(String.fromCharCode(i));\n  }\n\n  return charSet;\n}\n\nexport const DEFAULT_FONT_SETTINGS = {\n  fontFamily: 'Monaco, monospace',\n  fontWeight: 'normal',\n  characterSet: getDefaultCharacterSet(),\n  fontSize: 64,\n  buffer: 4,\n  sdf: false,\n  cutoff: 0.25,\n  radius: 12,\n  smoothing: 0.1\n};\nconst MAX_CANVAS_WIDTH = 1024;\nconst BASELINE_SCALE = 0.9;\nconst HEIGHT_SCALE = 1.2;\nconst CACHE_LIMIT = 3;\nlet cache = new LRUCache(CACHE_LIMIT);\n\nfunction getNewChars(cacheKey, characterSet) {\n  let newCharSet;\n\n  if (typeof characterSet === 'string') {\n    newCharSet = new Set(Array.from(characterSet));\n  } else {\n    newCharSet = new Set(characterSet);\n  }\n\n  const cachedFontAtlas = cache.get(cacheKey);\n\n  if (!cachedFontAtlas) {\n    return newCharSet;\n  }\n\n  for (const char in cachedFontAtlas.mapping) {\n    if (newCharSet.has(char)) {\n      newCharSet.delete(char);\n    }\n  }\n\n  return newCharSet;\n}\n\nfunction populateAlphaChannel(alphaChannel, imageData) {\n  for (let i = 0; i < alphaChannel.length; i++) {\n    imageData.data[4 * i + 3] = alphaChannel[i];\n  }\n}\n\nfunction setTextStyle(ctx, fontFamily, fontSize, fontWeight) {\n  ctx.font = \"\".concat(fontWeight, \" \").concat(fontSize, \"px \").concat(fontFamily);\n  ctx.fillStyle = '#000';\n  ctx.textBaseline = 'alphabetic';\n  ctx.textAlign = 'left';\n}\n\nexport function setFontAtlasCacheLimit(limit) {\n  log.assert(Number.isFinite(limit) && limit >= CACHE_LIMIT, 'Invalid cache limit');\n  cache = new LRUCache(limit);\n}\nexport default class FontAtlasManager {\n  constructor() {\n    _defineProperty(this, \"props\", { ...DEFAULT_FONT_SETTINGS\n    });\n\n    _defineProperty(this, \"_key\", void 0);\n\n    _defineProperty(this, \"_atlas\", void 0);\n  }\n\n  get texture() {\n    return this._atlas;\n  }\n\n  get mapping() {\n    return this._atlas && this._atlas.mapping;\n  }\n\n  get scale() {\n    return HEIGHT_SCALE;\n  }\n\n  setProps(props = {}) {\n    Object.assign(this.props, props);\n    const oldKey = this._key;\n    this._key = this._getKey();\n    const charSet = getNewChars(this._key, this.props.characterSet);\n    const cachedFontAtlas = cache.get(this._key);\n\n    if (cachedFontAtlas && charSet.size === 0) {\n      if (this._key !== oldKey) {\n        this._atlas = cachedFontAtlas;\n      }\n\n      return;\n    }\n\n    const fontAtlas = this._generateFontAtlas(this._key, charSet, cachedFontAtlas);\n\n    this._atlas = fontAtlas;\n    cache.set(this._key, fontAtlas);\n  }\n\n  _generateFontAtlas(key, characterSet, cachedFontAtlas) {\n    const {\n      fontFamily,\n      fontWeight,\n      fontSize,\n      buffer,\n      sdf,\n      radius,\n      cutoff\n    } = this.props;\n    let canvas = cachedFontAtlas && cachedFontAtlas.data;\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.width = MAX_CANVAS_WIDTH;\n    }\n\n    const ctx = canvas.getContext('2d');\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n    const {\n      mapping,\n      canvasHeight,\n      xOffset,\n      yOffset\n    } = buildMapping({\n      getFontWidth: char => ctx.measureText(char).width,\n      fontHeight: fontSize * HEIGHT_SCALE,\n      buffer,\n      characterSet,\n      maxCanvasWidth: MAX_CANVAS_WIDTH,\n      ...(cachedFontAtlas && {\n        mapping: cachedFontAtlas.mapping,\n        xOffset: cachedFontAtlas.xOffset,\n        yOffset: cachedFontAtlas.yOffset\n      })\n    });\n\n    if (canvas.height !== canvasHeight) {\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      canvas.height = canvasHeight;\n      ctx.putImageData(imageData, 0, 0);\n    }\n\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n\n    if (sdf) {\n      const tinySDF = new TinySDF(fontSize, buffer, radius, cutoff, fontFamily, fontWeight);\n      const imageData = ctx.getImageData(0, 0, tinySDF.size, tinySDF.size);\n\n      for (const char of characterSet) {\n        populateAlphaChannel(tinySDF.draw(char), imageData);\n        ctx.putImageData(imageData, mapping[char].x - buffer, mapping[char].y + buffer);\n      }\n    } else {\n      for (const char of characterSet) {\n        ctx.fillText(char, mapping[char].x, mapping[char].y + fontSize * BASELINE_SCALE);\n      }\n    }\n\n    return {\n      xOffset,\n      yOffset,\n      mapping,\n      data: canvas,\n      width: canvas.width,\n      height: canvas.height\n    };\n  }\n\n  _getKey() {\n    const {\n      fontFamily,\n      fontWeight,\n      fontSize,\n      buffer,\n      sdf,\n      radius,\n      cutoff\n    } = this.props;\n\n    if (sdf) {\n      return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer, \" \").concat(radius, \" \").concat(cutoff);\n    }\n\n    return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer);\n  }\n\n}\n//# sourceMappingURL=font-atlas-manager.js.map","export default \"#define SHADER_NAME text-background-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute vec4 instanceRects;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec2 instancePixelOffsets;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform bool billboard;\\nuniform float opacity;\\nuniform float sizeScale;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform vec4 padding;\\nuniform int sizeUnits;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = radians(angle);\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n  vLineWidth = instanceLineWidths;\\n\\n  // convert size in meters to pixels, then scaled and clamp\\n\\n  // project meters to pixels and clamp to limits\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\\n    sizeMinPixels, sizeMaxPixels\\n  );\\n\\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\\n\\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\\n  pixelOffset += instancePixelOffsets;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  // Apply opacity to instance color, or return instance picking color\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\";\n//# sourceMappingURL=text-background-layer-vertex.glsl.js.map","export default \"#define SHADER_NAME text-background-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec2 pixelPosition = uv * dimensions;\\n  if (stroked) {\\n    float distToEdge = min(\\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\\n    );\\n    float isBorder = smoothedge(distToEdge, vLineWidth);\\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\\n  } else {\\n    gl_FragColor = vFillColor;\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=text-background-layer-fragment.glsl.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './text-background-layer-vertex.glsl';\nimport fs from './text-background-layer-fragment.glsl';\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  padding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getBoundingRect: {\n    type: 'accessor',\n    value: [0, 0, 0, 0]\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  }\n};\nexport default class TextBackgroundLayer extends Layer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instanceRects: {\n        size: 4,\n        accessor: 'getBoundingRect'\n      },\n      instancePixelOffsets: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      changeFlags\n    } = params;\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      billboard,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      getLineWidth\n    } = this.props;\n    let {\n      padding\n    } = this.props;\n\n    if (padding.length < 4) {\n      padding = [padding[0], padding[1], padding[0], padding[1]];\n    }\n\n    this.state.model.setUniforms(uniforms).setUniforms({\n      billboard,\n      stroked: Boolean(getLineWidth),\n      padding,\n      sizeUnits: UNIT[sizeUnits],\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\n\n_defineProperty(TextBackgroundLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(TextBackgroundLayer, \"layerName\", 'TextBackgroundLayer');\n//# sourceMappingURL=text-background-layer.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CompositeLayer, createIterable } from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, { DEFAULT_FONT_SETTINGS, setFontAtlasCacheLimit } from './font-atlas-manager';\nimport { transformParagraph, getTextFromBuffer } from './utils';\nimport TextBackgroundLayer from './text-background-layer/text-background-layer';\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_LINE_HEIGHT = 1.0;\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  background: false,\n  getBackgroundColor: {\n    type: 'accessor',\n    value: [255, 255, 255, 255]\n  },\n  getBorderColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getBorderWidth: {\n    type: 'accessor',\n    value: 0\n  },\n  backgroundPadding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  characterSet: {\n    type: 'object',\n    value: DEFAULT_FONT_SETTINGS.characterSet\n  },\n  fontFamily: DEFAULT_FONT_SETTINGS.fontFamily,\n  fontWeight: DEFAULT_FONT_SETTINGS.fontWeight,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  outlineWidth: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  outlineColor: {\n    type: 'color',\n    value: DEFAULT_COLOR\n  },\n  fontSettings: {},\n  wordBreak: 'break-word',\n  maxWidth: {\n    type: 'number',\n    value: -1\n  },\n  getText: {\n    type: 'accessor',\n    value: x => x.text\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 32\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getTextAnchor: {\n    type: 'accessor',\n    value: 'middle'\n  },\n  getAlignmentBaseline: {\n    type: 'accessor',\n    value: 'center'\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  backgroundColor: {\n    deprecatedFor: ['background', 'getBackgroundColor']\n  }\n};\nexport default class TextLayer extends CompositeLayer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"getBoundingRect\", (object, objectInfo) => {\n      const iconMapping = this.state.fontAtlasManager.mapping;\n      const getText = this.state.getText;\n      const {\n        wordBreak,\n        maxWidth,\n        lineHeight,\n        getTextAnchor,\n        getAlignmentBaseline\n      } = this.props;\n      const paragraph = getText(object, objectInfo) || '';\n      const {\n        size: [width, height]\n      } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n      const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n      const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n      return [(anchorX - 1) * width / 2, (anchorY - 1) * height / 2, width, height];\n    });\n\n    _defineProperty(this, \"getIconOffsets\", (object, objectInfo) => {\n      const iconMapping = this.state.fontAtlasManager.mapping;\n      const getText = this.state.getText;\n      const {\n        wordBreak,\n        maxWidth,\n        lineHeight,\n        getTextAnchor,\n        getAlignmentBaseline\n      } = this.props;\n      const paragraph = getText(object, objectInfo) || '';\n      const {\n        x,\n        y,\n        rowWidth,\n        size: [width, height]\n      } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n      const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n      const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n      const numCharacters = x.length;\n      const offsets = new Array(numCharacters * 2);\n      let index = 0;\n\n      for (let i = 0; i < numCharacters; i++) {\n        const rowOffset = (1 - anchorX) * (width - rowWidth[i]) / 2;\n        offsets[index++] = (anchorX - 1) * width / 2 + rowOffset + x[i];\n        offsets[index++] = (anchorY - 1) * height / 2 + y[i];\n      }\n\n      return offsets;\n    });\n  }\n\n  initializeState() {\n    this.state = {\n      styleVersion: 0,\n      fontAtlasManager: new FontAtlasManager()\n    };\n  }\n\n  updateState(params) {\n    const {\n      props,\n      oldProps,\n      changeFlags\n    } = params;\n    const textChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText);\n\n    if (textChanged) {\n      this._updateText();\n    }\n\n    const fontChanged = this._updateFontAtlas();\n\n    const styleChanged = fontChanged || props.lineHeight !== oldProps.lineHeight || props.wordBreak !== oldProps.wordBreak || props.maxWidth !== oldProps.maxWidth;\n\n    if (styleChanged) {\n      this.setState({\n        styleVersion: this.state.styleVersion + 1\n      });\n    }\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    info.object = info.index >= 0 ? this.props.data[info.index] : null;\n    return info;\n  }\n\n  _updateFontAtlas() {\n    const {\n      fontSettings,\n      fontFamily,\n      fontWeight\n    } = this.props;\n    const {\n      fontAtlasManager,\n      characterSet\n    } = this.state;\n    const fontProps = { ...fontSettings,\n      characterSet,\n      fontFamily,\n      fontWeight\n    };\n\n    if (!fontAtlasManager.mapping) {\n      fontAtlasManager.setProps(fontProps);\n      return true;\n    }\n\n    for (const key in fontProps) {\n      if (fontProps[key] !== fontAtlasManager.props[key]) {\n        fontAtlasManager.setProps(fontProps);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _updateText() {\n    var _attributes;\n\n    const {\n      data,\n      characterSet\n    } = this.props;\n    const textBuffer = (_attributes = data.attributes) === null || _attributes === void 0 ? void 0 : _attributes.getText;\n    let {\n      getText\n    } = this.props;\n    let startIndices = data.startIndices;\n    let numInstances;\n    const autoCharacterSet = characterSet === 'auto' && new Set();\n\n    if (textBuffer && startIndices) {\n      const {\n        texts,\n        characterCount\n      } = getTextFromBuffer({ ...(ArrayBuffer.isView(textBuffer) ? {\n          value: textBuffer\n        } : textBuffer),\n        length: data.length,\n        startIndices,\n        characterSet: autoCharacterSet\n      });\n      numInstances = characterCount;\n\n      getText = (_, {\n        index\n      }) => texts[index];\n    } else {\n      const {\n        iterable,\n        objectInfo\n      } = createIterable(data);\n      startIndices = [0];\n      numInstances = 0;\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        const text = Array.from(getText(object, objectInfo) || '');\n\n        if (autoCharacterSet) {\n          text.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n\n        numInstances += text.length;\n        startIndices.push(numInstances);\n      }\n    }\n\n    this.setState({\n      getText,\n      startIndices,\n      numInstances,\n      characterSet: autoCharacterSet || characterSet\n    });\n  }\n\n  renderLayers() {\n    const {\n      startIndices,\n      numInstances,\n      getText,\n      fontAtlasManager: {\n        scale,\n        texture,\n        mapping\n      },\n      styleVersion\n    } = this.state;\n    const {\n      data,\n      _dataDiff,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      getBackgroundColor,\n      getBorderColor,\n      getBorderWidth,\n      backgroundPadding,\n      background,\n      billboard,\n      fontSettings,\n      outlineWidth,\n      outlineColor,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n    const CharactersLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n    const BackgroundLayerClass = this.getSubLayerClass('background', TextBackgroundLayer);\n    return [background && new BackgroundLayerClass({\n      getFillColor: getBackgroundColor,\n      getLineColor: getBorderColor,\n      getLineWidth: getBorderWidth,\n      padding: backgroundPadding,\n      getPosition,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      sizeScale: sizeScale / this.state.fontAtlasManager.props.fontSize,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions: transitions && {\n        getPosition: transitions.getPosition,\n        getAngle: transitions.getAngle,\n        getSize: transitions.getSize,\n        getFillColor: transitions.getBackgroundColor,\n        getLineColor: transitions.getBorderColor,\n        getLineWidth: transitions.getBorderWidth,\n        getPixelOffset: transitions.getPixelOffset\n      }\n    }, this.getSubLayerProps({\n      id: 'background',\n      updateTriggers: {\n        getPosition: updateTriggers.getPosition,\n        getAngle: updateTriggers.getAngle,\n        getSize: updateTriggers.getSize,\n        getFillColor: updateTriggers.getBackgroundColor,\n        getLineColor: updateTriggers.getBorderColor,\n        getLineWidth: updateTriggers.getBorderWidth,\n        getPixelOffset: updateTriggers.getPixelOffset,\n        getBoundingRect: {\n          getText: updateTriggers.getText,\n          getTextAnchor: updateTriggers.getTextAnchor,\n          getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n          styleVersion\n        }\n      }\n    }), {\n      data: data.attributes && data.attributes.background ? {\n        length: data.length,\n        attributes: data.attributes.background\n      } : data,\n      _dataDiff,\n      autoHighlight: false,\n      getBoundingRect: this.getBoundingRect\n    }), new CharactersLayerClass({\n      sdf: fontSettings.sdf,\n      smoothing: Number.isFinite(fontSettings.smoothing) ? fontSettings.smoothing : DEFAULT_FONT_SETTINGS.smoothing,\n      outlineWidth,\n      outlineColor,\n      iconAtlas: texture,\n      iconMapping: mapping,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      sizeScale: sizeScale * scale,\n      sizeUnits,\n      sizeMinPixels: sizeMinPixels * scale,\n      sizeMaxPixels: sizeMaxPixels * scale,\n      transitions: transitions && {\n        getPosition: transitions.getPosition,\n        getAngle: transitions.getAngle,\n        getColor: transitions.getColor,\n        getSize: transitions.getSize,\n        getPixelOffset: transitions.getPixelOffset\n      }\n    }, this.getSubLayerProps({\n      id: 'characters',\n      updateTriggers: {\n        getIcon: updateTriggers.getText,\n        getPosition: updateTriggers.getPosition,\n        getAngle: updateTriggers.getAngle,\n        getColor: updateTriggers.getColor,\n        getSize: updateTriggers.getSize,\n        getPixelOffset: updateTriggers.getPixelOffset,\n        getIconOffsets: {\n          getText: updateTriggers.getText,\n          getTextAnchor: updateTriggers.getTextAnchor,\n          getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n          styleVersion\n        }\n      }\n    }), {\n      data,\n      _dataDiff,\n      startIndices,\n      numInstances,\n      getIconOffsets: this.getIconOffsets,\n      getIcon: getText\n    })];\n  }\n\n  static set fontAtlasCacheLimit(limit) {\n    setFontAtlasCacheLimit(limit);\n  }\n\n}\n\n_defineProperty(TextLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(TextLayer, \"layerName\", 'TextLayer');\n//# sourceMappingURL=text-layer.js.map"],"names":["TRACE_RENDER_LAYERS","CompositeLayer","Layer","layer","context","updateObject","info","object","subLayerId","data","DefaultLayerClass","overridingProps","row","sourceObject","sourceObjectIndex","accessor","objectInfo","x","sublayerProps","_this$props$updateTri","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","fetch","operation","newProps","overridingSublayerProps","overridingSublayerTriggers","sublayerId","propTypes","subLayerPropTypes","key","propType","extension","passThroughProps","updateParams","forceUpdate","subLayers","shouldUpdate","subLayersList","flatten","debug","_defineProperty","vs$2","fs$3","DEFAULT_CANVAS_WIDTH","DEFAULT_BUFFER","noop","DEFAULT_TEXTURE_PARAMETERS","nextPowOfTwo","number","resizeImage","ctx","imageData","width","height","getIconId","icon","resizeTexture","texture","oldWidth","oldHeight","newTexture","Texture2D","copyToTexture","buildRowMapping","mapping","columns","yOffset","i","xOffset","id","buildMapping","icons","buffer","rowHeight","canvasWidth","getDiffIcons","getIcon","cachedIcons","iterable","createIterable","IconManager","gl","onUpdate","onError","_this$_texture","loadOptions","autoPacking","iconAtlas","iconMapping","textureParameters","_this$_texture2","canvasHeight","load","ImageLoader","y","error","DEFAULT_COLOR","defaultProps","IconLayer","args","vs","fs","project32","picking","params","props","oldProps","changeFlags","attributeManager","iconManager","prePacked","_this$state$model","uniforms","sizeScale","sizeMinPixels","sizeMaxPixels","sizeUnits","billboard","alphaCutoff","iconsTexture","UNIT","positions","Model","Geometry","evt","_this$getCurrentLayer","onIconError","log","anchorX","anchorY","vs$1","fs$2","ScatterplotLayer","radiusUnits","radiusScale","radiusMinPixels","radiusMaxPixels","stroked","filled","antialiasing","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","fs$1","EMPTY_ARRAY","MultiIconLayer","index","value","outlineColor","sdf","smoothing","outlineWidth","tinySdfModule","TinySDF","INF","fontSize","radius","cutoff","fontFamily","fontWeight","size","gridSize","prepareGrids","imgData","glyphWidth","glyphHeight","gridOuter","gridInner","offset","j","a","b","c","extractAlpha","alphaChannel","d","char","getMetrics","textMetrics","advance","doubleBuffer","top","imgTop","imgLeft","baselinePosition","edt","f","v","z","edt1d","grid","stride","length","q","k","s","r","MISSING_CHAR_WIDTH","SINGLE_LINE","characterSet","getFontWidth","fontHeight","maxCanvasWidth","getTextWidth","text","startIndex","endIndex","_mapping$character","character","breakAll","maxWidth","target","rowStartCharIndex","rowOffsetLeft","textWidth","breakWord","groupStartCharIndex","groupEndCharIndex","groupWidth","autoWrapping","wordBreak","result","transformRow","line","leftOffsets","rowSize","frame","transformParagraph","paragraph","lineHeight","characters","numCharacters","rowWidth","autoWrappingEnabled","rowOffsetTop","lineStartIndex","lineEndIndex","rows","rowIndex","rowStart","rowEnd","getTextFromBuffer","startIndices","bytesPerElement","elementStride","elementOffset","characterCount","autoCharacterSet","texts","codes","ArrayType","codesAtIndex","charCode","LRUCache","limit","getDefaultCharacterSet","charSet","DEFAULT_FONT_SETTINGS","MAX_CANVAS_WIDTH","BASELINE_SCALE","HEIGHT_SCALE","CACHE_LIMIT","cache","getNewChars","cacheKey","newCharSet","cachedFontAtlas","populateAlphaChannel","setTextStyle","setFontAtlasCacheLimit","FontAtlasManager","oldKey","fontAtlas","canvas","tinySDF","TextBackgroundLayer","getLineWidth","padding","TEXT_ANCHOR","ALIGNMENT_BASELINE","DEFAULT_LINE_HEIGHT","TextLayer","getText","getTextAnchor","getAlignmentBaseline","offsets","rowOffset","fontSettings","fontAtlasManager","fontProps","_attributes","textBuffer","numInstances","_","scale","styleVersion","_dataDiff","getPosition","getColor","getSize","getAngle","getPixelOffset","getBackgroundColor","getBorderColor","getBorderWidth","backgroundPadding","background","transitions","updateTriggers","CharactersLayerClass","BackgroundLayerClass"],"mappings":"2LAIA,MAAMA,GAAsB,8BACb,MAAMC,WAAuBC,CAAM,CAChD,IAAI,aAAc,CAChB,MAAO,EACR,CAED,IAAI,UAAW,CACb,OAAO,MAAM,UAAY,KAAK,aAAY,EAAG,MAAMC,GAASA,EAAM,QAAQ,CAC3E,CAED,cAAe,CACb,OAAO,KAAK,eAAiB,KAAK,cAAc,WAAa,CAAA,CAC9D,CAED,gBAAgBC,EAAS,CAAE,CAE3B,SAASC,EAAc,CACrB,MAAM,SAASA,CAAY,EAC3B,KAAK,eAAc,CACpB,CAED,eAAe,CACb,KAAAC,CACJ,EAAK,CACD,KAAM,CACJ,OAAAC,CACD,EAAGD,EAGJ,OAFsBC,GAAUA,EAAO,UAAYA,EAAO,SAAS,QAAUA,EAAO,SAAS,OAAO,KAAO,KAAK,KAMhHD,EAAK,OAASC,EAAO,SAAS,OAC9BD,EAAK,MAAQC,EAAO,SAAS,OACtBD,CACR,CAED,eAAeF,EAAS,CACtB,MAAO,EACR,CAED,qBAAqBI,EAAYC,EAAM,CACrC,OAAOA,GAAQA,EAAK,MACrB,CAED,iBAAiBD,EAAYE,EAAmB,CAC9C,KAAM,CACJ,eAAgBC,CACtB,EAAQ,KAAK,MACT,OAAOA,GAAmBA,EAAgBH,CAAU,GAAKG,EAAgBH,CAAU,EAAE,MAAQE,CAC9F,CAED,eAAeE,EAAKC,EAAcC,EAAmB,CACnD,OAAAF,EAAI,SAAW,CACb,OAAQ,KACR,OAAQC,EACR,MAAOC,CACb,EACWF,CACR,CAED,oBAAoBG,EAAU,CAC5B,GAAI,OAAOA,GAAa,WAAY,CAClC,MAAMC,EAAa,CACjB,MAAO,GACP,KAAM,KAAK,MAAM,KACjB,OAAQ,CAAE,CAClB,EACM,MAAO,CAACC,EAAG,IACLA,GAAKA,EAAE,UACTD,EAAW,MAAQC,EAAE,SAAS,MACvBF,EAASE,EAAE,SAAS,OAAQD,CAAU,GAGxCD,EAASE,EAAG,CAAC,CAEvB,CAED,OAAOF,CACR,CAED,iBAAiBG,EAAgB,GAAI,CACnC,IAAIC,EAEJ,KAAM,CACJ,QAAAC,EACA,SAAAC,EACA,QAAAC,EACA,WAAAC,EACA,iBAAAC,EACA,uBAAAC,EACA,cAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,iBAAAC,EACA,cAAAC,EACA,eAAAC,EACA,YAAAC,EACA,WAAAC,EACA,MAAAC,EACA,UAAAC,EACA,eAAgBxB,CACtB,EAAQ,KAAK,MACHyB,EAAW,CACf,GAAI,GACJ,eAAgB,CAAE,EAClB,QAAAhB,EACA,SAAAC,EACA,QAAAC,EACA,WAAAC,EACA,iBAAAC,EACA,uBAAAC,EACA,cAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,iBAAAC,EACA,cAAAC,EACA,eAAAC,EACA,YAAAC,EACA,WAAAC,EACA,MAAAC,EACA,UAAAC,CACN,EACUE,EAA0B1B,GAAmBO,EAAc,IAAMP,EAAgBO,EAAc,EAAE,EACjGoB,EAA6BD,GAA2BA,EAAwB,eAChFE,EAAarB,EAAc,IAAM,WAEvC,GAAImB,EAAyB,CAC3B,MAAMG,EAAY,KAAK,YAAY,WAC7BC,EAAoBvB,EAAc,KAAOA,EAAc,KAAK,WAAa,GAE/E,UAAWwB,KAAOL,EAAyB,CACzC,MAAMM,EAAWF,EAAkBC,CAAG,GAAKF,EAAUE,CAAG,EAEpDC,GAAYA,EAAS,OAAS,aAChCN,EAAwBK,CAAG,EAAI,KAAK,oBAAoBL,EAAwBK,CAAG,CAAC,EAEvF,CACF,CAED,OAAO,OAAON,EAAUlB,EAAemB,CAAuB,EAC9DD,EAAS,GAAK,GAAG,OAAO,KAAK,MAAM,GAAI,GAAG,EAAE,OAAOG,CAAU,EAC7DH,EAAS,eAAiB,CACxB,KAAMjB,EAAwB,KAAK,MAAM,kBAAoB,MAAQA,IAA0B,OAAS,OAASA,EAAsB,IACvI,GAAGD,EAAc,eACjB,GAAGoB,CACT,EAEI,UAAWM,KAAaX,EAAY,CAClC,MAAMY,EAAmBD,EAAU,iBAAiB,KAAK,KAAMA,CAAS,EAEpEC,GACF,OAAO,OAAOT,EAAUS,EAAkB,CACxC,eAAgB,OAAO,OAAOT,EAAS,eAAgBS,EAAiB,cAAc,CAChG,CAAS,CAEJ,CAED,OAAOT,CACR,CAED,qBAAqB9B,EAAM,CACzB,UAAWH,KAAS,KAAK,eACvBA,EAAM,oBAAoBG,CAAI,CAEjC,CAED,sBAAuB,CACrB,OAAO,IACR,CAED,YAAYwC,EAAcC,EAAa,CACrC,IAAIC,EAAY,KAAK,cAAc,UACnC,MAAMC,EAAe,CAACD,GAAa,KAAK,YAAW,EAEnD,GAAIC,EAAc,CAChB,MAAMC,EAAgB,KAAK,eAC3BF,EAAYG,GAAQD,EAAe,OAAO,EAC1C,KAAK,cAAc,UAAYF,CAChC,CAEDI,GAAMpD,GAAqB,KAAMiD,EAAcD,CAAS,EAExD,UAAW7C,KAAS6C,EAClB7C,EAAM,OAAS,IAElB,CAEH,CAEAkD,EAAgBpD,GAAgB,YAAa,gBAAgB,ECnM7D,MAAAqD,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECAfC,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKTC,GAAuB,KACvBC,GAAiB,EAEjBC,EAAO,IAAM,CAAA,EAEbC,EAA6B,CAChC,MAAQ,KACR,MAAQ,KACR,MAAQ,MACR,MAAQ,KACX,EAEA,SAASC,GAAaC,EAAQ,CAC5B,OAAO,KAAK,IAAI,EAAG,KAAK,KAAK,KAAK,KAAKA,CAAM,CAAC,CAAC,CACjD,CAEA,SAASC,GAAYC,EAAKC,EAAWC,EAAOC,EAAQ,CAClD,OAAID,IAAUD,EAAU,OAASE,IAAWF,EAAU,OAC7CA,GAGTD,EAAI,OAAO,OAASG,EACpBH,EAAI,OAAO,MAAQE,EACnBF,EAAI,UAAU,EAAG,EAAGA,EAAI,OAAO,MAAOA,EAAI,OAAO,MAAM,EACvDA,EAAI,UAAUC,EAAW,EAAG,EAAGA,EAAU,MAAOA,EAAU,OAAQ,EAAG,EAAGC,EAAOC,CAAM,EAC9EH,EAAI,OACb,CAEA,SAASI,EAAUC,EAAM,CACvB,OAAOA,IAASA,EAAK,IAAMA,EAAK,IAClC,CAEA,SAASC,GAAcC,EAASL,EAAOC,EAAQ3C,EAAY,CACzD,MAAMgD,EAAWD,EAAQ,MACnBE,EAAYF,EAAQ,OACpBG,EAAa,IAAIC,GAAUJ,EAAQ,GAAI,CAC3C,MAAAL,EACA,OAAAC,EACA,WAAA3C,CACJ,CAAG,EACD,OAAAoD,GAAcL,EAASG,EAAY,CACjC,QAAS,EACT,MAAOF,EACP,OAAQC,CACZ,CAAG,EACDF,EAAQ,OAAM,EACPG,CACT,CAEA,SAASG,EAAgBC,EAASC,EAASC,EAAS,CAClD,QAASC,EAAI,EAAGA,EAAIF,EAAQ,OAAQE,IAAK,CACvC,KAAM,CACJ,KAAAZ,EACA,QAAAa,CACN,EAAQH,EAAQE,CAAC,EACPE,EAAKf,EAAUC,CAAI,EACzBS,EAAQK,CAAE,EAAI,CAAE,GAAGd,EACjB,EAAGa,EACH,EAAGF,CACT,CACG,CACH,CAEO,SAASI,GAAa,CAC3B,MAAAC,EACA,OAAAC,EACA,QAAAR,EAAU,CAAE,EACZ,QAAAI,EAAU,EACV,QAAAF,EAAU,EACV,UAAAO,EAAY,EACZ,YAAAC,CACF,EAAG,CACD,IAAIT,EAAU,CAAA,EAEd,QAASE,EAAI,EAAGA,EAAII,EAAM,OAAQJ,IAAK,CACrC,MAAMZ,EAAOgB,EAAMJ,CAAC,EACdE,EAAKf,EAAUC,CAAI,EAEzB,GAAI,CAACS,EAAQK,CAAE,EAAG,CAChB,KAAM,CACJ,OAAAhB,EACA,MAAAD,CACD,EAAGG,EAEAa,EAAUhB,EAAQoB,EAASE,IAC7BX,EAAgBC,EAASC,EAASC,CAAO,EACzCE,EAAU,EACVF,EAAUO,EAAYP,EAAUM,EAChCC,EAAY,EACZR,EAAU,CAAA,GAGZA,EAAQ,KAAK,CACX,KAAAV,EACA,QAAAa,CACR,CAAO,EACDA,EAAUA,EAAUhB,EAAQoB,EAC5BC,EAAY,KAAK,IAAIA,EAAWpB,CAAM,CACvC,CACF,CAED,OAAIY,EAAQ,OAAS,GACnBF,EAAgBC,EAASC,EAASC,CAAO,EAGpC,CACL,QAAAF,EACA,UAAAS,EACA,QAAAL,EACA,QAAAF,EACA,YAAAQ,EACA,aAAc3B,GAAa0B,EAAYP,EAAUM,CAAM,CAC3D,CACA,CACO,SAASG,GAAa/E,EAAMgF,EAASC,EAAa,CACvD,GAAI,CAACjF,GAAQ,CAACgF,EACZ,OAAO,KAGTC,EAAcA,GAAe,GAC7B,MAAMN,EAAQ,CAAA,EACR,CACJ,SAAAO,EACA,WAAA3E,CACJ,EAAM4E,GAAenF,CAAI,EAEvB,UAAWF,KAAUoF,EAAU,CAC7B3E,EAAW,QACX,MAAMoD,EAAOqB,EAAQlF,EAAQS,CAAU,EACjCkE,EAAKf,EAAUC,CAAI,EAEzB,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,kBAAkB,EAGpC,GAAI,CAACA,EAAK,IACR,MAAM,IAAI,MAAM,sBAAsB,EAGpC,CAACgB,EAAMF,CAAE,IAAM,CAACQ,EAAYR,CAAE,GAAKd,EAAK,MAAQsB,EAAYR,CAAE,EAAE,OAClEE,EAAMF,CAAE,EAAI,CAAE,GAAGd,EACf,OAAQ7D,EACR,YAAaS,EAAW,KAChC,EAEG,CAED,OAAOoE,CACT,CACe,MAAMS,EAAY,CAC/B,YAAYC,EAAI,CACd,SAAAC,EAAWrC,EACX,QAAAsC,EAAUtC,CACd,EAAK,CACDL,EAAgB,KAAM,KAAM,MAAM,EAElCA,EAAgB,KAAM,WAAY,MAAM,EAExCA,EAAgB,KAAM,UAAW,MAAM,EAEvCA,EAAgB,KAAM,eAAgB,IAAI,EAE1CA,EAAgB,KAAM,WAAY,IAAI,EAEtCA,EAAgB,KAAM,mBAAoB,IAAI,EAE9CA,EAAgB,KAAM,WAAY,CAAA,CAAE,EAEpCA,EAAgB,KAAM,qBAAsB,IAAI,EAEhDA,EAAgB,KAAM,gBAAiB,CAAC,EAExCA,EAAgB,KAAM,eAAgB,EAAK,EAE3CA,EAAgB,KAAM,WAAY,CAAC,EAEnCA,EAAgB,KAAM,WAAY,CAAC,EAEnCA,EAAgB,KAAM,aAAc,CAAC,EAErCA,EAAgB,KAAM,UAAWI,EAAc,EAE/CJ,EAAgB,KAAM,eAAgBG,EAAoB,EAE1DH,EAAgB,KAAM,gBAAiB,CAAC,EAExCA,EAAgB,KAAM,UAAW,IAAI,EAErC,KAAK,GAAKyC,EACV,KAAK,SAAWC,EAChB,KAAK,QAAUC,CAChB,CAED,UAAW,CACT,IAAIC,GAEHA,EAAiB,KAAK,YAAc,MAAQA,IAAmB,QAAkBA,EAAe,OAAM,CACxG,CAED,YAAa,CACX,OAAO,KAAK,UAAY,KAAK,gBAC9B,CAED,eAAe7B,EAAM,CACnB,MAAMc,EAAK,KAAK,aAAef,EAAUC,CAAI,EAAIA,EACjD,OAAO,KAAK,SAASc,CAAE,GAAK,CAAA,CAC7B,CAED,SAAS,CACP,YAAAgB,EACA,YAAAC,EACA,UAAAC,EACA,YAAAC,EACA,kBAAAC,CACJ,EAAK,CAaD,GAZIJ,IACF,KAAK,aAAeA,GAGlBC,IAAgB,SAClB,KAAK,aAAeA,GAGlBE,IACF,KAAK,SAAWA,GAGdD,EAAW,CACb,IAAIG,GAEHA,EAAkB,KAAK,YAAc,MAAQA,IAAoB,QAAkBA,EAAgB,OAAM,EAC1G,KAAK,SAAW,KAChB,KAAK,iBAAmBH,CACzB,CAEGE,IACF,KAAK,mBAAqBA,EAE7B,CAED,IAAI,UAAW,CACb,OAAO,KAAK,gBAAkB,CAC/B,CAED,UAAU7F,EAAMgF,EAAS,CACvB,GAAI,CAAC,KAAK,cAAgB,OAAO,SAAa,IAC5C,OAGF,MAAML,EAAQ,OAAO,OAAOI,GAAa/E,EAAMgF,EAAS,KAAK,QAAQ,GAAK,CAAA,CAAE,EAE5E,GAAIL,EAAM,OAAS,EAAG,CACpB,KAAM,CACJ,QAAAP,EACA,QAAAI,EACA,QAAAF,EACA,UAAAO,EACA,aAAAkB,CACD,EAAGrB,GAAa,CACf,MAAAC,EACA,OAAQ,KAAK,QACb,YAAa,KAAK,aAClB,QAAS,KAAK,SACd,UAAW,KAAK,WAChB,QAAS,KAAK,SACd,QAAS,KAAK,QACtB,CAAO,EACD,KAAK,WAAaE,EAClB,KAAK,SAAWT,EAChB,KAAK,SAAWI,EAChB,KAAK,SAAWF,EAChB,KAAK,cAAgByB,EAEhB,KAAK,WACR,KAAK,SAAW,IAAI9B,GAAU,KAAK,GAAI,CACrC,MAAO,KAAK,aACZ,OAAQ,KAAK,cACb,WAAY,KAAK,oBAAsBf,CACjD,CAAS,GAGC,KAAK,SAAS,SAAW,KAAK,gBAChC,KAAK,SAAWU,GAAc,KAAK,SAAU,KAAK,aAAc,KAAK,cAAe,KAAK,oBAAsBV,CAA0B,GAG3I,KAAK,SAAQ,EACb,KAAK,QAAU,KAAK,SAAW,SAAS,cAAc,QAAQ,EAE9D,KAAK,WAAWyB,CAAK,CACtB,CACF,CAED,WAAWA,EAAO,CAChB,MAAMrB,EAAM,KAAK,QAAQ,WAAW,IAAI,EAExC,UAAWK,KAAQgB,EACjB,KAAK,gBACLqB,GAAKrC,EAAK,IAAKsC,GAAa,KAAK,YAAY,EAAE,KAAK1C,GAAa,CAC/D,MAAMkB,EAAKf,EAAUC,CAAI,EACnB,CACJ,EAAAnD,EACA,EAAA0F,EACA,MAAA1C,EACA,OAAAC,CACV,EAAY,KAAK,SAASgB,CAAE,EACdzE,EAAOqD,GAAYC,EAAKC,EAAWC,EAAOC,CAAM,EAEtD,KAAK,SAAS,gBAAgB,CAC5B,KAAAzD,EACA,EAAAQ,EACA,EAAA0F,EACA,MAAA1C,EACA,OAAAC,CACV,CAAS,EAED,KAAK,SAAS,iBAEd,KAAK,SAAQ,CACrB,CAAO,EAAE,MAAM0C,GAAS,CAChB,KAAK,QAAQ,CACX,IAAKxC,EAAK,IACV,OAAQA,EAAK,OACb,YAAaA,EAAK,YAClB,YAAa,KAAK,aAClB,MAAAwC,CACV,CAAS,CACT,CAAO,EAAE,QAAQ,IAAM,CACf,KAAK,eACb,CAAO,CAEJ,CAEH,CC3UA,MAAMC,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAG,EAC7BC,GAAe,CACnB,UAAW,CACT,KAAM,QACN,MAAO,KACP,MAAO,EACR,EACD,YAAa,CACX,KAAM,SACN,MAAO,CAAE,EACT,MAAO,EACR,EACD,UAAW,CACT,KAAM,SACN,MAAO,EACP,IAAK,CACN,EACD,UAAW,GACX,UAAW,SACX,cAAe,CACb,KAAM,SACN,IAAK,EACL,MAAO,CACR,EACD,cAAe,CACb,KAAM,SACN,IAAK,EACL,MAAO,OAAO,gBACf,EACD,YAAa,CACX,KAAM,SACN,MAAO,IACP,IAAK,EACL,IAAK,CACN,EACD,YAAa,CACX,KAAM,WACN,MAAO7F,GAAKA,EAAE,QACf,EACD,QAAS,CACP,KAAM,WACN,MAAOA,GAAKA,EAAE,IACf,EACD,SAAU,CACR,KAAM,WACN,MAAO4F,EACR,EACD,QAAS,CACP,KAAM,WACN,MAAO,CACR,EACD,SAAU,CACR,KAAM,WACN,MAAO,CACR,EACD,eAAgB,CACd,KAAM,WACN,MAAO,CAAC,EAAG,CAAC,CACb,EACD,YAAa,CACX,KAAM,WACN,MAAO,KACP,QAAS,GACT,SAAU,EACX,CACH,EACe,MAAME,UAAkB7G,CAAM,CAC3C,eAAe8G,EAAM,CACnB,MAAM,GAAGA,CAAI,EAEb3D,EAAgB,KAAM,QAAS,MAAM,CACtC,CAED,YAAa,CACX,OAAO,MAAM,WAAW,CAC5B,GAAM4D,GACN,GAAMC,GACA,QAAS,CAACC,EAAWC,CAAO,CAClC,CAAK,CACF,CAED,iBAAkB,CAChB,KAAK,MAAQ,CACX,YAAa,IAAIvB,GAAY,KAAK,QAAQ,GAAI,CAC5C,SAAU,KAAK,UAAU,KAAK,IAAI,EAClC,QAAS,KAAK,SAAS,KAAK,IAAI,CACxC,CAAO,CACP,EAC6B,KAAK,sBACb,aAAa,CAC5B,kBAAmB,CACjB,KAAM,EACN,KAAM,KACN,KAAM,KAAK,kBAAmB,EAC9B,WAAY,GACZ,SAAU,aACX,EACD,cAAe,CACb,KAAM,EACN,WAAY,GACZ,SAAU,UACV,aAAc,CACf,EACD,gBAAiB,CACf,KAAM,EACN,SAAU,UACV,UAAW,KAAK,iBACjB,EACD,mBAAoB,CAClB,KAAM,EACN,SAAU,UACV,UAAW,KAAK,oBACjB,EACD,mBAAoB,CAClB,KAAM,EACN,KAAM,KACN,SAAU,UACV,UAAW,KAAK,oBACjB,EACD,eAAgB,CACd,KAAM,KAAK,MAAM,YAAY,OAC7B,KAAM,KACN,WAAY,GACZ,WAAY,GACZ,SAAU,WACV,aAAcgB,EACf,EACD,eAAgB,CACd,KAAM,EACN,WAAY,GACZ,SAAU,UACX,EACD,oBAAqB,CACnB,KAAM,EACN,WAAY,GACZ,SAAU,gBACX,CACP,CAAK,CACF,CAED,YAAYQ,EAAQ,CAClB,MAAM,YAAYA,CAAM,EACxB,KAAM,CACJ,MAAAC,EACA,SAAAC,EACA,YAAAC,CACD,EAAGH,EACEI,EAAmB,KAAK,sBACxB,CACJ,UAAArB,EACA,YAAAC,EACA,KAAA5F,EACA,QAAAgF,EACA,kBAAAa,CACD,EAAGgB,EACE,CACJ,YAAAI,CACN,EAAQ,KAAK,MACHC,EAAYvB,GAAa,KAAK,cAAc,mBAAmB,WAAW,EAiBhF,GAhBAsB,EAAY,SAAS,CACnB,YAAaJ,EAAM,YACnB,YAAa,CAACK,EACd,UAAAvB,EACA,YAAauB,EAAYtB,EAAc,KACvC,kBAAAC,CACN,CAAK,EAEGqB,EACEJ,EAAS,cAAgBD,EAAM,aACjCG,EAAiB,WAAW,SAAS,GAE9BD,EAAY,aAAeA,EAAY,wBAA0BA,EAAY,sBAAsB,KAAOA,EAAY,sBAAsB,WACrJE,EAAY,UAAUjH,EAAMgF,CAAO,EAGjC+B,EAAY,kBAAmB,CACjC,IAAII,EAEJ,KAAM,CACJ,GAAA9B,CACR,EAAU,KAAK,SACR8B,EAAoB,KAAK,MAAM,SAAW,MAAQA,IAAsB,QAAkBA,EAAkB,OAAM,EACnH,KAAK,MAAM,MAAQ,KAAK,UAAU9B,CAAE,EACpC2B,EAAiB,cAAa,CAC/B,CACF,CAED,IAAI,UAAW,CACb,OAAO,MAAM,UAAY,KAAK,MAAM,YAAY,QACjD,CAED,cAAcrH,EAAS,CACrB,MAAM,cAAcA,CAAO,EAC3B,KAAK,MAAM,YAAY,UACxB,CAED,KAAK,CACH,SAAAyH,CACJ,EAAK,CACD,KAAM,CACJ,UAAAC,EACA,cAAAC,EACA,cAAAC,EACA,UAAAC,EACA,UAAAC,EACA,YAAAC,CACN,EAAQ,KAAK,MACH,CACJ,YAAAT,CACN,EAAQ,KAAK,MACHU,EAAeV,EAAY,aAE7BU,GACF,KAAK,MAAM,MAAM,YAAYP,CAAQ,EAAE,YAAY,CACjD,aAAAO,EACA,gBAAiB,CAACA,EAAa,MAAOA,EAAa,MAAM,EACzD,UAAWC,EAAKJ,CAAS,EACzB,UAAAH,EACA,cAAAC,EACA,cAAAC,EACA,UAAAE,EACA,YAAAC,CACR,CAAO,EAAE,KAAI,CAEV,CAED,UAAUrC,EAAI,CACZ,MAAMwC,EAAY,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAE,EAC7C,OAAO,IAAIC,EAAMzC,EAAI,CAAE,GAAG,KAAK,WAAY,EACzC,GAAI,KAAK,MAAM,GACf,SAAU,IAAI0C,EAAS,CACrB,SAAU,EACV,WAAY,CACV,UAAW,CACT,KAAM,EACN,MAAO,IAAI,aAAaF,CAAS,CAClC,CACF,CACT,CAAO,EACD,YAAa,EACnB,CAAK,CACF,CAED,WAAY,CACV,KAAK,eAAc,CACpB,CAED,SAASG,EAAK,CACZ,IAAIC,EAEJ,MAAMC,GAAeD,EAAwB,KAAK,gBAAiB,KAAM,MAAQA,IAA0B,OAAS,OAASA,EAAsB,MAAM,YAErJC,EACFA,EAAYF,CAAG,EAEfG,EAAI,MAAMH,EAAI,MAAM,OAAO,EAAC,CAE/B,CAED,kBAAkBrE,EAAM,CACtB,KAAM,CACJ,MAAAH,EACA,OAAAC,EACA,QAAA2E,EAAU5E,EAAQ,EAClB,QAAA6E,EAAU5E,EAAS,CACpB,EAAG,KAAK,MAAM,YAAY,eAAeE,CAAI,EAC9C,MAAO,CAACH,EAAQ,EAAI4E,EAAS3E,EAAS,EAAI4E,CAAO,CAClD,CAED,qBAAqB1E,EAAM,CAEzB,OADgB,KAAK,MAAM,YAAY,eAAeA,CAAI,EAC3C,KAAO,EAAI,CAC3B,CAED,qBAAqBA,EAAM,CACzB,KAAM,CACJ,EAAAnD,EACA,EAAA0F,EACA,MAAA1C,EACA,OAAAC,CACD,EAAG,KAAK,MAAM,YAAY,eAAeE,CAAI,EAC9C,MAAO,CAACnD,EAAG0F,EAAG1C,EAAOC,CAAM,CAC5B,CAEH,CAEAb,EAAgB0D,EAAW,eAAgBD,EAAY,EAEvDzD,EAAgB0D,EAAW,YAAa,WAAW,ECtSnD,MAAAgC,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECAfC,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKTnC,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAG,EAC7BC,GAAe,CACnB,YAAa,SACb,YAAa,CACX,KAAM,SACN,IAAK,EACL,MAAO,CACR,EACD,gBAAiB,CACf,KAAM,SACN,IAAK,EACL,MAAO,CACR,EACD,gBAAiB,CACf,KAAM,SACN,IAAK,EACL,MAAO,OAAO,gBACf,EACD,eAAgB,SAChB,eAAgB,CACd,KAAM,SACN,IAAK,EACL,MAAO,CACR,EACD,mBAAoB,CAClB,KAAM,SACN,IAAK,EACL,MAAO,CACR,EACD,mBAAoB,CAClB,KAAM,SACN,IAAK,EACL,MAAO,OAAO,gBACf,EACD,QAAS,GACT,OAAQ,GACR,UAAW,GACX,aAAc,GACd,YAAa,CACX,KAAM,WACN,MAAO7F,GAAKA,EAAE,QACf,EACD,UAAW,CACT,KAAM,WACN,MAAO,CACR,EACD,aAAc,CACZ,KAAM,WACN,MAAO4F,CACR,EACD,aAAc,CACZ,KAAM,WACN,MAAOA,CACR,EACD,aAAc,CACZ,KAAM,WACN,MAAO,CACR,EACD,YAAa,CACX,cAAe,cAChB,EACD,QAAS,CACP,cAAe,SAChB,EACD,SAAU,CACR,cAAe,CAAC,eAAgB,cAAc,CAC/C,CACH,EACe,MAAMoC,WAAyB/I,CAAM,CAClD,YAAa,CACX,OAAO,MAAM,WAAW,CAC5B,GAAM+G,GACN,GAAMC,GACA,QAAS,CAACC,EAAWC,CAAO,CAClC,CAAK,CACF,CAED,iBAAkB,CAChB,KAAK,oBAAqB,EAAC,aAAa,CACtC,kBAAmB,CACjB,KAAM,EACN,KAAM,KACN,KAAM,KAAK,kBAAmB,EAC9B,WAAY,GACZ,SAAU,aACX,EACD,eAAgB,CACd,KAAM,EACN,WAAY,GACZ,SAAU,YACV,aAAc,CACf,EACD,mBAAoB,CAClB,KAAM,KAAK,MAAM,YAAY,OAC7B,WAAY,GACZ,WAAY,GACZ,KAAM,KACN,SAAU,eACV,aAAc,CAAC,EAAG,EAAG,EAAG,GAAG,CAC5B,EACD,mBAAoB,CAClB,KAAM,KAAK,MAAM,YAAY,OAC7B,WAAY,GACZ,WAAY,GACZ,KAAM,KACN,SAAU,eACV,aAAc,CAAC,EAAG,EAAG,EAAG,GAAG,CAC5B,EACD,mBAAoB,CAClB,KAAM,EACN,WAAY,GACZ,SAAU,eACV,aAAc,CACf,CACP,CAAK,CACF,CAED,YAAYC,EAAQ,CAGlB,GAFA,MAAM,YAAYA,CAAM,EAEpBA,EAAO,YAAY,kBAAmB,CACxC,IAAIO,EAEJ,KAAM,CACJ,GAAA9B,CACR,EAAU,KAAK,SACR8B,EAAoB,KAAK,MAAM,SAAW,MAAQA,IAAsB,QAAkBA,EAAkB,OAAM,EACnH,KAAK,MAAM,MAAQ,KAAK,UAAU9B,CAAE,EACpC,KAAK,sBAAsB,eAC5B,CACF,CAED,KAAK,CACH,SAAA+B,CACJ,EAAK,CACD,KAAM,CACJ,YAAAqB,EACA,YAAAC,EACA,gBAAAC,EACA,gBAAAC,EACA,QAAAC,EACA,OAAAC,EACA,UAAArB,EACA,aAAAsB,EACA,eAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,mBAAAC,CACN,EAAQ,KAAK,MACT,KAAK,MAAM,MAAM,YAAY/B,CAAQ,EAAE,YAAY,CACjD,QAASyB,EAAU,EAAI,EACvB,OAAAC,EACA,UAAArB,EACA,aAAAsB,EACA,YAAanB,EAAKa,CAAW,EAC7B,YAAAC,EACA,gBAAAC,EACA,gBAAAC,EACA,eAAgBhB,EAAKoB,CAAc,EACnC,eAAAC,EACA,mBAAAC,EACA,mBAAAC,CACN,CAAK,EAAE,KAAI,CACR,CAED,UAAU9D,EAAI,CACZ,MAAMwC,EAAY,CAAC,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,CAAC,EACzD,OAAO,IAAIC,EAAMzC,EAAI,CAAE,GAAG,KAAK,WAAY,EACzC,GAAI,KAAK,MAAM,GACf,SAAU,IAAI0C,EAAS,CACrB,SAAU,EACV,YAAa,EACb,WAAY,CACV,UAAW,CACT,KAAM,EACN,MAAO,IAAI,aAAaF,CAAS,CAClC,CACF,CACT,CAAO,EACD,YAAa,EACnB,CAAK,CACF,CAEH,CAEAjF,EAAgB4F,GAAkB,eAAgBnC,EAAY,EAE9DzD,EAAgB4F,GAAkB,YAAa,kBAAkB,EChMjE,MAAAY,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECITpG,EAAiB,IAAQ,IACzBqG,EAAc,CAAA,EACdhD,GAAe,CACnB,eAAgB,CACd,KAAM,WACN,MAAO7F,GAAKA,EAAE,OACf,EACD,YAAa,KACb,UAAW,GACX,aAAc,EACd,aAAc,CACZ,KAAM,QACN,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG,CACrB,CACH,EACe,MAAM8I,UAAuBhD,CAAU,CACpD,eAAeC,EAAM,CACnB,MAAM,GAAGA,CAAI,EAEb3D,EAAgB,KAAM,QAAS,MAAM,CACtC,CAED,YAAa,CACX,MAAO,CAAE,GAAG,MAAM,WAAY,EAClC,GAAM6D,EACN,CACG,CAED,iBAAkB,CAChB,MAAM,gBAAe,EACI,KAAK,sBACb,aAAa,CAC5B,gBAAiB,CACf,KAAM,EACN,SAAU,gBACX,EACD,sBAAuB,CACrB,KAAM,KACN,KAAM,EACN,SAAU,CAAC3G,EAAQ,CACjB,MAAAyJ,EACA,OAAQC,CACT,IAAK,KAAK,mBAAmBD,EAAOC,CAAK,CAC3C,CACP,CAAK,CACF,CAED,YAAY5C,EAAQ,CAClB,MAAM,YAAYA,CAAM,EACxB,KAAM,CACJ,MAAAC,EACA,SAAAC,CACD,EAAGF,EACJ,GAAI,CACF,aAAA6C,CACD,EAAG5C,EAEA4C,IAAiB3C,EAAS,eAC5B2C,EAAeA,EAAa,IAAIjJ,GAAKA,EAAI,GAAG,EAC5CiJ,EAAa,CAAC,EAAI,OAAO,SAASA,EAAa,CAAC,CAAC,EAAIA,EAAa,CAAC,EAAI,EACvE,KAAK,SAAS,CACZ,aAAAA,CACR,CAAO,GAGC,CAAC5C,EAAM,KAAOA,EAAM,cACtBsB,EAAI,KAAK,GAAG,OAAO,KAAK,GAAI,kDAAkD,CAAC,GAElF,CAED,KAAKvB,EAAQ,CACX,KAAM,CACJ,IAAA8C,EACA,UAAAC,EACA,aAAAC,CACN,EAAQ,KAAK,MACH,CACJ,aAAAH,CACN,EAAQ,KAAK,MACT7C,EAAO,SAAW,CAAE,GAAGA,EAAO,SAC5B,OAAQ5D,EACR,cAAe4G,EAAe,KAAK,IAAID,EAAW3G,GAAkB,EAAI4G,EAAa,EAAI,GACzF,MAAOD,EACP,IAAK,EAAQD,EACb,aAAAD,CACN,EACI,MAAM,KAAK7C,CAAM,CAClB,CAED,kBAAkBjC,EAAO,CACvB,OAAOA,EAAQ,MAAM,KAAKA,CAAK,EAAE,QAAQhB,GAAQ,MAAM,kBAAkBA,CAAI,CAAC,EAAI0F,CACnF,CAED,qBAAqB1E,EAAO,CAC1B,MAAO,EACR,CAED,qBAAqBA,EAAO,CAC1B,OAAOA,EAAQ,MAAM,KAAKA,CAAK,EAAE,QAAQhB,GAAQ,MAAM,qBAAqBA,CAAI,CAAC,EAAI0F,CACtF,CAEH,CAEAzG,EAAgB0G,EAAgB,eAAgBjD,EAAY,EAE5DzD,EAAgB0G,EAAgB,YAAa,gBAAgB,qBC3G7DO,EAAc,QAAGC,EACKD,EAAA,QAAA,QAAGC,EAEzB,IAAIC,EAAM,KAEV,SAASD,EAAQE,EAAUpF,EAAQqF,EAAQC,EAAQC,EAAYC,EAAY,CACvE,KAAK,SAAWJ,GAAY,GAC5B,KAAK,OAASpF,IAAW,OAAY,EAAIA,EACzC,KAAK,OAASsF,GAAU,IACxB,KAAK,WAAaC,GAAc,aAChC,KAAK,WAAaC,GAAc,SAChC,KAAK,OAASH,GAAU,EAIxB,IAAII,EAAO,KAAK,KAAO,KAAK,SAAW,KAAK,OAAS,EAIjDC,EAAWD,EAAO,KAAK,OAAS,EAEpC,KAAK,OAAS,SAAS,cAAc,QAAQ,EAC7C,KAAK,OAAO,MAAQ,KAAK,OAAO,OAASA,EAEzC,KAAK,IAAM,KAAK,OAAO,WAAW,IAAI,EACtC,KAAK,IAAI,KAAO,KAAK,WAAa,IAAM,KAAK,SAAW,MAAQ,KAAK,WAErE,KAAK,IAAI,UAAY,OACrB,KAAK,IAAI,UAAY,QAGrB,KAAK,UAAY,IAAI,aAAaC,EAAWA,CAAQ,EACrD,KAAK,UAAY,IAAI,aAAaA,EAAWA,CAAQ,EACrD,KAAK,EAAI,IAAI,aAAaA,CAAQ,EAClC,KAAK,EAAI,IAAI,aAAaA,EAAW,CAAC,EACtC,KAAK,EAAI,IAAI,YAAYA,CAAQ,EAEjC,KAAK,WAAa,KAAK,IAAI,YAAY,GAAG,EAAE,wBAA0B,OAGtE,KAAK,OAAS,KAAK,MAAOD,EAAO,GAAM,UAAU,UAAU,QAAQ,QAAQ,GAAK,EAAI,IAAM,EAAE,CAChG,CAEA,SAASE,GAAaC,EAAShH,EAAOC,EAAQgH,EAAYC,EAAaC,EAAWC,EAAW,CAEzFD,EAAU,KAAKZ,EAAK,EAAGvG,EAAQC,CAAM,EACrCmH,EAAU,KAAK,EAAG,EAAGpH,EAAQC,CAAM,EAInC,QAFIoH,GAAUrH,EAAQiH,GAAc,EAE3BvE,EAAI,EAAGA,EAAIwE,EAAaxE,IAC7B,QAAS1F,EAAI,EAAGA,EAAIiK,EAAYjK,IAAK,CACjC,IAAIsK,GAAK5E,EAAI2E,GAAUrH,EAAQhD,EAAIqK,EAC/BE,EAAIP,EAAQ,KAAK,GAAKtE,EAAIuE,EAAajK,GAAK,CAAC,EAAI,IACrD,GAAIuK,IAAM,EACNJ,EAAUG,CAAC,EAAI,EACfF,EAAUE,CAAC,EAAIf,UACRgB,IAAM,EACbJ,EAAUG,CAAC,EAAIf,EACfa,EAAUE,CAAC,EAAI,MACZ,CACH,IAAIE,EAAI,KAAK,IAAI,EAAG,GAAMD,CAAC,EACvBE,EAAI,KAAK,IAAI,EAAGF,EAAI,EAAG,EAC3BJ,EAAUG,CAAC,EAAIE,EAAIA,EACnBJ,EAAUE,CAAC,EAAIG,EAAIA,CACtB,CACJ,CAET,CAEA,SAASC,GAAaC,EAAc3H,EAAOC,EAAQkH,EAAWC,EAAWX,EAAQC,EAAQ,CACrF,QAAS3F,EAAI,EAAGA,EAAIf,EAAQC,EAAQc,IAAK,CACrC,IAAI6G,EAAI,KAAK,KAAKT,EAAUpG,CAAC,CAAC,EAAI,KAAK,KAAKqG,EAAUrG,CAAC,CAAC,EACxD4G,EAAa5G,CAAC,EAAI,KAAK,MAAM,IAAM,KAAO6G,EAAInB,EAASC,EAAO,CACjE,CACL,CAEAJ,EAAQ,UAAU,MAAQ,SAAUuB,EAAMC,EAAY,CAClD,IAAIC,EAAc,KAAK,IAAI,YAAYF,CAAI,EAGvCG,EAAUD,EAAY,MAEtBE,EAAe,EAAI,KAAK,OACxBjI,EAAOiH,EAAYhH,EAAQiH,EAAagB,EAExCC,EAAQC,EAASC,EAGjBP,GAAc,KAAK,YAGnBI,EAAM,KAAK,MAAMH,EAAY,uBAAuB,EACpDM,EAAmB,KAAK,OAAS,KAAK,KAAKN,EAAY,uBAAuB,EAC9EI,EAAS,KAAK,OACdC,EAAU,KAAK,OAIfnB,EAAa,KAAK,IAAI,KAAK,KACvB,KAAK,KAAKc,EAAY,uBAAyBA,EAAY,qBAAqB,CAAC,EACrFb,EAAc,KAAK,IAAI,KAAK,KAAOiB,EAC/B,KAAK,KAAKJ,EAAY,wBAA0BA,EAAY,wBAAwB,CAAC,EAEzF/H,EAAQiH,EAAagB,EACrBhI,EAASiH,EAAce,EACvB,KAAK,IAAI,aAAe,eAExBjI,EAAQiH,EAAa,KAAK,KAC1BhH,EAASiH,EAAc,KAAK,KAI5BgB,EAAM,GAAK,KAAK,SAAW,GAC3BC,EAASC,EAAU,EACnBC,EAAmB,KAAK,OACxB,KAAK,IAAI,aAAe,UAG5B,IAAIrB,EACAC,GAAcC,IACd,KAAK,IAAI,UAAUkB,EAASD,EAAQlB,EAAYC,CAAW,EAC3D,KAAK,IAAI,SAASW,EAAM,KAAK,OAAQQ,CAAgB,EACrDrB,EAAU,KAAK,IAAI,aAAaoB,EAASD,EAAQlB,EAAYC,CAAW,GAG5E,IAAIS,EAAe,IAAI,kBAAkB3H,EAAQC,CAAM,EAEvD,OAAA8G,GAAaC,EAAShH,EAAOC,EAAQgH,EAAYC,EAAa,KAAK,UAAW,KAAK,SAAS,EAE5FoB,GAAI,KAAK,UAAWtI,EAAOC,EAAQ,KAAK,EAAG,KAAK,EAAG,KAAK,CAAC,EACzDqI,GAAI,KAAK,UAAWtI,EAAOC,EAAQ,KAAK,EAAG,KAAK,EAAG,KAAK,CAAC,EAEzDyH,GAAaC,EAAc3H,EAAOC,EAAQ,KAAK,UAAW,KAAK,UAAW,KAAK,OAAQ,KAAK,MAAM,EAE3F,CACH,KAAM0H,EACN,QAAS,CACL,MAAOV,EACP,OAAQC,EACR,SAAUlH,EACV,UAAWC,EACX,IAAKiI,EACL,KAAM,EACN,QAASF,CACZ,CACT,CACA,EAEA1B,EAAQ,UAAU,KAAO,SAAUuB,EAAM,CACrC,OAAO,KAAK,MAAMA,EAAM,EAAK,EAAE,IACnC,EAEAvB,EAAQ,UAAU,gBAAkB,SAAUuB,EAAM,CAChD,OAAO,KAAK,MAAMA,EAAM,EAAI,CAChC,EAGA,SAASS,GAAI9L,EAAMwD,EAAOC,EAAQsI,EAAGC,EAAGC,EAAG,CACvC,QAASzL,EAAI,EAAGA,EAAIgD,EAAOhD,IAAK0L,GAAMlM,EAAMQ,EAAGgD,EAAOC,EAAQsI,EAAGC,EAAGC,CAAC,EACrE,QAAS/F,EAAI,EAAGA,EAAIzC,EAAQyC,IAAKgG,GAAMlM,EAAMkG,EAAI1C,EAAO,EAAGA,EAAOuI,EAAGC,EAAGC,CAAC,CAC7E,CAGA,SAASC,GAAMC,EAAMtB,EAAQuB,EAAQC,EAAQN,EAAGC,EAAGC,EAAG,CAClD,IAAIK,EAAGC,EAAGC,EAAGC,EAKb,IAJAT,EAAE,CAAC,EAAI,EACPC,EAAE,CAAC,EAAI,CAAClC,EACRkC,EAAE,CAAC,EAAIlC,EAEFuC,EAAI,EAAGA,EAAID,EAAQC,IAAKP,EAAEO,CAAC,EAAIH,EAAKtB,EAASyB,EAAIF,CAAM,EAE5D,IAAKE,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGF,EAAID,EAAQC,IAAK,CACvC,GACIG,EAAIT,EAAEO,CAAC,EACPC,GAAKT,EAAEO,CAAC,EAAIP,EAAEU,CAAC,EAAIH,EAAIA,EAAIG,EAAIA,IAAMH,EAAIG,GAAK,QACzCD,GAAKP,EAAEM,CAAC,GAAK,EAAEA,EAAI,IAE5BA,IACAP,EAAEO,CAAC,EAAID,EACPL,EAAEM,CAAC,EAAIC,EACPP,EAAEM,EAAI,CAAC,EAAIxC,CACd,CAED,IAAKuC,EAAI,EAAGC,EAAI,EAAGD,EAAID,EAAQC,IAAK,CAChC,KAAOL,EAAEM,EAAI,CAAC,EAAID,GAAGC,IACrBE,EAAIT,EAAEO,CAAC,EACPJ,EAAKtB,EAASyB,EAAIF,CAAM,EAAIL,EAAEU,CAAC,GAAKH,EAAIG,IAAMH,EAAIG,EACrD,CACL,kCC9LMC,GAAqB,GACrBC,GAAc,CAAA,EACb,SAASxJ,GAAaC,EAAQ,CACnC,OAAO,KAAK,IAAI,EAAG,KAAK,KAAK,KAAK,KAAKA,CAAM,CAAC,CAAC,CACjD,CACO,SAASsB,GAAa,CAC3B,aAAAkI,EACA,aAAAC,EACA,WAAAC,EACA,OAAAlI,EACA,eAAAmI,EACA,QAAA3I,EAAU,CAAE,EACZ,QAAAI,EAAU,EACV,QAAAF,EAAU,CACZ,EAAG,CACD,IAAInE,EAAM,EACNK,EAAIgE,EAER,UAAW6G,KAAQuB,EACjB,GAAI,CAACxI,EAAQiH,CAAI,EAAG,CAClB,MAAM7H,EAAQqJ,EAAaxB,CAAI,EAE3B7K,EAAIgD,EAAQoB,EAAS,EAAImI,IAC3BvM,EAAI,EACJL,KAGFiE,EAAQiH,CAAI,EAAI,CACd,EAAG7K,EAAIoE,EACP,EAAGN,EAAUnE,GAAO2M,EAAalI,EAAS,GAAKA,EAC/C,MAAApB,EACA,OAAQsJ,CAChB,EACMtM,GAAKgD,EAAQoB,EAAS,CACvB,CAGH,MAAMC,EAAYiI,EAAalI,EAAS,EACxC,MAAO,CACL,QAAAR,EACA,QAAS5D,EACT,QAAS8D,EAAUnE,EAAM0E,EACzB,aAAc1B,GAAamB,GAAWnE,EAAM,GAAK0E,CAAS,CAC9D,CACA,CAEA,SAASmI,GAAaC,EAAMC,EAAYC,EAAU/I,EAAS,CACzD,IAAIZ,EAAQ,EAEZ,QAASe,EAAI2I,EAAY3I,EAAI4I,EAAU5I,IAAK,CAC1C,IAAI6I,EAEJ,MAAMC,EAAYJ,EAAK1I,CAAC,EACxBf,KAAW4J,EAAqBhJ,EAAQiJ,CAAS,KAAO,MAAQD,IAAuB,OAAS,OAASA,EAAmB,QAAU,CACvI,CAED,OAAO5J,CACT,CAEA,SAAS8J,GAASL,EAAMC,EAAYC,EAAUI,EAAU3H,EAAa4H,EAAQ,CAC3E,IAAIC,EAAoBP,EACpBQ,EAAgB,EAEpB,QAASnJ,EAAI2I,EAAY3I,EAAI4I,EAAU5I,IAAK,CAC1C,MAAMoJ,EAAYX,GAAaC,EAAM1I,EAAGA,EAAI,EAAGqB,CAAW,EAEtD8H,EAAgBC,EAAYJ,IAC1BE,EAAoBlJ,GACtBiJ,EAAO,KAAKjJ,CAAC,EAGfkJ,EAAoBlJ,EACpBmJ,EAAgB,GAGlBA,GAAiBC,CAClB,CAED,OAAOD,CACT,CAEA,SAASE,GAAUX,EAAMC,EAAYC,EAAUI,EAAU3H,EAAa4H,EAAQ,CAC5E,IAAIC,EAAoBP,EACpBW,EAAsBX,EACtBY,EAAoBZ,EACpBQ,EAAgB,EAEpB,QAASnJ,EAAI2I,EAAY3I,EAAI4I,EAAU5I,IAOrC,IANI0I,EAAK1I,CAAC,IAAM,KAEL0I,EAAK1I,EAAI,CAAC,IAAM,KAAOA,EAAI,IAAM4I,KAC1CW,EAAoBvJ,EAAI,GAGtBuJ,EAAoBD,EAAqB,CAC3C,IAAIE,EAAaf,GAAaC,EAAMY,EAAqBC,EAAmBlI,CAAW,EAEnF8H,EAAgBK,EAAaR,IAC3BE,EAAoBI,IACtBL,EAAO,KAAKK,CAAmB,EAC/BJ,EAAoBI,EACpBH,EAAgB,GAGdK,EAAaR,IACfQ,EAAaT,GAASL,EAAMY,EAAqBC,EAAmBP,EAAU3H,EAAa4H,CAAM,EACjGC,EAAoBD,EAAOA,EAAO,OAAS,CAAC,IAIhDK,EAAsBC,EACtBJ,GAAiBK,CAClB,CAGH,OAAOL,CACT,CAEO,SAASM,GAAaf,EAAMgB,EAAWV,EAAU3H,EAAasH,EAAa,EAAGC,EAAU,CACzFA,IAAa,SACfA,EAAWF,EAAK,QAGlB,MAAMiB,EAAS,CAAA,EAEf,OAAID,IAAc,YAChBX,GAASL,EAAMC,EAAYC,EAAUI,EAAU3H,EAAasI,CAAM,EAElEN,GAAUX,EAAMC,EAAYC,EAAUI,EAAU3H,EAAasI,CAAM,EAG9DA,CACT,CAEA,SAASC,GAAaC,EAAMlB,EAAYC,EAAUvH,EAAayI,EAAaC,EAAS,CACnF,IAAI9N,EAAI,EACJqE,EAAY,EAEhB,QAASN,EAAI2I,EAAY3I,EAAI4I,EAAU5I,IAAK,CAC1C,MAAM8I,EAAYe,EAAK7J,CAAC,EAClBgK,EAAQ3I,EAAYyH,CAAS,EAE/BkB,GACG1J,IACHA,EAAY0J,EAAM,QAGpBF,EAAY9J,CAAC,EAAI/D,EAAI+N,EAAM,MAAQ,EACnC/N,GAAK+N,EAAM,QAEXpG,EAAI,KAAK,sBAAsB,OAAOkF,EAAW,IAAI,EAAE,OAAOA,EAAU,YAAY,CAAC,EAAG,GAAG,CAAC,EAAC,EAC7FgB,EAAY9J,CAAC,EAAI/D,EACjBA,GAAKkM,GAER,CAED4B,EAAQ,CAAC,EAAI9N,EACb8N,EAAQ,CAAC,EAAIzJ,CACf,CAEO,SAAS2J,GAAmBC,EAAWC,EAAYT,EAAWV,EAAU3H,EAAa,CAC1F,MAAM+I,EAAa,MAAM,KAAKF,CAAS,EACjCG,EAAgBD,EAAW,OAC3BnO,EAAI,IAAI,MAAMoO,CAAa,EAC3B1I,EAAI,IAAI,MAAM0I,CAAa,EAC3BC,EAAW,IAAI,MAAMD,CAAa,EAClCE,GAAuBb,IAAc,cAAgBA,IAAc,cAAgB,SAASV,CAAQ,GAAKA,EAAW,EACpHlD,EAAO,CAAC,EAAG,CAAC,EACZiE,EAAU,CAAC,EAAG,CAAC,EACrB,IAAIS,EAAe,EACfC,EAAiB,EACjBC,EAAe,EAEnB,QAAS1K,EAAI,EAAGA,GAAKqK,EAAerK,IAAK,CACvC,MAAM8G,EAAOsD,EAAWpK,CAAC,EAMzB,IAJI8G,IAAS;AAAA,GAAQ9G,IAAMqK,KACzBK,EAAe1K,GAGb0K,EAAeD,EAAgB,CACjC,MAAME,EAAOJ,EAAsBd,GAAaW,EAAYV,EAAWV,EAAU3H,EAAaoJ,EAAgBC,CAAY,EAAItC,GAE9H,QAASwC,EAAW,EAAGA,GAAYD,EAAK,OAAQC,IAAY,CAC1D,MAAMC,EAAWD,IAAa,EAAIH,EAAiBE,EAAKC,EAAW,CAAC,EAC9DE,EAASF,EAAWD,EAAK,OAASA,EAAKC,CAAQ,EAAIF,EACzDd,GAAaQ,EAAYS,EAAUC,EAAQzJ,EAAapF,EAAG8N,CAAO,EAElE,QAASxD,EAAIsE,EAAUtE,EAAIuE,EAAQvE,IACjC5E,EAAE4E,CAAC,EAAIiE,EAAeT,EAAQ,CAAC,EAAI,EACnCO,EAAS/D,CAAC,EAAIwD,EAAQ,CAAC,EAGzBS,EAAeA,EAAeT,EAAQ,CAAC,EAAII,EAC3CrE,EAAK,CAAC,EAAI,KAAK,IAAIA,EAAK,CAAC,EAAGiE,EAAQ,CAAC,CAAC,CACvC,CAEDU,EAAiBC,CAClB,CAEG5D,IAAS;AAAA,IACX7K,EAAEwO,CAAc,EAAI,EACpB9I,EAAE8I,CAAc,EAAI,EACpBH,EAASG,CAAc,EAAI,EAC3BA,IAEH,CAED,OAAA3E,EAAK,CAAC,EAAI0E,EACH,CACL,EAAAvO,EACA,EAAA0F,EACA,SAAA2I,EACA,KAAAxE,CACJ,CACA,CACO,SAASiF,GAAkB,CAChC,MAAA9F,EACA,OAAA6C,EACA,OAAAD,EACA,OAAAvB,EACA,aAAA0E,EACA,aAAA3C,CACF,EAAG,CACD,MAAM4C,EAAkBhG,EAAM,kBACxBiG,EAAgBrD,EAASA,EAASoD,EAAkB,EACpDE,EAAgB7E,EAASA,EAAS2E,EAAkB,EACpDG,EAAiBJ,EAAalD,CAAM,GAAK,KAAK,MAAM7C,EAAM,OAASkG,GAAiBD,CAAa,EACjGG,EAAmBhD,GAAgB,IAAI,IACvCiD,EAAQ,IAAI,MAAMxD,CAAM,EAC9B,IAAIyD,EAAQtG,EAEZ,GAAIiG,EAAgB,GAAKC,EAAgB,EAAG,CAC1C,MAAMK,EAAYvG,EAAM,YACxBsG,EAAQ,IAAIC,EAAUJ,CAAc,EAEpC,QAASpL,EAAI,EAAGA,EAAIoL,EAAgBpL,IAClCuL,EAAMvL,CAAC,EAAIiF,EAAMjF,EAAIkL,EAAgBC,CAAa,CAErD,CAED,QAASnG,EAAQ,EAAGA,EAAQ8C,EAAQ9C,IAAS,CAC3C,MAAM2D,EAAaqC,EAAahG,CAAK,EAC/B4D,EAAWoC,EAAahG,EAAQ,CAAC,GAAKoG,EACtCK,EAAeF,EAAM,SAAS5C,EAAYC,CAAQ,EACxD0C,EAAMtG,CAAK,EAAI,OAAO,cAAc,MAAM,KAAMyG,CAAY,EAExDJ,GACFI,EAAa,QAAQJ,EAAiB,IAAKA,CAAgB,CAE9D,CAED,GAAIA,EACF,UAAWK,KAAYL,EACrBhD,EAAa,IAAI,OAAO,cAAcqD,CAAQ,CAAC,EAInD,MAAO,CACL,MAAAJ,EACA,eAAAF,CACJ,CACA,CCtQe,MAAMO,EAAS,CAC5B,YAAYC,EAAQ,EAAG,CACrBvN,EAAgB,KAAM,QAAS,MAAM,EAErCA,EAAgB,KAAM,SAAU,CAAA,CAAE,EAElCA,EAAgB,KAAM,SAAU,CAAA,CAAE,EAElC,KAAK,MAAQuN,CACd,CAED,IAAIlO,EAAK,CACP,MAAMuH,EAAQ,KAAK,OAAOvH,CAAG,EAE7B,OAAIuH,IACF,KAAK,aAAavH,CAAG,EAErB,KAAK,aAAaA,CAAG,GAGhBuH,CACR,CAED,IAAIvH,EAAKuH,EAAO,CACT,KAAK,OAAOvH,CAAG,GASlB,KAAK,OAAOA,CAAG,EACf,KAAK,OAAOA,CAAG,EAAIuH,EAEnB,KAAK,aAAavH,CAAG,IAXjB,OAAO,KAAK,KAAK,MAAM,EAAE,SAAW,KAAK,OAC3C,KAAK,OAAO,KAAK,OAAO,CAAC,CAAC,EAG5B,KAAK,OAAOA,CAAG,EAAIuH,EAEnB,KAAK,aAAavH,CAAG,EAOxB,CAED,OAAOA,EAAK,CACI,KAAK,OAAOA,CAAG,IAG3B,OAAO,KAAK,OAAOA,CAAG,EAEtB,KAAK,aAAaA,CAAG,EAExB,CAED,aAAaA,EAAK,CAChB,MAAMsH,EAAQ,KAAK,OAAO,QAAQtH,CAAG,EAEjCsH,GAAS,GACX,KAAK,OAAO,OAAOA,EAAO,CAAC,CAE9B,CAED,aAAatH,EAAK,CAChB,KAAK,OAAO,KAAKA,CAAG,CACrB,CAEH,CCzDA,SAASmO,IAAyB,CAChC,MAAMC,EAAU,CAAA,EAEhB,QAAS9L,EAAI,GAAIA,EAAI,IAAKA,IACxB8L,EAAQ,KAAK,OAAO,aAAa9L,CAAC,CAAC,EAGrC,OAAO8L,CACT,CAEO,MAAMC,EAAwB,CACnC,WAAY,oBACZ,WAAY,SACZ,aAAcF,GAAwB,EACtC,SAAU,GACV,OAAQ,EACR,IAAK,GACL,OAAQ,IACR,OAAQ,GACR,UAAW,EACb,EACMG,GAAmB,KACnBC,GAAiB,GACjBC,GAAe,IACfC,GAAc,EACpB,IAAIC,EAAQ,IAAIT,GAASQ,EAAW,EAEpC,SAASE,GAAYC,EAAUjE,EAAc,CAC3C,IAAIkE,EAEA,OAAOlE,GAAiB,SAC1BkE,EAAa,IAAI,IAAI,MAAM,KAAKlE,CAAY,CAAC,EAE7CkE,EAAa,IAAI,IAAIlE,CAAY,EAGnC,MAAMmE,EAAkBJ,EAAM,IAAIE,CAAQ,EAE1C,GAAI,CAACE,EACH,OAAOD,EAGT,UAAWzF,KAAQ0F,EAAgB,QAC7BD,EAAW,IAAIzF,CAAI,GACrByF,EAAW,OAAOzF,CAAI,EAI1B,OAAOyF,CACT,CAEA,SAASE,GAAqB7F,EAAc5H,EAAW,CACrD,QAASgB,EAAI,EAAGA,EAAI4G,EAAa,OAAQ5G,IACvChB,EAAU,KAAK,EAAIgB,EAAI,CAAC,EAAI4G,EAAa5G,CAAC,CAE9C,CAEA,SAAS0M,GAAa3N,EAAK6G,EAAYH,EAAUI,EAAY,CAC3D9G,EAAI,KAAO,GAAG,OAAO8G,EAAY,GAAG,EAAE,OAAOJ,EAAU,KAAK,EAAE,OAAOG,CAAU,EAC/E7G,EAAI,UAAY,OAChBA,EAAI,aAAe,aACnBA,EAAI,UAAY,MAClB,CAEO,SAAS4N,GAAuBf,EAAO,CAC5ChI,EAAI,OAAO,OAAO,SAASgI,CAAK,GAAKA,GAASO,GAAa,qBAAqB,EAChFC,EAAQ,IAAIT,GAASC,CAAK,CAC5B,CACe,MAAMgB,EAAiB,CACpC,aAAc,CACZvO,EAAgB,KAAM,QAAS,CAAE,GAAG0N,CACxC,CAAK,EAED1N,EAAgB,KAAM,OAAQ,MAAM,EAEpCA,EAAgB,KAAM,SAAU,MAAM,CACvC,CAED,IAAI,SAAU,CACZ,OAAO,KAAK,MACb,CAED,IAAI,SAAU,CACZ,OAAO,KAAK,QAAU,KAAK,OAAO,OACnC,CAED,IAAI,OAAQ,CACV,OAAO6N,EACR,CAED,SAAS5J,EAAQ,GAAI,CACnB,OAAO,OAAO,KAAK,MAAOA,CAAK,EAC/B,MAAMuK,EAAS,KAAK,KACpB,KAAK,KAAO,KAAK,UACjB,MAAMf,EAAUO,GAAY,KAAK,KAAM,KAAK,MAAM,YAAY,EACxDG,EAAkBJ,EAAM,IAAI,KAAK,IAAI,EAE3C,GAAII,GAAmBV,EAAQ,OAAS,EAAG,CACrC,KAAK,OAASe,IAChB,KAAK,OAASL,GAGhB,MACD,CAED,MAAMM,EAAY,KAAK,mBAAmB,KAAK,KAAMhB,EAASU,CAAe,EAE7E,KAAK,OAASM,EACdV,EAAM,IAAI,KAAK,KAAMU,CAAS,CAC/B,CAED,mBAAmBpP,EAAK2K,EAAcmE,EAAiB,CACrD,KAAM,CACJ,WAAA5G,EACA,WAAAC,EACA,SAAAJ,EACA,OAAApF,EACA,IAAA8E,EACA,OAAAO,EACA,OAAAC,CACN,EAAQ,KAAK,MACT,IAAIoH,EAASP,GAAmBA,EAAgB,KAE3CO,IACHA,EAAS,SAAS,cAAc,QAAQ,EACxCA,EAAO,MAAQf,IAGjB,MAAMjN,EAAMgO,EAAO,WAAW,IAAI,EAClCL,GAAa3N,EAAK6G,EAAYH,EAAUI,CAAU,EAClD,KAAM,CACJ,QAAAhG,EACA,aAAA2B,EACA,QAAAvB,EACA,QAAAF,CACD,EAAGI,GAAa,CACf,aAAc2G,GAAQ/H,EAAI,YAAY+H,CAAI,EAAE,MAC5C,WAAYrB,EAAWyG,GACvB,OAAA7L,EACA,aAAAgI,EACA,eAAgB2D,GAChB,GAAIQ,GAAmB,CACrB,QAASA,EAAgB,QACzB,QAASA,EAAgB,QACzB,QAASA,EAAgB,OACjC,CACA,CAAK,EAED,GAAIO,EAAO,SAAWvL,EAAc,CAClC,MAAMxC,EAAYD,EAAI,aAAa,EAAG,EAAGgO,EAAO,MAAOA,EAAO,MAAM,EACpEA,EAAO,OAASvL,EAChBzC,EAAI,aAAaC,EAAW,EAAG,CAAC,CACjC,CAID,GAFA0N,GAAa3N,EAAK6G,EAAYH,EAAUI,CAAU,EAE9CV,EAAK,CACP,MAAM6H,EAAU,IAAIzH,GAAQE,EAAUpF,EAAQqF,EAAQC,EAAQC,EAAYC,CAAU,EAC9E7G,EAAYD,EAAI,aAAa,EAAG,EAAGiO,EAAQ,KAAMA,EAAQ,IAAI,EAEnE,UAAWlG,KAAQuB,EACjBoE,GAAqBO,EAAQ,KAAKlG,CAAI,EAAG9H,CAAS,EAClDD,EAAI,aAAaC,EAAWa,EAAQiH,CAAI,EAAE,EAAIzG,EAAQR,EAAQiH,CAAI,EAAE,EAAIzG,CAAM,CAEtF,KACM,WAAWyG,KAAQuB,EACjBtJ,EAAI,SAAS+H,EAAMjH,EAAQiH,CAAI,EAAE,EAAGjH,EAAQiH,CAAI,EAAE,EAAIrB,EAAWwG,EAAc,EAInF,MAAO,CACL,QAAAhM,EACA,QAAAF,EACA,QAAAF,EACA,KAAMkN,EACN,MAAOA,EAAO,MACd,OAAQA,EAAO,MACrB,CACG,CAED,SAAU,CACR,KAAM,CACJ,WAAAnH,EACA,WAAAC,EACA,SAAAJ,EACA,OAAApF,EACA,IAAA8E,EACA,OAAAO,EACA,OAAAC,CACN,EAAQ,KAAK,MAET,OAAIR,EACK,GAAG,OAAOS,EAAY,GAAG,EAAE,OAAOC,EAAY,GAAG,EAAE,OAAOJ,EAAU,GAAG,EAAE,OAAOpF,EAAQ,GAAG,EAAE,OAAOqF,EAAQ,GAAG,EAAE,OAAOC,CAAM,EAGhI,GAAG,OAAOC,EAAY,GAAG,EAAE,OAAOC,EAAY,GAAG,EAAE,OAAOJ,EAAU,GAAG,EAAE,OAAOpF,CAAM,CAC9F,CAEH,CC5MA,MAAA4B,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECAfC,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKTJ,GAAe,CACnB,UAAW,GACX,UAAW,EACX,UAAW,SACX,cAAe,EACf,cAAe,OAAO,iBACtB,QAAS,CACP,KAAM,QACN,MAAO,CAAC,EAAG,EAAG,EAAG,CAAC,CACnB,EACD,YAAa,CACX,KAAM,WACN,MAAO7F,GAAKA,EAAE,QACf,EACD,QAAS,CACP,KAAM,WACN,MAAO,CACR,EACD,SAAU,CACR,KAAM,WACN,MAAO,CACR,EACD,eAAgB,CACd,KAAM,WACN,MAAO,CAAC,EAAG,CAAC,CACb,EACD,gBAAiB,CACf,KAAM,WACN,MAAO,CAAC,EAAG,EAAG,EAAG,CAAC,CACnB,EACD,aAAc,CACZ,KAAM,WACN,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG,CACrB,EACD,aAAc,CACZ,KAAM,WACN,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG,CACrB,EACD,aAAc,CACZ,KAAM,WACN,MAAO,CACR,CACH,EACe,MAAMgR,UAA4B/R,CAAM,CACrD,eAAe8G,EAAM,CACnB,MAAM,GAAGA,CAAI,EAEb3D,EAAgB,KAAM,QAAS,MAAM,CACtC,CAED,YAAa,CACX,OAAO,MAAM,WAAW,CACtB,GAAA4D,GACA,GAAAC,GACA,QAAS,CAACC,EAAWC,CAAO,CAClC,CAAK,CACF,CAED,iBAAkB,CAChB,KAAK,oBAAqB,EAAC,aAAa,CACtC,kBAAmB,CACjB,KAAM,EACN,KAAM,KACN,KAAM,KAAK,kBAAmB,EAC9B,WAAY,GACZ,SAAU,aACX,EACD,cAAe,CACb,KAAM,EACN,WAAY,GACZ,SAAU,UACV,aAAc,CACf,EACD,eAAgB,CACd,KAAM,EACN,WAAY,GACZ,SAAU,UACX,EACD,cAAe,CACb,KAAM,EACN,SAAU,iBACX,EACD,qBAAsB,CACpB,KAAM,EACN,WAAY,GACZ,SAAU,gBACX,EACD,mBAAoB,CAClB,KAAM,EACN,WAAY,GACZ,WAAY,GACZ,KAAM,KACN,SAAU,eACV,aAAc,CAAC,EAAG,EAAG,EAAG,GAAG,CAC5B,EACD,mBAAoB,CAClB,KAAM,EACN,WAAY,GACZ,WAAY,GACZ,KAAM,KACN,SAAU,eACV,aAAc,CAAC,EAAG,EAAG,EAAG,GAAG,CAC5B,EACD,mBAAoB,CAClB,KAAM,EACN,WAAY,GACZ,SAAU,eACV,aAAc,CACf,CACP,CAAK,CACF,CAED,YAAYC,EAAQ,CAClB,MAAM,YAAYA,CAAM,EACxB,KAAM,CACJ,YAAAG,CACD,EAAGH,EAEJ,GAAIG,EAAY,kBAAmB,CACjC,IAAII,EAEJ,KAAM,CACJ,GAAA9B,CACR,EAAU,KAAK,SACR8B,EAAoB,KAAK,MAAM,SAAW,MAAQA,IAAsB,QAAkBA,EAAkB,OAAM,EACnH,KAAK,MAAM,MAAQ,KAAK,UAAU9B,CAAE,EACpC,KAAK,sBAAsB,eAC5B,CACF,CAED,KAAK,CACH,SAAA+B,CACJ,EAAK,CACD,KAAM,CACJ,UAAAK,EACA,UAAAJ,EACA,UAAAG,EACA,cAAAF,EACA,cAAAC,EACA,aAAAkK,CACN,EAAQ,KAAK,MACT,GAAI,CACF,QAAAC,CACN,EAAQ,KAAK,MAELA,EAAQ,OAAS,IACnBA,EAAU,CAACA,EAAQ,CAAC,EAAGA,EAAQ,CAAC,EAAGA,EAAQ,CAAC,EAAGA,EAAQ,CAAC,CAAC,GAG3D,KAAK,MAAM,MAAM,YAAYtK,CAAQ,EAAE,YAAY,CACjD,UAAAK,EACA,QAAS,EAAQgK,EACjB,QAAAC,EACA,UAAW9J,EAAKJ,CAAS,EACzB,UAAAH,EACA,cAAAC,EACA,cAAAC,CACN,CAAK,EAAE,KAAI,CACR,CAED,UAAUlC,EAAI,CACZ,MAAMwC,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACzC,OAAO,IAAIC,EAAMzC,EAAI,CAAE,GAAG,KAAK,WAAY,EACzC,GAAI,KAAK,MAAM,GACf,SAAU,IAAI0C,EAAS,CACrB,SAAU,EACV,YAAa,EACb,WAAY,CACV,UAAW,CACT,KAAM,EACN,MAAO,IAAI,aAAaF,CAAS,CAClC,CACF,CACT,CAAO,EACD,YAAa,EACnB,CAAK,CACF,CAEH,CAEAjF,EAAgB4O,EAAqB,eAAgBnL,EAAY,EAEjEzD,EAAgB4O,EAAqB,YAAa,qBAAqB,ECrLvE,MAAMG,GAAc,CAClB,MAAO,EACP,OAAQ,EACR,IAAK,EACP,EACMC,GAAqB,CACzB,IAAK,EACL,OAAQ,EACR,OAAQ,EACV,EACMxL,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAG,EAC7ByL,GAAsB,EACtBxL,GAAe,CACnB,UAAW,GACX,UAAW,EACX,UAAW,SACX,cAAe,EACf,cAAe,OAAO,iBACtB,WAAY,GACZ,mBAAoB,CAClB,KAAM,WACN,MAAO,CAAC,IAAK,IAAK,IAAK,GAAG,CAC3B,EACD,eAAgB,CACd,KAAM,WACN,MAAOD,CACR,EACD,eAAgB,CACd,KAAM,WACN,MAAO,CACR,EACD,kBAAmB,CACjB,KAAM,QACN,MAAO,CAAC,EAAG,EAAG,EAAG,CAAC,CACnB,EACD,aAAc,CACZ,KAAM,SACN,MAAOkK,EAAsB,YAC9B,EACD,WAAYA,EAAsB,WAClC,WAAYA,EAAsB,WAClC,WAAYuB,GACZ,aAAc,CACZ,KAAM,SACN,MAAO,EACP,IAAK,CACN,EACD,aAAc,CACZ,KAAM,QACN,MAAOzL,CACR,EACD,aAAc,CAAE,EAChB,UAAW,aACX,SAAU,CACR,KAAM,SACN,MAAO,EACR,EACD,QAAS,CACP,KAAM,WACN,MAAO5F,GAAKA,EAAE,IACf,EACD,YAAa,CACX,KAAM,WACN,MAAOA,GAAKA,EAAE,QACf,EACD,SAAU,CACR,KAAM,WACN,MAAO4F,CACR,EACD,QAAS,CACP,KAAM,WACN,MAAO,EACR,EACD,SAAU,CACR,KAAM,WACN,MAAO,CACR,EACD,cAAe,CACb,KAAM,WACN,MAAO,QACR,EACD,qBAAsB,CACpB,KAAM,WACN,MAAO,QACR,EACD,eAAgB,CACd,KAAM,WACN,MAAO,CAAC,EAAG,CAAC,CACb,EACD,gBAAiB,CACf,cAAe,CAAC,aAAc,oBAAoB,CACnD,CACH,EACe,MAAM0L,WAAkBtS,EAAe,CACpD,eAAe+G,EAAM,CACnB,MAAM,GAAGA,CAAI,EAEb3D,EAAgB,KAAM,QAAS,MAAM,EAErCA,EAAgB,KAAM,kBAAmB,CAAC9C,EAAQS,IAAe,CAC/D,MAAMqF,EAAc,KAAK,MAAM,iBAAiB,QAC1CmM,EAAU,KAAK,MAAM,QACrB,CACJ,UAAA9D,EACA,SAAAV,EACA,WAAAmB,EACA,cAAAsD,EACA,qBAAAC,CACR,EAAU,KAAK,MACHxD,EAAYsD,EAAQjS,EAAQS,CAAU,GAAK,GAC3C,CACJ,KAAM,CAACiD,EAAOC,CAAM,CAC5B,EAAU+K,GAAmBC,EAAWC,EAAYT,EAAWV,EAAU3H,CAAW,EACxEwC,EAAUuJ,GAAY,OAAOK,GAAkB,WAAaA,EAAclS,EAAQS,CAAU,EAAIyR,CAAa,EAC7G3J,EAAUuJ,GAAmB,OAAOK,GAAyB,WAAaA,EAAqBnS,EAAQS,CAAU,EAAI0R,CAAoB,EAC/I,MAAO,EAAE7J,EAAU,GAAK5E,EAAQ,GAAI6E,EAAU,GAAK5E,EAAS,EAAGD,EAAOC,CAAM,CAClF,CAAK,EAEDb,EAAgB,KAAM,iBAAkB,CAAC9C,EAAQS,IAAe,CAC9D,MAAMqF,EAAc,KAAK,MAAM,iBAAiB,QAC1CmM,EAAU,KAAK,MAAM,QACrB,CACJ,UAAA9D,EACA,SAAAV,EACA,WAAAmB,EACA,cAAAsD,EACA,qBAAAC,CACR,EAAU,KAAK,MACHxD,EAAYsD,EAAQjS,EAAQS,CAAU,GAAK,GAC3C,CACJ,EAAAC,EACA,EAAA0F,EACA,SAAA2I,EACA,KAAM,CAACrL,EAAOC,CAAM,CAC5B,EAAU+K,GAAmBC,EAAWC,EAAYT,EAAWV,EAAU3H,CAAW,EACxEwC,EAAUuJ,GAAY,OAAOK,GAAkB,WAAaA,EAAclS,EAAQS,CAAU,EAAIyR,CAAa,EAC7G3J,EAAUuJ,GAAmB,OAAOK,GAAyB,WAAaA,EAAqBnS,EAAQS,CAAU,EAAI0R,CAAoB,EACzIrD,EAAgBpO,EAAE,OAClB0R,EAAU,IAAI,MAAMtD,EAAgB,CAAC,EAC3C,IAAIrF,EAAQ,EAEZ,QAAShF,EAAI,EAAGA,EAAIqK,EAAerK,IAAK,CACtC,MAAM4N,GAAa,EAAI/J,IAAY5E,EAAQqL,EAAStK,CAAC,GAAK,EAC1D2N,EAAQ3I,GAAO,GAAKnB,EAAU,GAAK5E,EAAQ,EAAI2O,EAAY3R,EAAE+D,CAAC,EAC9D2N,EAAQ3I,GAAO,GAAKlB,EAAU,GAAK5E,EAAS,EAAIyC,EAAE3B,CAAC,CACpD,CAED,OAAO2N,CACb,CAAK,CACF,CAED,iBAAkB,CAChB,KAAK,MAAQ,CACX,aAAc,EACd,iBAAkB,IAAIf,EAC5B,CACG,CAED,YAAYvK,EAAQ,CAClB,KAAM,CACJ,MAAAC,EACA,SAAAC,EACA,YAAAC,CACD,EAAGH,GACgBG,EAAY,aAAeA,EAAY,wBAA0BA,EAAY,sBAAsB,KAAOA,EAAY,sBAAsB,WAG9J,KAAK,YAAW,GAGE,KAAK,oBAEWF,EAAM,aAAeC,EAAS,YAAcD,EAAM,YAAcC,EAAS,WAAaD,EAAM,WAAaC,EAAS,WAGpJ,KAAK,SAAS,CACZ,aAAc,KAAK,MAAM,aAAe,CAChD,CAAO,CAEJ,CAED,eAAe,CACb,KAAAjH,CACJ,EAAK,CACD,OAAAA,EAAK,OAASA,EAAK,OAAS,EAAI,KAAK,MAAM,KAAKA,EAAK,KAAK,EAAI,KACvDA,CACR,CAED,kBAAmB,CACjB,KAAM,CACJ,aAAAuS,EACA,WAAAjI,EACA,WAAAC,CACN,EAAQ,KAAK,MACH,CACJ,iBAAAiI,EACA,aAAAzF,CACN,EAAQ,KAAK,MACH0F,EAAY,CAAE,GAAGF,EACrB,aAAAxF,EACA,WAAAzC,EACA,WAAAC,CACN,EAEI,GAAI,CAACiI,EAAiB,QACpB,OAAAA,EAAiB,SAASC,CAAS,EAC5B,GAGT,UAAWrQ,KAAOqQ,EAChB,GAAIA,EAAUrQ,CAAG,IAAMoQ,EAAiB,MAAMpQ,CAAG,EAC/C,OAAAoQ,EAAiB,SAASC,CAAS,EAC5B,GAIX,MAAO,EACR,CAED,aAAc,CACZ,IAAIC,EAEJ,KAAM,CACJ,KAAAvS,EACA,aAAA4M,CACN,EAAQ,KAAK,MACH4F,GAAcD,EAAcvS,EAAK,cAAgB,MAAQuS,IAAgB,OAAS,OAASA,EAAY,QAC7G,GAAI,CACF,QAAAR,CACN,EAAQ,KAAK,MACLxC,EAAevP,EAAK,aACpByS,EACJ,MAAM7C,EAAmBhD,IAAiB,QAAU,IAAI,IAExD,GAAI4F,GAAcjD,EAAc,CAC9B,KAAM,CACJ,MAAAM,EACA,eAAAF,CACD,EAAGL,GAAkB,CAAE,GAAI,YAAY,OAAOkD,CAAU,EAAI,CACzD,MAAOA,CACR,EAAGA,EACJ,OAAQxS,EAAK,OACb,aAAAuP,EACA,aAAcK,CACtB,CAAO,EACD6C,EAAe9C,EAEfoC,EAAU,CAACW,EAAG,CACZ,MAAAnJ,CACR,IAAYsG,EAAMtG,CAAK,CACvB,KAAW,CACL,KAAM,CACJ,SAAArE,EACA,WAAA3E,CACR,EAAU4E,GAAenF,CAAI,EACvBuP,EAAe,CAAC,CAAC,EACjBkD,EAAe,EAEf,UAAW3S,KAAUoF,EAAU,CAC7B3E,EAAW,QACX,MAAM0M,EAAO,MAAM,KAAK8E,EAAQjS,EAAQS,CAAU,GAAK,EAAE,EAErDqP,GACF3C,EAAK,QAAQ2C,EAAiB,IAAKA,CAAgB,EAGrD6C,GAAgBxF,EAAK,OACrBsC,EAAa,KAAKkD,CAAY,CAC/B,CACF,CAED,KAAK,SAAS,CACZ,QAAAV,EACA,aAAAxC,EACA,aAAAkD,EACA,aAAc7C,GAAoBhD,CACxC,CAAK,CACF,CAED,cAAe,CACb,KAAM,CACJ,aAAA2C,EACA,aAAAkD,EACA,QAAAV,EACA,iBAAkB,CAChB,MAAAY,EACA,QAAA9O,EACA,QAAAO,CACD,EACD,aAAAwO,CACN,EAAQ,KAAK,MACH,CACJ,KAAA5S,EACA,UAAA6S,EACA,YAAAC,EACA,SAAAC,EACA,QAAAC,EACA,SAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,kBAAAC,EACA,WAAAC,EACA,UAAA9L,EACA,aAAA2K,EACA,aAAAxI,EACA,aAAAH,EACA,UAAApC,EACA,UAAAG,EACA,cAAAF,EACA,cAAAC,EACA,YAAAiM,EACA,eAAAC,CACN,EAAQ,KAAK,MACHC,GAAuB,KAAK,iBAAiB,aAAcpK,CAAc,EACzEqK,GAAuB,KAAK,iBAAiB,aAAcnC,CAAmB,EACpF,MAAO,CAAC+B,GAAc,IAAII,GAAqB,CAC7C,aAAcR,EACd,aAAcC,EACd,aAAcC,EACd,QAASC,EACT,YAAAR,EACA,QAAAE,EACA,SAAAC,EACA,eAAAC,EACA,UAAAzL,EACA,UAAWJ,EAAY,KAAK,MAAM,iBAAiB,MAAM,SACzD,UAAAG,EACA,cAAAF,EACA,cAAAC,EACA,YAAaiM,GAAe,CAC1B,YAAaA,EAAY,YACzB,SAAUA,EAAY,SACtB,QAASA,EAAY,QACrB,aAAcA,EAAY,mBAC1B,aAAcA,EAAY,eAC1B,aAAcA,EAAY,eAC1B,eAAgBA,EAAY,cAC7B,CACP,EAAO,KAAK,iBAAiB,CACvB,GAAI,aACJ,eAAgB,CACd,YAAaC,EAAe,YAC5B,SAAUA,EAAe,SACzB,QAASA,EAAe,QACxB,aAAcA,EAAe,mBAC7B,aAAcA,EAAe,eAC7B,aAAcA,EAAe,eAC7B,eAAgBA,EAAe,eAC/B,gBAAiB,CACf,QAASA,EAAe,QACxB,cAAeA,EAAe,cAC9B,qBAAsBA,EAAe,qBACrC,aAAAb,CACD,CACF,CACP,CAAK,EAAG,CACF,KAAM5S,EAAK,YAAcA,EAAK,WAAW,WAAa,CACpD,OAAQA,EAAK,OACb,WAAYA,EAAK,WAAW,UACpC,EAAUA,EACJ,UAAA6S,EACA,cAAe,GACf,gBAAiB,KAAK,eAC5B,CAAK,EAAG,IAAIa,GAAqB,CAC3B,IAAKtB,EAAa,IAClB,UAAW,OAAO,SAASA,EAAa,SAAS,EAAIA,EAAa,UAAY9B,EAAsB,UACpG,aAAA1G,EACA,aAAAH,EACA,UAAW5F,EACX,YAAaO,EACb,YAAA0O,EACA,SAAAC,EACA,QAAAC,EACA,SAAAC,EACA,eAAAC,EACA,UAAAzL,EACA,UAAWJ,EAAYsL,EACvB,UAAAnL,EACA,cAAeF,EAAgBqL,EAC/B,cAAepL,EAAgBoL,EAC/B,YAAaa,GAAe,CAC1B,YAAaA,EAAY,YACzB,SAAUA,EAAY,SACtB,SAAUA,EAAY,SACtB,QAASA,EAAY,QACrB,eAAgBA,EAAY,cAC7B,CACP,EAAO,KAAK,iBAAiB,CACvB,GAAI,aACJ,eAAgB,CACd,QAASC,EAAe,QACxB,YAAaA,EAAe,YAC5B,SAAUA,EAAe,SACzB,SAAUA,EAAe,SACzB,QAASA,EAAe,QACxB,eAAgBA,EAAe,eAC/B,eAAgB,CACd,QAASA,EAAe,QACxB,cAAeA,EAAe,cAC9B,qBAAsBA,EAAe,qBACrC,aAAAb,CACD,CACF,CACP,CAAK,EAAG,CACF,KAAA5S,EACA,UAAA6S,EACA,aAAAtD,EACA,aAAAkD,EACA,eAAgB,KAAK,eACrB,QAASV,CACV,CAAA,CAAC,CACH,CAED,WAAW,oBAAoB5B,EAAO,CACpCe,GAAuBf,CAAK,CAC7B,CAEH,CAEAvN,EAAgBkP,GAAW,eAAgBzL,EAAY,EAEvDzD,EAAgBkP,GAAW,YAAa,WAAW","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}