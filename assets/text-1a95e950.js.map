{"version":3,"file":"text-1a95e950.js","sources":["../../src/dash-panels/text.vue"],"sourcesContent":["<template lang=\"pug\">\n.text-panel-element(:class=\"{absolute: hasHeight}\")\n  .scrollable\n    .curate-content.markdown(\n      v-if=\"readmeContent\"\n      v-html=\"readmeContent\"\n    )\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\nimport markdown from 'markdown-it'\n\nimport { FileSystemConfig } from '@/Globals'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\n\nconst mdRenderer = new markdown({\n  html: true,\n  linkify: true,\n  typographer: true,\n})\n\nexport default defineComponent({\n  name: 'TextPanel',\n  props: {\n    fileSystemConfig: { type: Object as PropType<FileSystemConfig>, required: true },\n    subfolder: { type: String, required: true },\n    files: { type: Array, required: true },\n    config: { type: Object as any, required: true },\n  },\n  data: () => {\n    return {\n      readmeContent: '',\n      hasHeight: false,\n    }\n  },\n  async mounted() {\n    try {\n      // if height is defined, honor it. Otherwise, panel will stretch to fit content\n      this.hasHeight = !!this.config.height\n\n      const fileApi = new HTTPFileSystem(this.fileSystemConfig)\n      const filename = `${this.subfolder}/${this.config.file}`\n      const text = await fileApi.getFileText(filename)\n      this.readmeContent = mdRenderer.render(text)\n    } catch (e: any) {\n      console.error({ e })\n      let error = '' + e\n      if (e.statusText) error = e.statusText\n\n      this.readmeContent = `${this.config.file}: ${error}`\n    }\n\n    this.$emit('isLoaded')\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.text-panel-element {\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.text-panel-element.absolute {\n  position: absolute;\n}\n\n.scrollable {\n  overflow: auto;\n  height: 100%;\n  width: 100%;\n}\n</style>\n"],"names":["mdRenderer","markdown","_sfc_main","defineComponent","fileApi","HTTPFileSystem","filename","text","e","error"],"mappings":"wIAkBA,MAAAA,EAAA,IAAAC,EAAA,CACA,KAAA,GACA,QAAA,GACA,YAAA,EACA,CAAA,EAEAC,EAAAC,EAAA,CACA,KAAA,YACA,MAAA,CACA,iBAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,UAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,MAAA,CAAA,KAAA,MAAA,SAAA,EAAA,EACA,OAAA,CAAA,KAAA,OAAA,SAAA,EAAA,CACA,EACA,KAAA,KACA,CACA,cAAA,GACA,UAAA,EAAA,GAGA,MAAA,SAAA,CACA,GAAA,CAEA,KAAA,UAAA,CAAA,CAAA,KAAA,OAAA,OAEA,MAAAC,EAAA,IAAAC,EAAA,KAAA,gBAAA,EACAC,EAAA,GAAA,KAAA,SAAA,IAAA,KAAA,OAAA,IAAA,GACAC,EAAA,MAAAH,EAAA,YAAAE,CAAA,EACA,KAAA,cAAAN,EAAA,OAAAO,CAAA,QACAC,EAAA,CACA,QAAA,MAAA,CAAA,EAAAA,CAAA,CAAA,EACA,IAAAC,EAAA,GAAAD,EACAA,EAAA,aAAAC,EAAAD,EAAA,YAEA,KAAA,cAAA,GAAA,KAAA,OAAA,IAAA,KAAAC,CAAA,EACA,CAEA,KAAA,MAAA,UAAA,CACA,CACA,CAAA"}