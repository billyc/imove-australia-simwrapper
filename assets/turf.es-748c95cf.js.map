{"version":3,"file":"turf.es-748c95cf.js","sources":["../../node_modules/@turf/turf/turf.es.js"],"sourcesContent":["/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\nvar main_es$1 = Object.freeze({\n\tearthRadius: earthRadius,\n\tfactors: factors,\n\tunitsFactors: unitsFactors,\n\tareaFactors: areaFactors,\n\tfeature: feature,\n\tgeometry: geometry,\n\tpoint: point,\n\tpoints: points,\n\tpolygon: polygon,\n\tpolygons: polygons,\n\tlineString: lineString,\n\tlineStrings: lineStrings,\n\tfeatureCollection: featureCollection,\n\tmultiLineString: multiLineString,\n\tmultiPoint: multiPoint,\n\tmultiPolygon: multiPolygon,\n\tgeometryCollection: geometryCollection,\n\tround: round,\n\tradiansToLength: radiansToLength,\n\tlengthToRadians: lengthToRadians,\n\tlengthToDegrees: lengthToDegrees,\n\tbearingToAzimuth: bearingToAzimuth,\n\tradiansToDegrees: radiansToDegrees,\n\tdegreesToRadians: degreesToRadians,\n\tconvertLength: convertLength,\n\tconvertArea: convertArea,\n\tisNumber: isNumber,\n\tisObject: isObject,\n\tvalidateBBox: validateBBox,\n\tvalidateId: validateId,\n\tradians2degrees: radians2degrees,\n\tdegrees2radians: degrees2radians,\n\tdistanceToDegrees: distanceToDegrees,\n\tdistanceToRadians: distanceToRadians,\n\tradiansToDistance: radiansToDistance,\n\tbearingToAngle: bearingToAngle,\n\tconvertDistance: convertDistance\n});\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry$$1, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry$$1 = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry$$1 === null) continue;\n            coords = geometry$$1.coordinates;\n            var geomType = geometry$$1.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry$$1.geometries.length; j++)\n                    coordEach(geometry$$1.geometries[j], callback, excludeWrapCoord);\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i].properties, i);\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i], i);\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry$$1, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry$$1 = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry$$1 === null) {\n                callback(null, featureIndex, featureProperties, featureBBox, featureId);\n                continue;\n            }\n            switch (geometry$$1.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                callback(geometry$$1, featureIndex, featureProperties, featureBBox, featureId);\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry$$1.geometries.length; j++) {\n                    callback(geometry$$1.geometries[j], featureIndex, featureProperties, featureBBox, featureId);\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry$$1, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry$$1 === null) ? null : geometry$$1.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            callback(feature(geometry$$1, properties, {bbox: bbox, id: id}), featureIndex, 0);\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        geometry$$1.coordinates.forEach(function (coordinate, multiFeatureIndex) {\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            callback(feature(geom, properties), featureIndex, multiFeatureIndex);\n        });\n\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        coordReduce(feature$$1, function (previousCoords, currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n            segmentIndex++;\n            return currentCoord;\n        });\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0);\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex);\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n\n\n\nvar main_es = Object.freeze({\n\tcoordEach: coordEach,\n\tcoordReduce: coordReduce,\n\tpropEach: propEach,\n\tpropReduce: propReduce,\n\tfeatureEach: featureEach,\n\tfeatureReduce: featureReduce,\n\tcoordAll: coordAll,\n\tgeomEach: geomEach,\n\tgeomReduce: geomReduce,\n\tflattenEach: flattenEach,\n\tflattenReduce: flattenReduce,\n\tsegmentEach: segmentEach,\n\tsegmentReduce: segmentReduce,\n\tlineEach: lineEach,\n\tlineReduce: lineReduce\n});\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(obj) {\n    if (!obj) throw new Error('obj is required');\n\n    var coordinates = getCoords(obj);\n\n    // getCoord() must contain at least two numbers (Point)\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return coordinates;\n    } else {\n        throw new Error('Coordinate is not a valid Point');\n    }\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array of numbers\n *\n * @name getCoords\n * @param {Array<number>|Geometry|Feature} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coord = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(obj) {\n    if (!obj) throw new Error('obj is required');\n    var coordinates;\n\n    // Array of numbers\n    if (obj.length) {\n        coordinates = obj;\n\n    // Geometry Object\n    } else if (obj.coordinates) {\n        coordinates = obj.coordinates;\n\n    // Feature\n    } else if (obj.geometry && obj.geometry.coordinates) {\n        coordinates = obj.geometry.coordinates;\n    }\n    // Checks if coordinates contains a number\n    if (coordinates) {\n        containsNumber(coordinates);\n        return coordinates;\n    }\n    throw new Error('No valid coordinates');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature$$1, type, name) {\n    if (!feature$$1) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature$$1 || feature$$1.type !== 'Feature' || !feature$$1.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature$$1.geometry || feature$$1.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature$$1.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection$$1, type, name) {\n    if (!featureCollection$$1) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection$$1 || featureCollection$$1.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection$$1.features.length; i++) {\n        var feature$$1 = featureCollection$$1.features[i];\n        if (!feature$$1 || feature$$1.type !== 'Feature' || !feature$$1.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature$$1.geometry || feature$$1.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature$$1.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\n\n\n\nvar main_es$2 = Object.freeze({\n\tgetCoord: getCoord,\n\tgetCoords: getCoords,\n\tcontainsNumber: containsNumber,\n\tgeojsonType: geojsonType,\n\tfeatureOf: featureOf,\n\tcollectionOf: collectionOf,\n\tgetGeom: getGeom,\n\tgetGeomType: getGeomType,\n\tgetType: getType\n});\n\n/**\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n */\n\n/**\n * Compute the isocontour(s) of a scalar 2D field given\n * a certain threshold by applying the Marching Squares\n * Algorithm. The function returns a list of path coordinates\n */\nvar defaultSettings = {\n    successCallback: null,\n    verbose: false\n};\n\nvar settings = {};\n\nfunction isoContours(data, threshold, options) {\n    /* process options */\n    options = options ? options : {};\n\n    var optionKeys = Object.keys(defaultSettings);\n\n    for (var i = 0; i < optionKeys.length; i++) {\n        var key = optionKeys[i];\n        var val = options[key];\n        val = ((typeof val !== 'undefined') && (val !== null)) ? val : defaultSettings[key];\n\n        settings[key] = val;\n    }\n\n    if (settings.verbose)\n        console.log('MarchingSquaresJS-isoContours: computing isocontour for ' + threshold);\n\n    var ret = contourGrid2Paths(computeContourGrid(data, threshold));\n\n    if (typeof settings.successCallback === 'function')\n        settings.successCallback(ret);\n\n    return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/*\n################################\nIsocontour implementation below\n################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n    return (y - y0) / (y1 - y0);\n}\n\n/* compute the isocontour 4-bit grid */\nfunction computeContourGrid(data, threshold) {\n    var rows = data.length - 1;\n    var cols = data[0].length - 1;\n    var ContourGrid = { rows: rows, cols: cols, cells: [] };\n\n    for (var j = 0; j < rows; ++j) {\n        ContourGrid.cells[j] = [];\n        for (var i = 0; i < cols; ++i) {\n            /* compose the 4-bit corner representation */\n            var cval = 0;\n\n            var tl = data[j + 1][i];\n            var tr = data[j + 1][i + 1];\n            var br = data[j][i + 1];\n            var bl = data[j][i];\n\n            if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n                continue;\n            }\n            cval |= ((tl >= threshold) ? 8 : 0);\n            cval |= ((tr >= threshold) ? 4 : 0);\n            cval |= ((br >= threshold) ? 2 : 0);\n            cval |= ((bl >= threshold) ? 1 : 0);\n\n            /* resolve ambiguity for cval == 5 || 10 via averaging */\n            var flipped = false;\n            if (cval === 5 || cval === 10) {\n                var average = (tl + tr + br + bl) / 4;\n                if (cval === 5 && (average < threshold)) {\n                    cval = 10;\n                    flipped = true;\n                } else if (cval === 10 && (average < threshold)) {\n                    cval = 5;\n                    flipped = true;\n                }\n            }\n\n            /* add cell to ContourGrid if it contains edges */\n            if (cval !== 0 && cval !== 15) {\n                var top, bottom, left, right;\n                top = bottom = left = right = 0.5;\n                /* interpolate edges of cell */\n                if (cval === 1) {\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                } else if (cval === 2) {\n                    bottom  = interpolateX(threshold, bl, br);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                } else if (cval === 3) {\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                } else if (cval === 4) {\n                    top     = interpolateX(threshold, tl, tr);\n                    right   = interpolateX(threshold, br, tr);\n                } else if (cval === 5) {\n                    top     = interpolateX(threshold, tl, tr);\n                    right   = interpolateX(threshold, br, tr);\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                } else if (cval === 6) {\n                    bottom  = interpolateX(threshold, bl, br);\n                    top     = interpolateX(threshold, tl, tr);\n                } else if (cval === 7) {\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                    top     = interpolateX(threshold, tl, tr);\n                } else if (cval === 8) {\n                    left    = interpolateX(threshold, bl, tl);\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                } else if (cval === 9) {\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                } else if (cval === 10) {\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                    bottom  = interpolateX(threshold, bl, br);\n                    left    = interpolateX(threshold, bl, tl);\n                } else if (cval === 11) {\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                } else if (cval === 12) {\n                    left    = interpolateX(threshold, bl, tl);\n                    right   = interpolateX(threshold, br, tr);\n                } else if (cval === 13) {\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                    right   = interpolateX(threshold, br, tr);\n                } else if (cval === 14) {\n                    left    = interpolateX(threshold, bl, tl);\n                    bottom  = interpolateX(threshold, bl, br);\n                } else {\n                    console.log('MarchingSquaresJS-isoContours: Illegal cval detected: ' + cval);\n                }\n                ContourGrid.cells[j][i] = {\n                    cval: cval,\n                    flipped: flipped,\n                    top: top,\n                    right: right,\n                    bottom: bottom,\n                    left: left\n                };\n            }\n\n        }\n    }\n\n    return ContourGrid;\n}\n\nfunction isSaddle(cell) {\n    return cell.cval === 5 || cell.cval === 10;\n}\n\nfunction isTrivial(cell) {\n    return cell.cval === 0 || cell.cval === 15;\n}\n\nfunction clearCell(cell) {\n    if ((!isTrivial(cell)) && (cell.cval !== 5) && (cell.cval !== 10)) {\n        cell.cval = 15;\n    }\n}\n\nfunction getXY(cell, edge) {\n    if (edge === 'top') {\n        return [cell.top, 1.0];\n    } else if (edge === 'bottom') {\n        return [cell.bottom, 0.0];\n    } else if (edge === 'right') {\n        return [1.0, cell.right];\n    } else if (edge === 'left') {\n        return [0.0, cell.left];\n    }\n}\n\nfunction contourGrid2Paths(grid) {\n    var paths = [];\n    var path_idx = 0;\n    var rows = grid.rows;\n    var cols = grid.cols;\n    var epsilon = 1e-7;\n\n    grid.cells.forEach(function (g, j) {\n        g.forEach(function (gg, i) {\n            if ((typeof gg !== 'undefined') && (!isSaddle(gg)) && (!isTrivial(gg))) {\n                var p = tracePath(grid.cells, j, i);\n                var merged = false;\n                /* we may try to merge paths at this point */\n                if (p.info === 'mergeable') {\n                    /*\n            search backwards through the path array to find an entry\n            that starts with where the current path ends...\n          */\n                    var x = p.path[p.path.length - 1][0],\n                        y = p.path[p.path.length - 1][1];\n\n                    for (var k = path_idx - 1; k >= 0; k--) {\n                        if ((Math.abs(paths[k][0][0] - x) <= epsilon) && (Math.abs(paths[k][0][1] - y) <= epsilon)) {\n                            for (var l = p.path.length - 2; l >= 0; --l) {\n                                paths[k].unshift(p.path[l]);\n                            }\n                            merged = true;\n                            break;\n                        }\n                    }\n                }\n                if (!merged)\n                    paths[path_idx++] = p.path;\n            }\n        });\n    });\n\n    return paths;\n}\n\n/*\n  construct consecutive line segments from starting cell by\n  walking arround the enclosed area clock-wise\n  */\nfunction tracePath(grid, j, i) {\n    var maxj = grid.length;\n    var p = [];\n    var dxContour = [0, 0, 1, 1, 0, 0, 0, 0, -1, 0, 1, 1, -1, 0, -1, 0];\n    var dyContour = [0, -1, 0, 0, 1, 1, 1, 1, 0, -1, 0, 0, 0, -1, 0, 0];\n    var dx, dy;\n    var startEdge = ['none', 'left', 'bottom', 'left', 'right', 'none', 'bottom', 'left', 'top', 'top', 'none', 'top', 'right', 'right', 'bottom', 'none'];\n    var nextEdge  = ['none', 'bottom', 'right', 'right', 'top', 'top', 'top', 'top', 'left', 'bottom', 'right', 'right', 'left', 'bottom', 'left', 'none'];\n    var edge;\n\n    var startCell   = grid[j][i];\n    var currentCell = grid[j][i];\n\n    var cval = currentCell.cval;\n    var edge = startEdge[cval];\n\n    var pt = getXY(currentCell, edge);\n\n    /* push initial segment */\n    p.push([i + pt[0], j + pt[1]]);\n    edge = nextEdge[cval];\n    pt = getXY(currentCell, edge);\n    p.push([i + pt[0], j + pt[1]]);\n    clearCell(currentCell);\n\n    /* now walk arround the enclosed area in clockwise-direction */\n    var k = i + dxContour[cval];\n    var l = j + dyContour[cval];\n    var prev_cval = cval;\n\n    while ((k >= 0) && (l >= 0) && (l < maxj) && ((k != i) || (l != j))) {\n        currentCell = grid[l][k];\n        if (typeof currentCell === 'undefined') { /* path ends here */\n            //console.log(k + \" \" + l + \" is undefined, stopping path!\");\n            break;\n        }\n        cval = currentCell.cval;\n        if ((cval === 0) || (cval === 15)) {\n            return { path: p, info: 'mergeable' };\n        }\n        edge  = nextEdge[cval];\n        dx    = dxContour[cval];\n        dy    = dyContour[cval];\n        if ((cval === 5) || (cval === 10)) {\n            /* select upper or lower band, depending on previous cells cval */\n            if (cval === 5) {\n                if (currentCell.flipped) { /* this is actually a flipped case 10 */\n                    if (dyContour[prev_cval] === -1) {\n                        edge  = 'left';\n                        dx    = -1;\n                        dy    = 0;\n                    } else {\n                        edge  = 'right';\n                        dx    = 1;\n                        dy    = 0;\n                    }\n                } else { /* real case 5 */\n                    if (dxContour[prev_cval] === -1) {\n                        edge  = 'bottom';\n                        dx    = 0;\n                        dy    = -1;\n                    }\n                }\n            } else if (cval === 10) {\n                if (currentCell.flipped) { /* this is actually a flipped case 5 */\n                    if (dxContour[prev_cval] === -1) {\n                        edge  = 'top';\n                        dx    = 0;\n                        dy    = 1;\n                    } else {\n                        edge  = 'bottom';\n                        dx    = 0;\n                        dy    = -1;\n                    }\n                } else {  /* real case 10 */\n                    if (dyContour[prev_cval] === 1) {\n                        edge  = 'left';\n                        dx    = -1;\n                        dy    = 0;\n                    }\n                }\n            }\n        }\n        pt = getXY(currentCell, edge);\n        p.push([k + pt[0], l + pt[1]]);\n        clearCell(currentCell);\n        k += dx;\n        l += dy;\n        prev_cval = cval;\n    }\n\n    return { path: p, info: 'closed' };\n}\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var flip = options.flip;\n    var flags = options.flags;\n\n    // validation\n    collectionOf(grid, 'Point', 'input must contain Points');\n\n    var pointsMatrix = sortPointsByLatLng(grid, flip);\n\n    var matrix = [];\n    // create property matrix from sorted points\n    // looping order matters here\n    for (var r = 0; r < pointsMatrix.length; r++) {\n        var pointRow = pointsMatrix[r];\n        var row = [];\n        for (var c = 0; c < pointRow.length; c++) {\n            var point$$1 = pointRow[c];\n            // Check if zProperty exist\n            if (point$$1.properties[zProperty]) row.push(point$$1.properties[zProperty]);\n            else row.push(0);\n            // add flags\n            if (flags === true) point$$1.properties.matrixPosition = [r, c];\n        }\n        matrix.push(row);\n    }\n\n    return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points$$1, flip) {\n    var pointsByLatitude = {};\n\n    // divide points by rows with the same latitude\n    featureEach(points$$1, function (point$$1) {\n        var lat = getCoords(point$$1)[1];\n        if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n        pointsByLatitude[lat].push(point$$1);\n    });\n\n    // sort points (with the same latitude) by longitude\n    var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n        var row = pointsByLatitude[lat];\n        var rowOrderedByLongitude = row.sort(function (a, b) {\n            return getCoords(a)[0] - getCoords(b)[0];\n        });\n        return rowOrderedByLongitude;\n    });\n\n    // sort rows (of points with the same latitude) by latitude\n    var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n        if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n        else return getCoords(b[0])[1] - getCoords(a[0])[1];\n    });\n\n    return pointMatrix;\n}\n\n/**\n * Takes a grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates [isolines](http://en.wikipedia.org/wiki/Isoline).\n *\n * @name isolines\n * @param {FeatureCollection<Point>} pointGrid input points\n * @param {Array<number>} breaks values of `zProperty` where to draw isolines\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isolines\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoline;\n * the breaks array will define the order in which the isolines are created\n * @returns {FeatureCollection<MultiLineString>} a FeatureCollection of {@link MultiLineString} features representing isolines\n * @example\n * // create a grid of points with random z-values in their properties\n * var extent = [0, 30, 20, 50];\n * var cellWidth = 100;\n * var pointGrid = turf.pointGrid(extent, cellWidth, {units: 'miles'});\n *\n * for (var i = 0; i < pointGrid.features.length; i++) {\n *     pointGrid.features[i].properties.temperature = Math.random() * 10;\n * }\n * var breaks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n *\n * var lines = turf.isolines(pointGrid, breaks, {zProperty: 'temperature'});\n *\n * //addToMap\n * var addToMap = [lines];\n */\nfunction isolines(pointGrid, breaks, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var commonProperties = options.commonProperties || {};\n    var breaksProperties = options.breaksProperties || [];\n\n    // Input validation\n    collectionOf(pointGrid, 'Point', 'Input must contain Points');\n    if (!breaks) throw new Error('breaks is required');\n    if (!Array.isArray(breaks)) throw new Error('breaks must be an Array');\n    if (!isObject(commonProperties)) throw new Error('commonProperties must be an Object');\n    if (!Array.isArray(breaksProperties)) throw new Error('breaksProperties must be an Array');\n\n    // Isoline methods\n    var matrix = gridToMatrix(pointGrid, {zProperty: zProperty, flip: true});\n    var createdIsoLines = createIsoLines(matrix, breaks, zProperty, commonProperties, breaksProperties);\n    var scaledIsolines = rescaleIsolines(createdIsoLines, matrix, pointGrid);\n\n    return featureCollection(scaledIsolines);\n}\n\n/**\n * Creates the isolines lines (featuresCollection of MultiLineString features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the isolines function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} zProperty name of the z-values property\n * @param {Object} [commonProperties={}] GeoJSON properties passed to ALL isolines\n * @param {Object} [breaksProperties=[]] GeoJSON properties passed to the correspondent isoline\n * @returns {Array<MultiLineString>} isolines\n */\nfunction createIsoLines(matrix, breaks, zProperty, commonProperties, breaksProperties) {\n    var results = [];\n    for (var i = 1; i < breaks.length; i++) {\n        var threshold = +breaks[i]; // make sure it's a number\n\n        var properties = Object.assign(\n            {},\n            commonProperties,\n            breaksProperties[i]\n        );\n        properties[zProperty] = threshold;\n        var isoline = multiLineString(isoContours(matrix, threshold), properties);\n\n        results.push(isoline);\n    }\n    return results;\n}\n\n/**\n * Translates and scales isolines\n *\n * @private\n * @param {Array<MultiLineString>} createdIsoLines to be rescaled\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<MultiLineString>} isolines\n */\nfunction rescaleIsolines(createdIsoLines, matrix, points$$1) {\n\n    // get dimensions (on the map) of the original grid\n    var gridBbox = bbox(points$$1); // [ minX, minY, maxX, maxY ]\n    var originalWidth = gridBbox[2] - gridBbox[0];\n    var originalHeigth = gridBbox[3] - gridBbox[1];\n\n    // get origin, which is the first point of the last row on the rectangular data on the map\n    var x0 = gridBbox[0];\n    var y0 = gridBbox[1];\n\n    // get number of cells per side\n    var matrixWidth = matrix[0].length - 1;\n    var matrixHeight = matrix.length - 1;\n\n    // calculate the scaling factor between matrix and rectangular grid on the map\n    var scaleX = originalWidth / matrixWidth;\n    var scaleY = originalHeigth / matrixHeight;\n\n    var resize = function (point$$1) {\n        point$$1[0] = point$$1[0] * scaleX + x0;\n        point$$1[1] = point$$1[1] * scaleY + y0;\n    };\n\n    // resize and shift each point/line of the createdIsoLines\n    createdIsoLines.forEach(function (isoline) {\n        coordEach(isoline, resize);\n    });\n    return createdIsoLines;\n}\n\nvar quickselect = partialSort;\n\n// Floyd-Rivest selection algorithm:\n// Rearrange items so that all items in the [left, k] range are smaller than all items in (k, right];\n// The k-th element will have the (k - left + 1)th smallest value in [left, right]\n\nfunction partialSort(arr, k, left, right, compare) {\n    left = left || 0;\n    right = right || (arr.length - 1);\n    compare = compare || defaultCompare;\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            partialSort(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar rbush_1 = rbush;\n\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects$1(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects$1(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects$1(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects$1(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects$1(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar twoProduct_1 = twoProduct;\n\nvar SPLITTER = +(Math.pow(2, 27) + 1.0);\n\nfunction twoProduct(a, b, result) {\n  var x = a * b;\n\n  var c = SPLITTER * a;\n  var abig = c - a;\n  var ahi = c - abig;\n  var alo = a - ahi;\n\n  var d = SPLITTER * b;\n  var bbig = d - b;\n  var bhi = d - bbig;\n  var blo = b - bhi;\n\n  var err1 = x - (ahi * bhi);\n  var err2 = err1 - (alo * bhi);\n  var err3 = err2 - (ahi * blo);\n\n  var y = alo * blo - err3;\n\n  if(result) {\n    result[0] = y;\n    result[1] = x;\n    return result\n  }\n\n  return [ y, x ]\n}\n\nvar robustSum = linearExpansionSum;\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b;\n  var bv = x - a;\n  var av = x - bv;\n  var br = b - bv;\n  var ar = a - av;\n  var y = ar + br;\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction linearExpansionSum(e, f) {\n  var ne = e.length|0;\n  var nf = f.length|0;\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], f[0])\n  }\n  var n = ne + nf;\n  var g = new Array(n);\n  var count = 0;\n  var eptr = 0;\n  var fptr = 0;\n  var abs = Math.abs;\n  var ei = e[eptr];\n  var ea = abs(ei);\n  var fi = f[fptr];\n  var fa = abs(fi);\n  var a, b;\n  if(ea < fa) {\n    b = ei;\n    eptr += 1;\n    if(eptr < ne) {\n      ei = e[eptr];\n      ea = abs(ei);\n    }\n  } else {\n    b = fi;\n    fptr += 1;\n    if(fptr < nf) {\n      fi = f[fptr];\n      fa = abs(fi);\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei;\n    eptr += 1;\n    if(eptr < ne) {\n      ei = e[eptr];\n      ea = abs(ei);\n    }\n  } else {\n    a = fi;\n    fptr += 1;\n    if(fptr < nf) {\n      fi = f[fptr];\n      fa = abs(fi);\n    }\n  }\n  var x = a + b;\n  var bv = x - a;\n  var y = b - bv;\n  var q0 = y;\n  var q1 = x;\n  var _x, _bv, _av, _br, _ar;\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei;\n      eptr += 1;\n      if(eptr < ne) {\n        ei = e[eptr];\n        ea = abs(ei);\n      }\n    } else {\n      a = fi;\n      fptr += 1;\n      if(fptr < nf) {\n        fi = f[fptr];\n        fa = abs(fi);\n      }\n    }\n    b = q0;\n    x = a + b;\n    bv = x - a;\n    y = b - bv;\n    if(y) {\n      g[count++] = y;\n    }\n    _x = q1 + x;\n    _bv = _x - q1;\n    _av = _x - _bv;\n    _br = x - _bv;\n    _ar = q1 - _av;\n    q0 = _ar + _br;\n    q1 = _x;\n  }\n  while(eptr < ne) {\n    a = ei;\n    b = q0;\n    x = a + b;\n    bv = x - a;\n    y = b - bv;\n    if(y) {\n      g[count++] = y;\n    }\n    _x = q1 + x;\n    _bv = _x - q1;\n    _av = _x - _bv;\n    _br = x - _bv;\n    _ar = q1 - _av;\n    q0 = _ar + _br;\n    q1 = _x;\n    eptr += 1;\n    if(eptr < ne) {\n      ei = e[eptr];\n    }\n  }\n  while(fptr < nf) {\n    a = fi;\n    b = q0;\n    x = a + b;\n    bv = x - a;\n    y = b - bv;\n    if(y) {\n      g[count++] = y;\n    } \n    _x = q1 + x;\n    _bv = _x - q1;\n    _av = _x - _bv;\n    _br = x - _bv;\n    _ar = q1 - _av;\n    q0 = _ar + _br;\n    q1 = _x;\n    fptr += 1;\n    if(fptr < nf) {\n      fi = f[fptr];\n    }\n  }\n  if(q0) {\n    g[count++] = q0;\n  }\n  if(q1) {\n    g[count++] = q1;\n  }\n  if(!count) {\n    g[count++] = 0.0;  \n  }\n  g.length = count;\n  return g\n}\n\nvar twoSum = fastTwoSum;\n\nfunction fastTwoSum(a, b, result) {\n\tvar x = a + b;\n\tvar bv = x - a;\n\tvar av = x - bv;\n\tvar br = b - bv;\n\tvar ar = a - av;\n\tif(result) {\n\t\tresult[0] = ar + br;\n\t\tresult[1] = x;\n\t\treturn result\n\t}\n\treturn [ar+br, x]\n}\n\nvar robustScale = scaleLinearExpansion;\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length;\n  if(n === 1) {\n    var ts = twoProduct_1(e[0], scale);\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n);\n  var q = [0.1, 0.1];\n  var t = [0.1, 0.1];\n  var count = 0;\n  twoProduct_1(e[0], scale, q);\n  if(q[0]) {\n    g[count++] = q[0];\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct_1(e[i], scale, t);\n    var pq = q[1];\n    twoSum(pq, t[0], q);\n    if(q[0]) {\n      g[count++] = q[0];\n    }\n    var a = t[1];\n    var b = q[1];\n    var x = a + b;\n    var bv = x - a;\n    var y = b - bv;\n    q[1] = x;\n    if(y) {\n      g[count++] = y;\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1];\n  }\n  if(count === 0) {\n    g[count++] = 0.0;\n  }\n  g.length = count;\n  return g\n}\n\nvar robustDiff = robustSubtract;\n\n//Easy case: Add two scalars\nfunction scalarScalar$1(a, b) {\n  var x = a + b;\n  var bv = x - a;\n  var av = x - bv;\n  var br = b - bv;\n  var ar = a - av;\n  var y = ar + br;\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction robustSubtract(e, f) {\n  var ne = e.length|0;\n  var nf = f.length|0;\n  if(ne === 1 && nf === 1) {\n    return scalarScalar$1(e[0], -f[0])\n  }\n  var n = ne + nf;\n  var g = new Array(n);\n  var count = 0;\n  var eptr = 0;\n  var fptr = 0;\n  var abs = Math.abs;\n  var ei = e[eptr];\n  var ea = abs(ei);\n  var fi = -f[fptr];\n  var fa = abs(fi);\n  var a, b;\n  if(ea < fa) {\n    b = ei;\n    eptr += 1;\n    if(eptr < ne) {\n      ei = e[eptr];\n      ea = abs(ei);\n    }\n  } else {\n    b = fi;\n    fptr += 1;\n    if(fptr < nf) {\n      fi = -f[fptr];\n      fa = abs(fi);\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei;\n    eptr += 1;\n    if(eptr < ne) {\n      ei = e[eptr];\n      ea = abs(ei);\n    }\n  } else {\n    a = fi;\n    fptr += 1;\n    if(fptr < nf) {\n      fi = -f[fptr];\n      fa = abs(fi);\n    }\n  }\n  var x = a + b;\n  var bv = x - a;\n  var y = b - bv;\n  var q0 = y;\n  var q1 = x;\n  var _x, _bv, _av, _br, _ar;\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei;\n      eptr += 1;\n      if(eptr < ne) {\n        ei = e[eptr];\n        ea = abs(ei);\n      }\n    } else {\n      a = fi;\n      fptr += 1;\n      if(fptr < nf) {\n        fi = -f[fptr];\n        fa = abs(fi);\n      }\n    }\n    b = q0;\n    x = a + b;\n    bv = x - a;\n    y = b - bv;\n    if(y) {\n      g[count++] = y;\n    }\n    _x = q1 + x;\n    _bv = _x - q1;\n    _av = _x - _bv;\n    _br = x - _bv;\n    _ar = q1 - _av;\n    q0 = _ar + _br;\n    q1 = _x;\n  }\n  while(eptr < ne) {\n    a = ei;\n    b = q0;\n    x = a + b;\n    bv = x - a;\n    y = b - bv;\n    if(y) {\n      g[count++] = y;\n    }\n    _x = q1 + x;\n    _bv = _x - q1;\n    _av = _x - _bv;\n    _br = x - _bv;\n    _ar = q1 - _av;\n    q0 = _ar + _br;\n    q1 = _x;\n    eptr += 1;\n    if(eptr < ne) {\n      ei = e[eptr];\n    }\n  }\n  while(fptr < nf) {\n    a = fi;\n    b = q0;\n    x = a + b;\n    bv = x - a;\n    y = b - bv;\n    if(y) {\n      g[count++] = y;\n    } \n    _x = q1 + x;\n    _bv = _x - q1;\n    _av = _x - _bv;\n    _br = x - _bv;\n    _ar = q1 - _av;\n    q0 = _ar + _br;\n    q1 = _x;\n    fptr += 1;\n    if(fptr < nf) {\n      fi = -f[fptr];\n    }\n  }\n  if(q0) {\n    g[count++] = q0;\n  }\n  if(q1) {\n    g[count++] = q1;\n  }\n  if(!count) {\n    g[count++] = 0.0;  \n  }\n  g.length = count;\n  return g\n}\n\nvar orientation_1 = createCommonjsModule(function (module) {\nvar NUM_EXPAND = 5;\n\nvar EPSILON     = 1.1102230246251565e-16;\nvar ERRBOUND3   = (3.0 + 16.0 * EPSILON) * EPSILON;\nvar ERRBOUND4   = (7.0 + 56.0 * EPSILON) * EPSILON;\n\nfunction cofactor(m, c) {\n  var result = new Array(m.length-1);\n  for(var i=1; i<m.length; ++i) {\n    var r = result[i-1] = new Array(m.length-1);\n    for(var j=0,k=0; j<m.length; ++j) {\n      if(j === c) {\n        continue\n      }\n      r[k++] = m[i][j];\n    }\n  }\n  return result\n}\n\nfunction matrix(n) {\n  var result = new Array(n);\n  for(var i=0; i<n; ++i) {\n    result[i] = new Array(n);\n    for(var j=0; j<n; ++j) {\n      result[i][j] = [\"m\", j, \"[\", (n-i-1), \"]\"].join(\"\");\n    }\n  }\n  return result\n}\n\nfunction sign(n) {\n  if(n & 1) {\n    return \"-\"\n  }\n  return \"\"\n}\n\nfunction generateSum(expr) {\n  if(expr.length === 1) {\n    return expr[0]\n  } else if(expr.length === 2) {\n    return [\"sum(\", expr[0], \",\", expr[1], \")\"].join(\"\")\n  } else {\n    var m = expr.length>>1;\n    return [\"sum(\", generateSum(expr.slice(0, m)), \",\", generateSum(expr.slice(m)), \")\"].join(\"\")\n  }\n}\n\nfunction determinant(m) {\n  if(m.length === 2) {\n    return [[\"sum(prod(\", m[0][0], \",\", m[1][1], \"),prod(-\", m[0][1], \",\", m[1][0], \"))\"].join(\"\")]\n  } else {\n    var expr = [];\n    for(var i=0; i<m.length; ++i) {\n      expr.push([\"scale(\", generateSum(determinant(cofactor(m, i))), \",\", sign(i), m[0][i], \")\"].join(\"\"));\n    }\n    return expr\n  }\n}\n\nfunction orientation(n) {\n  var pos = [];\n  var neg = [];\n  var m = matrix(n);\n  var args = [];\n  for(var i=0; i<n; ++i) {\n    if((i&1)===0) {\n      pos.push.apply(pos, determinant(cofactor(m, i)));\n    } else {\n      neg.push.apply(neg, determinant(cofactor(m, i)));\n    }\n    args.push(\"m\" + i);\n  }\n  var posExpr = generateSum(pos);\n  var negExpr = generateSum(neg);\n  var funcName = \"orientation\" + n + \"Exact\";\n  var code = [\"function \", funcName, \"(\", args.join(), \"){var p=\", posExpr, \",n=\", negExpr, \",d=sub(p,n);\\\nreturn d[d.length-1];};return \", funcName].join(\"\");\n  var proc = new Function(\"sum\", \"prod\", \"scale\", \"sub\", code);\n  return proc(robustSum, twoProduct_1, robustScale, robustDiff)\n}\n\nvar orientation3Exact = orientation(3);\nvar orientation4Exact = orientation(4);\n\nvar CACHED = [\n  function orientation0() { return 0 },\n  function orientation1() { return 0 },\n  function orientation2(a, b) { \n    return b[0] - a[0]\n  },\n  function orientation3(a, b, c) {\n    var l = (a[1] - c[1]) * (b[0] - c[0]);\n    var r = (a[0] - c[0]) * (b[1] - c[1]);\n    var det = l - r;\n    var s;\n    if(l > 0) {\n      if(r <= 0) {\n        return det\n      } else {\n        s = l + r;\n      }\n    } else if(l < 0) {\n      if(r >= 0) {\n        return det\n      } else {\n        s = -(l + r);\n      }\n    } else {\n      return det\n    }\n    var tol = ERRBOUND3 * s;\n    if(det >= tol || det <= -tol) {\n      return det\n    }\n    return orientation3Exact(a, b, c)\n  },\n  function orientation4(a,b,c,d) {\n    var adx = a[0] - d[0];\n    var bdx = b[0] - d[0];\n    var cdx = c[0] - d[0];\n    var ady = a[1] - d[1];\n    var bdy = b[1] - d[1];\n    var cdy = c[1] - d[1];\n    var adz = a[2] - d[2];\n    var bdz = b[2] - d[2];\n    var cdz = c[2] - d[2];\n    var bdxcdy = bdx * cdy;\n    var cdxbdy = cdx * bdy;\n    var cdxady = cdx * ady;\n    var adxcdy = adx * cdy;\n    var adxbdy = adx * bdy;\n    var bdxady = bdx * ady;\n    var det = adz * (bdxcdy - cdxbdy) \n            + bdz * (cdxady - adxcdy)\n            + cdz * (adxbdy - bdxady);\n    var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz)\n                  + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz)\n                  + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n    var tol = ERRBOUND4 * permanent;\n    if ((det > tol) || (-det > tol)) {\n      return det\n    }\n    return orientation4Exact(a,b,c,d)\n  }\n];\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length];\n  if(!proc) {\n    proc = CACHED[args.length] = orientation(args.length);\n  }\n  return proc.apply(undefined, args)\n}\n\nfunction generateOrientationProc() {\n  while(CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length));\n  }\n  var args = [];\n  var procArgs = [\"slow\"];\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    args.push(\"a\" + i);\n    procArgs.push(\"o\" + i);\n  }\n  var code = [\n    \"function getOrientation(\", args.join(), \"){switch(arguments.length){case 0:case 1:return 0;\"\n  ];\n  for(var i=2; i<=NUM_EXPAND; ++i) {\n    code.push(\"case \", i, \":return o\", i, \"(\", args.slice(0, i).join(), \");\");\n  }\n  code.push(\"}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation\");\n  procArgs.push(code.join(\"\"));\n\n  var proc = Function.apply(undefined, procArgs);\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED));\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i];\n  }\n}\n\ngenerateOrientationProc();\n});\n\nvar monotoneConvexHull2d = monotoneConvexHull2D;\n\nvar orient$1 = orientation_1[3];\n\nfunction monotoneConvexHull2D(points) {\n  var n = points.length;\n\n  if(n < 3) {\n    var result = new Array(n);\n    for(var i=0; i<n; ++i) {\n      result[i] = i;\n    }\n\n    if(n === 2 &&\n       points[0][0] === points[1][0] &&\n       points[0][1] === points[1][1]) {\n      return [0]\n    }\n\n    return result\n  }\n\n  //Sort point indices along x-axis\n  var sorted = new Array(n);\n  for(var i=0; i<n; ++i) {\n    sorted[i] = i;\n  }\n  sorted.sort(function(a,b) {\n    var d = points[a][0]-points[b][0];\n    if(d) {\n      return d\n    }\n    return points[a][1] - points[b][1]\n  });\n\n  //Construct upper and lower hulls\n  var lower = [sorted[0], sorted[1]];\n  var upper = [sorted[0], sorted[1]];\n\n  for(var i=2; i<n; ++i) {\n    var idx = sorted[i];\n    var p   = points[idx];\n\n    //Insert into lower list\n    var m = lower.length;\n    while(m > 1 && orient$1(\n        points[lower[m-2]], \n        points[lower[m-1]], \n        p) <= 0) {\n      m -= 1;\n      lower.pop();\n    }\n    lower.push(idx);\n\n    //Insert into upper list\n    m = upper.length;\n    while(m > 1 && orient$1(\n        points[upper[m-2]], \n        points[upper[m-1]], \n        p) >= 0) {\n      m -= 1;\n      upper.pop();\n    }\n    upper.push(idx);\n  }\n\n  //Merge lists together\n  var result = new Array(upper.length + lower.length - 2);\n  var ptr    = 0;\n  for(var i=0, nl=lower.length; i<nl; ++i) {\n    result[ptr++] = lower[i];\n  }\n  for(var j=upper.length-2; j>0; --j) {\n    result[ptr++] = upper[j];\n  }\n\n  //Return result\n  return result\n}\n\nvar tinyqueue = TinyQueue;\nvar default_1$1 = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare$1;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare$1(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n\ntinyqueue.default = default_1$1;\n\nvar pointInPolygon = function (point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    \n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n\nvar orient = orientation_1[3];\n\nvar concaveman_1 = concaveman;\nvar default_1 = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = rbush_1(16, ['[0]', '[1]', '[0]', '[1]']).load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = rbush_1(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new tinyqueue(null, compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        orient(p1, q1, p2) > 0 !== orient(p1, q1, q2) > 0 &&\n        orient(p2, q2, p1) > 0 !== orient(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    var indices = monotoneConvexHull2d(filtered);\n\n    // return the hull as array of points (rather than indices)\n    var hull = [];\n    for (i = 0; i < indices.length; i++) hull.push(filtered[indices[i]]);\n    return hull;\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nconcaveman_1.default = default_1;\n\n/**\n * Takes a {@link Feature} or a {@link FeatureCollection} and returns a convex hull {@link Polygon}.\n *\n * Internally this uses\n * the [convex-hull](https://github.com/mikolalysenko/convex-hull) module that\n * implements a [monotone chain hull](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain).\n *\n * @name convex\n * @param {GeoJSON} geojson input Feature or FeatureCollection\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.concavity=Infinity] 1 - thin shape. Infinity - convex hull.\n * @returns {Feature<Polygon>} a convex hull\n * @example\n * var points = turf.featureCollection([\n *   turf.point([10.195312, 43.755225]),\n *   turf.point([10.404052, 43.8424511]),\n *   turf.point([10.579833, 43.659924]),\n *   turf.point([10.360107, 43.516688]),\n *   turf.point([10.14038, 43.588348]),\n *   turf.point([10.195312, 43.755225])\n * ]);\n *\n * var hull = turf.convex(points);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nfunction convex(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var concavity = options.concavity || Infinity;\n    var points$$1 = [];\n\n    // Convert all points to flat 2D coordinate Array\n    coordEach(geojson, function (coord) {\n        points$$1.push([coord[0], coord[1]]);\n    });\n    if (!points$$1.length) return null;\n\n    var convexHull = concaveman_1(points$$1, concavity);\n\n    // Convex hull should have at least 3 different vertices in order to create a valid polygon\n    if (convexHull.length > 3) {\n        return polygon([convexHull]);\n    }\n    return null;\n}\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var ignoreBoundary = options.ignoreBoundary;\n\n    // validation\n    if (!point) throw new Error('point is required');\n    if (!polygon) throw new Error('polygon is required');\n\n    var pt = getCoord(point);\n    var polys = getCoords(polygon);\n    var type = (polygon.geometry) ? polygon.geometry.type : polygon.type;\n    var bbox = polygon.bbox;\n\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) return false;\n\n    // normalize to multipolygon\n    if (type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n}\n\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n            ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return bbox[0] <= pt[0] &&\n           bbox[1] <= pt[1] &&\n           bbox[2] >= pt[0] &&\n           bbox[3] >= pt[1];\n}\n\n/**\n * Finds {@link Points} that fall within {@link (Multi)Polygon(s)}.\n *\n * @name pointsWithinPolygon\n * @param {Feauture|FeatureCollection<Point>} points Points as input search\n * @param {FeatureCollection|Geoemtry|Feature<Polygon|MultiPolygon>} polygons Points must be within these (Multi)Polygon(s)\n * @returns {FeatureCollection<Point>} points that land within at least one polygon\n * @example\n * var points = turf.points([\n *     [-46.6318, -23.5523],\n *     [-46.6246, -23.5325],\n *     [-46.6062, -23.5513],\n *     [-46.663, -23.554],\n *     [-46.643, -23.557]\n * ]);\n *\n * var searchWithin = turf.polygon([[\n *     [-46.653,-23.543],\n *     [-46.634,-23.5346],\n *     [-46.613,-23.543],\n *     [-46.614,-23.559],\n *     [-46.631,-23.567],\n *     [-46.653,-23.560],\n *     [-46.653,-23.543]\n * ]]);\n *\n * var ptsWithin = turf.pointsWithinPolygon(points, searchWithin);\n *\n * //addToMap\n * var addToMap = [points, searchWithin, ptsWithin]\n * turf.featureEach(ptsWithin, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction pointsWithinPolygon(points$$1, polygons$$1) {\n    var results = [];\n    geomEach(polygons$$1, function (polygon$$1) {\n        featureEach(points$$1, function (point$$1) {\n            if (booleanPointInPolygon(point$$1, polygon$$1)) results.push(point$$1);\n        });\n    });\n    return featureCollection(results);\n}\n\n//http://en.wikipedia.org/wiki/Delaunay_triangulation\n//https://github.com/ironwallaby/delaunay\n/**\n * Takes a set of {@link Point|points} and creates a\n * [Triangulated Irregular Network](http://en.wikipedia.org/wiki/Triangulated_irregular_network),\n * or a TIN for short, returned as a collection of Polygons. These are often used\n * for developing elevation contour maps or stepped heat visualizations.\n *\n * If an optional z-value property is provided then it is added as properties called `a`, `b`,\n * and `c` representing its value at each of the points that represent the corners of the\n * triangle.\n *\n * @name tin\n * @param {FeatureCollection<Point>} points input points\n * @param {String} [z] name of the property from which to pull z values\n * This is optional: if not given, then there will be no extra data added to the derived triangles.\n * @returns {FeatureCollection<Polygon>} TIN output\n * @example\n * // generate some random point data\n * var points = turf.randomPoint(30, {bbox: [50, 30, 70, 50]});\n *\n * // add a random property to each point between 0 and 9\n * for (var i = 0; i < points.features.length; i++) {\n *   points.features[i].properties.z = ~~(Math.random() * 9);\n * }\n * var tin = turf.tin(points, 'z');\n *\n * //addToMap\n * var addToMap = [tin, points]\n * for (var i = 0; i < tin.features.length; i++) {\n *   var properties  = tin.features[i].properties;\n *   properties.fill = '#' + properties.a + properties.b + properties.c;\n * }\n */\nfunction tin(points$$1, z) {\n    if (points$$1.type !== 'FeatureCollection') throw new Error('points must be a FeatureCollection');\n    //break down points\n    var isPointZ = false;\n    return featureCollection(triangulate(points$$1.features.map(function (p) {\n        var point$$1 = {\n            x: p.geometry.coordinates[0],\n            y: p.geometry.coordinates[1]\n        };\n        if (z) {\n            point$$1.z = p.properties[z];\n        } else if (p.geometry.coordinates.length === 3) {\n            isPointZ = true;\n            point$$1.z = p.geometry.coordinates[2];\n        }\n        return point$$1;\n    })).map(function (triangle) {\n\n        var a = [triangle.a.x, triangle.a.y];\n        var b = [triangle.b.x, triangle.b.y];\n        var c = [triangle.c.x, triangle.c.y];\n        var properties = {};\n\n        // Add z coordinates to triangle points if user passed\n        // them in that way otherwise add it as a property.\n        if (isPointZ) {\n            a.push(triangle.a.z);\n            b.push(triangle.b.z);\n            c.push(triangle.c.z);\n        } else {\n            properties = {\n                a: triangle.a.z,\n                b: triangle.b.z,\n                c: triangle.c.z\n            };\n        }\n\n        return polygon([[a, b, c, a]], properties);\n\n    }));\n}\n\nfunction Triangle(a, b, c) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n\n    var A = b.x - a.x,\n        B = b.y - a.y,\n        C = c.x - a.x,\n        D = c.y - a.y,\n        E = A * (a.x + b.x) + B * (a.y + b.y),\n        F = C * (a.x + c.x) + D * (a.y + c.y),\n        G = 2 * (A * (c.y - b.y) - B * (c.x - b.x)),\n        dx, dy;\n\n    // If the points of the triangle are collinear, then just find the\n    // extremes and use the midpoint as the center of the circumcircle.\n    this.x = (D * E - B * F) / G;\n    this.y = (A * F - C * E) / G;\n    dx = this.x - a.x;\n    dy = this.y - a.y;\n    this.r = dx * dx + dy * dy;\n}\n\nfunction byX(a, b) {\n    return b.x - a.x;\n}\n\nfunction dedup(edges) {\n    var j = edges.length,\n        a, b, i, m, n;\n\n    outer:\n    while (j) {\n        b = edges[--j];\n        a = edges[--j];\n        i = j;\n        while (i) {\n            n = edges[--i];\n            m = edges[--i];\n            if ((a === m && b === n) || (a === n && b === m)) {\n                edges.splice(j, 2);\n                edges.splice(i, 2);\n                j -= 2;\n                continue outer;\n            }\n        }\n    }\n}\n\nfunction triangulate(vertices) {\n    // Bail if there aren't enough vertices to form any triangles.\n    if (vertices.length < 3)\n        return [];\n\n    // Ensure the vertex array is in order of descending X coordinate\n    // (which is needed to ensure a subquadratic runtime), and then find\n    // the bounding box around the points.\n    vertices.sort(byX);\n\n    var i = vertices.length - 1,\n        xmin = vertices[i].x,\n        xmax = vertices[0].x,\n        ymin = vertices[i].y,\n        ymax = ymin,\n        epsilon = 1e-12;\n\n    var a,\n        b,\n        c,\n        A,\n        B,\n        G;\n\n    while (i--) {\n        if (vertices[i].y < ymin)\n            ymin = vertices[i].y;\n        if (vertices[i].y > ymax)\n            ymax = vertices[i].y;\n    }\n\n    //Find a supertriangle, which is a triangle that surrounds all the\n    //vertices. This is used like something of a sentinel value to remove\n    //cases in the main algorithm, and is removed before we return any\n    // results.\n\n    // Once found, put it in the \"open\" list. (The \"open\" list is for\n    // triangles who may still need to be considered; the \"closed\" list is\n    // for triangles which do not.)\n    var dx = xmax - xmin,\n        dy = ymax - ymin,\n        dmax = (dx > dy) ? dx : dy,\n        xmid = (xmax + xmin) * 0.5,\n        ymid = (ymax + ymin) * 0.5,\n        open = [\n            new Triangle({\n                x: xmid - 20 * dmax,\n                y: ymid - dmax,\n                __sentinel: true\n            }, {\n                x: xmid,\n                y: ymid + 20 * dmax,\n                __sentinel: true\n            }, {\n                x: xmid + 20 * dmax,\n                y: ymid - dmax,\n                __sentinel: true\n            }\n            )],\n        closed = [],\n        edges = [],\n        j;\n\n    // Incrementally add each vertex to the mesh.\n    i = vertices.length;\n    while (i--) {\n        // For each open triangle, check to see if the current point is\n        // inside it's circumcircle. If it is, remove the triangle and add\n        // it's edges to an edge list.\n        edges.length = 0;\n        j = open.length;\n        while (j--) {\n            // If this point is to the right of this triangle's circumcircle,\n            // then this triangle should never get checked again. Remove it\n            // from the open list, add it to the closed list, and skip.\n            dx = vertices[i].x - open[j].x;\n            if (dx > 0 && dx * dx > open[j].r) {\n                closed.push(open[j]);\n                open.splice(j, 1);\n                continue;\n            }\n\n            // If not, skip this triangle.\n            dy = vertices[i].y - open[j].y;\n            if (dx * dx + dy * dy > open[j].r)\n                continue;\n\n            // Remove the triangle and add it's edges to the edge list.\n            edges.push(\n                open[j].a, open[j].b,\n                open[j].b, open[j].c,\n                open[j].c, open[j].a\n            );\n            open.splice(j, 1);\n        }\n\n        // Remove any doubled edges.\n        dedup(edges);\n\n        // Add a new triangle for each edge.\n        j = edges.length;\n        while (j) {\n            b = edges[--j];\n            a = edges[--j];\n            c = vertices[i];\n            // Avoid adding colinear triangles (which have error-prone\n            // circumcircles)\n            A = b.x - a.x;\n            B = b.y - a.y;\n            G = 2 * (A * (c.y - b.y) - B * (c.x - b.x));\n            if (Math.abs(G) > epsilon) {\n                open.push(new Triangle(a, b, c));\n            }\n        }\n    }\n\n    // Copy any remaining open triangles to the closed list, and then\n    // remove any triangles that share a vertex with the supertriangle.\n    Array.prototype.push.apply(closed, open);\n\n    i = closed.length;\n    while (i--)\n        if (closed[i].a.__sentinel ||\n            closed[i].b.__sentinel ||\n            closed[i].c.__sentinel)\n            closed.splice(i, 1);\n\n    return closed;\n}\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians((coordinates2[1] - coordinates1[1]));\n    var dLon = degreesToRadians((coordinates2[0] - coordinates1[0]));\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n}\n\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nvar bounds = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16);\nvar floats = new Float64Array(buffer);\nvar uints = new Uint32Array(buffer);\n\nvar hashPoint = function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nvar join = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nvar cut = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\n\nfunction reverse$1(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n// Given a cut topology, combines duplicate arcs.\nvar dedup$1 = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nvar delta = function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n};\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nvar extract = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nvar geometry$1 = function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n};\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nvar topology = function(objects, quantization) {\n  var bbox = bounds(objects = geometry$1(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup$1(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\n/**\n * Merges all connected (non-forking, non-junctioning) line strings into single lineStrings.\n * [LineString] -> LineString|MultiLineString\n *\n * @param {FeatureCollection<LineString|MultiLineString>} geojson Lines to dissolve\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<LineString|MultiLineString>} Dissolved lines\n */\nfunction lineDissolve(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (getType(geojson) !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (!geojson.features.length) throw new Error('geojson is empty');\n\n    // Clone geojson to avoid side effects\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n    var result = [];\n    var lastLine = lineReduce(geojson, function (previousLine, currentLine) {\n        // Attempt to merge this LineString with the other LineStrings, updating\n        // the reference as it is merged with others and grows.\n        var merged = mergeLineStrings(previousLine, currentLine);\n\n        // Accumulate the merged LineString\n        if (merged) return merged;\n\n        // Put the unmerged LineString back into the list\n        else {\n            result.push(previousLine);\n            return currentLine;\n        }\n    });\n    // Append the last line\n    if (lastLine) result.push(lastLine);\n\n    // Return null if no lines were dissolved\n    if (!result.length) return null;\n    // Return LineString if only 1 line was dissolved\n    else if (result.length === 1) return result[0];\n    // Return MultiLineString if multiple lines were dissolved with gaps\n    else return multiLineString(result.map(function (line) { return line.coordinates; }));\n}\n\n// [Number, Number] -> String\nfunction coordId(coord) {\n    return coord[0].toString() + ',' + coord[1].toString();\n}\n\n/**\n * LineString, LineString -> LineString\n *\n * @private\n * @param {Feature<LineString>} a line1\n * @param {Feature<LineString>} b line2\n * @returns {Feature<LineString>|null} Merged LineString\n */\nfunction mergeLineStrings(a, b) {\n    var coords1 = a.geometry.coordinates;\n    var coords2 = b.geometry.coordinates;\n\n    var s1 = coordId(coords1[0]);\n    var e1 = coordId(coords1[coords1.length - 1]);\n    var s2 = coordId(coords2[0]);\n    var e2 = coordId(coords2[coords2.length - 1]);\n\n    // TODO: handle case where more than one of these is true!\n    var coords;\n    if (s1 === e2) coords = coords2.concat(coords1.slice(1));\n    else if (s2 === e1) coords = coords1.concat(coords2.slice(1));\n    else if (s1 === s2) coords = coords1.slice(1).reverse().concat(coords2);\n    else if (e1 === e2) coords = coords1.concat(coords2.reverse().slice(1));\n    else return null;\n\n    return lineString(coords);\n}\n\n/**\n * Dissolves all overlapping (Multi)Polygon\n *\n * @param {FeatureCollection<Polygon|MultiPolygon>} geojson Polygons to dissolve\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<Polygon|MultiPolygon>} Dissolved Polygons\n */\nfunction polygonDissolve(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (getType(geojson) !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (!geojson.features.length) throw new Error('geojson is empty');\n\n    // Clone geojson to avoid side effects\n    // Topojson modifies in place, so we need to deep clone first\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n    var geoms = [];\n    flattenEach(geojson, function (feature$$1) {\n        geoms.push(feature$$1.geometry);\n    });\n    var topo = topology({geoms: geometryCollection(geoms).geometry});\n    return merge(topo, topo.objects.geoms.geometries);\n}\n\n/**\n * Transform function: attempts to dissolve geojson objects where possible\n * [GeoJSON] -> GeoJSON geometry\n *\n * @private\n * @param {FeatureCollection<LineString|MultiLineString|Polygon|MultiPolygon>} geojson Features to dissolved\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<MultiLineString|MultiPolygon>} Dissolved Features\n */\nfunction dissolve(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (getType(geojson) !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (!geojson.features.length) throw new Error('geojson is empty');\n\n    // Clone geojson to avoid side effects\n    // Topojson modifies in place, so we need to deep clone first\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n    // Assert homogenity\n    var type = getHomogenousType(geojson);\n    if (!type) throw new Error('geojson must be homogenous');\n\n    switch (type) {\n    case 'LineString':\n        return lineDissolve(geojson, options);\n    case 'Polygon':\n        return polygonDissolve(geojson, options);\n    default:\n        throw new Error(type + ' is not supported');\n    }\n}\n\n/**\n * Checks if GeoJSON is Homogenous\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {string|null} Homogenous type or null if multiple types\n */\nfunction getHomogenousType(geojson) {\n    var types = {};\n    flattenEach(geojson, function (feature$$1) {\n        types[feature$$1.geometry.type] = true;\n    });\n    var keys = Object.keys(types);\n    if (keys.length === 1) return keys[0];\n    return null;\n}\n\n/**\n * Takes a set of {@link Point|points} and returns a concave hull Polygon or MultiPolygon.\n * Internally, this uses [turf-tin](https://github.com/Turfjs/turf-tin) to generate geometries.\n *\n * @name concave\n * @param {FeatureCollection<Point>} points input points\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.maxEdge=Infinity] the length (in 'units') of an edge necessary for part of the hull to become concave.\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<(Polygon|MultiPolygon)>|null} a concave hull (null value is returned if unable to compute hull)\n * @example\n * var points = turf.featureCollection([\n *   turf.point([-63.601226, 44.642643]),\n *   turf.point([-63.591442, 44.651436]),\n *   turf.point([-63.580799, 44.648749]),\n *   turf.point([-63.573589, 44.641788]),\n *   turf.point([-63.587665, 44.64533]),\n *   turf.point([-63.595218, 44.64765])\n * ]);\n * var options = {units: 'miles', maxEdge: 1};\n *\n * var hull = turf.concave(points, options);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nfunction concave(points$$1, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // validation\n    if (!points$$1) throw new Error('points is required');\n    var maxEdge = options.maxEdge || Infinity;\n    if (!isNumber(maxEdge)) throw new Error('maxEdge is invalid');\n\n    var cleaned = removeDuplicates(points$$1);\n\n    var tinPolys = tin(cleaned);\n    // calculate length of all edges and area of all triangles\n    // and remove triangles that fail the max length test\n    tinPolys.features = tinPolys.features.filter(function (triangle) {\n        var pt1 = triangle.geometry.coordinates[0][0];\n        var pt2 = triangle.geometry.coordinates[0][1];\n        var pt3 = triangle.geometry.coordinates[0][2];\n        var dist1 = distance(pt1, pt2, options);\n        var dist2 = distance(pt2, pt3, options);\n        var dist3 = distance(pt1, pt3, options);\n        return (dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge);\n    });\n\n    if (tinPolys.features.length < 1) return null;\n\n    // merge the adjacent triangles\n    var dissolved = dissolve(tinPolys, options);\n\n    // geojson-dissolve always returns a MultiPolygon\n    if (dissolved.coordinates.length === 1) {\n        dissolved.coordinates = dissolved.coordinates[0];\n        dissolved.type = 'Polygon';\n    }\n    return feature(dissolved);\n}\n\n/**\n * Removes duplicated points in a collection returning a new collection\n *\n * @private\n * @param {FeatureCollection<Point>} points to be cleaned\n * @returns {FeatureCollection<Point>} cleaned set of points\n */\nfunction removeDuplicates(points$$1) {\n    var cleaned = [];\n    var existing = {};\n\n    featureEach(points$$1, function (pt) {\n        if (!pt.geometry) return;\n        var key = pt.geometry.coordinates.join('-');\n        if (!existing.hasOwnProperty(key)) {\n            cleaned.push(pt);\n            existing[key] = true;\n        }\n    });\n    return featureCollection(cleaned);\n}\n\n/**\n * Merges a specified property from a FeatureCollection of points into a\n * FeatureCollection of polygons. Given an `inProperty` on points and an `outProperty`\n * for polygons, this finds every point that lies within each polygon, collects the\n * `inProperty` values from those points, and adds them as an array to `outProperty`\n * on the polygon.\n *\n * @name collect\n * @param {FeatureCollection<Polygon>} polygons polygons with values on which to aggregate\n * @param {FeatureCollection<Point>} points points to be aggregated\n * @param {string} inProperty property to be nested from\n * @param {string} outProperty property to be nested into\n * @returns {FeatureCollection<Polygon>} polygons with properties listed based on `outField`\n * @example\n * var poly1 = turf.polygon([[[0,0],[10,0],[10,10],[0,10],[0,0]]]);\n * var poly2 = turf.polygon([[[10,0],[20,10],[20,20],[20,0],[10,0]]]);\n * var polyFC = turf.featureCollection([poly1, poly2]);\n * var pt1 = turf.point([5,5], {population: 200});\n * var pt2 = turf.point([1,3], {population: 600});\n * var pt3 = turf.point([14,2], {population: 100});\n * var pt4 = turf.point([13,1], {population: 200});\n * var pt5 = turf.point([19,7], {population: 300});\n * var pointFC = turf.featureCollection([pt1, pt2, pt3, pt4, pt5]);\n * var collected = turf.collect(polyFC, pointFC, 'population', 'values');\n * var values = collected.features[0].properties.values\n * //=values => [200, 600]\n *\n * //addToMap\n * var addToMap = [pointFC, collected]\n */\nfunction collect(polygons, points, inProperty, outProperty) {\n    var rtree = rbush_1(6);\n\n    var treeItems = points.features.map(function (item) {\n        return {\n            minX: item.geometry.coordinates[0],\n            minY: item.geometry.coordinates[1],\n            maxX: item.geometry.coordinates[0],\n            maxY: item.geometry.coordinates[1],\n            property: item.properties[inProperty]\n        };\n    });\n\n    rtree.load(treeItems);\n    polygons.features.forEach(function (poly) {\n\n        if (!poly.properties) {\n            poly.properties = {};\n        }\n        var bbox$$1 = bbox(poly);\n        var potentialPoints = rtree.search({minX: bbox$$1[0], minY: bbox$$1[1], maxX: bbox$$1[2], maxY: bbox$$1[3]});\n        var values = [];\n        potentialPoints.forEach(function (pt) {\n            if (booleanPointInPolygon([pt.minX, pt.minY], poly)) {\n                values.push(pt.property);\n            }\n        });\n\n        poly.properties[outProperty] = values;\n    });\n\n    return polygons;\n}\n\n/**\n * Takes input features and flips all of their coordinates from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {GeoJSON} geojson input features\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = turf.point([20.566406, 43.421008]);\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //addToMap\n * var addToMap = [serbia, saudiArabia];\n */\nfunction flip(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    if (!geojson) throw new Error('geojson is required');\n    // ensure that we don't modify features in-place and changes to the\n    // output do not change the previous feature, including changes to nested\n    // properties.\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n    coordEach(geojson, function (coord) {\n        var x = coord[0];\n        var y = coord[1];\n        coord[0] = y;\n        coord[1] = x;\n    });\n    return geojson;\n}\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons$$1) {\n            var polyPoints = [];\n            polygons$$1.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points$$1 = getCoords(line);\n    // handle \"clean\" segment\n    if (points$$1.length === 2 && !equals(points$$1[0], points$$1[1])) return points$$1;\n\n    var prevPoint, point$$1, nextPoint;\n    var newPoints = [];\n    var secondToLast = points$$1.length - 1;\n\n    newPoints.push(points$$1[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points$$1[i - 1];\n        point$$1 = points$$1[i];\n        nextPoint = points$$1[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point$$1)) {\n            newPoints.push(point$$1);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point$$1) {\n    var x = point$$1[0], y = point$$1[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\n/*\n (c) 2013, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist$1(p1, p2) {\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n\n    var x = p1.x,\n        y = p1.y,\n        dx = p2.x - x,\n        dy = p2.y - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2.x;\n            y = p2.y;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n\n    return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points$$1, sqTolerance) {\n\n    var prevPoint = points$$1[0],\n        newPoints = [prevPoint],\n        point$$1;\n\n    for (var i = 1, len = points$$1.length; i < len; i++) {\n        point$$1 = points$$1[i];\n\n        if (getSqDist$1(point$$1, prevPoint) > sqTolerance) {\n            newPoints.push(point$$1);\n            prevPoint = point$$1;\n        }\n    }\n\n    if (prevPoint !== point$$1) newPoints.push(point$$1);\n\n    return newPoints;\n}\n\nfunction simplifyDPStep(points$$1, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance,\n        index;\n\n    for (var i = first + 1; i < last; i++) {\n        var sqDist = getSqSegDist(points$$1[i], points$$1[first], points$$1[last]);\n\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 1) simplifyDPStep(points$$1, first, index, sqTolerance, simplified);\n        simplified.push(points$$1[index]);\n        if (last - index > 1) simplifyDPStep(points$$1, index, last, sqTolerance, simplified);\n    }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points$$1, sqTolerance) {\n    var last = points$$1.length - 1;\n\n    var simplified = [points$$1[0]];\n    simplifyDPStep(points$$1, 0, last, sqTolerance, simplified);\n    simplified.push(points$$1[last]);\n\n    return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify$2(points$$1, tolerance, highestQuality) {\n\n    if (points$$1.length <= 2) return points$$1;\n\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points$$1 = highestQuality ? points$$1 : simplifyRadialDist(points$$1, sqTolerance);\n    points$$1 = simplifyDouglasPeucker(points$$1, sqTolerance);\n\n    return points$$1;\n}\n\n/**\n * Takes a {@link GeoJSON} object and returns a simplified version. Internally uses\n * [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification using the Ramer-Douglas-Peucker algorithm.\n *\n * @name simplify\n * @param {GeoJSON} geojson object to be simplified\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.tolerance=1] simplification tolerance\n * @param {boolean} [options.highQuality=false] whether or not to spend more time to create a higher-quality simplification with a different algorithm\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a simplified GeoJSON\n * @example\n * var geojson = turf.polygon([[\n *   [-70.603637, -33.399918],\n *   [-70.614624, -33.395332],\n *   [-70.639343, -33.392466],\n *   [-70.659942, -33.394759],\n *   [-70.683975, -33.404504],\n *   [-70.697021, -33.419406],\n *   [-70.701141, -33.434306],\n *   [-70.700454, -33.446339],\n *   [-70.694274, -33.458369],\n *   [-70.682601, -33.465816],\n *   [-70.668869, -33.472117],\n *   [-70.646209, -33.473835],\n *   [-70.624923, -33.472117],\n *   [-70.609817, -33.468107],\n *   [-70.595397, -33.458369],\n *   [-70.587158, -33.442901],\n *   [-70.587158, -33.426283],\n *   [-70.590591, -33.414248],\n *   [-70.594711, -33.406224],\n *   [-70.603637, -33.399918]\n * ]]);\n * var options = {tolerance: 0.01, highQuality: false};\n * var simplified = turf.simplify(geojson, options);\n *\n * //addToMap\n * var addToMap = [geojson, simplified]\n */\nfunction simplify(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var tolerance = options.tolerance !== undefined ? options.tolerance : 1;\n    var highQuality = options.highQuality || false;\n    var mutate = options.mutate || false;\n\n    if (!geojson) throw new Error('geojson is required');\n    if (tolerance && tolerance < 0) throw new Error('invalid tolerance');\n\n    // Clone geojson to avoid side effects\n    if (mutate !== true) geojson = clone(geojson);\n\n    geomEach(geojson, function (geom) {\n        simplifyGeom(geom, tolerance, highQuality);\n    });\n    return geojson;\n}\n\n/**\n * Simplifies a feature's coordinates\n *\n * @private\n * @param {Geometry} geometry to be simplified\n * @param {number} [tolerance=1] simplification tolerance\n * @param {boolean} [highQuality=false] whether or not to spend more time to create a higher-quality simplification with a different algorithm\n * @returns {Geometry} output\n */\nfunction simplifyGeom(geometry$$1, tolerance, highQuality) {\n    var type = geometry$$1.type;\n\n    // \"unsimplyfiable\" geometry types\n    if (type === 'Point' || type === 'MultiPoint') return geometry$$1;\n\n    // Remove any extra coordinates\n    cleanCoords(geometry$$1, true);\n\n    var coordinates = geometry$$1.coordinates;\n    switch (type) {\n    case 'LineString':\n        geometry$$1['coordinates'] = simplifyLine(coordinates, tolerance, highQuality);\n        break;\n    case 'MultiLineString':\n        geometry$$1['coordinates'] = coordinates.map(function (lines) {\n            return simplifyLine(lines, tolerance, highQuality);\n        });\n        break;\n    case 'Polygon':\n        geometry$$1['coordinates'] = simplifyPolygon(coordinates, tolerance, highQuality);\n        break;\n    case 'MultiPolygon':\n        geometry$$1['coordinates'] = coordinates.map(function (rings) {\n            return simplifyPolygon(rings, tolerance, highQuality);\n        });\n    }\n    return geometry$$1;\n}\n\n\n/**\n * Simplifies the coordinates of a LineString with simplify-js\n *\n * @private\n * @param {Array<number>} coordinates to be processed\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create a higher-quality\n * @returns {Array<Array<number>>} simplified coords\n */\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n    return simplify$2(coordinates.map(function (coord) {\n        return {x: coord[0], y: coord[1], z: coord[2]};\n    }), tolerance, highQuality).map(function (coords) {\n        return (coords.z) ? [coords.x, coords.y, coords.z] : [coords.x, coords.y];\n    });\n}\n\n\n/**\n * Simplifies the coordinates of a Polygon with simplify-js\n *\n * @private\n * @param {Array<number>} coordinates to be processed\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create a higher-quality\n * @returns {Array<Array<Array<number>>>} simplified coords\n */\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n    return coordinates.map(function (ring) {\n        var pts = ring.map(function (coord) {\n            return {x: coord[0], y: coord[1]};\n        });\n        if (pts.length < 4) {\n            throw new Error('invalid polygon');\n        }\n        var simpleRing = simplify$2(pts, tolerance, highQuality).map(function (coords) {\n            return [coords.x, coords.y];\n        });\n        //remove 1 percent of tolerance until enough points to make a triangle\n        while (!checkValidity(simpleRing)) {\n            tolerance -= tolerance * 0.01;\n            simpleRing = simplify$2(pts, tolerance, highQuality).map(function (coords) {\n                return [coords.x, coords.y];\n            });\n        }\n        if (\n            (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0]) ||\n            (simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1])) {\n            simpleRing.push(simpleRing[0]);\n        }\n        return simpleRing;\n    });\n}\n\n\n/**\n * Returns true if ring has at least 3 coordinates and its first coordinate is the same as its last\n *\n * @private\n * @param {Array<number>} ring coordinates to be checked\n * @returns {boolean} true if valid\n */\nfunction checkValidity(ring) {\n    if (ring.length < 3) return false;\n    //if the last point is the same as the first, it's not a triangle\n    return !(ring.length === 3 && ((ring[2][0] === ring[0][0]) && (ring[2][1] === ring[0][1])));\n}\n\n/* eslint-disable */\n\n /**\n   * BezierSpline\n   * https://github.com/leszekr/bezier-spline-js\n   *\n   * @private\n   * @copyright\n   * Copyright (c) 2013 Leszek Rybicki\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\nvar Spline = function (options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 10000;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0;\n    // this is to ensure compatibility with the 2d version\n    for (var i = 0; i < this.length; i++) this.points[i].z = this.points[i].z || 0;\n    for (var i = 0; i < this.length - 1; i++) {\n        var p1 = this.points[i];\n        var p2 = this.points[i + 1];\n        this.centers.push({\n            x: (p1.x + p2.x) / 2,\n            y: (p1.y + p2.y) / 2,\n            z: (p1.z + p2.z) / 2\n        });\n    }\n    this.controls.push([this.points[0], this.points[0]]);\n    for (var i = 0; i < this.centers.length - 1; i++) {\n        var p1 = this.centers[i];\n        var p2 = this.centers[i + 1];\n        var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n        var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n        var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n        this.controls.push([{\n            x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n            y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n            z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)},\n            {\n                x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n                y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n                z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)}]);\n    }\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n};\n\n  /*\n    Caches an array of equidistant (more or less) points on the curve.\n  */\nSpline.prototype.cacheSteps = function (mindist) {\n    var steps = [];\n    var laststep = this.pos(0);\n    steps.push(0);\n    for (var t = 0; t < this.duration; t += 10) {\n        var step = this.pos(t);\n        var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n        if (dist > mindist) {\n            steps.push(t);\n            laststep = step;\n        }\n    }\n    return steps;\n};\n\n  /*\n    returns angle and speed in the given point in the curve\n  */\nSpline.prototype.vector = function (t) {\n    var p1 = this.pos(t + 10);\n    var p2 = this.pos(t - 10);\n    return {\n        angle:180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n        speed:Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n};\n\n  /*\n    Gets the position of the point, given time.\n\n    WARNING: The speed is not constant. The time it takes between control points is constant.\n\n    For constant speed, use Spline.steps[i];\n  */\nSpline.prototype.pos = function (time) {\n\n    function bezier(t, p1, c1, c2, p2) {\n        var B = function (t) {\n            var t2 = t * t, t3 = t2 * t;\n            return [(t3), (3 * t2 * (1 - t)), (3 * t * (1 - t) * (1 - t)), ((1 - t) * (1 - t) * (1 - t))];\n        };\n        var b = B(t);\n        var pos = {\n            x : p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n            y : p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n            z : p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n        };\n        return pos;\n    }\n    var t = time - this.delay;\n    if (t < 0) t = 0;\n    if (t > this.duration) t = this.duration - 1;\n    //t = t-this.delay;\n    var t2 = (t) / this.duration;\n    if (t2 >= 1) return this.points[this.length - 1];\n\n    var n = Math.floor((this.points.length - 1) * t2);\n    var t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n};\n\n/**\n * Takes a {@link LineString|line} and returns a curved version\n * by applying a [Bezier spline](http://en.wikipedia.org/wiki/B%C3%A9zier_spline)\n * algorithm.\n *\n * The bezier spline implementation is by [Leszek Rybicki](http://leszek.rybicki.cc/).\n *\n * @name bezierSpline\n * @param {Feature<LineString>} line input LineString\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.resolution=10000] time in milliseconds between points\n * @param {number} [options.sharpness=0.85] a measure of how curvy the path should be between splines\n * @returns {Feature<LineString>} curved line\n * @example\n * var line = turf.lineString([\n *   [-76.091308, 18.427501],\n *   [-76.695556, 18.729501],\n *   [-76.552734, 19.40443],\n *   [-74.61914, 19.134789],\n *   [-73.652343, 20.07657],\n *   [-73.157958, 20.210656]\n * ]);\n *\n * var curved = turf.bezierSpline(line);\n *\n * //addToMap\n * var addToMap = [line, curved]\n * curved.properties = { stroke: '#0F0' };\n */\nfunction bezier(line, options) {\n    // Optional params\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var resolution = options.resolution || 10000;\n    var sharpness = options.sharpness || 0.85;\n\n    // validation\n    if (!line) throw new Error('line is required');\n    if (!isNumber(resolution)) throw new Error('resolution must be an number');\n    if (!isNumber(sharpness)) throw new Error('sharpness must be an number');\n\n    var coords = [];\n    var spline = new Spline({\n        points: getGeom(line).coordinates.map(function (pt) {\n            return {x: pt[0], y: pt[1]};\n        }),\n        duration: resolution,\n        sharpness: sharpness\n    });\n\n    for (var i = 0; i < spline.duration; i += 10) {\n        var pos = spline.pos(i);\n        if (Math.floor(i / 100) % 2 === 0) {\n            coords.push([pos.x, pos.y]);\n        }\n    }\n\n    return lineString(coords, line.properties);\n}\n\n/**\n * Takes a set of {@link Point|points} and a set of {@link Polygon|polygons} and performs a spatial join.\n *\n * @name tag\n * @param {FeatureCollection<Point>} points input points\n * @param {FeatureCollection<Polygon>} polygons input polygons\n * @param {string} field property in `polygons` to add to joined {<Point>} features\n * @param {string} outField property in `points` in which to store joined property from `polygons`\n * @returns {FeatureCollection<Point>} points with `containingPolyId` property containing values from `polyId`\n * @example\n * var pt1 = turf.point([-77, 44]);\n * var pt2 = turf.point([-77, 38]);\n * var poly1 = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]], {pop: 3000});\n * var poly2 = turf.polygon([[\n *   [-81, 35],\n *   [-81, 41],\n *   [-72, 41],\n *   [-72, 35],\n *   [-81, 35]\n * ]], {pop: 1000});\n *\n * var points = turf.featureCollection([pt1, pt2]);\n * var polygons = turf.featureCollection([poly1, poly2]);\n *\n * var tagged = turf.tag(points, polygons, 'pop', 'population');\n *\n * //addToMap\n * var addToMap = [tagged, polygons]\n */\nfunction tag(points, polygons, field, outField) {\n    // prevent mutations\n    points = clone(points);\n    polygons = clone(polygons);\n    featureEach(points, function (pt) {\n        if (!pt.properties) pt.properties = {};\n        featureEach(polygons, function (poly) {\n            if (pt.properties[outField] === undefined) {\n                if (booleanPointInPolygon(pt, poly)) pt.properties[outField] = poly.properties[field];\n            }\n        });\n    });\n    return points;\n}\n\n// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @returns {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.randomPoint(100, {bbox: [-80, 30, -60, 60]});\n *\n * var sample = turf.sample(points, 5);\n *\n * //addToMap\n * var addToMap = [points, sample]\n * turf.featureEach(sample, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction sample(featurecollection, num) {\n    if (!featurecollection) throw new Error('featurecollection is required');\n    if (num === null || num === undefined) throw new Error('num is required');\n    if (typeof num !== 'number') throw new Error('num must be a number');\n\n    var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n    return outFC;\n}\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox) {\n    validateBBox(bbox);\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n\n    if (bbox.length === 6) throw new Error('@turf/bbox-polygon does not support BBox with 6 positions');\n\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n\n    return polygon([[\n        lowLeft,\n        lowRight,\n        topRight,\n        topLeft,\n        lowLeft\n    ]]);\n}\n\n/**\n * Takes any number of features and returns a rectangular {@link Polygon} that encompasses all vertices.\n *\n * @name envelope\n * @param {GeoJSON} geojson input features\n * @returns {Feature<Polygon>} a rectangular Polygon feature that encompasses all vertices\n * @example\n * var features = turf.featureCollection([\n *   turf.point([-75.343, 39.984], {\"name\": \"Location A\"}),\n *   turf.point([-75.833, 39.284], {\"name\": \"Location B\"}),\n *   turf.point([-75.534, 39.123], {\"name\": \"Location C\"})\n * ]);\n *\n * var enveloped = turf.envelope(features);\n *\n * //addToMap\n * var addToMap = [features, enveloped];\n */\nfunction envelope(geojson) {\n    return bboxPolygon(bbox(geojson));\n}\n\n/**\n * Takes a bounding box and calculates the minimum square bounding box that\n * would contain the input.\n *\n * @name square\n * @param {BBox} bbox extent in [west, south, east, north] order\n * @returns {BBox} a square surrounding `bbox`\n * @example\n * var bbox = [-20, -20, -15, 0];\n * var squared = turf.square(bbox);\n *\n * //addToMap\n * var addToMap = [turf.bboxPolygon(bbox), turf.bboxPolygon(squared)]\n */\nfunction square(bbox) {\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var horizontalDistance = distance(bbox.slice(0, 2), [east, south]);\n    var verticalDistance = distance(bbox.slice(0, 2), [west, north]);\n    if (horizontalDistance >= verticalDistance) {\n        var verticalMidpoint = (south + north) / 2;\n        return [\n            west,\n            verticalMidpoint - ((east - west) / 2),\n            east,\n            verticalMidpoint + ((east - west) / 2)\n        ];\n    } else {\n        var horizontalMidpoint = (west + east) / 2;\n        return [\n            horizontalMidpoint - ((north - south) / 2),\n            south,\n            horizontalMidpoint + ((north - south) / 2),\n            north\n        ];\n    }\n}\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in degrees, radians, miles, or kilometers; and bearing in degrees. This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nfunction destination(origin, distance, bearing, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var properties = options.properties;\n\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearing_rad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, units);\n\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearing_rad));\n    var longitude2 = longitude1 + Math.atan2(Math.sin(bearing_rad) * Math.sin(radians) * Math.cos(latitude1),\n        Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n\n    return point([lng, lat], properties);\n}\n\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    // Optional params\n    options = options || {};\n    var steps = options.steps || 64;\n    var properties = options.properties;\n\n    // validation\n    if (!center) throw new Error('center is required');\n    if (!radius) throw new Error('radius is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n    if (typeof steps !== 'number') throw new Error('steps must be a number');\n\n    // default params\n    steps = steps || 64;\n    properties = properties || center.properties || {};\n\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination(center, radius, i * -360 / steps, options).geometry.coordinates);\n    }\n    coordinates.push(coordinates[0]);\n\n    return polygon([coordinates], properties);\n}\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nfunction bearing(start, end, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var final = options.final;\n\n    // Reverse calculation\n    if (final === true) return calculateFinalBearing(start, end);\n\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n    return radiansToDegrees(Math.atan2(a, b));\n}\n\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var point1 = turf.point([144.834823, -37.771257]);\n * var point2 = turf.point([145.14244, -37.830937]);\n *\n * var midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1, point2) {\n    var dist = distance(point1, point2);\n    var heading = bearing(point1, point2);\n    var midpoint = destination(point1, dist / 2, heading);\n\n    return midpoint;\n}\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.featureCollection([\n *   turf.point( [-97.522259, 35.4691]),\n *   turf.point( [-97.502754, 35.463455]),\n *   turf.point( [-97.508269, 35.463245])\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n\n    var ext = bbox(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y], properties);\n}\n\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, properties) {\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len], properties);\n}\n\n/**\n * Takes any {@link Feature} or a {@link FeatureCollection} and returns its [center of mass](https://en.wikipedia.org/wiki/Center_of_mass) using this formula: [Centroid of Polygon](https://en.wikipedia.org/wiki/Centroid#Centroid_of_polygon).\n *\n * @name centerOfMass\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the center of mass\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var center = turf.centerOfMass(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, center]\n */\nfunction centerOfMass(geojson, properties) {\n    switch (getType(geojson)) {\n    case 'Point':\n        return geojson;\n    case 'Polygon':\n        var coords = [];\n        coordEach(geojson, function (coord) {\n            coords.push(coord);\n        });\n\n        // First, we neutralize the feature (set it around coordinates [0,0]) to prevent rounding errors\n        // We take any point to translate all the points around 0\n        var centre = centroid(geojson, properties);\n        var translation = centre.geometry.coordinates;\n        var sx = 0;\n        var sy = 0;\n        var sArea = 0;\n        var i, pi, pj, xi, xj, yi, yj, a;\n\n        var neutralizedPoints = coords.map(function (point$$1) {\n            return [\n                point$$1[0] - translation[0],\n                point$$1[1] - translation[1]\n            ];\n        });\n\n        for (i = 0; i < coords.length - 1; i++) {\n            // pi is the current point\n            pi = neutralizedPoints[i];\n            xi = pi[0];\n            yi = pi[1];\n\n            // pj is the next point (pi+1)\n            pj = neutralizedPoints[i + 1];\n            xj = pj[0];\n            yj = pj[1];\n\n            // a is the common factor to compute the signed area and the final coordinates\n            a = xi * yj - xj * yi;\n\n            // sArea is the sum used to compute the signed area\n            sArea += a;\n\n            // sx and sy are the sums used to compute the final coordinates\n            sx += (xi + xj) * a;\n            sy += (yi + yj) * a;\n        }\n\n        // Shape has no area: fallback on turf.centroid\n        if (sArea === 0) {\n            return centre;\n        } else {\n            // Compute the signed area, and factorize 1/6A\n            var area = sArea * 0.5;\n            var areaFactor = 1 / (6 * area);\n\n            // Compute the final coordinates, adding back the values that have been neutralized\n            return point([\n                translation[0] + areaFactor * sx,\n                translation[1] + areaFactor * sy\n            ], properties);\n        }\n    default:\n        // Not a polygon: Compute the convex hull and work with that\n        var hull = convex(geojson);\n\n        if (hull) return centerOfMass(hull, properties);\n        // Hull is empty: fallback on the centroid\n        else return centroid(geojson, properties);\n    }\n}\n\n/**\n * Combines a {@link FeatureCollection} of {@link Point}, {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<Point|LineString|Polygon>} fc a FeatureCollection of any type\n * @returns {FeatureCollection<MultiPoint|MultiLineString|MultiPolygon>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = turf.featureCollection([\n *   turf.point([19.026432, 47.49134]),\n *   turf.point([19.074497, 47.509548])\n * ]);\n *\n * var combined = turf.combine(fc);\n *\n * //addToMap\n * var addToMap = [combined]\n */\nfunction combine(fc) {\n    var groups = {\n        MultiPoint: {coordinates: [], properties: []},\n        MultiLineString: {coordinates: [], properties: []},\n        MultiPolygon: {coordinates: [], properties: []}\n    };\n\n    var multiMapping = Object.keys(groups).reduce(function (memo, item) {\n        memo[item.replace('Multi', '')] = item;\n        return memo;\n    }, {});\n\n    function addToGroup(feature$$1, key, multi) {\n        if (!multi) {\n            groups[key].coordinates.push(feature$$1.geometry.coordinates);\n        } else {\n            groups[key].coordinates = groups[key].coordinates.concat(feature$$1.geometry.coordinates);\n        }\n        groups[key].properties.push(feature$$1.properties);\n    }\n\n    featureEach(fc, function (feature$$1) {\n        if (!feature$$1.geometry) return;\n        if (groups[feature$$1.geometry.type]) {\n            addToGroup(feature$$1, feature$$1.geometry.type, true);\n        } else if (multiMapping[feature$$1.geometry.type]) {\n            addToGroup(feature$$1, multiMapping[feature$$1.geometry.type], false);\n        }\n    });\n\n    return featureCollection(Object.keys(groups)\n        .filter(function (key) {\n            return groups[key].coordinates.length;\n        })\n        .sort()\n        .map(function (key) {\n            var geometry$$1 = { type: key, coordinates: groups[key].coordinates };\n            var properties = { collectedProperties: groups[key].properties };\n            return feature(geometry$$1, properties);\n        }));\n}\n\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\nfunction explode(geojson) {\n    var points$$1 = [];\n    if (geojson.type === 'FeatureCollection') {\n        featureEach(geojson, function (feature$$1) {\n            coordEach(feature$$1, function (coord) {\n                points$$1.push(point(coord, feature$$1.properties));\n            });\n        });\n    } else {\n        coordEach(geojson, function (coord) {\n            points$$1.push(point(coord, geojson.properties));\n        });\n    }\n    return featureCollection(points$$1);\n}\n\nvar earcut_1 = earcut;\nvar default_1$2 = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode$1(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode$1(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals$1(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals$1(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals$1(a, b) && intersects$2(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals$1(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects$2(p1, q1, p2, q2) {\n    if ((equals$1(p1, q1) && equals$1(p2, q2)) ||\n        (equals$1(p1, q2) && equals$1(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects$2(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode$1(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\nearcut_1.default = default_1$2;\n\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} poly the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var poly = turf.polygon([[[11, 0], [22, 4], [31, 0], [31, 11], [21, 15], [11, 11], [11, 0]]]);\n * var triangles = turf.tesselate(poly);\n *\n * //addToMap\n * var addToMap = [poly, triangles]\n */\nfunction tesselate(poly) {\n    if (!poly.geometry || (poly.geometry.type !== 'Polygon' && poly.geometry.type !== 'MultiPolygon')) {\n        throw new Error('input must be a Polygon or MultiPolygon');\n    }\n\n    var fc = {type: 'FeatureCollection', features: []};\n\n    if (poly.geometry.type === 'Polygon') {\n        fc.features = processPolygon(poly.geometry.coordinates);\n    } else {\n        poly.geometry.coordinates.forEach(function (coordinates) {\n            fc.features = fc.features.concat(processPolygon(coordinates));\n        });\n    }\n\n    return fc;\n}\n\nfunction processPolygon(coordinates) {\n    var data = flattenCoords(coordinates);\n    var dim = 2;\n    var result = earcut_1(data.vertices, data.holes, dim);\n\n    var features = [];\n    var vertices = [];\n\n    result.forEach(function (vert, i) {\n        var index = result[i];\n        vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n    });\n\n    for (var i = 0; i < vertices.length; i += 3) {\n        var coords = vertices.slice(i, i + 3);\n        coords.push(vertices[i]);\n        features.push(polygon([coords]));\n    }\n\n    return features;\n}\n\nfunction flattenCoords(data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n\n    return result;\n}\n\n/**\n * Takes a reference {@link Point|point} and a FeatureCollection of Features\n * with Point geometries and returns the\n * point from the FeatureCollection closest to the reference. This calculation\n * is geodesic.\n *\n * @name nearestPoint\n * @param {Coord} targetPoint the reference point\n * @param {FeatureCollection<Point>} points against input point set\n * @returns {Feature<Point>} the closest point in the set to the reference point\n * @example\n * var targetPoint = turf.point([28.965797, 41.010086], {\"marker-color\": \"#0F0\"});\n * var points = turf.featureCollection([\n *     turf.point([28.973865, 41.011122]),\n *     turf.point([28.948459, 41.024204]),\n *     turf.point([28.938674, 41.013324])\n * ]);\n *\n * var nearest = turf.nearestPoint(targetPoint, points);\n *\n * //addToMap\n * var addToMap = [targetPoint, points, nearest];\n * nearest.properties['marker-color'] = '#F00';\n */\nfunction nearestPoint(targetPoint, points) {\n    // Input validation\n    if (!targetPoint) throw new Error('targetPoint is required');\n    if (!points) throw new Error('points is required');\n\n    var nearest;\n    var minDist = Infinity;\n    featureEach(points, function (pt, featureIndex) {\n        var distanceToPoint = distance(targetPoint, pt);\n        if (distanceToPoint < minDist) {\n            nearest = clone(pt);\n            nearest.properties.featureIndex = featureIndex;\n            nearest.properties.distanceToPoint = distanceToPoint;\n            minDist = distanceToPoint;\n        }\n\n    });\n    return nearest;\n}\n\nfunction quickselect$3(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare$2);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap$1(arr, left, k);\n        if (compare(arr[right], t) > 0) swap$1(arr, left, right);\n\n        while (i < j) {\n            swap$1(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap$1(arr, left, j);\n        else {\n            j++;\n            swap$1(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap$1(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare$2(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction rbush$4(maxEntries, format) {\n    if (!(this instanceof rbush$4)) return new rbush$4(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush$4.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects$4(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects$4(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains$1(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects$4(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects$4(bbox, childBBox)) {\n                    if (node.leaf || contains$1(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode$1([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem$1(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains$1(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX$1,\n    compareMinY: compareNodeMinY$1,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode$1(items.slice(left, right + 1));\n            calcBBox$1(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode$1([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect$1(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect$1(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox$1(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea$1(child);\n                enlargement = enlargedArea$1(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend$1(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode$1(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox$1(node, this.toBBox);\n        calcBBox$1(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode$1([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox$1(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox$1(node, 0, i, this.toBBox);\n            bbox2 = distBBox$1(node, i, M, this.toBBox);\n\n            overlap = intersectionArea$1(bbox1, bbox2);\n            area = bboxArea$1(bbox1) + bboxArea$1(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX$1,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY$1,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox$1(node, 0, m, toBBox),\n            rightBBox = distBBox$1(node, M - m, M, toBBox),\n            margin = bboxMargin$1(leftBBox) + bboxMargin$1(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend$1(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin$1(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend$1(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin$1(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend$1(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox$1(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem$1(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox$1(node, toBBox) {\n    distBBox$1(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox$1(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode$1(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend$1(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend$1(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX$1(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY$1(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea$1(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin$1(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea$1(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea$1(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains$1(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects$4(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode$1(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect$1(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect$3(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * import geojsonRbush from 'geojson-rbush';\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = rbush$4(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature<any>} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.insert(polygon)\n     */\n    tree.insert = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon$2(bbox);\n            feature.bbox = bbox;\n        } else {\n            feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        }\n        return rbush$4.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {BBox[]|FeatureCollection<any>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygons = {\n     *   \"type\": \"FeatureCollection\",\n     *   \"features\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *       }\n     *     },\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     *       }\n     *     }\n     *   ]\n     * }\n     * tree.load(polygons)\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of BBox\n        if (Array.isArray(features)) {\n            features.forEach(function (bbox) {\n                var feature = bboxPolygon$2(bbox);\n                feature.bbox = bbox;\n                load.push(feature);\n            });\n        } else {\n            // Load FeatureCollection\n            featureEach(features, function (feature) {\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush$4.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {BBox|Feature<any>} feature remove single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.remove(polygon)\n     */\n    tree.remove = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon$2(bbox);\n            feature.bbox = bbox;\n        }\n        return rbush$4.prototype.remove.call(this, feature);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush$4.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson search with GeoJSON\n     * @returns {FeatureCollection<any>} all features that intersects with the given GeoJSON.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.search(polygon)\n     */\n    tree.search = function (geojson) {\n        var features = rbush$4.prototype.search.call(this, this.toBBox(geojson));\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.collides(polygon)\n     */\n    tree.collides = function (geojson) {\n        return rbush$4.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection<any>} all the features in RBush\n     * @example\n     * tree.all()\n     * //=FeatureCollection\n     */\n    tree.all = function () {\n        var features = rbush$4.prototype.all.call(this);\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     * //=JSON object\n     */\n    tree.toJSON = function () {\n        return rbush$4.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush$4.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollectio|Feature<any>} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else bbox = turfBBox(geojson);\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @private\n * @name bboxPolygon\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon$2(bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n    var coordinates = [[lowLeft, lowRight, topRight, topLeft, lowLeft]];\n\n    return {\n        type: 'Feature',\n        bbox: bbox,\n        properties: {},\n        geometry: {\n            type: 'Polygon',\n            coordinates: coordinates\n        }\n    };\n}\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @private\n * @name bbox\n * @param {FeatureCollection|Feature<any>} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction turfBBox(geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n}\n\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|MultiPolygon|Polygon>} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    var results = [];\n    flattenEach(geojson, function (feature$$1) {\n        lineSegmentFeature(feature$$1, results);\n    });\n    return featureCollection(results);\n}\n\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry$$1 = geojson.geometry;\n    switch (geometry$$1.type) {\n    case 'Polygon':\n        coords = getCoords(geometry$$1);\n        break;\n    case 'LineString':\n        coords = [getCoords(geometry$$1)];\n    }\n    coords.forEach(function (coord) {\n        var segments = createSegments(coord, geojson.properties);\n        segments.forEach(function (segment) {\n            segment.id = results.length;\n            results.push(segment);\n        });\n    });\n}\n\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {LineString} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox$3(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox$3(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = (x1 < x2) ? x1 : x2;\n    var south = (y1 < y2) ? y1 : y2;\n    var east = (x1 > x2) ? x1 : x2;\n    var north = (y1 > y2) ? y1 : y2;\n    return [west, south, east, north];\n}\n\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === 'LineString') line1 = feature(line1);\n    if (line2.type === 'LineString') line2 = feature(line2);\n    if (line1.type === 'Feature' &&\n        line2.type === 'Feature' &&\n        line1.geometry.type === 'LineString' &&\n        line2.geometry.type === 'LineString' &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects$3(line1, line2);\n        if (intersect) results.push(intersect);\n        return featureCollection(results);\n    }\n\n    // Handles complex GeoJSON Geometries\n    var tree = geojsonRbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects$3(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(',');\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects$3(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error('<intersects> line1 must only contain 2 coordinates');\n    }\n    if (coords2.length !== 2) {\n        throw new Error('<intersects> line2 must only contain 2 coordinates');\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n    var numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n    var numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + (uA * (x2 - x1));\n        var y = y1 + (uA * (y2 - y1));\n        return point([x, y]);\n    }\n    return null;\n}\n\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // validation\n    var type = (lines.geometry) ? lines.geometry.type : lines.type;\n    if (type !== 'LineString' && type !== 'MultiLineString') {\n        throw new Error('lines must be LineString or MultiLineString');\n    }\n\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity\n    });\n\n    var length = 0.0;\n    flattenEach(lines, function (line) {\n        var coords = getCoords(line);\n\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = point(coords[i]);\n            start.properties.dist = distance(pt, start, options);\n            //stop\n            var stop = point(coords[i + 1]);\n            stop.properties.dist = distance(pt, stop, options);\n            // sectionLength\n            var sectionLength = distance(start, stop, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop.properties.dist);\n            var direction = bearing(start, stop);\n            var perpendicularPt1 = destination(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination(pt, heightDistance, direction - 90, options);\n            var intersect = lineIntersect(\n                lineString([perpendicularPt1.geometry.coordinates, perpendicularPt2.geometry.coordinates]),\n                lineString([start.geometry.coordinates, stop.geometry.coordinates])\n            );\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance(pt, intersectPt, options);\n                intersectPt.properties.location = length + distance(start, intersectPt, options);\n            }\n\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop.properties.dist < closestPt.properties.dist) {\n                closestPt = stop;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n\n    });\n\n    return closestPt;\n}\n\n// https://en.wikipedia.org/wiki/Rhumb_line\n/**\n * Takes two {@link Point|points} and finds the bearing angle between them along a Rhumb line\n * i.e. the angle measured in degrees start the north line (0 degrees)\n *\n * @name rhumbBearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing from north in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984], {\"marker-color\": \"#F00\"});\n * var point2 = turf.point([-75.534, 39.123], {\"marker-color\": \"#00F\"});\n *\n * var bearing = turf.rhumbBearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2];\n * point1.properties.bearing = bearing;\n * point2.properties.bearing = bearing;\n */\nfunction rhumbBearing(start, end, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var final = options.final;\n\n    // validation\n    if (!start) throw new Error('start point is required');\n    if (!end) throw new Error('end point is required');\n\n    var bear360;\n\n    if (final) bear360 = calculateRhumbBearing(getCoord(end), getCoord(start));\n    else bear360 = calculateRhumbBearing(getCoord(start), getCoord(end));\n\n    var bear180 = (bear360 > 180) ? -(360 - bear360) : bear360;\n\n    return bear180;\n}\n\n/**\n * Returns the bearing from ‘this’ point to destination point along a rhumb line.\n * Adapted from Geodesy: https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js\n *\n * @private\n * @param   {Array<number>} from - origin point.\n * @param   {Array<number>} to - destination point.\n * @returns {number} Bearing in degrees from north.\n * @example\n * var p1 = new LatLon(51.127, 1.338);\n * var p2 = new LatLon(50.964, 1.853);\n * var d = p1.rhumbBearingTo(p2); // 116.7 m\n */\nfunction calculateRhumbBearing(from, to) {\n    // φ => phi\n    // Δλ => deltaLambda\n    // Δψ => deltaPsi\n    // θ => theta\n    var phi1 = degreesToRadians(from[1]);\n    var phi2 = degreesToRadians(to[1]);\n    var deltaLambda = degreesToRadians((to[0] - from[0]));\n    // if deltaLambdaon over 180° take shorter rhumb line across the anti-meridian:\n    if (deltaLambda > Math.PI) deltaLambda -= 2 * Math.PI;\n    if (deltaLambda < -Math.PI) deltaLambda += 2 * Math.PI;\n\n    var deltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n\n    var theta = Math.atan2(deltaLambda, deltaPsi);\n\n    return (radiansToDegrees(theta) + 360) % 360;\n}\n\n// https://en.wikipedia.org/wiki/Rhumb_line\n/**\n * Calculates the distance along a rhumb line between two {@link Point|points} in degrees, radians,\n * miles, or kilometers.\n *\n * @name rhumbDistance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.rhumbDistance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction rhumbDistance(from, to, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    // validation\n    if (!from) throw new Error('from point is required');\n    if (!to) throw new Error('to point is required');\n\n    var origin = getCoord(from);\n    var destination = getCoord(to);\n\n    // compensate the crossing of the 180th meridian (https://macwright.org/2016/09/26/the-180th-meridian.html)\n    // solution from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    destination[0] += (destination[0] - origin[0] > 180) ? -360 : (origin[0] - destination[0] > 180) ? 360 : 0;\n    var distanceInMeters = calculateRhumbDistance(origin, destination);\n    var distance = convertLength(distanceInMeters, 'meters', units);\n    return distance;\n}\n\n/**\n * Returns the distance travelling from ‘this’ point to destination point along a rhumb line.\n * Adapted from Geodesy: https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js\n *\n * @private\n * @param   {Array<number>} origin point.\n * @param   {Array<number>} destination point.\n * @param   {number} [radius=6371e3] - (Mean) radius of earth (defaults to radius in metres).\n * @returns {number} Distance in km between this point and destination point (same units as radius).\n *\n * @example\n *     var p1 = new LatLon(51.127, 1.338);\n *     var p2 = new LatLon(50.964, 1.853);\n *     var d = p1.distanceTo(p2); // 40.31 km\n */\nfunction calculateRhumbDistance(origin, destination, radius) {\n    // φ => phi\n    // λ => lambda\n    // ψ => psi\n    // Δ => Delta\n    // δ => delta\n    // θ => theta\n\n    radius = (radius === undefined) ? earthRadius : Number(radius);\n    // see www.edwilliams.org/avform.htm#Rhumb\n\n    var R = radius;\n    var phi1 = origin[1] * Math.PI / 180;\n    var phi2 = destination[1] * Math.PI / 180;\n    var DeltaPhi = phi2 - phi1;\n    var DeltaLambda = Math.abs(destination[0] - origin[0]) * Math.PI / 180;\n    // if dLon over 180° take shorter rhumb line across the anti-meridian:\n    if (DeltaLambda > Math.PI) DeltaLambda -= 2 * Math.PI;\n\n    // on Mercator projection, longitude distances shrink by latitude; q is the 'stretch factor'\n    // q becomes ill-conditioned along E-W line (0/0); use empirical tolerance to avoid it\n    var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    var q = Math.abs(DeltaPsi) > 10e-12 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n\n    // distance is pythagoras on 'stretched' Mercator projection\n    var delta = Math.sqrt(DeltaPhi * DeltaPhi + q * q * DeltaLambda * DeltaLambda); // angular distance in radians\n    var dist = delta * R;\n\n    return dist;\n}\n\n/**\n * Converts a WGS84 GeoJSON object into Mercator (EPSG:900913) projection\n *\n * @name toMercator\n * @param {GeoJSON|Position} geojson WGS84 GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-71,41]);\n * var converted = turf.toMercator(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toMercator(geojson, options) {\n    return convert(geojson, 'mercator', options);\n}\n\n/**\n * Converts a Mercator (EPSG:900913) GeoJSON object into WGS84 projection\n *\n * @name toWgs84\n * @param {GeoJSON|Position} geojson Mercator GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-7903683.846322424, 5012341.663847514]);\n * var converted = turf.toWgs84(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toWgs84(geojson, options) {\n    return convert(geojson, 'wgs84', options);\n}\n\n\n/**\n * Converts a GeoJSON coordinates to the defined `projection`\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON Feature or Geometry\n * @param {string} projection defines the projection system to convert the coordinates to\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n */\nfunction convert(geojson, projection, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n\n    // Handle Position\n    if (Array.isArray(geojson) && isNumber(geojson[0])) geojson = (projection === 'mercator') ? convertToMercator(geojson) : convertToWgs84(geojson);\n\n    // Handle GeoJSON\n    else {\n        // Handle possible data mutation\n        if (mutate !== true) geojson = clone(geojson);\n\n        coordEach(geojson, function (coord) {\n            var newCoord = (projection === 'mercator') ? convertToMercator(coord) : convertToWgs84(coord);\n            coord[0] = newCoord[0];\n            coord[1] = newCoord[1];\n        });\n    }\n    return geojson;\n}\n\n/**\n * Convert lon/lat values to 900913 x/y.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} lonLat WGS84 point\n * @returns {Array<number>} Mercator [x, y] point\n */\nfunction convertToMercator(lonLat) {\n    var D2R = Math.PI / 180,\n        // 900913 properties\n        A = 6378137.0,\n        MAXEXTENT = 20037508.342789244;\n\n    // compensate longitudes passing the 180th meridian\n    // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\n    var adjusted = (Math.abs(lonLat[0]) <= 180) ? lonLat[0] : (lonLat[0] - (sign(lonLat[0]) * 360));\n    var xy = [\n        A * adjusted * D2R,\n        A * Math.log(Math.tan((Math.PI * 0.25) + (0.5 * lonLat[1] * D2R)))\n    ];\n\n    // if xy value is beyond maxextent (e.g. poles), return maxextent\n    if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n    if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n    if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n    if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n\n    return xy;\n}\n\n/**\n * Convert 900913 x/y values to lon/lat.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} xy Mercator [x, y] point\n * @returns {Array<number>} WGS84 [lon, lat] point\n */\nfunction convertToWgs84(xy) {\n    // 900913 properties.\n    var R2D = 180 / Math.PI;\n    var A = 6378137.0;\n\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI * 0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n}\n\n/**\n * Returns the sign of the input, or zero\n *\n * @private\n * @param {number} x input\n * @returns {number} -1|0|1 output\n */\nfunction sign(x) {\n    return (x < 0) ? -1 : (x > 0) ? 1 : 0;\n}\n\n\n\n\nvar main_es$3 = Object.freeze({\n\ttoMercator: toMercator,\n\ttoWgs84: toWgs84\n});\n\n// (logic of computation inspired by:\n// https://stackoverflow.com/questions/32771458/distance-from-lat-lng-point-to-minor-arc-segment)\n\n/**\n * Returns the minimum distance between a {@link Point} and a {@link LineString}, being the distance from a line the\n * minimum distance between the point and any segment of the `LineString`.\n *\n * @name pointToLineDistance\n * @param {Coord} pt Feature or Geometry\n * @param {Feature<LineString>} line GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.mercator=false] if distance should be on Mercator or WGS84 projection\n * @returns {number} distance between point and line\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[1, 1],[-1, 1]]);\n *\n * var distance = turf.pointToLineDistance(pt, line, {units: 'miles'});\n * //=69.11854715938406\n */\nfunction pointToLineDistance(pt, line, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // validation\n    if (!pt) throw new Error('pt is required');\n    if (Array.isArray(pt)) pt = point(pt);\n    else if (pt.type === 'Point') pt = feature(pt);\n    else featureOf(pt, 'Point', 'point');\n\n    if (!line) throw new Error('line is required');\n    if (Array.isArray(line)) line = lineString(line);\n    else if (line.type === 'LineString') line = feature(line);\n    else featureOf(line, 'LineString', 'line');\n\n    var distance$$1 = Infinity;\n    var p = pt.geometry.coordinates;\n    segmentEach(line, function (segment) {\n        var a = segment.geometry.coordinates[0];\n        var b = segment.geometry.coordinates[1];\n        var d = distanceToSegment(p, a, b, options);\n        if (distance$$1 > d) distance$$1 = d;\n    });\n    return distance$$1;\n}\n\n\n/**\n * Returns the distance between a point P on a segment AB.\n *\n * @private\n * @param {Array<number>} p external point\n * @param {Array<number>} a first segment point\n * @param {Array<number>} b second segment point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.mercator=false] if distance should be on Mercator or WGS84 projection\n * @returns {number} distance\n */\nfunction distanceToSegment(p, a, b, options) {\n    var mercator = options.mercator;\n    var distanceAP = (mercator !== true) ? distance(a, p, options) : euclideanDistance(a, p, options);\n    var azimuthAP = bearingToAzimuth((mercator !== true) ? bearing(a, p) : rhumbBearing(a, p));\n    var azimuthAB = bearingToAzimuth((mercator !== true) ? bearing(a, b) : rhumbBearing(a, b));\n    var angleA = Math.abs(azimuthAP - azimuthAB);\n    // if (angleA > 180) angleA = Math.abs(angleA - 360);\n    // if the angle PAB is obtuse its projection on the line extending the segment falls outside the segment\n    // thus return distance between P and the start point A\n    /*\n        P__\n        |\\ \\____\n        | \\     \\____\n        |  \\         \\____\n        |   \\_____________\\\n        H    A             B\n     */\n    if (angleA > 90) return distanceAP;\n\n    var azimuthBA = (azimuthAB + 180) % 360;\n    var azimuthBP = bearingToAzimuth((mercator !== true) ? bearing(b, p) : rhumbBearing(b, p));\n    var angleB = Math.abs(azimuthBP - azimuthBA);\n    if (angleB > 180) angleB = Math.abs(angleB - 360);\n    // also if the angle ABP is acute the projection of P falls outside the segment, on the other side\n    // so return the distance between P and the end point B\n    /*\n                        ____P\n                   ____/   /|\n              ____/       / |\n         ____/           /  |\n        /______________/    |\n       A               B    H\n    */\n    if (angleB > 90) return (mercator !== true) ? distance(p, b, options) : euclideanDistance(p, b, options);\n    // finally if the projection falls inside the segment\n    // return the distance between P and the segment\n    /*\n                     P\n                  __/|\\\n               __/   | \\\n            __/      |  \\\n         __/         |   \\\n        /____________|____\\\n       A             H     B\n    */\n    if (mercator !== true) return distanceAP * Math.sin(degreesToRadians(angleA));\n    return mercatorPH(a, b, p, options);\n}\n\n/**\n * Returns the distance between a point P on a segment AB, on Mercator projection\n *\n * @private\n * @param {Array<number>} a first segment point\n * @param {Array<number>} b second segment point\n * @param {Array<number>} p external point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance\n */\nfunction mercatorPH(a, b, p, options) {\n    var delta = 0;\n    // translate points if any is crossing the 180th meridian\n    if (Math.abs(a[0]) >= 180 || Math.abs(b[0]) >= 180 || Math.abs(p[0]) >= 180) {\n        delta = (a[0] > 0 || b[0] > 0 || p[0] > 0) ? -180 : 180;\n    }\n\n    var origin = point(p);\n    var A = toMercator([a[0] + delta, a[1]]);\n    var B = toMercator([b[0] + delta, b[1]]);\n    var P = toMercator([p[0] + delta, p[1]]);\n    var h = toWgs84(euclideanIntersection(A, B, P));\n\n    if (delta !== 0) h[0] -= delta; // translate back to original position\n    var distancePH = rhumbDistance(origin, h, options);\n    return distancePH;\n}\n\n/**\n * Returns the point H projection of a point P on a segment AB, on the euclidean plain\n * from https://stackoverflow.com/questions/10301001/perpendicular-on-a-line-segment-from-a-given-point#answer-12499474\n *            P\n *           |\n *           |\n *  _________|____\n * A          H   B\n *\n * @private\n * @param {Array<number>} a first segment point\n * @param {Array<number>} b second segment point\n * @param {Array<number>} p external point\n * @returns {Array<number>} projected point\n */\nfunction euclideanIntersection(a, b, p) {\n    var x1 = a[0], y1 = a[1],\n        x2 = b[0], y2 = b[1],\n        x3 = p[0], y3 = p[1];\n    var px = x2 - x1, py = y2 - y1;\n    var dab = px * px + py * py;\n    var u = ((x3 - x1) * px + (y3 - y1) * py) / dab;\n    var x = x1 + u * px, y = y1 + u * py;\n    return [x, y]; // H\n}\n\n/**\n * Returns euclidean distance between two points\n *\n * @private\n * @param {Object} from first point\n * @param {Object} to second point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} squared distance\n */\nfunction euclideanDistance(from, to, options) {\n    var units = options.units;\n    // translate points if any is crossing the 180th meridian\n    var delta = 0;\n    if (Math.abs(from[0]) >= 180) {\n        delta = (from[0] > 0) ? -180 : 180;\n    }\n    if (Math.abs(to[0]) >= 180) {\n        delta = (to[0] > 0) ? -180 : 180;\n    }\n    var p1 = toMercator([from[0] + delta, from[1]]);\n    var p2 = toMercator([to[0] + delta, to[1]]);\n\n    var sqr = function (n) { return n * n; };\n    var squareD = sqr(p1[0] - p2[0]) + sqr(p1[1] - p2[1]);\n    var d = Math.sqrt(squareD);\n    return convertLength(d, 'meters', units);\n}\n\n/**\n * Returns the closest {@link Point|point}, of a {@link FeatureCollection|collection} of points, to a {@link LineString|line}.\n * The returned point has a `dist` property indicating its distance to the line.\n *\n * @name nearestPointToLine\n * @param {FeatureCollection|GeometryCollection<Point>} points Point Collection\n * @param {Feature|Geometry<LineString>} line Line Feature\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units='kilometers'] unit of the output distance property, can be degrees, radians, miles, or kilometers\n * @param {Object} [options.properties={}] Translate Properties to Point\n * @returns {Feature<Point>} the closest point\n * @example\n * var pt1 = turf.point([0, 0]);\n * var pt2 = turf.point([0.5, 0.5]);\n * var points = turf.featureCollection([pt1, pt2]);\n * var line = turf.lineString([[1,1], [-1,1]]);\n *\n * var nearest = turf.nearestPointToLine(points, line);\n *\n * //addToMap\n * var addToMap = [nearest, line];\n */\nfunction nearestPointToLine(points$$1, line, options) {\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var properties = options.properties || {};\n\n    // validation\n    if (!points$$1) throw new Error('points is required');\n    points$$1 = normalize(points$$1);\n    if (!points$$1.features.length) throw new Error('points must contain features');\n\n    if (!line) throw new Error('line is required');\n    if (getType(line) !== 'LineString') throw new Error('line must be a LineString');\n\n    var dist = Infinity;\n    var pt = null;\n\n    featureEach(points$$1, function (point$$1) {\n        var d = pointToLineDistance(point$$1, line, { units: units });\n        if (d < dist) {\n            dist = d;\n            pt = point$$1;\n        }\n    });\n    /**\n     * Translate Properties to final Point, priorities:\n     * 1. options.properties\n     * 2. inherent Point properties\n     * 3. dist custom properties created by NearestPointToLine\n     */\n    if (pt) pt.properties = Object.assign({dist: dist}, pt.properties, properties);\n    return pt;\n}\n\n/**\n * Convert Collection to FeatureCollection\n *\n * @private\n * @param {FeatureCollection|GeometryCollection<Point>} points Points\n * @returns {FeatureCollection<Point>} points\n */\nfunction normalize(points$$1) {\n    var features = [];\n    var type = points$$1.geometry ? points$$1.geometry.type : points$$1.type;\n    switch (type) {\n    case 'GeometryCollection':\n        geomEach(points$$1, function (geom) {\n            if (geom.type === 'Point') features.push({type: 'Feature', properties: {}, geometry: geom});\n        });\n        return {type: 'FeatureCollection', features: features};\n    case 'FeatureCollection':\n        points$$1.features = points$$1.features.filter(function (feature$$1) {\n            return feature$$1.geometry.type === 'Point';\n        });\n        return points$$1;\n    default:\n        throw new Error('points must be a Point Collection');\n    }\n}\n\n/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon should have properties `a`, `b`, and `c`\n * that define the values at its three corners. Alternatively, the z-values\n * of each triangle point can be provided by their respective 3rd coordinate\n * if their values are not provided as properties.\n *\n * @name planepoint\n * @param {Coord} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @returns {number} the z-value for `interpolatedPoint`\n * @example\n * var point = turf.point([-75.3221, 39.529]);\n * // \"a\", \"b\", and \"c\" values represent the values of the coordinates in order.\n * var triangle = turf.polygon([[\n *   [-75.1221, 39.57],\n *   [-75.58, 39.18],\n *   [-75.97, 39.86],\n *   [-75.1221, 39.57]\n * ]], {\n *   \"a\": 11,\n *   \"b\": 122,\n *   \"c\": 44\n * });\n *\n * var zValue = turf.planepoint(point, triangle);\n * point.properties.zValue = zValue;\n *\n * //addToMap\n * var addToMap = [triangle, point];\n */\nfunction planepoint(point, triangle) {\n    // Normalize input\n    var coord = getCoord(point);\n    var geom = getGeom(triangle);\n    var coords = geom.coordinates;\n    var outer = coords[0];\n    if (outer.length < 4) throw new Error('OuterRing of a Polygon must have 4 or more Positions.');\n    var properties = triangle.properties || {};\n    var a = properties.a;\n    var b = properties.b;\n    var c = properties.c;\n\n    // Planepoint\n    var x = coord[0];\n    var y = coord[1];\n    var x1 = outer[0][0];\n    var y1 = outer[0][1];\n    var z1 = (a !== undefined ? a : outer[0][2]);\n    var x2 = outer[1][0];\n    var y2 = outer[1][1];\n    var z2 = (b !== undefined ? b : outer[1][2]);\n    var x3 = outer[2][0];\n    var y3 = outer[2][1];\n    var z3 = (c !== undefined ? c : outer[2][2]);\n    var z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) -\n             z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) /\n           ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) -\n            (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n\n    return z;\n}\n\n/**\n * Takes a {@link LineString|linestring}, {@link MultiLineString|multi-linestring}, {@link MultiPolygon|multi-polygon}, or {@link Polygon|polygon} and returns {@link Point|points} at all self-intersections.\n *\n * @name kinks\n * @param {Feature<LineString|MultiLineString|MultiPolygon|Polygon>} featureIn input feature\n * @returns {FeatureCollection<Point>} self-intersections\n * @example\n * var poly = turf.polygon([[\n *   [-12.034835, 8.901183],\n *   [-12.060413, 8.899826],\n *   [-12.03638, 8.873199],\n *   [-12.059383, 8.871418],\n *   [-12.034835, 8.901183]\n * ]]);\n *\n * var kinks = turf.kinks(poly);\n *\n * //addToMap\n * var addToMap = [poly, kinks]\n */\nfunction kinks(featureIn) {\n    var coordinates;\n    var feature$$1;\n    var results = {\n        type: 'FeatureCollection',\n        features: []\n    };\n    if (featureIn.type === 'Feature') {\n        feature$$1 = featureIn.geometry;\n    } else {\n        feature$$1 = featureIn;\n    }\n    if (feature$$1.type === 'LineString') {\n        coordinates = [feature$$1.coordinates];\n    } else if (feature$$1.type === 'MultiLineString') {\n        coordinates = feature$$1.coordinates;\n    } else if (feature$$1.type === 'MultiPolygon') {\n        coordinates = [].concat.apply([], feature$$1.coordinates);\n    } else if (feature$$1.type === 'Polygon') {\n        coordinates = feature$$1.coordinates;\n    } else {\n        throw new Error('Input must be a LineString, MultiLineString, ' +\n            'Polygon, or MultiPolygon Feature or Geometry');\n    }\n    coordinates.forEach(function (line1) {\n        coordinates.forEach(function (line2) {\n            for (var i = 0; i < line1.length - 1; i++) {\n                // start iteration at i, intersections for k < i have already been checked in previous outer loop iterations\n                for (var k = i; k < line2.length - 1; k++) {\n                    if (line1 === line2) {\n                        // segments are adjacent and always share a vertex, not a kink\n                        if (Math.abs(i - k) === 1) {\n                            continue;\n                        }\n                        // first and last segment in a closed lineString or ring always share a vertex, not a kink\n                        if (\n                            // segments are first and last segment of lineString\n                            i === 0 &&\n                            k === line1.length - 2 &&\n                            // lineString is closed\n                            line1[i][0] === line1[line1.length - 1][0] &&\n                            line1[i][1] === line1[line1.length - 1][1]\n                        ) {\n                            continue;\n                        }\n                    }\n\n                    var intersection = lineIntersects(line1[i][0], line1[i][1], line1[i + 1][0], line1[i + 1][1],\n                        line2[k][0], line2[k][1], line2[k + 1][0], line2[k + 1][1]);\n                    if (intersection) {\n                        results.features.push(point([intersection[0], intersection[1]]));\n                    }\n                }\n            }\n        });\n    });\n    return results;\n}\n\n\n// modified from http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n    var denominator, a, b, numerator1, numerator2,\n        result = {\n            x: null,\n            y: null,\n            onLine1: false,\n            onLine2: false\n        };\n    denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        } else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n    numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    // if we cast these lines infinitely in both directions, they intersect here:\n    result.x = line1StartX + (a * (line1EndX - line1StartX));\n    result.y = line1StartY + (a * (line1EndY - line1StartY));\n\n    // if line1 is a segment and line2 is infinite, they intersect if:\n    if (a >= 0 && a <= 1) {\n        result.onLine1 = true;\n    }\n    // if line2 is a segment and line1 is infinite, they intersect if:\n    if (b >= 0 && b <= 1) {\n        result.onLine2 = true;\n    }\n    // if line1 and line2 are segments, they intersect if both of the above are true\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    } else {\n        return false;\n    }\n}\n\n/**\n * Takes a Feature or FeatureCollection and returns a {@link Point} guaranteed to be on the surface of the feature.\n *\n * * Given a {@link Polygon}, the point will be in the area of the polygon\n * * Given a {@link LineString}, the point will be along the string\n * * Given a {@link Point}, the point will the same as the input\n *\n * @name pointOnFeature\n * @param {GeoJSON} geojson any Feature or FeatureCollection\n * @returns {Feature<Point>} a point on the surface of `input`\n * @example\n * var polygon = turf.polygon([[\n *   [116, -36],\n *   [131, -32],\n *   [146, -43],\n *   [155, -25],\n *   [133, -9],\n *   [111, -22],\n *   [116, -36]\n * ]]);\n *\n * var pointOnPolygon = turf.pointOnFeature(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, pointOnPolygon];\n */\nfunction pointOnFeature(geojson) {\n    // normalize\n    var fc = normalize$1(geojson);\n\n    // get centroid\n    var cent = center(fc);\n\n    // check to see if centroid is on surface\n    var onSurface = false;\n    var i = 0;\n    while (!onSurface && i < fc.features.length) {\n        var geom = fc.features[i].geometry;\n        var x, y, x1, y1, x2, y2, k;\n        var onLine = false;\n        if (geom.type === 'Point') {\n            if (cent.geometry.coordinates[0] === geom.coordinates[0] &&\n                cent.geometry.coordinates[1] === geom.coordinates[1]) {\n                onSurface = true;\n            }\n        } else if (geom.type === 'MultiPoint') {\n            var onMultiPoint = false;\n            k = 0;\n            while (!onMultiPoint && k < geom.coordinates.length) {\n                if (cent.geometry.coordinates[0] === geom.coordinates[k][0] &&\n          cent.geometry.coordinates[1] === geom.coordinates[k][1]) {\n                    onSurface = true;\n                    onMultiPoint = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'LineString') {\n            k = 0;\n            while (!onLine && k < geom.coordinates.length - 1) {\n                x = cent.geometry.coordinates[0];\n                y = cent.geometry.coordinates[1];\n                x1 = geom.coordinates[k][0];\n                y1 = geom.coordinates[k][1];\n                x2 = geom.coordinates[k + 1][0];\n                y2 = geom.coordinates[k + 1][1];\n                if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                    onLine = true;\n                    onSurface = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'MultiLineString') {\n            var j = 0;\n            while (j < geom.coordinates.length) {\n                onLine = false;\n                k = 0;\n                var line = geom.coordinates[j];\n                while (!onLine && k < line.length - 1) {\n                    x = cent.geometry.coordinates[0];\n                    y = cent.geometry.coordinates[1];\n                    x1 = line[k][0];\n                    y1 = line[k][1];\n                    x2 = line[k + 1][0];\n                    y2 = line[k + 1][1];\n                    if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                        onLine = true;\n                        onSurface = true;\n                    }\n                    k++;\n                }\n                j++;\n            }\n        } else if (geom.type === 'Polygon' || geom.type === 'MultiPolygon') {\n            if (booleanPointInPolygon(cent, geom)) {\n                onSurface = true;\n            }\n        }\n        i++;\n    }\n    if (onSurface) {\n        return cent;\n    } else {\n        var vertices = featureCollection([]);\n        for (i = 0; i < fc.features.length; i++) {\n            vertices.features = vertices.features.concat(explode(fc.features[i]).features);\n        }\n        // Remove distanceToPoint properties from nearestPoint()\n        return point(nearestPoint(cent, vertices).geometry.coordinates);\n    }\n}\n\n/**\n * Normalizes any GeoJSON to a FeatureCollection\n *\n * @private\n * @name normalize\n * @param {GeoJSON} geojson Any GeoJSON\n * @returns {FeatureCollection} FeatureCollection\n */\nfunction normalize$1(geojson) {\n    if (geojson.type !== 'FeatureCollection') {\n        if (geojson.type !== 'Feature') {\n            return featureCollection([feature(geojson)]);\n        }\n        return featureCollection([geojson]);\n    }\n    return geojson;\n}\n\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n    var ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    var ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n    var pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n    return ab === ap + pb;\n}\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area$1(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\n/**\n * Takes a {@link LineString} and returns a {@link Point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} Point `distance` `units` along the line\n * @example\n * var line = turf.lineString([[-83, 30], [-84, 36], [-78, 41]]);\n * var options = {units: 'miles'};\n *\n * var along = turf.along(line, 200, options);\n *\n * //addToMap\n * var addToMap = [along, line]\n */\nfunction along(line, distance$$1, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // Validation\n    var coords;\n    if (line.type === 'Feature') coords = line.geometry.coordinates;\n    else if (line.type === 'LineString') coords = line.coordinates;\n    else throw new Error('input must be a LineString Feature or Geometry');\n    if (!isNumber(distance$$1)) throw new Error('distance must be a number');\n\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance$$1 >= travelled && i === coords.length - 1) break;\n        else if (travelled >= distance$$1) {\n            var overshot = distance$$1 - travelled;\n            if (!overshot) return point(coords[i]);\n            else {\n                var direction = bearing(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination(coords[i], overshot, direction, options);\n                return interpolated;\n            }\n        } else {\n            travelled += distance(coords[i], coords[i + 1], options);\n        }\n    }\n    return point(coords[coords.length - 1]);\n}\n\n/**\n * Takes a {@link GeoJSON} and measures its length in the specified units, {@link (Multi)Point}'s distance are ignored.\n *\n * @name length\n * @param {GeoJSON} geojson GeoJSON to measure\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {number} length of GeoJSON\n * @example\n * var line = turf.lineString([[115, -32], [131, -22], [143, -25], [150, -34]]);\n * var length = turf.length(line, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line];\n * line.properties.distance = length;\n */\nfunction length(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // Input Validation\n    if (!geojson) throw new Error('geojson is required');\n\n    // Calculate distance from 2-vertex line segements\n    return segmentReduce(geojson, function (previousValue, segment) {\n        var coords = segment.geometry.coordinates;\n        return previousValue + distance(coords[0], coords[1], options);\n    }, 0);\n}\n\n/**\n * Takes a {@link LineString|line}, a start {@link Point}, and a stop point\n * and returns a subsection of the line in-between those points.\n * The start & stop points don't need to fall exactly on the line.\n *\n * This can be useful for extracting only the part of a route between waypoints.\n *\n * @name lineSlice\n * @param {Coord} startPt starting point\n * @param {Coord} stopPt stopping point\n * @param {Feature<LineString>|LineString} line line to slice\n * @returns {Feature<LineString>} sliced line\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var start = turf.point([-77.029609, 38.881946]);\n * var stop = turf.point([-77.021884, 38.889563]);\n *\n * var sliced = turf.lineSlice(start, stop, line);\n *\n * //addToMap\n * var addToMap = [start, stop, line]\n */\nfunction lineSlice(startPt, stopPt, line) {\n    // Validation\n    var coords = getCoords(line);\n    if (getType(line) !== 'LineString') throw new Error('line must be a LineString');\n\n    var startVertex = nearestPointOnLine(line, startPt);\n    var stopVertex = nearestPointOnLine(line, stopPt);\n    var ends;\n    if (startVertex.properties.index <= stopVertex.properties.index) {\n        ends = [startVertex, stopVertex];\n    } else {\n        ends = [stopVertex, startVertex];\n    }\n    var clipCoords = [ends[0].geometry.coordinates];\n    for (var i = ends[0].properties.index + 1; i < ends[1].properties.index + 1; i++) {\n        clipCoords.push(coords[i]);\n    }\n    clipCoords.push(ends[1].geometry.coordinates);\n    return lineString(clipCoords, line.properties);\n}\n\n/**\n * Takes a {@link LineString|line}, a specified distance along the line to a start {@link Point},\n * and a specified  distance along the line to a stop point\n * and returns a subsection of the line in-between those points.\n *\n * This can be useful for extracting only the part of a route between two distances.\n *\n * @name lineSliceAlong\n * @param {Feature<LineString>|LineString} line input line\n * @param {number} startDist distance along the line to starting point\n * @param {number} stopDist distance along the line to ending point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<LineString>} sliced line\n * @example\n * var line = turf.lineString([[7, 45], [9, 45], [14, 40], [14, 41]]);\n * var start = 12.5;\n * var stop = 25;\n * var sliced = turf.lineSliceAlong(line, start, stop, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, start, stop, sliced]\n */\nfunction lineSliceAlong(line, startDist, stopDist, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    var coords;\n    var slice = [];\n\n    // Validation\n    if (line.type === 'Feature') coords = line.geometry.coordinates;\n    else if (line.type === 'LineString') coords = line.coordinates;\n    else throw new Error('input must be a LineString Feature or Geometry');\n\n    var travelled = 0;\n    var overshot, direction, interpolated;\n    for (var i = 0; i < coords.length; i++) {\n        if (startDist >= travelled && i === coords.length - 1) break;\n        else if (travelled > startDist && slice.length === 0) {\n            overshot = startDist - travelled;\n            if (!overshot) {\n                slice.push(coords[i]);\n                return lineString(slice);\n            }\n            direction = bearing(coords[i], coords[i - 1]) - 180;\n            interpolated = destination(coords[i], overshot, direction, options);\n            slice.push(interpolated.geometry.coordinates);\n        }\n\n        if (travelled >= stopDist) {\n            overshot = stopDist - travelled;\n            if (!overshot) {\n                slice.push(coords[i]);\n                return lineString(slice);\n            }\n            direction = bearing(coords[i], coords[i - 1]) - 180;\n            interpolated = destination(coords[i], overshot, direction, options);\n            slice.push(interpolated.geometry.coordinates);\n            return lineString(slice);\n        }\n\n        if (travelled >= startDist) {\n            slice.push(coords[i]);\n        }\n\n        if (i === coords.length - 1) {\n            return lineString(slice);\n        }\n\n        travelled += distance(coords[i], coords[i + 1], options);\n    }\n    return lineString(coords[coords.length - 1]);\n}\n\n/**\n * Returns true if a point is on a line. Accepts a optional parameter to ignore the start and end vertices of the linestring.\n *\n * @name booleanPointOnLine\n * @param {Coord} pt GeoJSON Point\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreEndVertices=false] whether to ignore the start and end vertices.\n * @returns {boolean} true/false\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[-1, -1],[1, 1],[1.5, 2.2]]);\n * var isPointOnLine = turf.booleanPointOnLine(pt, line);\n * //=true\n */\nfunction booleanPointOnLine(pt, line, options) {\n    // Optional parameters\n    options = options || {};\n    var ignoreEndVertices = options.ignoreEndVertices;\n    if (!isObject(options)) throw new Error('invalid options');\n\n    // Validate input\n    if (!pt) throw new Error('pt is required');\n    if (!line) throw new Error('line is required');\n\n    // Normalize inputs\n    var ptCoords = getCoord(pt);\n    var lineCoords = getCoords(line);\n\n    // Main\n    for (var i = 0; i < lineCoords.length - 1; i++) {\n        var ignoreBoundary = false;\n        if (ignoreEndVertices) {\n            if (i === 0) ignoreBoundary = 'start';\n            if (i === lineCoords.length - 2) ignoreBoundary = 'end';\n            if (i === 0 && i + 1 === lineCoords.length - 1) ignoreBoundary = 'both';\n        }\n        if (isPointOnLineSegment$1(lineCoords[i], lineCoords[i + 1], ptCoords, ignoreBoundary)) return true;\n    }\n    return false;\n}\n\n// See http://stackoverflow.com/a/4833823/1979085\n/**\n * @private\n * @param {Position} lineSegmentStart coord pair of start of line\n * @param {Position} lineSegmentEnd coord pair of end of line\n * @param {Position} pt coord pair of point to check\n * @param {boolean|string} excludeBoundary whether the point is allowed to fall on the line ends. If true which end to ignore.\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment$1(lineSegmentStart, lineSegmentEnd, pt, excludeBoundary) {\n    var x = pt[0];\n    var y = pt[1];\n    var x1 = lineSegmentStart[0];\n    var y1 = lineSegmentStart[1];\n    var x2 = lineSegmentEnd[0];\n    var y2 = lineSegmentEnd[1];\n    var dxc = pt[0] - x1;\n    var dyc = pt[1] - y1;\n    var dxl = x2 - x1;\n    var dyl = y2 - y1;\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (!excludeBoundary) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n    } else if (excludeBoundary === 'start') {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n    } else if (excludeBoundary === 'end') {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n    } else if (excludeBoundary === 'both') {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n    }\n}\n\n/**\n * Boolean-within returns true if the first geometry is completely within the second geometry.\n * The interiors of both geometries must intersect and, the interior and boundary of the primary (geometry a)\n * must not intersect the exterior of the secondary (geometry b).\n * Boolean-within returns the exact opposite result of the `@turf/boolean-contains`.\n *\n * @name booleanWithin\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n * var point = turf.point([1, 2]);\n *\n * turf.booleanWithin(point, line);\n * //=true\n */\nfunction booleanWithin(feature1, feature2) {\n    var type1 = getType(feature1);\n    var type2 = getType(feature2);\n    var geom1 = getGeom(feature1);\n    var geom2 = getGeom(feature2);\n\n    switch (type1) {\n    case 'Point':\n        switch (type2) {\n        case 'MultiPoint':\n            return isPointInMultiPoint(geom1, geom2);\n        case 'LineString':\n            return booleanPointOnLine(geom1, geom2, {ignoreEndVertices: true});\n        case 'Polygon':\n            return booleanPointInPolygon(geom1, geom2, {ignoreBoundary: true});\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'MultiPoint':\n        switch (type2) {\n        case 'MultiPoint':\n            return isMultiPointInMultiPoint(geom1, geom2);\n        case 'LineString':\n            return isMultiPointOnLine(geom1, geom2);\n        case 'Polygon':\n            return isMultiPointInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'LineString':\n        switch (type2) {\n        case 'LineString':\n            return isLineOnLine(geom1, geom2);\n        case 'Polygon':\n            return isLineInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'Polygon':\n        switch (type2) {\n        case 'Polygon':\n            return isPolyInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    default:\n        throw new Error('feature1 ' + type1 + ' geometry not supported');\n    }\n}\n\nfunction isPointInMultiPoint(point, multiPoint) {\n    var i;\n    var output = false;\n    for (i = 0; i < multiPoint.coordinates.length; i++) {\n        if (compareCoords(multiPoint.coordinates[i], point.coordinates)) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n\nfunction isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n    for (var i = 0; i < multiPoint1.coordinates.length; i++) {\n        var anyMatch = false;\n        for (var i2 = 0; i2 < multiPoint2.coordinates.length; i2++) {\n            if (compareCoords(multiPoint1.coordinates[i], multiPoint2.coordinates[i2])) {\n                anyMatch = true;\n            }\n        }\n        if (!anyMatch) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isMultiPointOnLine(multiPoint, lineString) {\n    var foundInsidePoint = false;\n\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (!booleanPointOnLine(multiPoint.coordinates[i], lineString)) {\n            return false;\n        }\n        if (!foundInsidePoint) {\n            foundInsidePoint = booleanPointOnLine(multiPoint.coordinates[i], lineString, {ignoreEndVertices: true});\n        }\n    }\n    return foundInsidePoint;\n}\n\nfunction isMultiPointInPoly(multiPoint, polygon) {\n    var output = true;\n    var oneInside = false;\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        var isInside = booleanPointInPolygon(multiPoint.coordinates[1], polygon);\n        if (!isInside) {\n            output = false;\n            break;\n        }\n        if (!oneInside) {\n            isInside = booleanPointInPolygon(multiPoint.coordinates[1], polygon, {ignoreBoundary: true});\n        }\n    }\n    return output && isInside;\n}\n\nfunction isLineOnLine(lineString1, lineString2) {\n    for (var i = 0; i < lineString1.coordinates.length; i++) {\n        if (!booleanPointOnLine(lineString1.coordinates[i], lineString2)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isLineInPoly(linestring, polygon) {\n    var polyBbox = bbox(polygon);\n    var lineBbox = bbox(linestring);\n    if (!doBBoxOverlap(polyBbox, lineBbox)) {\n        return false;\n    }\n    var foundInsidePoint = false;\n\n    for (var i = 0; i < linestring.coordinates.length - 1; i++) {\n        if (!booleanPointInPolygon(linestring.coordinates[i], polygon)) {\n            return false;\n        }\n        if (!foundInsidePoint) {\n            foundInsidePoint = booleanPointInPolygon(linestring.coordinates[i], polygon, {ignoreBoundary: true});\n        }\n        if (!foundInsidePoint) {\n            var midpoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n            foundInsidePoint = booleanPointInPolygon(midpoint, polygon, {ignoreBoundary: true});\n\n        }\n    }\n    return foundInsidePoint;\n}\n\n/**\n * Is Polygon2 in Polygon1\n * Only takes into account outer rings\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    var poly1Bbox = bbox(feature1);\n    var poly2Bbox = bbox(feature2);\n    if (!doBBoxOverlap(poly2Bbox, poly1Bbox)) {\n        return false;\n    }\n    for (var i = 0; i < feature1.coordinates[0].length; i++) {\n        if (!booleanPointInPolygon(feature1.coordinates[0][i], feature2)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction doBBoxOverlap(bbox1, bbox2) {\n    if (bbox1[0] > bbox2[0]) return false;\n    if (bbox1[2] < bbox2[2]) return false;\n    if (bbox1[1] > bbox2[1]) return false;\n    if (bbox1[3] < bbox2[3]) return false;\n    return true;\n}\n\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\n\n/**\n * getMidpoint\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {Position} midpoint of pair1 and pair2\n */\nfunction getMidpoint(pair1, pair2) {\n    return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\n\n/**\n * Creates a {@link Point} grid from a bounding box, {@link FeatureCollection} or {@link Feature}.\n *\n * @name pointGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide the distance between points, in units\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellSide = 3;\n * var options = {units: 'miles'};\n *\n * var grid = turf.pointGrid(extent, cellSide, options);\n *\n * //addToMap\n * var addToMap = [grid];\n */\nfunction pointGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var mask = options.mask;\n    var properties = options.properties;\n\n    // Containers\n    var results = [];\n\n    // Input Validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var xFraction = cellSide / (distance([west, south], [east, south], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide / (distance([west, south], [west, north], options));\n    var cellHeight = yFraction * (north - south);\n\n    var bboxWidth = (east - west);\n    var bboxHeight = (north - south);\n    var columns = Math.floor(bboxWidth / cellWidth);\n    var rows = Math.floor(bboxHeight / cellHeight);\n    // adjust origin of the grid\n    var deltaX = (bboxWidth - columns * cellWidth) / 2;\n    var deltaY = (bboxHeight - rows * cellHeight) / 2;\n\n    var currentX = west + deltaX;\n    while (currentX <= east) {\n        var currentY = south + deltaY;\n        while (currentY <= north) {\n            var cellPt = point([currentX, currentY], properties);\n            if (mask) {\n                if (booleanWithin(cellPt, mask)) results.push(cellPt);\n            } else {\n                results.push(cellPt);\n            }\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return featureCollection(results);\n}\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\n/**\n * Flattens any {@link GeoJSON} to a {@link FeatureCollection} inspired by [geojson-flatten](https://github.com/tmcw/geojson-flatten).\n *\n * @name flatten\n * @param {GeoJSON} geojson any valid GeoJSON Object\n * @returns {FeatureCollection<any>} all Multi-Geometries are flattened into single Features\n * @example\n * var multiGeometry = turf.multiPolygon([\n *   [[[102.0, 2.0], [103.0, 2.0], [103.0, 3.0], [102.0, 3.0], [102.0, 2.0]]],\n *   [[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]],\n *   [[100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2]]]\n * ]);\n *\n * var flatten = turf.flatten(multiGeometry);\n *\n * //addToMap\n * var addToMap = [flatten]\n */\nfunction flatten(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    var results = [];\n    flattenEach(geojson, function (feature$$1) {\n        results.push(feature$$1);\n    });\n    return featureCollection(results);\n}\n\n/**\n * Divides a {@link LineString} into chunks of a specified length.\n * If the line is shorter than the segment length then the original line is returned.\n *\n * @name lineChunk\n * @param {FeatureCollection|Geometry|Feature<LineString|MultiLineString>} geojson the lines to split\n * @param {number} segmentLength how long to make each segment\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] units can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.reverse=false] reverses coordinates to start the first chunked segment at the end\n * @returns {FeatureCollection<LineString>} collection of line segments\n * @example\n * var line = turf.lineString([[-95, 40], [-93, 45], [-85, 50]]);\n *\n * var chunk = turf.lineChunk(line, 15, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [chunk];\n */\nfunction lineChunk(geojson, segmentLength, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var reverse = options.reverse;\n\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n    if (segmentLength <= 0) throw new Error('segmentLength must be greater than 0');\n\n    // Container\n    var results = [];\n\n    // Flatten each feature to simple LineString\n    flattenEach(geojson, function (feature$$1) {\n        // reverses coordinates to start the first chunked segment at the end\n        if (reverse) feature$$1.geometry.coordinates = feature$$1.geometry.coordinates.reverse();\n\n        sliceLineSegments(feature$$1, segmentLength, units, function (segment) {\n            results.push(segment);\n        });\n    });\n    return featureCollection(results);\n}\n\n/**\n * Slice Line Segments\n *\n * @private\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {number} segmentLength how long to make each segment\n * @param {string}[units='kilometers'] units can be degrees, radians, miles, or kilometers\n * @param {Function} callback iterate over sliced line segments\n * @returns {void}\n */\nfunction sliceLineSegments(line, segmentLength, units, callback) {\n    var lineLength = length(line, {units: units});\n\n    // If the line is shorter than the segment length then the orginal line is returned.\n    if (lineLength <= segmentLength) return callback(line);\n\n    var numberOfSegments = lineLength / segmentLength;\n\n    // If numberOfSegments is integer, no need to plus 1\n    if (!Number.isInteger(numberOfSegments)) {\n        numberOfSegments = Math.floor(numberOfSegments) + 1;\n    }\n\n    for (var i = 0; i < numberOfSegments; i++) {\n        var outline = lineSliceAlong(line, segmentLength * i, segmentLength * (i + 1), {units: units});\n        callback(outline, i);\n    }\n}\n\n// Find self-intersections in geojson polygon (possibly with interior rings)\nvar isects = function (feature$$1, filterFn, useSpatialIndex) {\n    if (feature$$1.geometry.type !== 'Polygon') throw new Error('The input feature must be a Polygon');\n    if (useSpatialIndex === undefined) useSpatialIndex = 1;\n\n    var coord = feature$$1.geometry.coordinates;\n\n    var output = [];\n    var seen = {};\n\n    if (useSpatialIndex) {\n        var allEdgesAsRbushTreeItems = [];\n        for (var ring0 = 0; ring0 < coord.length; ring0++) {\n            for (var edge0 = 0; edge0 < coord[ring0].length - 1; edge0++) {\n                allEdgesAsRbushTreeItems.push(rbushTreeItem(ring0, edge0));\n            }\n        }\n        var tree = rbush_1();\n        tree.load(allEdgesAsRbushTreeItems);\n    }\n\n    for (var ringA = 0; ringA < coord.length; ringA++) {\n        for (var edgeA = 0; edgeA < coord[ringA].length - 1; edgeA++) {\n            if (useSpatialIndex) {\n                var bboxOverlaps = tree.search(rbushTreeItem(ringA, edgeA));\n                bboxOverlaps.forEach(function (bboxIsect) {\n                    var ring1 = bboxIsect.ring;\n                    var edge1 = bboxIsect.edge;\n                    ifIsectAddToOutput(ringA, edgeA, ring1, edge1);\n                });\n            } else {\n                for (var ring1 = 0; ring1 < coord.length; ring1++) {\n                    for (var edge1 = 0; edge1 < coord[ring1].length - 1; edge1++) {\n                        // TODO: speedup possible if only interested in unique: start last two loops at ringA and edgeA+1\n                        ifIsectAddToOutput(ringA, edgeA, ring1, edge1);\n                    }\n                }\n            }\n        }\n    }\n\n    if (!filterFn) output = {type: 'Feature', geometry: {type: 'MultiPoint', coordinates: output}};\n    return output;\n\n    // Function to check if two edges intersect and add the intersection to the output\n    function ifIsectAddToOutput(ring0, edge0, ring1, edge1) {\n        var start0 = coord[ring0][edge0];\n        var end0 = coord[ring0][edge0 + 1];\n        var start1 = coord[ring1][edge1];\n        var end1 = coord[ring1][edge1 + 1];\n\n        var isect = intersect(start0, end0, start1, end1);\n\n        if (isect === null) return; // discard parallels and coincidence\n        var frac0;\n        var frac1;\n        if (end0[0] !== start0[0]) {\n            frac0 = (isect[0] - start0[0]) / (end0[0] - start0[0]);\n        } else {\n            frac0 = (isect[1] - start0[1]) / (end0[1] - start0[1]);\n        }\n        if (end1[0] !== start1[0]) {\n            frac1 = (isect[0] - start1[0]) / (end1[0] - start1[0]);\n        } else {\n            frac1 = (isect[1] - start1[1]) / (end1[1] - start1[1]);\n        }\n        if (frac0 >= 1 || frac0 <= 0 || frac1 >= 1 || frac1 <= 0) return; // require segment intersection\n\n        var key = isect;\n        var unique = !seen[key];\n        if (unique) {\n            seen[key] = true;\n        }\n\n        if (filterFn) {\n            output.push(filterFn(isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique));\n        } else {\n            output.push(isect);\n        }\n    }\n\n    // Function to return a rbush tree item given an ring and edge number\n    function rbushTreeItem(ring, edge) {\n\n        var start = coord[ring][edge];\n        var end = coord[ring][edge + 1];\n        var minX;\n        var maxX;\n        var minY;\n        var maxY;\n        if (start[0] < end[0]) {\n            minX = start[0];\n            maxX = end[0];\n        } else {\n            minX = end[0];\n            maxX = start[0];\n        }\n        if (start[1] < end[1]) {\n            minY = start[1];\n            maxY = end[1];\n        } else {\n            minY = end[1];\n            maxY = start[1];\n        }\n        return {minX: minX, minY: minY, maxX: maxX, maxY: maxY, ring: ring, edge: edge};\n    }\n};\n\n// Function to compute where two lines (not segments) intersect. From https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\nfunction intersect(start0, end0, start1, end1) {\n    if (equalArrays$1(start0, start1) || equalArrays$1(start0, end1) || equalArrays$1(end0, start1) || equalArrays$1(end1, start1)) return null;\n    var x0 = start0[0],\n        y0 = start0[1],\n        x1 = end0[0],\n        y1 = end0[1],\n        x2 = start1[0],\n        y2 = start1[1],\n        x3 = end1[0],\n        y3 = end1[1];\n    var denom = (x0 - x1) * (y2 - y3) - (y0 - y1) * (x2 - x3);\n    if (denom === 0) return null;\n    var x4 = ((x0 * y1 - y0 * x1) * (x2 - x3) - (x0 - x1) * (x2 * y3 - y2 * x3)) / denom;\n    var y4 = ((x0 * y1 - y0 * x1) * (y2 - y3) - (y0 - y1) * (x2 * y3 - y2 * x3)) / denom;\n    return [x4, y4];\n}\n\n// Function to compare Arrays of numbers. From http://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript\nfunction equalArrays$1(array1, array2) {\n    // if the other array is a falsy value, return\n    if (!array1 || !array2)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (array1.length !== array2.length)\n        return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!equalArrays$1(array1[i], array2[i]))\n                return false;\n        } else if (array1[i] !== array2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} !== {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Takes a complex (i.e. self-intersecting) geojson polygon, and breaks it down into its composite simple, non-self-intersecting one-ring polygons.\n *\n * @module simplepolygon\n * @param {Feature} feature Input polygon. This polygon may be unconform the {@link https://en.wikipedia.org/wiki/Simple_Features|Simple Features standard} in the sense that it's inner and outer rings may cross-intersect or self-intersect, that the outer ring must not contain the optional inner rings and that the winding number must not be positive for the outer and negative for the inner rings.\n * @return {FeatureCollection} Feature collection containing the simple, non-self-intersecting one-ring polygon features that the complex polygon is composed of. These simple polygons have properties such as their parent polygon, winding number and net winding number.\n *\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[[0,0],[2,0],[0,2],[2,2],[0,0]]]\n *   }\n * };\n *\n * var result = simplepolygon(poly);\n *\n * // =result\n * // which will be a featureCollection of two polygons, one with coordinates [[[0,0],[2,0],[1,1],[0,0]]], parent -1, winding 1 and net winding 1, and one with coordinates [[[1,1],[0,2],[2,2],[1,1]]], parent -1, winding -1 and net winding -1\n */\nvar simplepolygon = function (feature$$1) {\n    // Check input\n    if (feature$$1.type != 'Feature') throw new Error('The input must a geojson object of type Feature');\n    if ((feature$$1.geometry === undefined) || (feature$$1.geometry == null)) throw new Error('The input must a geojson object with a non-empty geometry');\n    if (feature$$1.geometry.type != 'Polygon') throw new Error('The input must be a geojson Polygon');\n\n    // Process input\n    var numRings = feature$$1.geometry.coordinates.length;\n    var vertices = [];\n    for (var i = 0; i < numRings; i++) {\n        var ring = feature$$1.geometry.coordinates[i];\n        if (!equalArrays(ring[0], ring[ring.length - 1])) {\n            ring.push(ring[0]); // Close input ring if it is not\n        }\n        vertices.push.apply(vertices, ring.slice(0, ring.length - 1));\n    }\n    if (!isUnique(vertices)) throw new Error('The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)');\n    var numvertices = vertices.length; // number of input ring vertices, with the last closing vertices not counted\n\n    // Compute self-intersections\n    var selfIsectsData = isects(feature$$1, function filterFn(isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique) {\n        return [isect, ring0, edge0, start0, end0, frac0, ring1, edge1, start1, end1, frac1, unique];\n    });\n    var numSelfIsect = selfIsectsData.length;\n\n    // If no self-intersections are found, the input rings are the output rings. Hence, we must only compute their winding numbers, net winding numbers and (since ohers rings could lie outside the first ring) parents.\n    if (numSelfIsect == 0) {\n        var outputFeatureArray = [];\n        for (var i = 0; i < numRings; i++) {\n            outputFeatureArray.push(polygon([feature$$1.geometry.coordinates[i]], {parent: -1, winding: windingOfRing(feature$$1.geometry.coordinates[i])}));\n        }\n        var output = featureCollection(outputFeatureArray);\n        determineParents();\n        setNetWinding();\n\n        return output;\n    }\n\n    // If self-intersections are found, we will compute the output rings with the help of two intermediate variables\n    // First, we build the pseudo vertex list and intersection list\n    // The Pseudo vertex list is an array with for each ring an array with for each edge an array containing the pseudo-vertices (as made by their constructor) that have this ring and edge as ringAndEdgeIn, sorted for each edge by their fractional distance on this edge. It's length hence equals numRings.\n    var pseudoVtxListByRingAndEdge = [];\n    // The intersection list is an array containing intersections (as made by their constructor). First all numvertices ring-vertex-intersections, then all self-intersections (intra- and inter-ring). The order of the latter is not important but is permanent once given.\n    var isectList = [];\n    // Adding ring-pseudo-vertices to pseudoVtxListByRingAndEdge and ring-vertex-intersections to isectList\n    for (var i = 0; i < numRings; i++) {\n        pseudoVtxListByRingAndEdge.push([]);\n        for (var j = 0; j < feature$$1.geometry.coordinates[i].length - 1; j++) {\n            // Each edge will feature one ring-pseudo-vertex in its array, on the last position. i.e. edge j features the ring-pseudo-vertex of the ring vertex j+1, which has ringAndEdgeIn = [i,j], on the last position.\n            pseudoVtxListByRingAndEdge[i].push([new PseudoVtx(feature$$1.geometry.coordinates[i][(j + 1).modulo(feature$$1.geometry.coordinates[i].length - 1)], 1, [i, j], [i, (j + 1).modulo(feature$$1.geometry.coordinates[i].length - 1)], undefined)]);\n            // The first numvertices elements in isectList correspond to the ring-vertex-intersections\n            isectList.push(new Isect(feature$$1.geometry.coordinates[i][j], [i, (j - 1).modulo(feature$$1.geometry.coordinates[i].length - 1)], [i, j], undefined, undefined, false, true));\n        }\n    }\n    // Adding intersection-pseudo-vertices to pseudoVtxListByRingAndEdge and self-intersections to isectList\n    for (var i = 0; i < numSelfIsect; i++) {\n    // Adding intersection-pseudo-vertices made using selfIsectsData to pseudoVtxListByRingAndEdge's array corresponding to the incomming ring and edge\n        pseudoVtxListByRingAndEdge[selfIsectsData[i][1]][selfIsectsData[i][2]].push(new PseudoVtx(selfIsectsData[i][0], selfIsectsData[i][5], [selfIsectsData[i][1], selfIsectsData[i][2]], [selfIsectsData[i][6], selfIsectsData[i][7]], undefined));\n        // selfIsectsData contains double mentions of each intersection, but we only want to add them once to isectList\n        if (selfIsectsData[i][11]) isectList.push(new Isect(selfIsectsData[i][0], [selfIsectsData[i][1], selfIsectsData[i][2]], [selfIsectsData[i][6], selfIsectsData[i][7]], undefined, undefined, true, true));\n    }\n    var numIsect = isectList.length;\n    // Sort edge arrays of pseudoVtxListByRingAndEdge by the fractional distance 'param'\n    for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n        for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n            pseudoVtxListByRingAndEdge[i][j].sort(function (a, b) { return (a.param < b.param) ? -1 : 1; });\n        }\n    }\n\n    // Make a spatial index of intersections, in preperation for the following two steps\n    var allIsectsAsIsectRbushTreeItem = [];\n    for (var i = 0; i < numIsect; i++) {\n        allIsectsAsIsectRbushTreeItem.push({minX: isectList[i].coord[0], minY: isectList[i].coord[1], maxX: isectList[i].coord[0], maxY: isectList[i].coord[1], index: i}); // could pass isect: isectList[i], but not necessary\n    }\n    var isectRbushTree = rbush_1();\n    isectRbushTree.load(allIsectsAsIsectRbushTreeItem);\n\n    // Now we will teach each intersection in isectList which is the next intersection along both it's [ring, edge]'s, in two steps.\n    // First, we find the next intersection for each pseudo-vertex in pseudoVtxListByRingAndEdge:\n    // For each pseudovertex in pseudoVtxListByRingAndEdge (3 loops) look at the next pseudovertex on that edge and find the corresponding intersection by comparing coordinates\n    for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n        for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n            for (var k = 0; k < pseudoVtxListByRingAndEdge[i][j].length; k++) {\n                var coordToFind;\n                if (k == pseudoVtxListByRingAndEdge[i][j].length - 1) { // If it's the last pseudoVertex on that edge, then the next pseudoVertex is the first one on the next edge of that ring.\n                    coordToFind = pseudoVtxListByRingAndEdge[i][(j + 1).modulo(feature$$1.geometry.coordinates[i].length - 1)][0].coord;\n                } else {\n                    coordToFind = pseudoVtxListByRingAndEdge[i][j][k + 1].coord;\n                }\n                var IsectRbushTreeItemFound = isectRbushTree.search({minX: coordToFind[0], minY: coordToFind[1], maxX: coordToFind[0], maxY: coordToFind[1]})[0]; // We can take [0] of the result, because there is only one isect correponding to a pseudo-vertex\n                pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn = IsectRbushTreeItemFound.index;\n            }\n        }\n    }\n\n    // Second, we port this knowledge of the next intersection over to the intersections in isectList, by finding the intersection corresponding to each pseudo-vertex and copying the pseudo-vertex' knownledge of the next-intersection over to the intersection\n    for (var i = 0; i < pseudoVtxListByRingAndEdge.length; i++) {\n        for (var j = 0; j < pseudoVtxListByRingAndEdge[i].length; j++) {\n            for (var k = 0; k < pseudoVtxListByRingAndEdge[i][j].length; k++) {\n                var coordToFind = pseudoVtxListByRingAndEdge[i][j][k].coord;\n                var IsectRbushTreeItemFound = isectRbushTree.search({minX: coordToFind[0], minY: coordToFind[1], maxX: coordToFind[0], maxY: coordToFind[1]})[0]; // We can take [0] of the result, because there is only one isect correponding to a pseudo-vertex\n                var l = IsectRbushTreeItemFound.index;\n                if (l < numvertices) { // Special treatment at ring-vertices: we correct the misnaming that happened in the previous block, since ringAndEdgeOut = ringAndEdge2 for ring vertices.\n                    isectList[l].nxtIsectAlongRingAndEdge2 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n                } else { // Port the knowledge of the next intersection from the pseudo-vertices to the intersections, depending on how the edges are labeled in the pseudo-vertex and intersection.\n                    if (equalArrays(isectList[l].ringAndEdge1, pseudoVtxListByRingAndEdge[i][j][k].ringAndEdgeIn)) {\n                        isectList[l].nxtIsectAlongRingAndEdge1 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n                    } else {\n                        isectList[l].nxtIsectAlongRingAndEdge2 = pseudoVtxListByRingAndEdge[i][j][k].nxtIsectAlongEdgeIn;\n                    }\n                }\n            }\n        }\n    }\n    // This explains why, eventhough when we will walk away from an intersection, we will walk way from the corresponding pseudo-vertex along edgeOut, pseudo-vertices have the property 'nxtIsectAlongEdgeIn' in stead of some propery 'nxtPseudoVtxAlongEdgeOut'. This is because this property (which is easy to find out) is used in the above for nxtIsectAlongRingAndEdge1 and nxtIsectAlongRingAndEdge2!\n\n    // Before we start walking over the intersections to build the output rings, we prepare a queue that stores information on intersections we still have to deal with, and put at least one intersection in it.\n    // This queue will contain information on intersections where we can start walking from once the current walk is finished, and its parent output ring (the smallest output ring it lies within, -1 if no parent or parent unknown yet) and its winding number (which we can already determine).\n    var queue = [];\n    // For each output ring, add the ring-vertex-intersection with the smalles x-value (i.e. the left-most) as a start intersection. By choosing such an extremal intersections, we are sure to start at an intersection that is a convex vertex of its output ring. By adding them all to the queue, we are sure that no rings will be forgotten. If due to ring-intersections such an intersection will be encountered while walking, it will be removed from the queue.\n    var i = 0;\n    for (var j = 0; j < numRings; j++) {\n        var leftIsect = i;\n        for (var k = 0; k < feature$$1.geometry.coordinates[j].length - 1; k++) {\n            if (isectList[i].coord[0] < isectList[leftIsect].coord[0]) {\n                leftIsect = i;\n            }\n            i++;\n        }\n        // Compute winding at this left-most ring-vertex-intersection. We thus this by using our knowledge that this extremal vertex must be a convex vertex.\n        // We first find the intersection before and after it, and then use them to determine the winding number of the corresponding output ring, since we know that an extremal vertex of a simple, non-self-intersecting ring is always convex, so the only reason it would not be is because the winding number we use to compute it is wrong\n        var isectAfterLeftIsect = isectList[leftIsect].nxtIsectAlongRingAndEdge2;\n        for (var k = 0; k < isectList.length; k++) {\n            if ((isectList[k].nxtIsectAlongRingAndEdge1 == leftIsect) || (isectList[k].nxtIsectAlongRingAndEdge2 == leftIsect)) {\n                var isectBeforeLeftIsect = k;\n                break;\n            }\n        }\n        var windingAtIsect = isConvex([isectList[isectBeforeLeftIsect].coord, isectList[leftIsect].coord, isectList[isectAfterLeftIsect].coord], true) ? 1 : -1;\n\n        queue.push({isect: leftIsect, parent: -1, winding: windingAtIsect});\n    }\n    // Sort the queue by the same criterion used to find the leftIsect: the left-most leftIsect must be last in the queue, such that it will be popped first, such that we will work from out to in regarding input rings. This assumtion is used when predicting the winding number and parent of a new queue member.\n    queue.sort(function (a, b) { return (isectList[a.isect].coord > isectList[b.isect].coord) ? -1 : 1; });\n\n    // Initialise output\n    var outputFeatureArray = [];\n\n    // While the queue is not empty, take the last object (i.e. its intersection) out and start making an output ring by walking in the direction that has not been walked away over yet.\n    while (queue.length > 0) {\n    // Get the last object out of the queue\n        var popped = queue.pop();\n        var startIsect = popped.isect;\n        var currentOutputRingParent = popped.parent;\n        var currentOutputRingWinding = popped.winding;\n        // Make new output ring and add vertex from starting intersection\n        var currentOutputRing = outputFeatureArray.length;\n        var currentOutputRingCoords = [isectList[startIsect].coord];\n        // Set up the variables used while walking over intersections: 'currentIsect', 'nxtIsect' and 'walkingRingAndEdge'\n        var currentIsect = startIsect;\n        if (isectList[startIsect].ringAndEdge1Walkable) {\n            var walkingRingAndEdge = isectList[startIsect].ringAndEdge1;\n            var nxtIsect = isectList[startIsect].nxtIsectAlongRingAndEdge1;\n        } else {\n            var walkingRingAndEdge = isectList[startIsect].ringAndEdge2;\n            var nxtIsect = isectList[startIsect].nxtIsectAlongRingAndEdge2;\n        }\n        // While we have not arrived back at the same intersection, keep walking\n        while (!equalArrays(isectList[startIsect].coord, isectList[nxtIsect].coord)) {\n            currentOutputRingCoords.push(isectList[nxtIsect].coord);\n            // If the next intersection is queued, we can remove it, because we will go there now.\n            var nxtIsectInQueue = undefined;\n            for (var i = 0; i < queue.length; i++) { if (queue[i].isect == nxtIsect) { nxtIsectInQueue = i; break; } }\n            if (nxtIsectInQueue != undefined) {\n                queue.splice(nxtIsectInQueue, 1);\n            }\n            // Arriving at this new intersection, we know which will be our next walking ring and edge (if we came from 1 we will walk away from 2 and vice versa),\n            // So we can set it as our new walking ring and intersection and remember that we (will) have walked over it\n            // If we have never walked away from this new intersection along the other ring and edge then we will soon do, add the intersection (and the parent wand winding number) to the queue\n            // (We can predict the winding number and parent as follows: if the edge is convex, the other output ring started from there will have the alternate winding and lie outside of the current one, and thus have the same parent ring as the current ring. Otherwise, it will have the same winding number and lie inside of the current ring. We are, however, only sure of this of an output ring started from there does not enclose the current ring. This is why the initial queue's intersections must be sorted such that outer ones come out first.)\n            // We then update the other two walking variables.\n            if (equalArrays(walkingRingAndEdge, isectList[nxtIsect].ringAndEdge1)) {\n                walkingRingAndEdge = isectList[nxtIsect].ringAndEdge2;\n                isectList[nxtIsect].ringAndEdge2Walkable = false;\n                if (isectList[nxtIsect].ringAndEdge1Walkable) {\n                    var pushing = {isect: nxtIsect};\n                    if (isConvex([isectList[currentIsect].coord, isectList[nxtIsect].coord, isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge2].coord], currentOutputRingWinding == 1)) {\n                        pushing.parent = currentOutputRingParent;\n                        pushing.winding = -currentOutputRingWinding;\n                    } else {\n                        pushing.parent = currentOutputRing;\n                        pushing.winding = currentOutputRingWinding;\n                    }\n                    queue.push(pushing);\n                }\n                currentIsect = nxtIsect;\n                nxtIsect = isectList[nxtIsect].nxtIsectAlongRingAndEdge2;\n            } else {\n                walkingRingAndEdge = isectList[nxtIsect].ringAndEdge1;\n                isectList[nxtIsect].ringAndEdge1Walkable = false;\n                if (isectList[nxtIsect].ringAndEdge2Walkable) {\n                    var pushing = {isect: nxtIsect};\n                    if (isConvex([isectList[currentIsect].coord, isectList[nxtIsect].coord, isectList[isectList[nxtIsect].nxtIsectAlongRingAndEdge1].coord], currentOutputRingWinding == 1)) {\n                        pushing.parent = currentOutputRingParent;\n                        pushing.winding = -currentOutputRingWinding;\n                    } else {\n                        pushing.parent = currentOutputRing;\n                        pushing.winding = currentOutputRingWinding;\n                    }\n                    queue.push(pushing);\n                }\n                currentIsect = nxtIsect;\n                nxtIsect = isectList[nxtIsect].nxtIsectAlongRingAndEdge1;\n            }\n        }\n        // Close output ring\n        currentOutputRingCoords.push(isectList[nxtIsect].coord);\n        // Push output ring to output\n        outputFeatureArray.push(polygon([currentOutputRingCoords], {index: currentOutputRing, parent: currentOutputRingParent, winding: currentOutputRingWinding, netWinding: undefined}));\n    }\n\n    var output = featureCollection(outputFeatureArray);\n\n    determineParents();\n\n    setNetWinding();\n\n    // These functions are also used if no intersections are found\n    function determineParents() {\n        var featuresWithoutParent = [];\n        for (var i = 0; i < output.features.length; i++) {\n            if (output.features[i].properties.parent == -1) featuresWithoutParent.push(i);\n        }\n        if (featuresWithoutParent.length > 1) {\n            for (var i = 0; i < featuresWithoutParent.length; i++) {\n                var parent = -1;\n                var parentArea = Infinity;\n                for (var j = 0; j < output.features.length; j++) {\n                    if (featuresWithoutParent[i] == j) continue;\n                    if (booleanPointInPolygon(output.features[featuresWithoutParent[i]].geometry.coordinates[0][0], output.features[j], {ignoreBoundary: true})) {\n                        if (area$1(output.features[j]) < parentArea) {\n                            parent = j;\n                        }\n                    }\n                }\n                output.features[featuresWithoutParent[i]].properties.parent = parent;\n            }\n        }\n    }\n\n    function setNetWinding() {\n        for (var i = 0; i < output.features.length; i++) {\n            if (output.features[i].properties.parent == -1) {\n                var netWinding = output.features[i].properties.winding;\n                output.features[i].properties.netWinding = netWinding;\n                setNetWindingOfChildren(i, netWinding);\n            }\n        }\n    }\n\n    function setNetWindingOfChildren(parent, ParentNetWinding) {\n        for (var i = 0; i < output.features.length; i++) {\n            if (output.features[i].properties.parent == parent) {\n                var netWinding = ParentNetWinding + output.features[i].properties.winding;\n                output.features[i].properties.netWinding = netWinding;\n                setNetWindingOfChildren(i, netWinding);\n            }\n        }\n    }\n\n\n    return output;\n};\n\n\n\n// Constructor for (ring- or intersection-) pseudo-vertices.\nvar PseudoVtx = function (coord, param, ringAndEdgeIn, ringAndEdgeOut, nxtIsectAlongEdgeIn) {\n    this.coord = coord; // [x,y] of this pseudo-vertex\n    this.param = param; // fractional distance of this intersection on incomming edge\n    this.ringAndEdgeIn = ringAndEdgeIn; // [ring index, edge index] of incomming edge\n    this.ringAndEdgeOut = ringAndEdgeOut; // [ring index, edge index] of outgoing edge\n    this.nxtIsectAlongEdgeIn = nxtIsectAlongEdgeIn; // The next intersection when following the incomming edge (so not when following ringAndEdgeOut!)\n};\n\n// Constructor for an intersection. There are two intersection-pseudo-vertices per self-intersection and one ring-pseudo-vertex per ring-vertex-intersection. Their labels 1 and 2 are not assigned a particular meaning but are permanent once given.\nvar Isect = function (coord, ringAndEdge1, ringAndEdge2, nxtIsectAlongRingAndEdge1, nxtIsectAlongRingAndEdge2, ringAndEdge1Walkable, ringAndEdge2Walkable) {\n    this.coord = coord; // [x,y] of this intersection\n    this.ringAndEdge1 = ringAndEdge1; // first edge of this intersection\n    this.ringAndEdge2 = ringAndEdge2; // second edge of this intersection\n    this.nxtIsectAlongRingAndEdge1 = nxtIsectAlongRingAndEdge1; // the next intersection when following ringAndEdge1\n    this.nxtIsectAlongRingAndEdge2 = nxtIsectAlongRingAndEdge2; // the next intersection when following ringAndEdge2\n    this.ringAndEdge1Walkable = ringAndEdge1Walkable; // May we (still) walk away from this intersection over ringAndEdge1?\n    this.ringAndEdge2Walkable = ringAndEdge2Walkable; // May we (still) walk away from this intersection over ringAndEdge2?\n};\n\n// Function to determine if three consecutive points of a simple, non-self-intersecting ring make up a convex vertex, assuming the ring is right- or lefthanded\nfunction isConvex(pts, righthanded) {\n    // 'pts' is an [x,y] pair\n    // 'righthanded' is a boolean\n    if (typeof (righthanded) === 'undefined') righthanded = true;\n    if (pts.length != 3) throw new Error('This function requires an array of three points [x,y]');\n    var d = (pts[1][0] - pts[0][0]) * (pts[2][1] - pts[0][1]) - (pts[1][1] - pts[0][1]) * (pts[2][0] - pts[0][0]);\n    return (d >= 0) == righthanded;\n}\n\n// Function to compute winding of simple, non-self-intersecting ring\nfunction windingOfRing(ring) {\n    // 'ring' is an array of [x,y] pairs with the last equal to the first\n    // Compute the winding number based on the vertex with the smallest x-value, it precessor and successor. An extremal vertex of a simple, non-self-intersecting ring is always convex, so the only reason it is not is because the winding number we use to compute it is wrong\n    var leftVtx = 0;\n    for (var i = 0; i < ring.length - 1; i++) { if (ring[i][0] < ring[leftVtx][0]) leftVtx = i; }\n    if (isConvex([ring[(leftVtx - 1).modulo(ring.length - 1)], ring[leftVtx], ring[(leftVtx + 1).modulo(ring.length - 1)]], true)) {\n        var winding = 1;\n    } else {\n        var winding = -1;\n    }\n    return winding;\n}\n\n// Function to compare Arrays of numbers. From http://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript\nfunction equalArrays(array1, array2) {\n    // if the other array is a falsy value, return\n    if (!array1 || !array2)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (array1.length != array2.length)\n        return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!equalArrays(array1[i], array2[i]))\n                return false;\n        } else if (array1[i] != array2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\n// Fix Javascript modulo for negative number. From http://stackoverflow.com/questions/4467539/javascript-modulo-not-behaving\nNumber.prototype.modulo = function (n) {\n    return ((this % n) + n) % n;\n};\n\n// Function to check if array is unique (i.e. all unique elements, i.e. no duplicate elements)\nfunction isUnique(array) {\n    var u = {};\n    var isUnique = 1;\n    for (var i = 0, l = array.length; i < l; ++i) {\n        if (u.hasOwnProperty(array[i])) {\n            isUnique = 0;\n            break;\n        }\n        u[array[i]] = 1;\n    }\n    return isUnique;\n}\n\n/**\n * Takes a kinked polygon and returns a feature collection of polygons that have no kinks.\n * Uses [simplepolygon](https://github.com/mclaeysb/simplepolygon) internally.\n *\n * @name unkinkPolygon\n * @param {FeatureCollection|Feature<Polygon|MultiPolygon>} geojson GeoJSON Polygon or MultiPolygon\n * @returns {FeatureCollection<Polygon>} Unkinked polygons\n * @example\n * var poly = turf.polygon([[[0, 0], [2, 0], [0, 2], [2, 2], [0, 0]]]);\n *\n * var result = turf.unkinkPolygon(poly);\n *\n * //addToMap\n * var addToMap = [poly, result]\n */\nfunction unkinkPolygon(geojson) {\n    var features = [];\n    flattenEach(geojson, function (feature$$1) {\n        if (feature$$1.geometry.type !== 'Polygon') return;\n        featureEach(simplepolygon(feature$$1), function (poly) {\n            features.push(polygon(poly.geometry.coordinates, feature$$1.properties));\n        });\n    });\n    return featureCollection(features);\n}\n\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function (lon, lat) {\n    this.lon = lon;\n    this.lat = lat;\n    this.x = D2R * lon;\n    this.y = D2R * lat;\n};\n\nCoord.prototype.view = function () {\n    return String(this.lon).slice(0, 4) + ',' + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function () {\n    var anti_lat = -1 * this.lat;\n    var anti_lon = (this.lon < 0) ? 180 + this.lon : (180 - this.lon) * -1;\n    return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function () {\n    this.coords = [];\n    this.length = 0;\n};\n\nLineString.prototype.move_to = function (coord) {\n    this.length++;\n    this.coords.push(coord);\n};\n\nvar Arc = function (properties) {\n    this.properties = properties || {};\n    this.geometries = [];\n};\n\nArc.prototype.json = function () {\n    if (this.geometries.length <= 0) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': null },\n            'type': 'Feature', 'properties': this.properties\n        };\n    } else if (this.geometries.length === 1) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': this.geometries[0].coords },\n            'type': 'Feature', 'properties': this.properties\n        };\n    } else {\n        var multiline = [];\n        for (var i = 0; i < this.geometries.length; i++) {\n            multiline.push(this.geometries[i].coords);\n        }\n        return {'geometry': { 'type': 'MultiLineString', 'coordinates': multiline },\n            'type': 'Feature', 'properties': this.properties\n        };\n    }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function () {\n    var wkt_string = '';\n    var wkt = 'LINESTRING(';\n    var collect = function (c) { wkt += c[0] + ' ' + c[1] + ','; };\n    for (var i = 0; i < this.geometries.length; i++) {\n        if (this.geometries[i].coords.length === 0) {\n            return 'LINESTRING(empty)';\n        } else {\n            var coords = this.geometries[i].coords;\n            coords.forEach(collect);\n            wkt_string += wkt.substring(0, wkt.length - 1) + ')';\n        }\n    }\n    return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function (start, end, properties) {\n    if (!start || start.x === undefined || start.y === undefined) {\n        throw new Error('GreatCircle constructor expects two args: start and end objects with x and y properties');\n    }\n    if (!end || end.x === undefined || end.y === undefined) {\n        throw new Error('GreatCircle constructor expects two args: start and end objects with x and y properties');\n    }\n    this.start = new Coord(start.x, start.y);\n    this.end = new Coord(end.x, end.y);\n    this.properties = properties || {};\n\n    var w = this.start.x - this.end.x;\n    var h = this.start.y - this.end.y;\n    var z = Math.pow(Math.sin(h / 2.0), 2) +\n                Math.cos(this.start.y) *\n                   Math.cos(this.end.y) *\n                     Math.pow(Math.sin(w / 2.0), 2);\n    this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n    if (this.g === Math.PI) {\n        throw new Error('it appears ' + start.view() + ' and ' + end.view() + ' are \\'antipodal\\', e.g diametrically opposite, thus there is no single route but rather infinite');\n    } else if (isNaN(this.g)) {\n        throw new Error('could not calculate great circle between ' + start + ' and ' + end);\n    }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function (f) {\n    var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n    var B = Math.sin(f * this.g) / Math.sin(this.g);\n    var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n    var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n    var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n    var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n    var lon = R2D * Math.atan2(y, x);\n    return [lon, lat];\n};\n\n\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function (npoints, options) {\n    var first_pass = [];\n    if (!npoints || npoints <= 2) {\n        first_pass.push([this.start.lon, this.start.lat]);\n        first_pass.push([this.end.lon, this.end.lat]);\n    } else {\n        var delta = 1.0 / (npoints - 1);\n        for (var i = 0; i < npoints; ++i) {\n            var step = delta * i;\n            var pair = this.interpolate(step);\n            first_pass.push(pair);\n        }\n    }\n    /* partial port of dateline handling from:\n      gdal/ogr/ogrgeometryfactory.cpp\n\n      TODO - does not handle all wrapping scenarios yet\n    */\n    var bHasBigDiff = false;\n    var dfMaxSmallDiffLong = 0;\n    // from http://www.gdal.org/ogr2ogr.html\n    // -datelineoffset:\n    // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n    var dfDateLineOffset = options && options.offset ? options.offset : 10;\n    var dfLeftBorderX = 180 - dfDateLineOffset;\n    var dfRightBorderX = -180 + dfDateLineOffset;\n    var dfDiffSpace = 360 - dfDateLineOffset;\n\n    // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n    for (var j = 1; j < first_pass.length; ++j) {\n        var dfPrevX = first_pass[j - 1][0];\n        var dfX = first_pass[j][0];\n        var dfDiffLong = Math.abs(dfX - dfPrevX);\n        if (dfDiffLong > dfDiffSpace &&\n            ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) || (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))) {\n            bHasBigDiff = true;\n        } else if (dfDiffLong > dfMaxSmallDiffLong) {\n            dfMaxSmallDiffLong = dfDiffLong;\n        }\n    }\n\n    var poMulti = [];\n    if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n        var poNewLS = [];\n        poMulti.push(poNewLS);\n        for (var k = 0; k < first_pass.length; ++k) {\n            var dfX0 = parseFloat(first_pass[k][0]);\n            if (k > 0 &&  Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\n                var dfX1 = parseFloat(first_pass[k - 1][0]);\n                var dfY1 = parseFloat(first_pass[k - 1][1]);\n                var dfX2 = parseFloat(first_pass[k][0]);\n                var dfY2 = parseFloat(first_pass[k][1]);\n                if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 === 180 &&\n                    k + 1 < first_pass.length &&\n                   first_pass[k - 1][0] > -180 && first_pass[k - 1][0] < dfRightBorderX) {\n                    poNewLS.push([-180, first_pass[k][1]]);\n                    k++;\n                    poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                    continue;\n                } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 === -180 &&\n                     k + 1 < first_pass.length &&\n                     first_pass[k - 1][0] > dfLeftBorderX && first_pass[k - 1][0] < 180) {\n                    poNewLS.push([180, first_pass[k][1]]);\n                    k++;\n                    poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                    continue;\n                }\n\n                if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\n                    // swap dfX1, dfX2\n                    var tmpX = dfX1;\n                    dfX1 = dfX2;\n                    dfX2 = tmpX;\n                    // swap dfY1, dfY2\n                    var tmpY = dfY1;\n                    dfY1 = dfY2;\n                    dfY2 = tmpY;\n                }\n                if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n                    dfX2 += 360;\n                }\n\n                if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\n                    var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n                    var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n                    poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n                    poNewLS = [];\n                    poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n                    poMulti.push(poNewLS);\n                } else {\n                    poNewLS = [];\n                    poMulti.push(poNewLS);\n                }\n                poNewLS.push([dfX0, first_pass[k][1]]);\n            } else {\n                poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n            }\n        }\n    } else {\n        // add normally\n        var poNewLS0 = [];\n        poMulti.push(poNewLS0);\n        for (var l = 0; l < first_pass.length; ++l) {\n            poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\n        }\n    }\n\n    var arc = new Arc(this.properties);\n    for (var m = 0; m < poMulti.length; ++m) {\n        var line = new LineString();\n        arc.geometries.push(line);\n        var points = poMulti[m];\n        for (var j0 = 0; j0 < points.length; ++j0) {\n            line.move_to(points[j0]);\n        }\n    }\n    return arc;\n};\n\n/**\n * Calculate great circles routes as {@link LineString}\n *\n * @name greatCircle\n * @param {Coord} start source point feature\n * @param {Coord} end destination point feature\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] line feature properties\n * @param {number} [options.npoints=100] number of points\n * @param {number} [options.offset=10] offset controls the likelyhood that lines will\n * be split which cross the dateline. The higher the number the more likely.\n * @returns {Feature<LineString>} great circle line feature\n * @example\n * var start = turf.point([-122, 48]);\n * var end = turf.point([-77, 39]);\n *\n * var greatCircle = turf.greatCircle(start, end, {'name': 'Seattle to DC'});\n *\n * //addToMap\n * var addToMap = [start, end, greatCircle]\n */\nfunction greatCircle(start, end, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var properties = options.properties;\n    var npoints = options.npoints;\n    var offset = options.offset;\n\n    start = getCoord(start);\n    end = getCoord(end);\n    properties = properties || {};\n    npoints = npoints || 100;\n    offset = offset || 10;\n\n    var generator = new GreatCircle({x: start[0], y: start[1]}, {x: end[0], y: end[1]}, properties);\n\n    /* eslint-disable */\n    var line = generator.Arc(npoints, {offset: offset});\n    /* eslint-enable */\n\n    return line.json();\n}\n\n/**\n * Split a LineString by another GeoJSON Feature.\n *\n * @name lineSplit\n * @param {Feature<LineString>} line LineString Feature to split\n * @param {Feature<any>} splitter Feature used to split line\n * @returns {FeatureCollection<LineString>} Split LineStrings\n * @example\n * var line = turf.lineString([[120, -25], [145, -25]]);\n * var splitter = turf.lineString([[130, -15], [130, -35]]);\n *\n * var split = turf.lineSplit(line, splitter);\n *\n * //addToMap\n * var addToMap = [line, splitter]\n */\nfunction lineSplit(line, splitter) {\n    if (!line) throw new Error('line is required');\n    if (!splitter) throw new Error('splitter is required');\n\n    var lineType = getType(line);\n    var splitterType = getType(splitter);\n\n    if (lineType !== 'LineString') throw new Error('line must be LineString');\n    if (splitterType === 'FeatureCollection') throw new Error('splitter cannot be a FeatureCollection');\n    if (splitterType === 'GeometryCollection') throw new Error('splitter cannot be a GeometryCollection');\n\n    // remove excessive decimals from splitter\n    // to avoid possible approximation issues in rbush\n    var truncatedSplitter = truncate(splitter, {precision: 7});\n\n    switch (splitterType) {\n    case 'Point':\n        return splitLineWithPoint(line, truncatedSplitter);\n    case 'MultiPoint':\n        return splitLineWithPoints(line, truncatedSplitter);\n    case 'LineString':\n    case 'MultiLineString':\n    case 'Polygon':\n    case 'MultiPolygon':\n        return splitLineWithPoints(line, lineIntersect(line, truncatedSplitter));\n    }\n}\n\n/**\n * Split LineString with MultiPoint\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {FeatureCollection<Point>} splitter Point\n * @returns {FeatureCollection<LineString>} split LineStrings\n */\nfunction splitLineWithPoints(line, splitter) {\n    var results = [];\n    var tree = geojsonRbush();\n\n    flattenEach(splitter, function (point$$1) {\n        // Add index/id to features (needed for filter)\n        results.forEach(function (feature$$1, index) {\n            feature$$1.id = index;\n        });\n        // First Point - doesn't need to handle any previous line results\n        if (!results.length) {\n            results = splitLineWithPoint(line, point$$1).features;\n\n            // Add Square BBox to each feature for GeoJSON-RBush\n            results.forEach(function (feature$$1) {\n                if (!feature$$1.bbox) feature$$1.bbox = square(bbox(feature$$1));\n            });\n            tree.load(featureCollection(results));\n        // Split with remaining points - lines might needed to be split multiple times\n        } else {\n            // Find all lines that are within the splitter's bbox\n            var search = tree.search(point$$1);\n\n            if (search.features.length) {\n                // RBush might return multiple lines - only process the closest line to splitter\n                var closestLine = findClosestFeature(point$$1, search);\n\n                // Remove closest line from results since this will be split into two lines\n                // This removes any duplicates inside the results & index\n                results = results.filter(function (feature$$1) { return feature$$1.id !== closestLine.id; });\n                tree.remove(closestLine);\n\n                // Append the two newly split lines into the results\n                featureEach(splitLineWithPoint(closestLine, point$$1), function (line) {\n                    results.push(line);\n                    tree.insert(line);\n                });\n            }\n        }\n    });\n    return featureCollection(results);\n}\n\n/**\n * Split LineString with Point\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {Feature<Point>} splitter Point\n * @returns {FeatureCollection<LineString>} split LineStrings\n */\nfunction splitLineWithPoint(line, splitter) {\n    var results = [];\n\n    // handle endpoints\n    var startPoint = getCoords(line)[0];\n    var endPoint = getCoords(line)[line.geometry.coordinates.length - 1];\n    if (pointsEquals(startPoint, getCoord(splitter)) ||\n        pointsEquals(endPoint, getCoord(splitter))) return featureCollection([line]);\n\n    // Create spatial index\n    var tree = geojsonRbush();\n    var segments = lineSegment(line);\n    tree.load(segments);\n\n    // Find all segments that are within bbox of splitter\n    var search = tree.search(splitter);\n\n    // Return itself if point is not within spatial index\n    if (!search.features.length) return featureCollection([line]);\n\n    // RBush might return multiple lines - only process the closest line to splitter\n    var closestSegment = findClosestFeature(splitter, search);\n\n    // Initial value is the first point of the first segments (beginning of line)\n    var initialValue = [startPoint];\n    var lastCoords = featureReduce(segments, function (previous, current, index) {\n        var currentCoords = getCoords(current)[1];\n        var splitterCoords = getCoord(splitter);\n\n        // Location where segment intersects with line\n        if (index === closestSegment.id) {\n            previous.push(splitterCoords);\n            results.push(lineString(previous));\n            // Don't duplicate splitter coordinate (Issue #688)\n            if (pointsEquals(splitterCoords, currentCoords)) return [splitterCoords];\n            return [splitterCoords, currentCoords];\n\n        // Keep iterating over coords until finished or intersection is found\n        } else {\n            previous.push(currentCoords);\n            return previous;\n        }\n    }, initialValue);\n    // Append last line to final split results\n    if (lastCoords.length > 1) {\n        results.push(lineString(lastCoords));\n    }\n    return featureCollection(results);\n}\n\n\n/**\n * Find Closest Feature\n *\n * @private\n * @param {Feature<Point>} point Feature must be closest to this point\n * @param {FeatureCollection<LineString>} lines Collection of Features\n * @returns {Feature<LineString>} closest LineString\n */\nfunction findClosestFeature(point$$1, lines) {\n    if (!lines.features.length) throw new Error('lines must contain features');\n    // Filter to one segment that is the closest to the line\n    if (lines.features.length === 1) return lines.features[0];\n\n    var closestFeature;\n    var closestDistance = Infinity;\n    featureEach(lines, function (segment) {\n        var pt = nearestPointOnLine(segment, point$$1);\n        var dist = pt.properties.dist;\n        if (dist < closestDistance) {\n            closestFeature = segment;\n            closestDistance = dist;\n        }\n    });\n    return closestFeature;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Array<number>} pt1 point\n * @param {Array<number>} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction pointsEquals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Creates a circular arc, of a circle of the given radius and center point, between bearing1 and bearing2;\n * 0 bearing is North of center point, positive clockwise.\n *\n * @name lineArc\n * @param {Coord} center center point\n * @param {number} radius radius of the circle\n * @param {number} bearing1 angle, in decimal degrees, of the first radius of the arc\n * @param {number} bearing2 angle, in decimal degrees, of the second radius of the arc\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @returns {Feature<LineString>} line arc\n * @example\n * var center = turf.point([-75, 40]);\n * var radius = 5;\n * var bearing1 = 25;\n * var bearing2 = 47;\n *\n * var arc = turf.lineArc(center, radius, bearing1, bearing2);\n *\n * //addToMap\n * var addToMap = [center, arc]\n */\nfunction lineArc(center, radius, bearing1, bearing2, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var steps = options.steps;\n    var units = options.units;\n\n    // validation\n    if (!center) throw new Error('center is required');\n    if (!radius) throw new Error('radius is required');\n    if (bearing1 === undefined || bearing1 === null) throw new Error('bearing1 is required');\n    if (bearing2 === undefined || bearing2 === null) throw new Error('bearing2 is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n\n    // default params\n    steps = steps || 64;\n\n    var angle1 = convertAngleTo360(bearing1);\n    var angle2 = convertAngleTo360(bearing2);\n    var properties = center.properties;\n\n    // handle angle parameters\n    if (angle1 === angle2) {\n        return lineString(circle(center, radius, options).geometry.coordinates[0], properties);\n    }\n    var arcStartDegree = angle1;\n    var arcEndDegree = (angle1 < angle2) ? angle2 : angle2 + 360;\n\n    var alfa = arcStartDegree;\n    var coordinates = [];\n    var i = 0;\n\n    while (alfa < arcEndDegree) {\n        coordinates.push(destination(center, radius, alfa, units).geometry.coordinates);\n        i++;\n        alfa = arcStartDegree + i * 360 / steps;\n    }\n    if (alfa > arcEndDegree) {\n        coordinates.push(destination(center, radius, arcEndDegree, units).geometry.coordinates);\n    }\n    return lineString(coordinates, properties);\n}\n\n\n/**\n * Takes any angle in  degrees\n * and returns a valid angle between 0-360 degrees\n *\n * @private\n * @param {number} alfa angle between -180-180 degrees\n * @returns {number} angle between 0-360 degrees\n */\nfunction convertAngleTo360(alfa) {\n    var beta = alfa % 360;\n    if (beta < 0) {\n        beta += 360;\n    }\n    return beta;\n}\n\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} polygon Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nfunction polygonToLine(polygon$$1, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n\n    // Variables\n    var geom = getType(polygon$$1);\n    var coords = getCoords(polygon$$1);\n    properties = properties || polygon$$1.properties || {};\n\n    if (!coords.length) throw new Error('polygon must contain coordinates');\n\n    switch (geom) {\n    case 'Polygon':\n        return coordsToLine(coords, properties);\n    case 'MultiPolygon':\n        var lines = [];\n        coords.forEach(function (coord) {\n            lines.push(coordsToLine(coord, properties));\n        });\n        return featureCollection(lines);\n    default:\n        throw new Error('geom ' + geom + ' not supported');\n    }\n}\n\nfunction coordsToLine(coords, properties) {\n    if (coords.length > 1) return multiLineString(coords, properties);\n    return lineString(coords[0], properties);\n}\n\n/**\n * Converts (Multi)LineString(s) to Polygon(s).\n *\n * @name lineToPolygon\n * @param {FeatureCollection|Feature<LineString|MultiLineString>} lines Features to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @param {boolean} [options.autoComplete=true] auto complete linestrings (matches first & last coordinates)\n * @param {boolean} [options.orderCoords=true] sorts linestrings to place outer ring at the first position of the coordinates\n * @returns {Feature<Polygon|MultiPolygon>} converted to Polygons\n * @example\n * var line = turf.lineString([[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]);\n *\n * var polygon = turf.lineToPolygon(line);\n *\n * //addToMap\n * var addToMap = [polygon];\n */\nfunction lineToPolygon(lines, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n    var autoComplete = options.autoComplete;\n    var orderCoords = options.orderCoords;\n\n    // validation\n    if (!lines) throw new Error('lines is required');\n\n    // default params\n    autoComplete = (autoComplete !== undefined) ? autoComplete : true;\n    orderCoords = (orderCoords !== undefined) ? orderCoords : true;\n    var type = getType(lines);\n\n    switch (type) {\n    case 'FeatureCollection':\n    case 'GeometryCollection':\n        var coords = [];\n        var features = (lines.features) ? lines.features : lines.geometries;\n        features.forEach(function (line) {\n            coords.push(getCoords(lineStringToPolygon(line, {}, autoComplete, orderCoords)));\n        });\n        return multiPolygon(coords, properties);\n    }\n    return lineStringToPolygon(lines, properties, autoComplete, orderCoords);\n}\n\n/**\n * LineString to Polygon\n *\n * @private\n * @param {Feature<LineString|MultiLineString>} line line\n * @param {Object} [properties] translates GeoJSON properties to Feature\n * @param {boolean} [autoComplete=true] auto complete linestrings\n * @param {boolean} [orderCoords=true] sorts linestrings to place outer ring at the first position of the coordinates\n * @returns {Feature<Polygon>} line converted to Polygon\n */\nfunction lineStringToPolygon(line, properties, autoComplete, orderCoords) {\n    properties = properties || line.properties || {};\n    var coords = getCoords(line);\n    var type = getType(line);\n\n    if (!coords.length) throw new Error('line must contain coordinates');\n\n    switch (type) {\n    case 'LineString':\n        if (autoComplete) coords = autoCompleteCoords(coords);\n        return polygon([coords], properties);\n    case 'MultiLineString':\n        var multiCoords = [];\n        var largestArea = 0;\n\n        coords.forEach(function (coord) {\n            if (autoComplete) coord = autoCompleteCoords(coord);\n\n            // Largest LineString to be placed in the first position of the coordinates array\n            if (orderCoords) {\n                var area = calculateArea$1(bbox(lineString(coord)));\n                if (area > largestArea) {\n                    multiCoords.unshift(coord);\n                    largestArea = area;\n                } else multiCoords.push(coord);\n            } else {\n                multiCoords.push(coord);\n            }\n        });\n        return polygon(multiCoords, properties);\n    default:\n        throw new Error('geometry type ' + type + ' is not supported');\n    }\n}\n\n/**\n * Auto Complete Coords - matches first & last coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords Coordinates\n * @returns {Array<Array<number>>} auto completed coordinates\n */\nfunction autoCompleteCoords(coords) {\n    var first = coords[0];\n    var x1 = first[0];\n    var y1 = first[1];\n    var last = coords[coords.length - 1];\n    var x2 = last[0];\n    var y2 = last[1];\n    if (x1 !== x2 || y1 !== y2) {\n        coords.push(first);\n    }\n    return coords;\n}\n\n/**\n * area - quick approximate area calculation (used to sort)\n *\n * @private\n * @param {Array<number>} bbox BBox [west, south, east, north]\n * @returns {number} very quick area calculation\n */\nfunction calculateArea$1(bbox$$1) {\n    var west = bbox$$1[0];\n    var south = bbox$$1[1];\n    var east = bbox$$1[2];\n    var north = bbox$$1[3];\n    return Math.abs(west - east) * Math.abs(south - north);\n}\n\nvar lineclip_1 = lineclip;\n\nlineclip.polyline = lineclip;\nlineclip.polygon = polygonclip;\n\n\n// Cohen-Sutherland line clippign algorithm, adapted to efficiently\n// handle polylines rather than just segments\n\nfunction lineclip(points, bbox, result) {\n\n    var len = points.length,\n        codeA = bitCode(points[0], bbox),\n        part = [],\n        i, a, b, codeB, lastCode;\n\n    if (!result) result = [];\n\n    for (i = 1; i < len; i++) {\n        a = points[i - 1];\n        b = points[i];\n        codeB = lastCode = bitCode(b, bbox);\n\n        while (true) {\n\n            if (!(codeA | codeB)) { // accept\n                part.push(a);\n\n                if (codeB !== lastCode) { // segment went outside\n                    part.push(b);\n\n                    if (i < len - 1) { // start a new line\n                        result.push(part);\n                        part = [];\n                    }\n                } else if (i === len - 1) {\n                    part.push(b);\n                }\n                break;\n\n            } else if (codeA & codeB) { // trivial reject\n                break;\n\n            } else if (codeA) { // a outside, intersect with clip edge\n                a = intersect$1(a, b, codeA, bbox);\n                codeA = bitCode(a, bbox);\n\n            } else { // b outside\n                b = intersect$1(a, b, codeB, bbox);\n                codeB = bitCode(b, bbox);\n            }\n        }\n\n        codeA = lastCode;\n    }\n\n    if (part.length) result.push(part);\n\n    return result;\n}\n\n// Sutherland-Hodgeman polygon clipping algorithm\n\nfunction polygonclip(points, bbox) {\n\n    var result, edge, prev, prevInside, i, p, inside;\n\n    // clip against each side of the clip rectangle\n    for (edge = 1; edge <= 8; edge *= 2) {\n        result = [];\n        prev = points[points.length - 1];\n        prevInside = !(bitCode(prev, bbox) & edge);\n\n        for (i = 0; i < points.length; i++) {\n            p = points[i];\n            inside = !(bitCode(p, bbox) & edge);\n\n            // if segment goes through the clip window, add an intersection\n            if (inside !== prevInside) result.push(intersect$1(prev, p, edge, bbox));\n\n            if (inside) result.push(p); // add a point if it's inside\n\n            prev = p;\n            prevInside = inside;\n        }\n\n        points = result;\n\n        if (!points.length) break;\n    }\n\n    return result;\n}\n\n// intersect a segment against one of the 4 lines that make up the bbox\n\nfunction intersect$1(a, b, edge, bbox) {\n    return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : // top\n           edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : // bottom\n           edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : // right\n           edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : // left\n           null;\n}\n\n// bit code reflects the point position relative to the bbox:\n\n//         left  mid  right\n//    top  1001  1000  1010\n//    mid  0001  0000  0010\n// bottom  0101  0100  0110\n\nfunction bitCode(p, bbox) {\n    var code = 0;\n\n    if (p[0] < bbox[0]) code |= 1; // left\n    else if (p[0] > bbox[2]) code |= 2; // right\n\n    if (p[1] < bbox[1]) code |= 4; // bottom\n    else if (p[1] > bbox[3]) code |= 8; // top\n\n    return code;\n}\n\n/**\n * Takes a {@link Feature} and a bbox and clips the feature to the bbox using [lineclip](https://github.com/mapbox/lineclip).\n * May result in degenerate edges when clipping Polygons.\n *\n * @name bboxClip\n * @param {Feature<LineString|MultiLineString|Polygon|MultiPolygon>} feature feature to clip to the bbox\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<LineString|MultiLineString|Polygon|MultiPolygon>} clipped Feature\n * @example\n * var bbox = [0, 0, 10, 10];\n * var poly = turf.polygon([[[2, 2], [8, 4], [12, 8], [3, 7], [2, 2]]]);\n *\n * var clipped = turf.bboxClip(poly, bbox);\n *\n * //addToMap\n * var addToMap = [bbox, poly, clipped]\n */\nfunction bboxClip(feature$$1, bbox) {\n    var geom = getGeom$1(feature$$1);\n    var coords = getCoords(feature$$1);\n    var properties = feature$$1.properties;\n\n    switch (geom) {\n    case 'LineString':\n    case 'MultiLineString':\n        var lines = [];\n        if (geom === 'LineString') coords = [coords];\n        coords.forEach(function (line) {\n            lineclip_1(line, bbox, lines);\n        });\n        if (lines.length === 1) return lineString(lines[0], properties);\n        return multiLineString(lines, properties);\n    case 'Polygon':\n        return polygon(clipPolygon(coords, bbox), properties);\n    case 'MultiPolygon':\n        return multiPolygon(coords.map(function (polygon$$1) {\n            return clipPolygon(polygon$$1, bbox);\n        }), properties);\n    default:\n        throw new Error('geometry ' + geom + ' not supported');\n    }\n}\n\nfunction clipPolygon(rings, bbox) {\n    var outRings = [];\n    for (var i = 0; i < rings.length; i++) {\n        var clipped = lineclip_1.polygon(rings[i], bbox);\n        if (clipped.length > 0) {\n            if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n                clipped.push(clipped[0]);\n            }\n            if (clipped.length >= 4) {\n                outRings.push(clipped);\n            }\n        }\n    }\n    return outRings;\n}\n\nfunction getGeom$1(feature$$1) {\n    return (feature$$1.geometry) ? feature$$1.geometry.type : feature$$1.type;\n}\n\nvar pSlice = Array.prototype.slice;\n\nfunction isArguments(object) {\n    return Object.prototype.toString.call(object) === '[object Arguments]';\n}\n\nfunction deepEqual(actual, expected, opts) {\n    if (!opts) opts = {};\n    // 7.1. All identical values are equivalent, as determined by ===.\n    if (actual === expected) {\n        return true;\n\n    } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n\n        // 7.3. Other pairs that do not both pass typeof value == 'object',\n        // equivalence is determined by ==.\n    } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n        return opts.strict ? actual === expected : actual === expected;\n\n        // 7.4. For all other Object pairs, including Array objects, equivalence is\n        // determined by having the same number of owned properties (as verified\n        // with Object.prototype.hasOwnProperty.call), the same set of keys\n        // (although not necessarily the same order), equivalent values for every\n        // corresponding key, and an identical 'prototype' property. Note: this\n        // accounts for both named and indexed properties on Arrays.\n    } else {\n        return objEquiv(actual, expected, opts);\n    }\n}\n\nfunction isUndefinedOrNull(value) {\n    return value === null || value === undefined;\n}\n\nfunction isBuffer(x) {\n    if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n    if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n        return false;\n    }\n    if (x.length > 0 && typeof x[0] !== 'number') return false;\n    return true;\n}\n\nfunction objEquiv(a, b, opts) {\n    var i, key;\n    if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n        return false;\n    // an identical 'prototype' property.\n    if (a.prototype !== b.prototype) return false;\n    //~~~I've managed to break Object.keys through screwy arguments passing.\n    //   Converting to array solves the problem.\n    if (isArguments(a)) {\n        if (!isArguments(b)) {\n            return false;\n        }\n        a = pSlice.call(a);\n        b = pSlice.call(b);\n        return deepEqual(a, b, opts);\n    }\n    if (isBuffer(a)) {\n        if (!isBuffer(b)) {\n            return false;\n        }\n        if (a.length !== b.length) return false;\n        for (i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) return false;\n        }\n        return true;\n    }\n    try {\n        var ka = Object.keys(a),\n            kb = Object.keys(b);\n    } catch (e) { //happens when one is a string literal and the other isn't\n        return false;\n    }\n    // having the same number of owned properties (keys incorporates\n    // hasOwnProperty)\n    if (ka.length !== kb.length)\n        return false;\n    //the same set of keys (although not necessarily the same order),\n    ka.sort();\n    kb.sort();\n    //~~~cheap key test\n    for (i = ka.length - 1; i >= 0; i--) {\n        if (ka[i] !== kb[i])\n            return false;\n    }\n    //equivalent values for every corresponding key, and\n    //~~~possibly expensive deep test\n    for (i = ka.length - 1; i >= 0; i--) {\n        key = ka[i];\n        if (!deepEqual(a[key], b[key], opts)) return false;\n    }\n    return typeof a === typeof b;\n}\n\n/**\n * Takes any LineString or Polygon and returns the overlapping lines between both features.\n *\n * @name lineOverlap\n * @param {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.tolerance=0] Tolerance distance to match overlapping line segments (in kilometers)\n * @returns {FeatureCollection<LineString>} lines(s) that are overlapping between both features\n * @example\n * var line1 = turf.lineString([[115, -35], [125, -30], [135, -30], [145, -35]]);\n * var line2 = turf.lineString([[115, -25], [125, -30], [135, -30], [145, -25]]);\n *\n * var overlapping = turf.lineOverlap(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, overlapping]\n */\nfunction lineOverlap(line1, line2, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var tolerance = options.tolerance || 0;\n\n    // Containers\n    var features = [];\n\n    // Create Spatial Index\n    var tree = geojsonRbush();\n    tree.load(lineSegment(line1));\n    var overlapSegment;\n\n    // Line Intersection\n\n    // Iterate over line segments\n    segmentEach(line2, function (segment) {\n        var doesOverlaps = false;\n\n        // Iterate over each segments which falls within the same bounds\n        featureEach(tree.search(segment), function (match) {\n            if (doesOverlaps === false) {\n                var coordsSegment = getCoords(segment).sort();\n                var coordsMatch = getCoords(match).sort();\n\n                // Segment overlaps feature\n                if (deepEqual(coordsSegment, coordsMatch)) {\n                    doesOverlaps = true;\n                    // Overlaps already exists - only append last coordinate of segment\n                    if (overlapSegment) overlapSegment = concatSegment(overlapSegment, segment);\n                    else overlapSegment = segment;\n                // Match segments which don't share nodes (Issue #901)\n                } else if (\n                    (tolerance === 0) ?\n                        booleanPointOnLine(coordsSegment[0], match) && booleanPointOnLine(coordsSegment[1], match) :\n                        nearestPointOnLine(match, coordsSegment[0]).properties.dist <= tolerance &&\n                        nearestPointOnLine(match, coordsSegment[1]).properties.dist <= tolerance) {\n                    doesOverlaps = true;\n                    if (overlapSegment) overlapSegment = concatSegment(overlapSegment, segment);\n                    else overlapSegment = segment;\n                } else if (\n                    (tolerance === 0) ?\n                        booleanPointOnLine(coordsMatch[0], segment) && booleanPointOnLine(coordsMatch[1], segment) :\n                        nearestPointOnLine(segment, coordsMatch[0]).properties.dist <= tolerance &&\n                        nearestPointOnLine(segment, coordsMatch[1]).properties.dist <= tolerance) {\n                    // Do not define (doesOverlap = true) since more matches can occur within the same segment\n                    // doesOverlaps = true;\n                    if (overlapSegment) overlapSegment = concatSegment(overlapSegment, match);\n                    else overlapSegment = match;\n                }\n            }\n        });\n\n        // Segment doesn't overlap - add overlaps to results & reset\n        if (doesOverlaps === false && overlapSegment) {\n            features.push(overlapSegment);\n            overlapSegment = undefined;\n        }\n    });\n    // Add last segment if exists\n    if (overlapSegment) features.push(overlapSegment);\n\n    return featureCollection(features);\n}\n\n\n/**\n * Concat Segment\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {Feature<LineString>} segment 2-vertex LineString\n * @returns {Feature<LineString>} concat linestring\n */\nfunction concatSegment(line, segment) {\n    var coords = getCoords(segment);\n    var lineCoords = getCoords(line);\n    var start = lineCoords[0];\n    var end = lineCoords[lineCoords.length - 1];\n    var geom = line.geometry.coordinates;\n\n    if (deepEqual(coords[0], start)) geom.unshift(coords[1]);\n    else if (deepEqual(coords[0], end)) geom.push(coords[1]);\n    else if (deepEqual(coords[1], start)) geom.unshift(coords[0]);\n    else if (deepEqual(coords[1], end)) geom.push(coords[0]);\n    return line;\n}\n\n/**\n * Creates a circular sector of a circle of given radius and center {@link Point},\n * between (clockwise) bearing1 and bearing2; 0 bearing is North of center point, positive clockwise.\n *\n * @name sector\n * @param {Coord} center center point\n * @param {number} radius radius of the circle\n * @param {number} bearing1 angle, in decimal degrees, of the first radius of the sector\n * @param {number} bearing2 angle, in decimal degrees, of the second radius of the sector\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {number} [options.steps=64] number of steps\n * @returns {Feature<Polygon>} sector polygon\n * @example\n * var center = turf.point([-75, 40]);\n * var radius = 5;\n * var bearing1 = 25;\n * var bearing2 = 45;\n *\n * var sector = turf.sector(center, radius, bearing1, bearing2);\n *\n * //addToMap\n * var addToMap = [center, sector];\n */\nfunction sector(center, radius, bearing1, bearing2, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // validation\n    if (!center) throw new Error('center is required');\n    if (bearing1 === undefined || bearing1 === null) throw new Error('bearing1 is required');\n    if (bearing2 === undefined || bearing2 === null) throw new Error('bearing2 is required');\n    if (!radius) throw new Error('radius is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n\n    if (convertAngleTo360$1(bearing1) === convertAngleTo360$1(bearing2)) {\n        return circle(center, radius, options);\n    }\n    var coords = getCoords(center);\n    var arc = lineArc(center, radius, bearing1, bearing2, options);\n    var sliceCoords = [[coords]];\n    coordEach(arc, function (currentCoords) {\n        sliceCoords[0].push(currentCoords);\n    });\n    sliceCoords[0].push(coords);\n\n    return polygon(sliceCoords);\n}\n\n/**\n * Takes any angle in degrees\n * and returns a valid angle between 0-360 degrees\n *\n * @private\n * @param {number} alfa angle between -180-180 degrees\n * @returns {number} angle between 0-360 degrees\n */\nfunction convertAngleTo360$1(alfa) {\n    var beta = alfa % 360;\n    if (beta < 0) beta += 360;\n    return beta;\n}\n\n// https://en.wikipedia.org/wiki/Rhumb_line\n/**\n * Returns the destination {@link Point} having travelled the given distance along a Rhumb line from the\n * origin Point with the (varant) given bearing.\n *\n * @name rhumbDestination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the starting point\n * @param {number} bearing varant bearing angle ranging from -180 to 180 degrees from north\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @param {Object} [options.properties={}] translate properties to destination point\n * @returns {Feature<Point>} Destination point.\n * @example\n * var pt = turf.point([-75.343, 39.984], {\"marker-color\": \"F00\"});\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.rhumbDestination(pt, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [pt, destination]\n * destination.properties['marker-color'] = '#00F';\n */\nfunction rhumbDestination(origin, distance, bearing, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var properties = options.properties;\n\n    // validation\n    if (!origin) throw new Error('origin is required');\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n    if (bearing === undefined || bearing === null) throw new Error('bearing is required');\n    if (!(distance >= 0)) throw new Error('distance must be greater than 0');\n\n    var distanceInMeters = convertLength(distance, units, 'meters');\n    var coords = getCoord(origin);\n    var destination = calculateRhumbDestination(coords, distanceInMeters, bearing);\n\n    // compensate the crossing of the 180th meridian (https://macwright.org/2016/09/26/the-180th-meridian.html)\n    // solution from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    destination[0] += (destination[0] - coords[0] > 180) ? -360 : (coords[0] - destination[0] > 180) ? 360 : 0;\n    return point(destination, properties);\n}\n\n/**\n * Returns the destination point having travelled along a rhumb line from origin point the given\n * distance on the  given bearing.\n * Adapted from Geodesy: http://www.movable-type.co.uk/scripts/latlong.html#rhumblines\n *\n * @private\n * @param   {Array<number>} origin - point\n * @param   {number} distance - Distance travelled, in same units as earth radius (default: metres).\n * @param   {number} bearing - Bearing in degrees from north.\n * @param   {number} [radius=6371e3] - (Mean) radius of earth (defaults to radius in metres).\n * @returns {Array<number>} Destination point.\n */\nfunction calculateRhumbDestination(origin, distance, bearing, radius) {\n    // φ => phi\n    // λ => lambda\n    // ψ => psi\n    // Δ => Delta\n    // δ => delta\n    // θ => theta\n\n    radius = (radius === undefined) ? earthRadius : Number(radius);\n\n    var delta = distance / radius; // angular distance in radians\n    var lambda1 = origin[0] * Math.PI / 180; // to radians, but without normalize to 𝜋\n    var phi1 = degreesToRadians(origin[1]);\n    var theta = degreesToRadians(bearing);\n\n    var DeltaPhi = delta * Math.cos(theta);\n    var phi2 = phi1 + DeltaPhi;\n\n    // check for some daft bugger going past the pole, normalise latitude if so\n    if (Math.abs(phi2) > Math.PI / 2) phi2 = phi2 > 0 ? Math.PI - phi2 : -Math.PI - phi2;\n\n    var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    var q = Math.abs(DeltaPsi) > 10e-12 ? DeltaPhi / DeltaPsi : Math.cos(phi1); // E-W course becomes ill-conditioned with 0/0\n\n    var DeltaLambda = delta * Math.sin(theta) / q;\n    var lambda2 = lambda1 + DeltaLambda;\n\n    return [((lambda2 * 180 / Math.PI) + 540) % 360 - 180, phi2 * 180 / Math.PI]; // normalise to −180..+180°\n}\n\n/**\n * Finds the tangents of a {@link Polygon|(Multi)Polygon} from a {@link Point}.\n *\n * @name polygonTangents\n * @param {Coord} pt to calculate the tangent points from\n * @param {Feature<Polygon|MultiPolygon>} polygon to get tangents from\n * @returns {FeatureCollection<Point>} Feature Collection containing the two tangent points\n * @example\n * var polygon = turf.polygon([[[11, 0], [22, 4], [31, 0], [31, 11], [21, 15], [11, 11], [11, 0]]]);\n * var point = turf.point([61, 5]);\n *\n * var tangents = turf.polygonTangents(point, polygon)\n *\n * //addToMap\n * var addToMap = [tangents, point, polygon];\n */\nfunction polygonTangents(pt, polygon$$1) {\n    var pointCoords = getCoords(pt);\n    var polyCoords = getCoords(polygon$$1);\n\n    var rtan;\n    var ltan;\n    var enext;\n    var eprev;\n\n    var type = getType(polygon$$1);\n    switch (type) {\n    case 'Polygon':\n        rtan = polyCoords[0][0];\n        ltan = polyCoords[0][0];\n        eprev = isLeft(polyCoords[0][0], polyCoords[0][polyCoords[0].length - 1], pointCoords);\n        var out = processPolygon$1(polyCoords[0], pointCoords, eprev, enext, rtan, ltan);\n        rtan = out[0];\n        ltan = out[1];\n        break;\n    case 'MultiPolygon':\n        rtan = polyCoords[0][0][0];\n        ltan = polyCoords[0][0][0];\n        eprev = isLeft(polyCoords[0][0][0], polyCoords[0][0][polyCoords[0][0].length - 1], pointCoords);\n        polyCoords.forEach(function (ring) {\n            var out = processPolygon$1(ring[0], pointCoords, eprev, enext, rtan, ltan);\n            rtan = out[0];\n            ltan = out[1];\n        });\n        break;\n    }\n    return featureCollection([point(rtan), point(ltan)]);\n}\n\nfunction processPolygon$1(polygonCoords, ptCoords, eprev, enext, rtan, ltan) {\n    for (var i = 0; i < polygonCoords.length; i++) {\n        var currentCoords = polygonCoords[i];\n        var nextCoordPair = polygonCoords[i + 1];\n        if (i === polygonCoords.length - 1) {\n            nextCoordPair = polygonCoords[0];\n        }\n        enext = isLeft(currentCoords, nextCoordPair, ptCoords);\n        if (eprev <= 0 && enext > 0) {\n            if (!isBelow(ptCoords, currentCoords, rtan)) {\n                rtan = currentCoords;\n            }\n        } else if (eprev > 0 && enext <= 0) {\n            if (!isAbove(ptCoords, currentCoords, ltan)) {\n                ltan = currentCoords;\n            }\n        }\n        eprev = enext;\n    }\n    return [rtan, ltan];\n}\n\nfunction isAbove(point1, point2, point3) {\n    return isLeft(point1, point2, point3) > 0;\n}\n\nfunction isBelow(point1, point2, point3) {\n    return isLeft(point1, point2, point3) < 0;\n}\n\nfunction isLeft(point1, point2, point3) {\n    return (point2[0] - point1[0]) * (point3[1] - point1[1]) - (point3[0] - point1[0]) * (point2[1] - point1[1]);\n}\n\n/**\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\n *\n * @name booleanClockwise\n * @param {Feature<LineString>} line to be evaluated\n * @returns {boolean} true/false\n * @example\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\n *\n * turf.booleanClockwise(clockwiseRing)\n * //=true\n * turf.booleanClockwise(counterClockwiseRing)\n * //=false\n */\nfunction booleanClockwise(line) {\n    // validation\n    if (!line) throw new Error('line is required');\n    var type = (line.geometry) ? line.geometry.type : line.type;\n    if (!Array.isArray(line) && type !== 'LineString') throw new Error('geometry must be a LineString');\n\n    var ring = getCoords(line);\n    var sum = 0;\n    var i = 1;\n    var prev, cur;\n    while (i < ring.length) {\n        prev = cur || ring[0];\n        cur = ring[i];\n        sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n        i++;\n    }\n    return sum > 0;\n}\n\n/**\n * Rewind {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon} outer ring counterclockwise and inner rings clockwise (Uses {@link http://en.wikipedia.org/wiki/Shoelace_formula|Shoelace Formula}).\n *\n * @name rewind\n * @param {GeoJSON} geojson input GeoJSON Polygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.reverse=false] enable reverse winding\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} rewind Polygon\n * @example\n * var polygon = turf.polygon([[[121, -29], [138, -29], [138, -18], [121, -18], [121, -29]]]);\n *\n * var rewind = turf.rewind(polygon);\n *\n * //addToMap\n * var addToMap = [rewind];\n */\nfunction rewind(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var reverse = options.reverse || false;\n    var mutate = options.mutate || false;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof reverse !== 'boolean') throw new Error('<reverse> must be a boolean');\n    if (typeof mutate !== 'boolean') throw new Error('<mutate> must be a boolean');\n\n    // prevent input mutation\n    if (mutate === false) geojson = clone(geojson);\n\n    // Support Feature Collection or Geometry Collection\n    var results = [];\n    switch (geojson.type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry$$1) {\n            rewindFeature(geometry$$1, reverse);\n        });\n        return geojson;\n    case 'FeatureCollection':\n        featureEach(geojson, function (feature$$1) {\n            featureEach(rewindFeature(feature$$1, reverse), function (result) {\n                results.push(result);\n            });\n        });\n        return featureCollection(results);\n    }\n    // Support Feature or Geometry Objects\n    return rewindFeature(geojson, reverse);\n}\n\n/**\n * Rewind\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Geometry or Feature\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {Geometry|Feature<any>} rewind Geometry or Feature\n */\nfunction rewindFeature(geojson, reverse) {\n    var type = (geojson.type === 'Feature') ? geojson.geometry.type : geojson.type;\n\n    // Support all GeoJSON Geometry Objects\n    switch (type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry$$1) {\n            rewindFeature(geometry$$1, reverse);\n        });\n        return geojson;\n    case 'LineString':\n        rewindLineString(getCoords(geojson), reverse);\n        return geojson;\n    case 'Polygon':\n        rewindPolygon(getCoords(geojson), reverse);\n        return geojson;\n    case 'MultiLineString':\n        getCoords(geojson).forEach(function (lineCoords) {\n            rewindLineString(lineCoords, reverse);\n        });\n        return geojson;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (lineCoords) {\n            rewindPolygon(lineCoords, reverse);\n        });\n        return geojson;\n    case 'Point':\n    case 'MultiPoint':\n        return geojson;\n    }\n}\n\n/**\n * Rewind LineString - outer ring clockwise\n *\n * @private\n * @param {Array<Array<number>>} coords GeoJSON LineString geometry coordinates\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {void} mutates coordinates\n */\nfunction rewindLineString(coords, reverse) {\n    if (booleanClockwise(coords) === reverse) coords.reverse();\n}\n\n/**\n * Rewind Polygon - outer ring counterclockwise and inner rings clockwise.\n *\n * @private\n * @param {Array<Array<Array<number>>>} coords GeoJSON Polygon geometry coordinates\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {void} mutates coordinates\n */\nfunction rewindPolygon(coords, reverse) {\n    // outer ring\n    if (booleanClockwise(coords[0]) !== reverse) {\n        coords[0].reverse();\n    }\n    // inner rings\n    for (var i = 1; i < coords.length; i++) {\n        if (booleanClockwise(coords[i]) === reverse) {\n            coords[i].reverse();\n        }\n    }\n}\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix$1(grid, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var flip = options.flip;\n    var flags = options.flags;\n\n    // validation\n    collectionOf(grid, 'Point', 'input must contain Points');\n\n    var pointsMatrix = sortPointsByLatLng$1(grid, flip);\n\n    var matrix = [];\n    // create property matrix from sorted points\n    // looping order matters here\n    for (var r = 0; r < pointsMatrix.length; r++) {\n        var pointRow = pointsMatrix[r];\n        var row = [];\n        for (var c = 0; c < pointRow.length; c++) {\n            var point$$1 = pointRow[c];\n            // Check if zProperty exist\n            if (point$$1.properties[zProperty]) row.push(point$$1.properties[zProperty]);\n            else row.push(0);\n            // add flags\n            if (flags === true) point$$1.properties.matrixPosition = [r, c];\n        }\n        matrix.push(row);\n    }\n\n    return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng$1(points$$1, flip) {\n    var pointsByLatitude = {};\n\n    // divide points by rows with the same latitude\n    featureEach(points$$1, function (point$$1) {\n        var lat = getCoords(point$$1)[1];\n        if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n        pointsByLatitude[lat].push(point$$1);\n    });\n\n    // sort points (with the same latitude) by longitude\n    var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n        var row = pointsByLatitude[lat];\n        var rowOrderedByLongitude = row.sort(function (a, b) {\n            return getCoords(a)[0] - getCoords(b)[0];\n        });\n        return rowOrderedByLongitude;\n    });\n\n    // sort rows (of points with the same latitude) by latitude\n    var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n        if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n        else return getCoords(b[0])[1] - getCoords(a[0])[1];\n    });\n\n    return pointMatrix;\n}\n\n/*!\n* @license GNU Affero General Public License.\n* Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n* v. 1.2.0\n* https://github.com/RaumZeit/MarchingSquares.js\n*/\n\nvar defaultSettings$1 = {\n    successCallback: null,\n    verbose: false,\n    polygons: false\n};\n\nvar settings$1 = {};\n\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\nfunction isoBands(data, minV, bandwidth, options) {\n    /* process options */\n    options = options ? options : {};\n\n    var optionKeys = Object.keys(defaultSettings$1);\n\n    for (var i = 0; i < optionKeys.length; i++) {\n        var key = optionKeys[i];\n        var val = options[key];\n        val = ((typeof val !== 'undefined') && (val !== null)) ? val : defaultSettings$1[key];\n\n        settings$1[key] = val;\n    }\n\n    if (settings$1.verbose)\n        console.log('MarchingSquaresJS-isoBands: computing isobands for [' + minV + ':' + (minV + bandwidth) + ']');\n\n    var grid = computeBandGrid(data, minV, bandwidth);\n\n    var ret;\n    if (settings$1.polygons) {\n        if (settings$1.verbose)\n            console.log('MarchingSquaresJS-isoBands: returning single polygons for each grid cell');\n        ret = BandGrid2Areas(grid);\n    } else {\n        if (settings$1.verbose)\n            console.log('MarchingSquaresJS-isoBands: returning polygon paths for entire data grid');\n        ret = BandGrid2AreaPaths(grid);\n    }\n\n    if (typeof settings$1.successCallback === 'function')\n        settings$1.successCallback(ret);\n\n    return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\nvar Node0 = 64;\nvar Node1 = 16;\nvar Node2 = 4;\nvar Node3 = 1;\n\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\n\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\n\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\n\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\n\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\n\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\n\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\n\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\n\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\n\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n\n\n/* triangle cases */\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\n\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\n\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\n\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n\n/* single trapezoid cases */\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\n\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\n\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\n\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n\n/* single rectangle cases */\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\n\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\n\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\n\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\n\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\n\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n\n/* single hexagon cases */\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\n\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\n\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\n\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\n\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\n\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n\n/* single pentagon cases */\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\n\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\n\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\n\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\n\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\n\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\n\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\n\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\n\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\n\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\n\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\n\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n\n/* 8-sided cases */\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\n\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\n\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n\n/* 6-sided cases */\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\n\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\n\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\n\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n\n/* 7-sided cases */\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\n\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\n\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\n\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\n\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\n\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\n\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\n\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n\n\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\nvar p00 = function (cell) {\n    return [[cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\nvar p01 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0]];\n};\nvar p02 = function (cell) {\n    return [[cell.topright, 1], [1, 1], [1, cell.righttop]];\n};\nvar p03 = function (cell) {\n    return [[0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* trapezoid cases */\nvar p04 = function (cell) {\n    return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\nvar p05 = function (cell) {\n    return [[cell.bottomright, 0], [cell.bottomleft, 0], [1, cell.righttop], [1, cell.rightbottom]];\n};\nvar p06 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\nvar p07 = function (cell) {\n    return [[0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* rectangle cases */\nvar p08 = function (cell) {\n    return [[0, 0], [0, cell.leftbottom], [1, cell.rightbottom], [1, 0]];\n};\nvar p09 = function (cell) {\n    return [[1, 0], [cell.bottomright, 0], [cell.topright, 1], [1, 1]];\n};\nvar p10 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [0, cell.lefttop], [0, 1]];\n};\nvar p11 = function (cell) {\n    return [[cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\nvar p12 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.leftbottom], [0, cell.lefttop]];\n};\nvar p13 = function (cell) {\n    return [[cell.topleft, 1], [cell.topright, 1], [cell.bottomright, 0], [cell.bottomleft, 0]];\n};\n/* square case */\nvar p14 = function () {\n    return [[0, 0], [0, 1], [1, 1], [1, 0]];\n};\n/* pentagon cases */\nvar p15 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1211 || 1011 */\nvar p16 = function (cell) {\n    return [[cell.topright, 1], [1, 1], [1, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 2111 || 0111 */\nvar p17 = function (cell) {\n    return [[1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [1, 1]];\n};\n/* 1112 || 1110 */\nvar p18 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, 1]];\n};\n/* 1121 || 1101 */\nvar p19 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1200 || 1022 */\nvar p20 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [cell.topright, 1]];\n};\n/* 0120 || 2102 */\nvar p21 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\n/* 0012 || 2210 */\nvar p22 = function (cell) {\n    return [[cell.topright, 1], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1]];\n};\n/* 2001 || 0221 */\nvar p23 = function (cell) {\n    return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1002 || 1220 */\nvar p24 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2100 || 0122 */\nvar p25 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0210 || 2012 */\nvar p26 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 0021 || 2201 */\n/*hexagon cases */\nvar p27 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0211 || 2011 */\nvar p28 = function (cell) {\n    return [[1, 1], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2110 || 0112 */\nvar p29 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1]];\n};\n/* 1102 || 1120 */\nvar p30 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1021 || 1201 */\nvar p31 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 2101 || 0121 */\nvar p32 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1012 || 1210 */\n/* 8-sided cases */\nvar p33 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* flipped == 1 state for 0202 and 2020 */\n/* 6-sided cases */\nvar p34 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\nvar p35 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n/* 7-sided cases */\nvar p36 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\nvar p37 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\nvar p38 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\nvar p39 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n\n/* triangle cases */\nisoBandEdgeBL[1]    = isoBandEdgeLB[1]    = 18;\nisoBandEdgeBL[169]  = isoBandEdgeLB[169]  = 18;\nisoBandEdgeBR[4]    = isoBandEdgeRB[4]    = 12;\nisoBandEdgeBR[166]  = isoBandEdgeRB[166]  = 12;\nisoBandEdgeRT[16]   = isoBandEdgeTR[16]   = 4;\nisoBandEdgeRT[154]  = isoBandEdgeTR[154]  = 4;\nisoBandEdgeLT[64]   = isoBandEdgeTL[64]   = 22;\nisoBandEdgeLT[106]  = isoBandEdgeTL[106]  = 22;\n\n/* trapezoid cases */\nisoBandEdgeBR[2]    = isoBandEdgeLT[2]    = 17;\nisoBandEdgeBL[2]    = isoBandEdgeLB[2]    = 18;\nisoBandEdgeBR[168]  = isoBandEdgeLT[168]  = 17;\nisoBandEdgeBL[168]  = isoBandEdgeLB[168]  = 18;\nisoBandEdgeRT[8]    = isoBandEdgeBL[8]    = 9;\nisoBandEdgeRB[8]    = isoBandEdgeBR[8]    = 12;\nisoBandEdgeRT[162]  = isoBandEdgeBL[162]  = 9;\nisoBandEdgeRB[162]  = isoBandEdgeBR[162]  = 12;\nisoBandEdgeRT[32]   = isoBandEdgeTR[32]   = 4;\nisoBandEdgeRB[32]   = isoBandEdgeTL[32]   = 1;\nisoBandEdgeRT[138]  = isoBandEdgeTR[138]  = 4;\nisoBandEdgeRB[138]  = isoBandEdgeTL[138]  = 1;\nisoBandEdgeLB[128]  = isoBandEdgeTR[128]  = 21;\nisoBandEdgeLT[128]  = isoBandEdgeTL[128]  = 22;\nisoBandEdgeLB[42]   = isoBandEdgeTR[42]   = 21;\nisoBandEdgeLT[42]   = isoBandEdgeTL[42]   = 22;\n\n/* rectangle cases */\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n\n/* pentagon cases */\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n\n/* hexagon cases */\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n\n/* 8-sided cases */\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n\n/* 6-sided cases */\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n\n/* 7-sided cases */\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n\n/* triangle cases */\npolygon_table[1] = polygon_table[169] = p00; /* 2221 || 0001 */\npolygon_table[4] = polygon_table[166] = p01; /* 2212 || 0010 */\npolygon_table[16] = polygon_table[154] = p02; /* 2122 || 0100 */\npolygon_table[64] = polygon_table[106] = p03; /* 1222 || 1000 */\n\n/* trapezoid cases */\npolygon_table[168] = polygon_table[2] = p04; /* 2220 || 0002 */\npolygon_table[162] = polygon_table[8] = p05; /* 2202 || 0020 */\npolygon_table[138] = polygon_table[32] = p06; /* 2022 || 0200 */\npolygon_table[42] = polygon_table[128] = p07; /* 0222 || 2000 */\n\n/* rectangle cases */\npolygon_table[5] = polygon_table[165] = p08; /* 0011 || 2211 */\npolygon_table[20] = polygon_table[150] = p09; /* 0110 || 2112 */\npolygon_table[80] = polygon_table[90] = p10; /* 1100 || 1122 */\npolygon_table[65] = polygon_table[105] = p11; /* 1001 || 1221 */\npolygon_table[160] = polygon_table[10] = p12; /* 2200 || 0022 */\npolygon_table[130] = polygon_table[40] = p13; /* 2002 || 0220 */\n\n/* square case */\npolygon_table[85] = p14; /* 1111 */\n\n/* pentagon cases */\npolygon_table[101] = polygon_table[69] = p15; /* 1211 || 1011 */\npolygon_table[149] = polygon_table[21] = p16; /* 2111 || 0111 */\npolygon_table[86] = polygon_table[84] = p17; /* 1112 || 1110 */\npolygon_table[89] = polygon_table[81] = p18; /* 1121 || 1101 */\npolygon_table[96] = polygon_table[74] = p19; /* 1200 || 1022 */\npolygon_table[24] = polygon_table[146] = p20; /* 0120 || 2102 */\npolygon_table[6] = polygon_table[164] = p21; /* 0012 || 2210 */\npolygon_table[129] = polygon_table[41] = p22; /* 2001 || 0221 */\npolygon_table[66] = polygon_table[104] = p23; /* 1002 || 1220 */\npolygon_table[144] = polygon_table[26] = p24; /* 2100 || 0122 */\npolygon_table[36] = polygon_table[134] = p25; /* 0210 || 2012 */\npolygon_table[9] = polygon_table[161] = p26; /* 0021 || 2201 */\n\n/* hexagon cases */\npolygon_table[37] = polygon_table[133] = p27; /* 0211 || 2011 */\npolygon_table[148] = polygon_table[22] = p28; /* 2110 || 0112 */\npolygon_table[82] = polygon_table[88] = p29; /* 1102 || 1120 */\npolygon_table[73] = polygon_table[97] = p30; /* 1021 || 1201 */\npolygon_table[145] = polygon_table[25] = p31; /* 2101 || 0121 */\npolygon_table[70] = polygon_table[100] = p32; /* 1012 || 1210 */\n\n/* 8-sided cases */\npolygon_table[34] = function (c) { return [p07(c), p05(c)]; }; /* 0202 || 2020 with flipped == 0 */\npolygon_table[35] = p33; /* flipped == 1 state for 0202 and 2020 */\npolygon_table[136] = function (c) { return [p06(c), p04(c)]; }; /* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\npolygon_table[153] = function (c) { return [p02(c), p00(c)]; }; /* 0101 with flipped == 0 || 2121 with flipped == 2 */\npolygon_table[102] = function (c) { return [p01(c), p03(c)]; }; /* 1010 with flipped == 0 || 1212 with flipped == 2 */\npolygon_table[155] = p34; /* 0101 with flipped == 1 || 2121 with flipped == 1 */\npolygon_table[103] = p35; /* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\npolygon_table[152] = function (c) { return [p02(c), p04(c)]; }; /* 2120 with flipped == 2 || 0102 with flipped == 0 */\npolygon_table[156] = p36; /* 2120 with flipped == 1 || 0102 with flipped == 1 */\npolygon_table[137] = function (c) { return [p06(c), p00(c)]; }; /* 2021 with flipped == 2 || 0201 with flipped == 0 */\npolygon_table[139] = p37; /* 2021 with flipped == 1 || 0201 with flipped == 1 */\npolygon_table[98] = function (c) { return [p05(c), p03(c)]; }; /* 1202 with flipped == 2 || 1020 with flipped == 0 */\npolygon_table[99] = p38; /* 1202 with flipped == 1 || 1020 with flipped == 1 */\npolygon_table[38] = function (c) { return [p01(c), p07(c)]; }; /* 0212 with flipped == 2 || 2010 with flipped == 0 */\npolygon_table[39] = p39; /* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX$1(y, y0, y1) {\n    return (y - y0) / (y1 - y0);\n}\n\nfunction isArray(myArray) {\n    return myArray.constructor.toString().indexOf('Array') > -1;\n}\n\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\nfunction computeBandGrid(data, minV, bandwidth) {\n    var rows = data.length - 1;\n    var cols = data[0].length - 1;\n    var BandGrid = { rows: rows, cols: cols, cells: [] };\n\n    var maxV = minV + Math.abs(bandwidth);\n\n    for (var j = 0; j < rows; ++j) {\n        BandGrid.cells[j] = [];\n        for (var i = 0; i < cols; ++i) {\n            /*  compose the 4-trit corner representation */\n            var cval = 0;\n\n            var tl = data[j + 1][i];\n            var tr = data[j + 1][i + 1];\n            var br = data[j][i + 1];\n            var bl = data[j][i];\n\n            if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n                continue;\n            }\n\n            cval |= (tl < minV) ? 0 : (tl > maxV) ? 128 : 64;\n            cval |= (tr < minV) ? 0 : (tr > maxV) ? 32 : 16;\n            cval |= (br < minV) ? 0 : (br > maxV) ? 8 : 4;\n            cval |= (bl < minV) ? 0 : (bl > maxV) ? 2 : 1;\n\n            var cval_real = +cval;\n\n            /* resolve ambiguity via averaging */\n            var flipped = 0;\n            if ((cval === 17)  || /* 0101 */\n          (cval === 18)  || /* 0102 */\n          (cval === 33)  || /* 0201 */\n          (cval === 34)  || /* 0202 */\n          (cval === 38)  || /* 0212 */\n          (cval === 68)  || /* 1010 */\n          (cval === 72)  || /* 1020 */\n          (cval === 98)  || /* 1202 */\n          (cval === 102)  || /* 1212 */\n          (cval === 132)  || /* 2010 */\n          (cval === 136)  || /* 2020 */\n          (cval === 137)  || /* 2021 */\n          (cval === 152)  || /* 2120 */\n          (cval === 153) /* 2121 */\n            ) {\n                var average = (tl + tr + br + bl) / 4;\n                /* set flipped state */\n                flipped = (average > maxV) ? 2 : (average < minV) ? 0 : 1;\n\n                /* adjust cval for flipped cases */\n\n                /* 8-sided cases */\n                if (cval === 34) {\n                    if (flipped === 1) {\n                        cval = 35;\n                    } else if (flipped === 0) {\n                        cval = 136;\n                    }\n                } else if (cval === 136) {\n                    if (flipped === 1) {\n                        cval = 35;\n                        flipped = 4;\n                    } else if (flipped === 0) {\n                        cval = 34;\n                    }\n                }\n\n                /* 6-sided polygon cases */\n                else if (cval === 17) {\n                    if (flipped === 1) {\n                        cval = 155;\n                        flipped = 4;\n                    } else if (flipped === 0) {\n                        cval = 153;\n                    }\n                } else if (cval === 68) {\n                    if (flipped === 1) {\n                        cval = 103;\n                        flipped = 4;\n                    } else if (flipped === 0) {\n                        cval = 102;\n                    }\n                } else if (cval === 153) {\n                    if (flipped === 1)\n                        cval = 155;\n                } else if (cval === 102) {\n                    if (flipped === 1)\n                        cval = 103;\n                }\n\n                /* 7-sided polygon cases */\n                else if (cval === 152) {\n                    if (flipped < 2) {\n                        cval    = 156;\n                        flipped = 1;\n                    }\n                } else if (cval === 137) {\n                    if (flipped < 2) {\n                        cval = 139;\n                        flipped = 1;\n                    }\n                } else if (cval === 98) {\n                    if (flipped < 2) {\n                        cval    = 99;\n                        flipped = 1;\n                    }\n                } else if (cval === 38) {\n                    if (flipped < 2) {\n                        cval    = 39;\n                        flipped = 1;\n                    }\n                } else if (cval === 18) {\n                    if (flipped > 0) {\n                        cval = 156;\n                        flipped = 4;\n                    } else {\n                        cval = 152;\n                    }\n                } else if (cval === 33) {\n                    if (flipped > 0) {\n                        cval = 139;\n                        flipped = 4;\n                    } else {\n                        cval = 137;\n                    }\n                } else if (cval === 72) {\n                    if (flipped > 0) {\n                        cval = 99;\n                        flipped = 4;\n                    } else {\n                        cval = 98;\n                    }\n                } else if (cval === 132) {\n                    if (flipped > 0) {\n                        cval = 39;\n                        flipped = 4;\n                    } else {\n                        cval = 38;\n                    }\n                }\n            }\n\n            /* add cell to BandGrid if it contains at least one polygon-side */\n            if ((cval != 0) && (cval != 170)) {\n                var topleft, topright, bottomleft, bottomright,\n                    righttop, rightbottom, lefttop, leftbottom;\n\n                topleft = topright = bottomleft = bottomright = righttop =\n                rightbottom = lefttop = leftbottom = 0.5;\n\n                var edges = [];\n\n                /* do interpolation here */\n                /* 1st Triangles */\n                if (cval === 1) { /* 0001 */\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 169) { /* 2221 */\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 4) { /* 0010 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    bottomright = interpolateX$1(minV, bl, br);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 166) { /* 2212 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 16) { /* 0100 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 154) { /* 2122 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 64) { /* 1000 */\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 106) { /* 1222 */\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeLT[cval]);\n                }\n                /* 2nd Trapezoids */\n                else if (cval === 168) { /* 2220 */\n                    bottomright = interpolateX$1(maxV, bl, br);\n                    bottomleft = interpolateX$1(minV, bl, br);\n                    leftbottom = interpolateX$1(minV, bl, tl);\n                    lefttop = interpolateX$1(maxV, bl, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 2) { /* 0002 */\n                    bottomright = 1 - interpolateX$1(minV, br, bl);\n                    bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                    leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                    lefttop = 1 - interpolateX$1(minV, tl, bl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 162) { /* 2202 */\n                    righttop = interpolateX$1(maxV, br, tr);\n                    rightbottom = interpolateX$1(minV, br, tr);\n                    bottomright = 1 - interpolateX$1(minV, br, bl);\n                    bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 8) { /* 0020 */\n                    righttop = 1 - interpolateX$1(minV, tr, br);\n                    rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                    bottomright = interpolateX$1(maxV, bl, br);\n                    bottomleft = interpolateX$1(minV, bl, br);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 138) { /* 2022 */\n                    righttop = 1 - interpolateX$1(minV, tr, br);\n                    rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                    topleft = 1 - interpolateX$1(maxV, tr, tl);\n                    topright = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 32) { /* 0200 */\n                    righttop = interpolateX$1(maxV, br, tr);\n                    rightbottom = interpolateX$1(minV, br, tr);\n                    topleft = interpolateX$1(minV, tl, tr);\n                    topright = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 42) { /* 0222 */\n                    leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                    lefttop = 1 - interpolateX$1(minV, tl, bl);\n                    topleft = interpolateX$1(minV, tl, tr);\n                    topright = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 128) { /* 2000 */\n                    leftbottom = interpolateX$1(minV, bl, tl);\n                    lefttop = interpolateX$1(maxV, bl, tl);\n                    topleft = 1 - interpolateX$1(maxV, tr, tl);\n                    topright = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                }\n\n                /* 3rd rectangle cases */\n                if (cval === 5) { /* 0011 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 165) { /* 2211 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 20) { /* 0110 */\n                    bottomright = interpolateX$1(minV, bl, br);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 150) { /* 2112 */\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 80) { /* 1100 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 90) { /* 1122 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 65) { /* 1001 */\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 105) { /* 1221 */\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 160) { /* 2200 */\n                    righttop = interpolateX$1(maxV, br, tr);\n                    rightbottom = interpolateX$1(minV, br, tr);\n                    leftbottom = interpolateX$1(minV, bl, tl);\n                    lefttop = interpolateX$1(maxV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 10) { /* 0022 */\n                    righttop = 1 - interpolateX$1(minV, tr, br);\n                    rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                    leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                    lefttop = 1 - interpolateX$1(minV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 130) { /* 2002 */\n                    bottomright = 1 - interpolateX$1(minV, br, bl);\n                    bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                    topleft = 1 - interpolateX$1(maxV, tr, tl);\n                    topright = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 40) { /* 0220 */\n                    bottomright = interpolateX$1(maxV, bl, br);\n                    bottomleft = interpolateX$1(minV, bl, br);\n                    topleft = interpolateX$1(minV, tl, tr);\n                    topright = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                }\n\n                /* 4th single pentagon cases */\n                else if (cval === 101) { /* 1211 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 69) { /* 1011 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 149) { /* 2111 */\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 21) { /* 0111 */\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 86) { /* 1112 */\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 84) { /* 1110 */\n                    bottomright = interpolateX$1(minV, bl, br);\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 89) { /* 1121 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 81) { /* 1101 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 96) { /* 1200 */\n                    righttop = interpolateX$1(maxV, br, tr);\n                    rightbottom = interpolateX$1(minV, br, tr);\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 74) { /* 1022 */\n                    righttop = 1 - interpolateX$1(minV, tr, br);\n                    rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 24) { /* 0120 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    bottomright = interpolateX$1(maxV, bl, br);\n                    bottomleft = interpolateX$1(minV, bl, br);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 146) { /* 2102 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    bottomright = 1 - interpolateX$1(minV, br, bl);\n                    bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 6) { /* 0012 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                    lefttop = 1 - interpolateX$1(minV, tl, bl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 164) { /* 2210 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    bottomright = interpolateX$1(minV, bl, br);\n                    leftbottom = interpolateX$1(minV, bl, tl);\n                    lefttop = interpolateX$1(maxV, bl, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 129) { /* 2001 */\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    topleft = 1 - interpolateX$1(maxV, tr, tl);\n                    topright = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 41) { /* 0221 */\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    topleft = interpolateX$1(minV, tl, tr);\n                    topright = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 66) { /* 1002 */\n                    bottomright = 1 - interpolateX$1(minV, br, bl);\n                    bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 104) { /* 1220 */\n                    bottomright = interpolateX$1(maxV, bl, br);\n                    bottomleft = interpolateX$1(minV, bl, br);\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeTL[cval]);\n                } else if (cval === 144) { /* 2100 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    leftbottom = interpolateX$1(minV, bl, tl);\n                    lefttop = interpolateX$1(maxV, bl, tl);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 26) { /* 0122 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                    lefttop = 1 - interpolateX$1(minV, tl, bl);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 36) { /* 0210 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    bottomright = interpolateX$1(minV, bl, br);\n                    topleft = interpolateX$1(minV, tl, tr);\n                    topright = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 134) { /* 2012 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    topleft = 1 - interpolateX$1(maxV, tr, tl);\n                    topright = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 9) { /* 0021 */\n                    righttop = 1 - interpolateX$1(minV, tr, br);\n                    rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 161) { /* 2201 */\n                    righttop = interpolateX$1(maxV, br, tr);\n                    rightbottom = interpolateX$1(minV, br, tr);\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                }\n\n                /* 5th single hexagon cases */\n                else if (cval === 37) { /* 0211 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    topleft = interpolateX$1(minV, tl, tr);\n                    topright = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 133) { /* 2011 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    topleft = 1 - interpolateX$1(maxV, tr, tl);\n                    topright = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 148) { /* 2110 */\n                    bottomright = interpolateX$1(minV, bl, br);\n                    leftbottom = interpolateX$1(minV, bl, tl);\n                    lefttop = interpolateX$1(maxV, bl, tl);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 22) { /* 0112 */\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                    lefttop = 1 - interpolateX$1(minV, tl, bl);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 82) { /* 1102 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    bottomright = 1 - interpolateX$1(minV, br, bl);\n                    bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 88) { /* 1120 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    bottomright = interpolateX$1(maxV, bl, br);\n                    bottomleft = interpolateX$1(minV, bl, br);\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 73) { /* 1021 */\n                    righttop = 1 - interpolateX$1(minV, tr, br);\n                    rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 97) { /* 1201 */\n                    righttop = interpolateX$1(maxV, br, tr);\n                    rightbottom = interpolateX$1(minV, br, tr);\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 145) { /* 2101 */\n                    righttop = interpolateX$1(minV, br, tr);\n                    bottomleft = 1 - interpolateX$1(minV, br, bl);\n                    leftbottom = interpolateX$1(maxV, bl, tl);\n                    topright = 1 - interpolateX$1(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 25) { /* 0121 */\n                    righttop = 1 - interpolateX$1(maxV, tr, br);\n                    bottomleft = interpolateX$1(maxV, bl, br);\n                    leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                    topright = interpolateX$1(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 70) { /* 1012 */\n                    rightbottom = 1 - interpolateX$1(minV, tr, br);\n                    bottomright = 1 - interpolateX$1(maxV, br, bl);\n                    lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                    topleft = 1 - interpolateX$1(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 100) { /* 1210 */\n                    rightbottom = interpolateX$1(maxV, br, tr);\n                    bottomright = interpolateX$1(minV, bl, br);\n                    lefttop = interpolateX$1(minV, bl, tl);\n                    topleft = interpolateX$1(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                }\n\n                /* 8-sided cases */\n                else if (cval === 34) { /* 0202 || 2020 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 35) { /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n                    if (flipped === 4) {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 136) { /* 2020 || 0202 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                }\n\n                /* 6-sided polygon cases */\n                else if (cval === 153) { /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n                    if (flipped === 0) {\n                        righttop = interpolateX$1(minV, br, tr);\n                        bottomleft = 1 - interpolateX$1(minV, br, bl);\n                        leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                        topright = interpolateX$1(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(maxV, tr, br);\n                        bottomleft = interpolateX$1(maxV, bl, br);\n                        leftbottom = interpolateX$1(maxV, bl, tl);\n                        topright = 1 - interpolateX$1(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 102) { /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n                    if (flipped === 0) {\n                        rightbottom = 1 - interpolateX$1(minV, tr, br);\n                        bottomright = interpolateX$1(minV, bl, br);\n                        lefttop = interpolateX$1(minV, bl, tl);\n                        topleft = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX$1(maxV, br, tr);\n                        bottomright = 1 - interpolateX$1(maxV, br, bl);\n                        lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                        topleft = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 155) { /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n                    if (flipped === 4) {\n                        righttop = interpolateX$1(minV, br, tr);\n                        bottomleft = 1 - interpolateX$1(minV, br, bl);\n                        leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                        topright = interpolateX$1(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(maxV, tr, br);\n                        bottomleft = interpolateX$1(maxV, bl, br);\n                        leftbottom = interpolateX$1(maxV, bl, tl);\n                        topright = 1 - interpolateX$1(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 103) { /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n                    if (flipped === 4) {\n                        rightbottom = 1 - interpolateX$1(minV, tr, br);\n                        bottomright = interpolateX$1(minV, bl, br);\n                        lefttop = interpolateX$1(minV, bl, tl);\n                        topleft = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX$1(maxV, br, tr);\n                        bottomright = 1 - interpolateX$1(maxV, br, bl);\n                        lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                        topleft = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                }\n\n                /* 7-sided polygon cases */\n                else if (cval === 152) { /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topright = interpolateX$1(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topright = 1 - interpolateX$1(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 156) { /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n                    if (flipped === 4) {\n                        righttop = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topright = interpolateX$1(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topright = 1 - interpolateX$1(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 137) { /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomleft = 1 - interpolateX$1(minV, br, bl);\n                        leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomleft = interpolateX$1(maxV, bl, br);\n                        leftbottom = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 139) { /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n                    if (flipped === 4) {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomleft = 1 - interpolateX$1(minV, br, bl);\n                        leftbottom = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomleft = interpolateX$1(maxV, bl, br);\n                        leftbottom = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 98) { /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        lefttop = interpolateX$1(minV, bl, tl);\n                        topleft = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                        topleft = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 99) { /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n                    if (flipped === 4) {\n                        righttop = 1 - interpolateX$1(minV, tr, br);\n                        rightbottom = 1 - interpolateX$1(maxV, tr, br);\n                        bottomright = interpolateX$1(maxV, bl, br);\n                        bottomleft = interpolateX$1(minV, bl, br);\n                        lefttop = interpolateX$1(minV, bl, tl);\n                        topleft = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX$1(maxV, br, tr);\n                        rightbottom = interpolateX$1(minV, br, tr);\n                        bottomright = 1 - interpolateX$1(minV, br, bl);\n                        bottomleft = 1 - interpolateX$1(maxV, br, bl);\n                        lefttop = 1 - interpolateX$1(maxV, tl, bl);\n                        topleft = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 38) { /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n                    if (flipped === 0) {\n                        rightbottom = 1 - interpolateX$1(minV, tr, br);\n                        bottomright = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX$1(maxV, br, tr);\n                        bottomright = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 39) { /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n                    if (flipped === 4) {\n                        rightbottom = 1 - interpolateX$1(minV, tr, br);\n                        bottomright = interpolateX$1(minV, bl, br);\n                        leftbottom = interpolateX$1(minV, bl, tl);\n                        lefttop = interpolateX$1(maxV, bl, tl);\n                        topleft = 1 - interpolateX$1(maxV, tr, tl);\n                        topright = 1 - interpolateX$1(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX$1(maxV, br, tr);\n                        bottomright = 1 - interpolateX$1(maxV, br, bl);\n                        leftbottom = 1 - interpolateX$1(maxV, tl, bl);\n                        lefttop = 1 - interpolateX$1(minV, tl, bl);\n                        topleft = interpolateX$1(minV, tl, tr);\n                        topright = interpolateX$1(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 85) {\n                    righttop = 1;\n                    rightbottom = 0;\n                    bottomright = 1;\n                    bottomleft = 0;\n                    leftbottom = 0;\n                    lefttop = 1;\n                    topleft = 0;\n                    topright = 1;\n                }\n\n                if (topleft < 0 || topleft > 1 || topright < 0 || topright > 1 || righttop < 0 || righttop > 1 || bottomright < 0 || bottomright > 1 || leftbottom < 0 || leftbottom > 1 || lefttop < 0 || lefttop > 1) {\n                    console.log('MarchingSquaresJS-isoBands: ' + cval + ' ' + cval_real + ' ' + tl + ',' + tr + ',' + br + ',' + bl + ' ' + flipped + ' ' + topleft + ' ' + topright + ' ' + righttop + ' ' + rightbottom + ' ' + bottomright + ' ' + bottomleft + ' ' + leftbottom + ' ' + lefttop);\n                }\n\n                BandGrid.cells[j][i] = {\n                    cval: cval,\n                    cval_real: cval_real,\n                    flipped: flipped,\n                    topleft: topleft,\n                    topright: topright,\n                    righttop: righttop,\n                    rightbottom: rightbottom,\n                    bottomright: bottomright,\n                    bottomleft: bottomleft,\n                    leftbottom: leftbottom,\n                    lefttop: lefttop,\n                    edges: edges\n                };\n            }\n        }\n    }\n\n    return BandGrid;\n}\n\nfunction BandGrid2AreaPaths(grid) {\n    var areas = [];\n    var rows = grid.rows;\n    var cols = grid.cols;\n    var currentPolygon = [];\n\n    for (var j = 0; j < rows; j++) {\n        for (var i = 0; i < cols; i++) {\n            if ((typeof grid.cells[j][i] !== 'undefined') && (grid.cells[j][i].edges.length > 0)) {\n                /* trace back polygon path starting from this cell */\n\n                var cell = grid.cells[j][i];\n\n                /* get start coordinates */\n\n                var prev  = getStartXY(cell),\n                    next  = null,\n                    p     = i,\n                    q     = j;\n\n                if (prev !== null) {\n                    currentPolygon.push([prev.p[0] + p, prev.p[1] + q]);\n                    //console.log(cell);\n                    //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n                }\n\n                do {\n                    //console.log(p + \",\" + q);\n                    //console.log(grid.cells[q][p]);\n                    //console.log(grid.cells[q][p].edges);\n                    //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n\n                    next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n                    if (next !== null) {\n                        //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n                        currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n                        p += next.x;\n                        q += next.y;\n                        prev = next;\n                    } else {\n                        //console.log(\"getExitXY() returned null!\");\n                        break;\n                    }\n                    //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n                    /* special case, where we've reached the grid boundaries */\n                    if ((q < 0) || (q >= rows) || (p < 0) || (p >= cols) || (typeof grid.cells[q][p] === 'undefined')) {\n                        /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n                        /* set back coordinates of current cell */\n                        p -= next.x;\n                        q -= next.y;\n\n                        //console.log(\"reached boundary at \" + p + \" \" + q);\n\n                        var missing = traceOutOfGridPath(grid, p, q, next.x, next.y, next.o);\n                        if (missing !== null) {\n                            missing.path.forEach(function (pp) {\n                                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                                currentPolygon.push(pp);\n                            });\n                            p = missing.i;\n                            q = missing.j;\n                            prev = missing;\n                        } else {\n                            break;\n                        }\n                        //console.log(grid.cells[q][p]);\n                    }\n                } while ((typeof grid.cells[q][p] !== 'undefined') &&\n                  (grid.cells[q][p].edges.length > 0));\n\n                areas.push(currentPolygon);\n                //console.log(\"next polygon\");\n                //console.log(currentPolygon);\n                currentPolygon = [];\n                if (grid.cells[j][i].edges.length > 0)\n                    i--;\n            }\n        }\n    }\n    return areas;\n}\n\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n    var cell = grid.cells[j][i];\n    var cval = cell.cval_real;\n    var p = i + d_x,\n        q = j + d_y;\n    var path = [];\n    var closed = false;\n\n    while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n        if ((typeof grid.cells[q] === 'undefined') || (typeof grid.cells[q][p] === 'undefined')) {\n            //console.log(\"which is undefined\");\n            /* we can't move on, so we have to change direction to proceed further */\n\n            /* go back to previous cell */\n            q -= d_y;\n            p -= d_x;\n            cell = grid.cells[q][p];\n            cval = cell.cval_real;\n\n            /* check where we've left defined cells of the grid... */\n            if (d_y === -1) { /* we came from top */\n                if (d_o === 0) {  /* exit left */\n                    if (cval & Node3) { /* lower left node is within range, so we move left */\n                        path.push([p, q]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                    } else if (cval & Node2) { /* lower right node is within range, so we move right */\n                        path.push([p + 1, q]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 0;\n                    } else { /* close the path */\n                        path.push([p + cell.bottomright, q]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 1;\n                        closed = true;\n                        break;\n                    }\n                } else if (cval & Node3) {\n                    path.push([p, q]);\n                    d_x = -1;\n                    d_y = 0;\n                    d_o = 0;\n                } else if (cval & Node2) {\n                    path.push([p + cell.bottomright, q]);\n                    d_x = 0;\n                    d_y = 1;\n                    d_o = 1;\n                    closed = true;\n                    break;\n                } else {\n                    path.push([p + cell.bottomleft, q]);\n                    d_x = 0;\n                    d_y = 1;\n                    d_o = 0;\n                    closed = true;\n                    break;\n                }\n            } else if (d_y === 1) { /* we came from bottom */\n                //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                if (d_o === 0) { /* exit left */\n                    if (cval & Node1) { /* top right node is within range, so we move right */\n                        path.push([p + 1, q + 1]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                    } else if (!(cval & Node0)) { /* found entry within same cell */\n                        path.push([p + cell.topright, q + 1]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    } else {\n                        path.push([p + cell.topleft, q + 1]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    }\n                } else if (cval & Node1) {\n                    path.push([p + 1, q + 1]);\n                    d_x = 1;\n                    d_y = 0;\n                    d_o = 1;\n                } else { /* move right */\n                    path.push([p + 1, q + 1]);\n                    d_x = 1;\n                    d_y = 0;\n                    d_o = 1;\n                    //console.log(\"wtf\");\n                    //break;\n                }\n            } else if (d_x === -1) { /* we came from right */\n                //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                if (d_o === 0) {\n                    //console.log(\"continue at bottom\");\n                    if (cval & Node0) {\n                        path.push([p, q + 1]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                        //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                    } else if (!(cval & Node3)) { /* there has to be an entry into the regular grid again! */\n                        //console.log(\"exiting top\");\n                        path.push([p, q + cell.lefttop]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                        closed = true;\n                        break;\n                    } else {\n                        //console.log(\"exiting bottom\");\n                        path.push([p, q + cell.leftbottom]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    }\n                } else {\n                    //console.log(\"continue at top\");\n                    if (cval & Node0) {\n                        path.push([p, q + 1]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                        //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                    } else { /* */\n                        console.log('MarchingSquaresJS-isoBands: wtf');\n                        break;\n                    }\n                }\n            } else if (d_x === 1) { /* we came from left */\n                //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                if (d_o === 0) { /* exit bottom */\n                    if (cval & Node2) {\n                        path.push([p + 1, q]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else {\n                        path.push([p + 1, q + cell.rightbottom]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    }\n                } else { /* exit top */\n                    if (cval & Node2) {\n                        path.push([p + 1, q]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else if (!(cval & Node1)) {\n                        path.push([p + 1, q + cell.rightbottom]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    } else {\n                        path.push([p + 1, q + cell.righttop]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 1;\n                        break;\n                    }\n                }\n            } else { /* we came from the same cell */\n                console.log('MarchingSquaresJS-isoBands: we came from nowhere!');\n                break;\n            }\n\n        } else { /* try to find an entry into the regular grid again! */\n            cell = grid.cells[q][p];\n            cval = cell.cval_real;\n            //console.log(\"which is defined\");\n\n            if (d_x === -1) {\n                if (d_o === 0) {\n                    /* try to go downwards */\n                    if ((typeof grid.cells[q - 1] !== 'undefined') && (typeof grid.cells[q - 1][p] !== 'undefined')) {\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else if (cval & Node3) { /* proceed searching in x-direction */\n                        //console.log(\"proceeding in x-direction!\");\n                        path.push([p, q]);\n                    } else { /* we must have found an entry into the regular grid */\n                        path.push([p + cell.bottomright, q]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 1;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    }\n                } else if (cval & Node0) { /* proceed searchin in x-direction */\n                    console.log('MarchingSquaresJS-isoBands: proceeding in x-direction!');\n                } else { /* we must have found an entry into the regular grid */\n                    console.log('MarchingSquaresJS-isoBands: found entry from top at ' + p + ',' + q);\n                    break;\n                }\n            } else if (d_x === 1) {\n                if (d_o === 0) {\n                    console.log('MarchingSquaresJS-isoBands: wtf');\n                    break;\n                } else {\n                    /* try to go upwards */\n                    if ((typeof grid.cells[q + 1] !== 'undefined') && (typeof grid.cells[q + 1][p] !== 'undefined')) {\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                    } else if (cval & Node1) {\n                        path.push([p + 1, q + 1]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                    } else { /* found an entry point into regular grid! */\n                        path.push([p + cell.topleft, q + 1]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 0;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    }\n                }\n            } else if (d_y === -1) {\n                if (d_o === 1) {\n                    /* try to go right */\n                    if (typeof grid.cells[q][p + 1] !== 'undefined') {\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                    } else if (cval & Node2) {\n                        path.push([p + 1, q]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else { /* found entry into regular grid! */\n                        path.push([p + 1, q + cell.righttop]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 1;\n                        closed = true;\n                        //console.log(\"found entry from top at \" + p + \",\" + q);\n                        break;\n                    }\n                } else {\n                    console.log('MarchingSquaresJS-isoBands: wtf');\n                    break;\n                }\n            } else if (d_y === 1) {\n                if (d_o === 0) {\n                    //console.log(\"we came from bottom left and proceed to the left\");\n                    /* try to go left */\n                    if (typeof grid.cells[q][p - 1] !== 'undefined') {\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                    } else if (cval & Node0) {\n                        path.push([p, q + 1]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                    } else { /* found an entry point into regular grid! */\n                        path.push([p, q + cell.leftbottom]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    }\n                } else {\n                    //console.log(\"we came from bottom right and proceed to the right\");\n                    console.log('MarchingSquaresJS-isoBands: wtf');\n                    break;\n                }\n            } else {\n                console.log('MarchingSquaresJS-isoBands: where did we came from???');\n                break;\n            }\n\n        }\n\n        p += d_x;\n        q += d_y;\n        //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n        if ((p === i) && (q === j)) { /* bail out, once we've closed a circle path */\n            break;\n        }\n\n    }\n\n    //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    return { path: path, i: p, j: q, x: d_x, y: d_y, o: d_o };\n}\n\nfunction deleteEdge(cell, edgeIdx) {\n    delete cell.edges[edgeIdx];\n    for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n        cell.edges[k - 1] = cell.edges[k];\n    }\n    cell.edges.pop();\n}\n\nfunction getStartXY(cell) {\n\n    if (cell.edges.length > 0) {\n        var e = cell.edges[cell.edges.length - 1];\n        //console.log(\"starting with edge \" + e);\n        var cval = cell.cval_real;\n        switch (e) {\n        case 0:   if (cval & Node1) { /* node 1 within range */\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else { /* node 1 below or above threshold */\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        }\n        case 1:   if (cval & Node2) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 2:   if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        }\n        case 3:   if (cval & Node3) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 4:   if (cval & Node1) {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        case 5:   if (cval & Node2) {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 6:   if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        case 7:   if (cval & Node3) {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 8:   if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        }\n        case 9:   if (cval & Node3) {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 10:  if (cval & Node3) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        }\n        case 11:  if (cval & Node0) {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 12:  if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 13:  if (cval & Node3) {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 14:  if (cval & Node3) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 15:  if (cval & Node0) {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 16:  if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        }\n        case 17:  if (cval & Node0) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 18:  if (cval & Node3) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 19:  if (cval & Node0) {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 20:  if (cval & Node0) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        }\n        case 21:  if (cval & Node1) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        case 22:  if (cval & Node0) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 23:  if (cval & Node1) {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        default:  console.log('MarchingSquaresJS-isoBands: edge index out of range!');\n            console.log(cell);\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getExitXY(cell, x, y, o) {\n\n    var e, id_x, d_x, d_y, cval = cell.cval;\n    var d_o;\n\n    switch (x) {\n    case -1:  switch (o) {\n    case 0:   e = isoBandEdgeRB[cval];\n        d_x = isoBandNextXRB[cval];\n        d_y = isoBandNextYRB[cval];\n        d_o = isoBandNextORB[cval];\n        break;\n    default:  e = isoBandEdgeRT[cval];\n        d_x = isoBandNextXRT[cval];\n        d_y = isoBandNextYRT[cval];\n        d_o = isoBandNextORT[cval];\n        break;\n        }\n        break;\n    case 1:   switch (o) {\n    case 0:   e = isoBandEdgeLB[cval];\n        d_x = isoBandNextXLB[cval];\n        d_y = isoBandNextYLB[cval];\n        d_o = isoBandNextOLB[cval];\n        break;\n    default:  e = isoBandEdgeLT[cval];\n        d_x = isoBandNextXLT[cval];\n        d_y = isoBandNextYLT[cval];\n        d_o = isoBandNextOLT[cval];\n        break;\n        }\n        break;\n    default:  switch (y) {\n    case -1:  switch (o) {\n    case 0:   e = isoBandEdgeTL[cval];\n        d_x = isoBandNextXTL[cval];\n        d_y = isoBandNextYTL[cval];\n        d_o = isoBandNextOTL[cval];\n        break;\n    default:  e = isoBandEdgeTR[cval];\n        d_x = isoBandNextXTR[cval];\n        d_y = isoBandNextYTR[cval];\n        d_o = isoBandNextOTR[cval];\n        break;\n        }\n        break;\n    case 1:   switch (o) {\n    case 0:   e = isoBandEdgeBL[cval];\n        d_x = isoBandNextXBL[cval];\n        d_y = isoBandNextYBL[cval];\n        d_o = isoBandNextOBL[cval];\n        break;\n    default:  e = isoBandEdgeBR[cval];\n        d_x = isoBandNextXBR[cval];\n        d_y = isoBandNextYBR[cval];\n        d_o = isoBandNextOBR[cval];\n        break;\n        }\n        break;\n    default:  break;\n        }\n        break;\n    }\n\n    id_x = cell.edges.indexOf(e);\n    if (typeof cell.edges[id_x] !== 'undefined') {\n        deleteEdge(cell, id_x);\n    } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n        return null;\n    }\n\n    cval = cell.cval_real;\n\n    switch (e) {\n    case 0:   if (cval & Node1) { /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n    } else { /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 1:   if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 2:   if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 3:   if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 4:   if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 5:   if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = cell.topright;\n        y = 1;\n    }\n        break;\n    case 6:   if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 7:   if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = cell.topright;\n        y = 1;\n    }\n        break;\n    case 8:   if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 9:   if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 10:  if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 11:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 12:  if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 13:  if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = 1;\n        y = cell.rightbottom;\n    }\n        break;\n    case 14:  if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 15:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = 1;\n        y = cell.rightbottom;\n    }\n        break;\n    case 16:  if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 17:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 18:  if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 19:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = cell.bottomleft;\n        y = 0;\n    }\n        break;\n    case 20:  if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 21:  if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 22:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 23:  if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = 0;\n        y = cell.lefttop;\n    }\n        break;\n    default:  console.log('MarchingSquaresJS-isoBands: edge index out of range!');\n        console.log(cell);\n        return null;\n    }\n\n    if ((typeof x === 'undefined') || (typeof y === 'undefined') ||\n      (typeof d_x === 'undefined') || (typeof d_y === 'undefined') ||\n      (typeof d_o === 'undefined')) {\n        console.log('MarchingSquaresJS-isoBands: undefined value!');\n        console.log(cell);\n        console.log(x + ' ' + y + ' ' + d_x + ' ' + d_y + ' ' + d_o);\n    }\n    return {p: [x, y], x: d_x, y: d_y, o: d_o};\n}\n\nfunction BandGrid2Areas(grid) {\n    var areas = [];\n    var area_idx = 0;\n\n    grid.cells.forEach(function (g, j) {\n        g.forEach(function (gg, i) {\n            if (typeof gg !== 'undefined') {\n                var a = polygon_table[gg.cval](gg);\n                if ((typeof a === 'object') && isArray(a)) {\n                    if ((typeof a[0] === 'object') && isArray(a[0])) {\n                        if ((typeof a[0][0] === 'object') && isArray(a[0][0])) {\n                            a.forEach(function (aa) {\n                                aa.forEach(function (aaa) {\n                                    aaa[0] += i;\n                                    aaa[1] += j;\n                                });\n                                areas[area_idx++] = aa;\n                            });\n                        } else {\n                            a.forEach(function (aa) {\n                                aa[0] += i;\n                                aa[1] += j;\n                            });\n                            areas[area_idx++] = a;\n                        }\n                    } else {\n                        console.log('MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates');\n                    }\n                } else {\n                    console.log('MarchingSquaresJS-isoBands: bandcell polygon with null coordinates');\n                }\n            }\n        });\n    });\n\n    return areas;\n}\n\n/**\n * Takes a grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\nfunction isobands(pointGrid, breaks, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var commonProperties = options.commonProperties || {};\n    var breaksProperties = options.breaksProperties || [];\n\n    // Validation\n    collectionOf(pointGrid, 'Point', 'Input must contain Points');\n    if (!breaks) throw new Error('breaks is required');\n    if (!Array.isArray(breaks)) throw new Error('breaks is not an Array');\n    if (!isObject(commonProperties)) throw new Error('commonProperties is not an Object');\n    if (!Array.isArray(breaksProperties)) throw new Error('breaksProperties is not an Array');\n\n    // Isoband methods\n    var matrix = gridToMatrix$1(pointGrid, {zProperty: zProperty, flip: true});\n    var contours = createContourLines(matrix, breaks, zProperty);\n    contours = rescaleContours(contours, matrix, pointGrid);\n\n    var multipolygons = contours.map(function (contour, index) {\n        if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n            throw new Error('Each mappedProperty is required to be an Object');\n        }\n        // collect all properties\n        var contourProperties = Object.assign(\n            {},\n            commonProperties,\n            breaksProperties[index]\n        );\n        contourProperties[zProperty] = contour[zProperty];\n        var multiP = multiPolygon(contour.groupedRings, contourProperties);\n        return multiP;\n    });\n\n    return featureCollection(multipolygons);\n}\n\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\nfunction createContourLines(matrix, breaks, property) {\n\n    var contours = [];\n    for (var i = 1; i < breaks.length; i++) {\n        var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n        var upperBand = +breaks[i];\n\n        var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n        // as per GeoJson rules for creating a Polygon, make sure the first element\n        // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n        // and any subsequent elements represent interior rings (i.e. smaller area);\n        // this avoids rendering issues of the MultiPolygons on the map\n        var nestedRings = orderByArea(isobandsCoords);\n        var groupedRings = groupNestedRings(nestedRings);\n        var obj = {};\n        obj['groupedRings'] = groupedRings;\n        obj[property] = lowerBand + '-' + upperBand;\n        contours.push(obj);\n    }\n    return contours;\n}\n\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\nfunction rescaleContours(contours, matrix, points$$1) {\n\n    // get dimensions (on the map) of the original grid\n    var gridBbox = bbox(points$$1); // [ minX, minY, maxX, maxY ]\n    var originalWidth = gridBbox[2] - gridBbox[0];\n    var originalHeigth = gridBbox[3] - gridBbox[1];\n\n    // get origin, which is the first point of the last row on the rectangular data on the map\n    var x0 = gridBbox[0];\n    var y0 = gridBbox[1];\n    // get number of cells per side\n    var matrixWidth = matrix[0].length - 1;\n    var matrixHeight = matrix.length - 1;\n    // calculate the scaling factor between matrix and rectangular grid on the map\n    var scaleX = originalWidth / matrixWidth;\n    var scaleY = originalHeigth / matrixHeight;\n\n    var resize = function (point$$1) {\n        point$$1[0] = point$$1[0] * scaleX + x0;\n        point$$1[1] = point$$1[1] * scaleY + y0;\n    };\n\n    // resize and shift each point/line of the isobands\n    contours.forEach(function (contour) {\n        contour.groupedRings.forEach(function (lineRingSet) {\n            lineRingSet.forEach(function (lineRing) {\n                lineRing.forEach(resize);\n            });\n        });\n    });\n    return contours;\n}\n\n\n/*  utility functions */\n\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\nfunction orderByArea(ringsCoords) {\n    var ringsWithArea = [];\n    var areas = [];\n    ringsCoords.forEach(function (coords) {\n        // var poly = polygon([points]);\n        var ringArea = area$1(polygon([coords]));\n        // create an array of areas value\n        areas.push(ringArea);\n        // associate each lineRing with its area\n        ringsWithArea.push({ring: coords, area: ringArea});\n    });\n    areas.sort(function (a, b) { // bigger --> smaller\n        return b - a;\n    });\n    // create a new array of linearRings coordinates ordered by their area\n    var orderedByArea = [];\n    areas.forEach(function (area$$1) {\n        for (var lr = 0; lr < ringsWithArea.length; lr++) {\n            if (ringsWithArea[lr].area === area$$1) {\n                orderedByArea.push(ringsWithArea[lr].ring);\n                ringsWithArea.splice(lr, 1);\n                break;\n            }\n        }\n    });\n    return orderedByArea;\n}\n\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\nfunction groupNestedRings(orderedLinearRings) {\n    // create a list of the (coordinates of) LinearRings\n    var lrList = orderedLinearRings.map(function (lr) {\n        return {lrCoordinates: lr, grouped: false};\n    });\n    var groupedLinearRingsCoords = [];\n    while (!allGrouped(lrList)) {\n        for (var i = 0; i < lrList.length; i++) {\n            if (!lrList[i].grouped) {\n                // create new group starting with the larger not already grouped ring\n                var group = [];\n                group.push(lrList[i].lrCoordinates);\n                lrList[i].grouped = true;\n                var outerMostPoly = polygon([lrList[i].lrCoordinates]);\n                // group all the rings contained by the outermost ring\n                for (var j = i + 1; j < lrList.length; j++) {\n                    if (!lrList[j].grouped) {\n                        var lrPoly = polygon([lrList[j].lrCoordinates]);\n                        if (isInside(lrPoly, outerMostPoly)) {\n                            group.push(lrList[j].lrCoordinates);\n                            lrList[j].grouped = true;\n                        }\n                    }\n                }\n                // insert the new group\n                groupedLinearRingsCoords.push(group);\n            }\n        }\n    }\n    return groupedLinearRingsCoords;\n}\n\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\nfunction isInside(testPolygon, targetPolygon) {\n    var points$$1 = explode(testPolygon);\n    for (var i = 0; i < points$$1.features.length; i++) {\n        if (!booleanPointInPolygon(points$$1.features[i], targetPolygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\nfunction allGrouped(list) {\n    for (var i = 0; i < list.length; i++) {\n        if (list[i].grouped === false) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Rotates any geojson Feature or Geometry of a specified angle, around its `centroid` or a given `pivot` point;\n * all rotations follow the right-hand rule: https://en.wikipedia.org/wiki/Right-hand_rule\n *\n * @name transformRotate\n * @param {GeoJSON} geojson object to be rotated\n * @param {number} angle of rotation (along the vertical axis), from North in decimal degrees, negative clockwise\n * @param {Object} [options={}] Optional parameters\n * @param {Coord} [options.pivot='centroid'] point around which the rotation will be performed\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} the rotated GeoJSON feature\n * @example\n * var poly = turf.polygon([[[0,29],[3.5,29],[2.5,32],[0,29]]]);\n * var options = {pivot: [0, 25]};\n * var rotatedPoly = turf.transformRotate(poly, 10, options);\n *\n * //addToMap\n * var addToMap = [poly, rotatedPoly];\n * rotatedPoly.properties = {stroke: '#F00', 'stroke-width': 4};\n */\nfunction transformRotate(geojson, angle, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var pivot = options.pivot;\n    var mutate = options.mutate;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n    if (angle === undefined || angle === null || isNaN(angle)) throw new Error('angle is required');\n\n    // Shortcut no-rotation\n    if (angle === 0) return geojson;\n\n    // Use centroid of GeoJSON if pivot is not provided\n    if (!pivot) pivot = centroid(geojson);\n\n    // Clone geojson to avoid side effects\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n    // Rotate each coordinate\n    coordEach(geojson, function (pointCoords) {\n        var initialAngle = rhumbBearing(pivot, pointCoords);\n        var finalAngle = initialAngle + angle;\n        var distance = rhumbDistance(pivot, pointCoords);\n        var newCoords = getCoords(rhumbDestination(pivot, distance, finalAngle));\n        pointCoords[0] = newCoords[0];\n        pointCoords[1] = newCoords[1];\n    });\n    return geojson;\n}\n\n/**\n * Scale a GeoJSON from a given point by a factor of scaling (ex: factor=2 would make the GeoJSON 200% larger).\n * If a FeatureCollection is provided, the origin point will be calculated based on each individual Feature.\n *\n * @name transformScale\n * @param {GeoJSON} geojson GeoJSON to be scaled\n * @param {number} factor of scaling, positive or negative values greater than 0\n * @param {Object} [options={}] Optional parameters\n * @param {string|Coord} [options.origin='centroid'] Point from which the scaling will occur (string options: sw/se/nw/ne/center/centroid)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} scaled GeoJSON\n * @example\n * var poly = turf.polygon([[[0,29],[3.5,29],[2.5,32],[0,29]]]);\n * var scaledPoly = turf.transformScale(poly, 3);\n *\n * //addToMap\n * var addToMap = [poly, scaledPoly];\n * scaledPoly.properties = {stroke: '#F00', 'stroke-width': 4};\n */\nfunction transformScale(geojson, factor, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var origin = options.origin;\n    var mutate = options.mutate;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson required');\n    if (typeof factor !== 'number' || factor === 0) throw new Error('invalid factor');\n    var originIsPoint = Array.isArray(origin) || typeof origin === 'object';\n\n    // Clone geojson to avoid side effects\n    if (mutate !== true) geojson = clone(geojson);\n\n    // Scale each Feature separately\n    if (geojson.type === 'FeatureCollection' && !originIsPoint) {\n        featureEach(geojson, function (feature$$1, index) {\n            geojson.features[index] = scale(feature$$1, factor, origin);\n        });\n        return geojson;\n    }\n    // Scale Feature/Geometry\n    return scale(geojson, factor, origin);\n}\n\n/**\n * Scale Feature/Geometry\n *\n * @private\n * @param {Feature|Geometry} feature GeoJSON Feature/Geometry\n * @param {number} factor of scaling, positive or negative values greater than 0\n * @param {string|Coord} [origin=\"centroid\"] Point from which the scaling will occur (string options: sw/se/nw/ne/center/centroid)\n * @returns {Feature|Geometry} scaled GeoJSON Feature/Geometry\n */\nfunction scale(feature$$1, factor, origin) {\n    // Default params\n    var isPoint = getType(feature$$1) === 'Point';\n    origin = defineOrigin(feature$$1, origin);\n\n    // Shortcut no-scaling\n    if (factor === 1 || isPoint) return feature$$1;\n\n    // Scale each coordinate\n    coordEach(feature$$1, function (coord) {\n        var originalDistance = rhumbDistance(origin, coord);\n        var bearing = rhumbBearing(origin, coord);\n        var newDistance = originalDistance * factor;\n        var newCoord = getCoords(rhumbDestination(origin, newDistance, bearing));\n        coord[0] = newCoord[0];\n        coord[1] = newCoord[1];\n        if (coord.length === 3) coord[2] *= factor;\n    });\n\n    return feature$$1;\n}\n\n/**\n * Define Origin\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @param {string|Coord} origin sw/se/nw/ne/center/centroid\n * @returns {Feature<Point>} Point origin\n */\nfunction defineOrigin(geojson, origin) {\n    // Default params\n    if (origin === undefined || origin === null) origin = 'centroid';\n\n    // Input Coord\n    if (Array.isArray(origin) || typeof origin === 'object') return getCoord(origin);\n\n    // Define BBox\n    var bbox$$1 = (geojson.bbox) ? geojson.bbox : bbox(geojson);\n    var west = bbox$$1[0];\n    var south = bbox$$1[1];\n    var east = bbox$$1[2];\n    var north = bbox$$1[3];\n\n    switch (origin) {\n    case 'sw':\n    case 'southwest':\n    case 'westsouth':\n    case 'bottomleft':\n        return point([west, south]);\n    case 'se':\n    case 'southeast':\n    case 'eastsouth':\n    case 'bottomright':\n        return point([east, south]);\n    case 'nw':\n    case 'northwest':\n    case 'westnorth':\n    case 'topleft':\n        return point([west, north]);\n    case 'ne':\n    case 'northeast':\n    case 'eastnorth':\n    case 'topright':\n        return point([east, north]);\n    case 'center':\n        return center(geojson);\n    case undefined:\n    case null:\n    case 'centroid':\n        return centroid(geojson);\n    default:\n        throw new Error('invalid origin');\n    }\n}\n\n/**\n * Moves any geojson Feature or Geometry of a specified distance along a Rhumb Line\n * on the provided direction angle.\n *\n * @name transformTranslate\n * @param {GeoJSON} geojson object to be translated\n * @param {number} distance length of the motion; negative values determine motion in opposite direction\n * @param {number} direction of the motion; angle from North in decimal degrees, positive clockwise\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] in which `distance` will be express; miles, kilometers, degrees, or radians\n * @param {number} [options.zTranslation=0] length of the vertical motion, same unit of distance\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} the translated GeoJSON object\n * @example\n * var poly = turf.polygon([[[0,29],[3.5,29],[2.5,32],[0,29]]]);\n * var translatedPoly = turf.transformTranslate(poly, 100, 35);\n *\n * //addToMap\n * var addToMap = [poly, translatedPoly];\n * translatedPoly.properties = {stroke: '#F00', 'stroke-width': 4};\n */\nfunction transformTranslate(geojson, distance, direction, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var zTranslation = options.zTranslation;\n    var mutate = options.mutate;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n    if (distance === undefined || distance === null || isNaN(distance)) throw new Error('distance is required');\n    if (zTranslation && typeof zTranslation !== 'number' && isNaN(zTranslation)) throw new Error('zTranslation is not a number');\n\n    // Shortcut no-motion\n    zTranslation = (zTranslation !== undefined) ? zTranslation : 0;\n    if (distance === 0 && zTranslation === 0) return geojson;\n\n    if (direction === undefined || direction === null || isNaN(direction)) throw new Error('direction is required');\n\n    // Invert with negative distances\n    if (distance < 0) {\n        distance = -distance;\n        direction = -direction;\n    }\n\n    // Clone geojson to avoid side effects\n    if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n    // Translate each coordinate\n    coordEach(geojson, function (pointCoords) {\n        var newCoords = getCoords(rhumbDestination(pointCoords, distance, direction, {units: units}));\n        pointCoords[0] = newCoords[0];\n        pointCoords[1] = newCoords[1];\n        if (zTranslation && pointCoords.length === 3) pointCoords[2] += zTranslation;\n    });\n    return geojson;\n}\n\n/**\n * https://github.com/rook2pawn/node-intersection\n *\n * Author @rook2pawn\n */\n\n/**\n * AB\n *\n * @private\n * @param {Array<Array<number>>} segment - 2 vertex line segment\n * @returns {Array<number>} coordinates [x, y]\n */\nfunction ab(segment) {\n    var start = segment[0];\n    var end = segment[1];\n    return [end[0] - start[0], end[1] - start[1]];\n}\n\n/**\n * Cross Product\n *\n * @private\n * @param {Array<number>} v1 coordinates [x, y]\n * @param {Array<number>} v2 coordinates [x, y]\n * @returns {Array<number>} Cross Product\n */\nfunction crossProduct(v1, v2) {\n    return (v1[0] * v2[1]) - (v2[0] * v1[1]);\n}\n\n/**\n * Add\n *\n * @private\n * @param {Array<number>} v1 coordinates [x, y]\n * @param {Array<number>} v2 coordinates [x, y]\n * @returns {Array<number>} Add\n */\nfunction add(v1, v2) {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\n/**\n * Sub\n *\n * @private\n * @param {Array<number>} v1 coordinates [x, y]\n * @param {Array<number>} v2 coordinates [x, y]\n * @returns {Array<number>} Sub\n */\nfunction sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n}\n\n/**\n * scalarMult\n *\n * @private\n * @param {number} s scalar\n * @param {Array<number>} v coordinates [x, y]\n * @returns {Array<number>} scalarMult\n */\nfunction scalarMult(s, v) {\n    return [s * v[0], s * v[1]];\n}\n\n/**\n * Intersect Segments\n *\n * @private\n * @param {Array<number>} a coordinates [x, y]\n * @param {Array<number>} b coordinates [x, y]\n * @returns {Array<number>} intersection\n */\nfunction intersectSegments(a, b) {\n    var p = a[0];\n    var r = ab(a);\n    var q = b[0];\n    var s = ab(b);\n\n    var cross = crossProduct(r, s);\n    var qmp = sub(q, p);\n    var numerator = crossProduct(qmp, s);\n    var t = numerator / cross;\n    var intersection = add(p, scalarMult(t, r));\n    return intersection;\n}\n\n/**\n * Is Parallel\n *\n * @private\n * @param {Array<number>} a coordinates [x, y]\n * @param {Array<number>} b coordinates [x, y]\n * @returns {boolean} true if a and b are parallel (or co-linear)\n */\nfunction isParallel(a, b) {\n    var r = ab(a);\n    var s = ab(b);\n    return (crossProduct(r, s) === 0);\n}\n\n/**\n * Intersection\n *\n * @private\n * @param {Array<number>} a coordinates [x, y]\n * @param {Array<number>} b coordinates [x, y]\n * @returns {Array<number>|boolean} true if a and b are parallel (or co-linear)\n */\nfunction intersection(a, b) {\n    if (isParallel(a, b)) return false;\n    return intersectSegments(a, b);\n}\n\n/**\n * Takes a {@link LineString|line} and returns a {@link LineString|line} at offset by the specified distance.\n *\n * @name lineOffset\n * @param {Geometry|Feature<LineString|MultiLineString>} geojson input GeoJSON\n * @param {number} distance distance to offset the line (can be of negative value)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, kilometers, inches, yards, meters\n * @returns {Feature<LineString|MultiLineString>} Line offset from the input line\n * @example\n * var line = turf.lineString([[-83, 30], [-84, 36], [-78, 41]], { \"stroke\": \"#F00\" });\n *\n * var offsetLine = turf.lineOffset(line, 2, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [offsetLine, line]\n * offsetLine.properties.stroke = \"#00F\"\n */\nfunction lineOffset(geojson, distance, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    // Valdiation\n    if (!geojson) throw new Error('geojson is required');\n    if (distance === undefined || distance === null || isNaN(distance)) throw new Error('distance is required');\n\n    var type = getType(geojson);\n    var properties = geojson.properties;\n\n    switch (type) {\n    case 'LineString':\n        return lineOffsetFeature(geojson, distance, units);\n    case 'MultiLineString':\n        var coords = [];\n        flattenEach(geojson, function (feature$$1) {\n            coords.push(lineOffsetFeature(feature$$1, distance, units).geometry.coordinates);\n        });\n        return multiLineString(coords, properties);\n    default:\n        throw new Error('geometry ' + type + ' is not supported');\n    }\n}\n\n/**\n * Line Offset\n *\n * @private\n * @param {Geometry|Feature<LineString>} line input line\n * @param {number} distance distance to offset the line (can be of negative value)\n * @param {string} [units=kilometers] units\n * @returns {Feature<LineString>} Line offset from the input line\n */\nfunction lineOffsetFeature(line, distance, units) {\n    var segments = [];\n    var offsetDegrees = lengthToDegrees(distance, units);\n    var coords = getCoords(line);\n    var finalCoords = [];\n    coords.forEach(function (currentCoords, index) {\n        if (index !== coords.length - 1) {\n            var segment = processSegment(currentCoords, coords[index + 1], offsetDegrees);\n            segments.push(segment);\n            if (index > 0) {\n                var seg2Coords = segments[index - 1];\n                var intersects = intersection(segment, seg2Coords);\n\n                // Handling for line segments that aren't straight\n                if (intersects !== false) {\n                    seg2Coords[1] = intersects;\n                    segment[0] = intersects;\n                }\n\n                finalCoords.push(seg2Coords[0]);\n                if (index === coords.length - 2) {\n                    finalCoords.push(segment[0]);\n                    finalCoords.push(segment[1]);\n                }\n            }\n            // Handling for lines that only have 1 segment\n            if (coords.length === 2) {\n                finalCoords.push(segment[0]);\n                finalCoords.push(segment[1]);\n            }\n        }\n    });\n    return lineString(finalCoords, line.properties);\n}\n\n/**\n * Process Segment\n * Inspiration taken from http://stackoverflow.com/questions/2825412/draw-a-parallel-line\n *\n * @private\n * @param {Array<number>} point1 Point coordinates\n * @param {Array<number>} point2 Point coordinates\n * @param {number} offset Offset\n * @returns {Array<Array<number>>} offset points\n */\nfunction processSegment(point1, point2, offset) {\n    var L = Math.sqrt((point1[0] - point2[0]) * (point1[0] - point2[0]) + (point1[1] - point2[1]) * (point1[1] - point2[1]));\n\n    var out1x = point1[0] + offset * (point2[1] - point1[1]) / L;\n    var out2x = point2[0] + offset * (point2[1] - point1[1]) / L;\n    var out1y = point1[1] + offset * (point1[0] - point2[0]) / L;\n    var out2y = point2[1] + offset * (point1[0] - point2[0]) / L;\n    return [[out1x, out1y], [out2x, out2y]];\n}\n\n/**\n * Returns the direction of the point q relative to the vector p1 -> p2.\n *\n * Implementation of geos::algorithm::CGAlgorithm::orientationIndex()\n * (same as geos::algorithm::CGAlgorithm::computeOrientation())\n *\n * @param {number[]} p1 - the origin point of the vector\n * @param {number[]} p2 - the final point of the vector\n * @param {number[]} q - the point to compute the direction to\n *\n * @returns {number} - 1 if q is ccw (left) from p1->p2,\n *    -1 if q is cw (right) from p1->p2,\n *     0 if q is colinear with p1->p2\n */\nfunction orientationIndex(p1, p2, q) {\n    var dx1 = p2[0] - p1[0],\n        dy1 = p2[1] - p1[1],\n        dx2 = q[0] - p2[0],\n        dy2 = q[1] - p2[1];\n\n    return Math.sign(dx1 * dy2 - dx2 * dy1);\n}\n\n/**\n * Checks if two envelopes are equal.\n *\n * The function assumes that the arguments are envelopes, i.e.: Rectangular polygon\n *\n * @param {Feature<Polygon>} env1 - Envelope\n * @param {Feature<Polygon>} env2 - Envelope\n * @returns {boolean} - True if the envelopes are equal\n */\nfunction envelopeIsEqual(env1, env2) {\n    var envX1 = env1.geometry.coordinates.map(function (c) { return c[0]; }),\n        envY1 = env1.geometry.coordinates.map(function (c) { return c[1]; }),\n        envX2 = env2.geometry.coordinates.map(function (c) { return c[0]; }),\n        envY2 = env2.geometry.coordinates.map(function (c) { return c[1]; });\n\n    return Math.max(null, envX1) === Math.max(null, envX2) &&\n    Math.max(null, envY1) === Math.max(null, envY2) &&\n    Math.min(null, envX1) === Math.min(null, envX2) &&\n    Math.min(null, envY1) === Math.min(null, envY2);\n}\n\n/**\n * Check if a envelope is contained in other one.\n *\n * The function assumes that the arguments are envelopes, i.e.: Convex polygon\n * XXX: Envelopes are rectangular, checking if a point is inside a rectangule is something easy,\n * this could be further improved.\n *\n * @param {Feature<Polygon>} self - Envelope\n * @param {Feature<Polygon>} env - Envelope\n * @returns {boolean} - True if env is contained in self\n */\nfunction envelopeContains(self, env) {\n    return env.geometry.coordinates[0].every(function (c) { return booleanPointInPolygon(point(c), self); });\n}\n\n/**\n * Checks if two coordinates are equal.\n *\n * @param {number[]} coord1 - First coordinate\n * @param {number[]} coord2 - Second coordinate\n * @returns {boolean} - True if coordinates are equal\n */\nfunction coordinatesEqual(coord1, coord2) {\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n}\n\n/**\n * Node\n */\nvar Node$1 = function Node(coordinates) {\n    this.id = Node.buildId(coordinates);\n    this.coordinates = coordinates; //< {Number[]}\n    this.innerEdges = []; //< {Edge[]}\n\n    // We wil store to (out) edges in an CCW order as geos::planargraph::DirectedEdgeStar does\n    this.outerEdges = []; //< {Edge[]}\n    this.outerEdgesSorted = false; //< {Boolean} flag that stores if the outer Edges had been sorted\n};\n\nNode$1.buildId = function buildId (coordinates) {\n    return coordinates.join(',');\n};\n\nNode$1.prototype.removeInnerEdge = function removeInnerEdge (edge) {\n    this.innerEdges = this.innerEdges.filter(function (e) { return e.from.id !== edge.from.id; });\n};\n\nNode$1.prototype.removeOuterEdge = function removeOuterEdge (edge) {\n    this.outerEdges = this.outerEdges.filter(function (e) { return e.to.id !== edge.to.id; });\n};\n\n/**\n * Outer edges are stored CCW order.\n *\n * @memberof Node\n * @param {Edge} edge - Edge to add as an outerEdge.\n */\nNode$1.prototype.addOuterEdge = function addOuterEdge (edge) {\n    this.outerEdges.push(edge);\n    this.outerEdgesSorted = false;\n};\n\n/**\n * Sorts outer edges in CCW way.\n *\n * @memberof Node\n * @private\n */\nNode$1.prototype.sortOuterEdges = function sortOuterEdges () {\n        var this$1 = this;\n\n    if (!this.outerEdgesSorted) {\n        //this.outerEdges.sort((a, b) => a.compareTo(b));\n        // Using this comparator in order to be deterministic\n        this.outerEdges.sort(function (a, b) {\n            var aNode = a.to,\n                bNode = b.to;\n\n            if (aNode.coordinates[0] - this$1.coordinates[0] >= 0 && bNode.coordinates[0] - this$1.coordinates[0] < 0)\n                { return 1; }\n            if (aNode.coordinates[0] - this$1.coordinates[0] < 0 && bNode.coordinates[0] - this$1.coordinates[0] >= 0)\n                { return -1; }\n\n            if (aNode.coordinates[0] - this$1.coordinates[0] === 0 && bNode.coordinates[0] - this$1.coordinates[0] === 0) {\n                if (aNode.coordinates[1] - this$1.coordinates[1] >= 0 || bNode.coordinates[1] - this$1.coordinates[1] >= 0)\n                    { return aNode.coordinates[1] - bNode.coordinates[1]; }\n                return bNode.coordinates[1] - aNode.coordinates[1];\n            }\n\n            var det = orientationIndex(this$1.coordinates, aNode.coordinates, bNode.coordinates);\n            if (det < 0)\n                { return 1; }\n            if (det > 0)\n                { return -1; }\n\n            var d1 = Math.pow(aNode.coordinates[0] - this$1.coordinates[0], 2) + Math.pow(aNode.coordinates[1] - this$1.coordinates[1], 2),\n                d2 = Math.pow(bNode.coordinates[0] - this$1.coordinates[0], 2) + Math.pow(bNode.coordinates[1] - this$1.coordinates[1], 2);\n\n            return d1 - d2;\n        });\n        this.outerEdgesSorted = true;\n    }\n};\n\n/**\n * Retrieves outer edges.\n *\n * They are sorted if they aren't in the CCW order.\n *\n * @memberof Node\n * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n */\nNode$1.prototype.getOuterEdges = function getOuterEdges () {\n    this.sortOuterEdges();\n    return this.outerEdges;\n};\n\nNode$1.prototype.getOuterEdge = function getOuterEdge (i) {\n    this.sortOuterEdges();\n    return this.outerEdges[i];\n};\n\nNode$1.prototype.addInnerEdge = function addInnerEdge (edge) {\n    this.innerEdges.push(edge);\n};\n\n/**\n * This class is inspired by GEOS's geos::operation::polygonize::PolygonizeDirectedEdge\n */\nvar Edge = function Edge(from, to) {\n    this.from = from; //< start\n    this.to = to; //< End\n\n    this.next = undefined; //< The edge to be computed after\n    this.label = undefined; //< Used in order to detect Cut Edges (Bridges)\n    this.symetric = undefined; //< The symetric edge of this\n    this.ring = undefined; //< EdgeRing in which the Edge is\n\n    this.from.addOuterEdge(this);\n    this.to.addInnerEdge(this);\n};\n\n/**\n * Removes edge from from and to nodes.\n */\nEdge.prototype.getSymetric = function getSymetric () {\n    if (!this.symetric) {\n        this.symetric = new Edge(this.to, this.from);\n        this.symetric.symetric = this;\n    }\n\n    return this.symetric;\n};\n\nEdge.prototype.deleteEdge = function deleteEdge () {\n    this.from.removeOuterEdge(this);\n    this.to.removeInnerEdge(this);\n};\n\n/**\n * Compares Edge equallity.\n *\n * An edge is equal to another, if the from and to nodes are the same.\n *\n * @param {Edge} edge - Another Edge\n * @returns {boolean} - True if Edges are equal, False otherwise\n */\nEdge.prototype.isEqual = function isEqual (edge) {\n    return this.from.id === edge.from.id && this.to.id === edge.to.id;\n};\n\nEdge.prototype.toString = function toString () {\n    return (\"Edge { \" + (this.from.id) + \" -> \" + (this.to.id) + \" }\");\n};\n\n/**\n * Returns a LineString representation of the Edge\n *\n * @returns {Feature<LineString>} - LineString representation of the Edge\n */\nEdge.prototype.toLineString = function toLineString () {\n    return lineString([this.from.coordinates, this.to.coordinates]);\n};\n\n/**\n * Comparator of two edges.\n *\n * Implementation of geos::planargraph::DirectedEdge::compareTo.\n *\n * @param {Edge} edge - Another edge to compare with this one\n * @returns {number} -1 if this Edge has a greater angle with the positive x-axis than b,\n *      0 if the Edges are colinear,\n *      1 otherwise\n */\nEdge.prototype.compareTo = function compareTo (edge) {\n    return orientationIndex(edge.from.coordinates, edge.to.coordinates, this.to.coordinates);\n};\n\n/**\n * Ring of edges which form a polygon.\n *\n * The ring may be either an outer shell or a hole.\n *\n * This class is inspired in GEOS's geos::operation::polygonize::EdgeRing\n */\nvar EdgeRing = function EdgeRing() {\n    this.edges = [];\n    this.polygon = undefined; //< Caches Polygon representation\n    this.envelope = undefined; //< Caches Envelope representation\n};\n\nvar prototypeAccessors = { length: { configurable: true } };\n\n/**\n * Add an edge to the ring, inserting it in the last position.\n *\n * @memberof EdgeRing\n * @param {Edge} edge - Edge to be inserted\n */\nEdgeRing.prototype.push = function push (edge) {\n// Emulate Array getter ([]) behaviour\n    this[this.edges.length] = edge;\n    this.edges.push(edge);\n    this.polygon = this.envelope = undefined;\n};\n\n/**\n * Get Edge.\n *\n * @memberof EdgeRing\n * @param {number} i - Index\n * @returns {Edge} - Edge in the i position\n */\nEdgeRing.prototype.get = function get (i) {\n    return this.edges[i];\n};\n\n/**\n * Getter of length property.\n *\n * @memberof EdgeRing\n * @returns {number} - Length of the edge ring.\n */\nprototypeAccessors.length.get = function () {\n    return this.edges.length;\n};\n\n/**\n * Similar to Array.prototype.forEach for the list of Edges in the EdgeRing.\n *\n * @memberof EdgeRing\n * @param {Function} f - The same function to be passed to Array.prototype.forEach\n */\nEdgeRing.prototype.forEach = function forEach (f) {\n    this.edges.forEach(f);\n};\n\n/**\n * Similar to Array.prototype.map for the list of Edges in the EdgeRing.\n *\n * @memberof EdgeRing\n * @param {Function} f - The same function to be passed to Array.prototype.map\n * @returns {Array} - The mapped values in the function\n */\nEdgeRing.prototype.map = function map (f) {\n    return this.edges.map(f);\n};\n\n/**\n * Similar to Array.prototype.some for the list of Edges in the EdgeRing.\n *\n * @memberof EdgeRing\n * @param {Function} f - The same function to be passed to Array.prototype.some\n * @returns {boolean} - True if an Edge check the condition\n */\nEdgeRing.prototype.some = function some (f) {\n    return this.edges.some(f);\n};\n\n/**\n * Check if the ring is valid in geomtry terms.\n *\n * A ring must have either 0 or 4 or more points. The first and the last must be\n * equal (in 2D)\n * geos::geom::LinearRing::validateConstruction\n *\n * @memberof EdgeRing\n * @returns {boolean} - Validity of the EdgeRing\n */\nEdgeRing.prototype.isValid = function isValid () {\n// TODO: stub\n    return true;\n};\n\n/**\n * Tests whether this ring is a hole.\n *\n * A ring is a hole if it is oriented counter-clockwise.\n * Similar implementation of geos::algorithm::CGAlgorithms::isCCW\n *\n * @memberof EdgeRing\n * @returns {boolean} - true: if it is a hole\n */\nEdgeRing.prototype.isHole = function isHole () {\n        var this$1 = this;\n\n// XXX: Assuming Ring is valid\n// Find highest point\n    var hiIndex = this.edges.reduce(function (high, edge, i) {\n            if (edge.from.coordinates[1] > this$1.edges[high].from.coordinates[1])\n                { high = i; }\n            return high;\n        }, 0),\n        iPrev = (hiIndex === 0 ? this.length : hiIndex) - 1,\n        iNext = (hiIndex + 1) % this.length,\n        disc = orientationIndex(this.edges[iPrev].from.coordinates, this.edges[hiIndex].from.coordinates, this.edges[iNext].from.coordinates);\n\n    if (disc === 0)\n        { return this.edges[iPrev].from.coordinates[0] > this.edges[iNext].from.coordinates[0]; }\n    return disc > 0;\n};\n\n/**\n * Creates a MultiPoint representing the EdgeRing (discarts edges directions).\n *\n * @memberof EdgeRing\n * @returns {Feature<MultiPoint>} - Multipoint representation of the EdgeRing\n */\nEdgeRing.prototype.toMultiPoint = function toMultiPoint () {\n    return multiPoint(this.edges.map(function (edge) { return edge.from.coordinates; }));\n};\n\n/**\n * Creates a Polygon representing the EdgeRing.\n *\n * @memberof EdgeRing\n * @returns {Feature<Polygon>} - Polygon representation of the Edge Ring\n */\nEdgeRing.prototype.toPolygon = function toPolygon () {\n    if (this.polygon)\n        { return this.polygon; }\n    var coordinates = this.edges.map(function (edge) { return edge.from.coordinates; });\n    coordinates.push(this.edges[0].from.coordinates);\n    return (this.polygon = polygon([coordinates]));\n};\n\n/**\n * Calculates the envelope of the EdgeRing.\n *\n * @memberof EdgeRing\n * @returns {Feature<Polygon>} - envelope\n */\nEdgeRing.prototype.getEnvelope = function getEnvelope () {\n    if (this.envelope)\n        { return this.envelope; }\n    return (this.envelope = envelope(this.toPolygon()));\n};\n\n/**\n * `geos::operation::polygonize::EdgeRing::findEdgeRingContaining`\n *\n * @param {EdgeRing} testEdgeRing - EdgeRing to look in the list\n * @param {EdgeRing[]} shellList - List of EdgeRing in which to search\n *\n * @returns {EdgeRing} - EdgeRing which contains the testEdgeRing\n */\nEdgeRing.findEdgeRingContaining = function findEdgeRingContaining (testEdgeRing, shellList) {\n    var testEnvelope = testEdgeRing.getEnvelope();\n\n    var minEnvelope,\n        minShell;\n    shellList.forEach(function (shell) {\n        var tryEnvelope = shell.getEnvelope();\n\n        if (minShell)\n            { minEnvelope = minShell.getEnvelope(); }\n\n        // the hole envelope cannot equal the shell envelope\n        if (envelopeIsEqual(tryEnvelope, testEnvelope))\n            { return; }\n\n        if (envelopeContains(tryEnvelope, testEnvelope)) {\n            var testPoint = testEdgeRing.map(function (edge) { return edge.from.coordinates; })\n                .find(function (pt) { return !shell.some(function (edge) { return coordinatesEqual(pt, edge.from.coordinates); }); });\n\n            if (testPoint && shell.inside(point(testPoint))) {\n                if (!minShell || envelopeContains(minEnvelope, tryEnvelope))\n                    { minShell = shell; }\n            }\n        }\n    });\n\n    return minShell;\n};\n\n/**\n * Checks if the point is inside the edgeRing\n *\n * @param {Feature<Point>} pt - Point to check if it is inside the edgeRing\n * @returns {boolean} - True if it is inside, False otherwise\n */\nEdgeRing.prototype.inside = function inside (pt) {\n    return booleanPointInPolygon(pt, this.toPolygon());\n};\n\nObject.defineProperties( EdgeRing.prototype, prototypeAccessors );\n\n/**\n * Validates the geoJson.\n *\n * @param {GeoJSON} geoJson - input geoJson.\n * @throws {Error} if geoJson is invalid.\n */\nfunction validateGeoJson(geoJson) {\n    if (!geoJson)\n        { throw new Error('No geojson passed'); }\n\n    if (geoJson.type !== 'FeatureCollection' &&\n    geoJson.type !== 'GeometryCollection' &&\n    geoJson.type !== 'MultiLineString' &&\n    geoJson.type !== 'LineString' &&\n    geoJson.type !== 'Feature'\n    )\n        { throw new Error((\"Invalid input type '\" + (geoJson.type) + \"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature\")); }\n}\n\n/**\n * Represents a planar graph of edges and nodes that can be used to compute a polygonization.\n *\n * Although, this class is inspired by GEOS's `geos::operation::polygonize::PolygonizeGraph`,\n * it isn't a rewrite. As regards algorithm, this class implements the same logic, but it\n * isn't a javascript transcription of the C++ source.\n *\n * This graph is directed (both directions are created)\n */\nvar Graph = function Graph() {\n    this.edges = []; //< {Edge[]} dirEdges\n\n    // The key is the `id` of the Node (ie: coordinates.join(','))\n    this.nodes = {};\n};\n\n/**\n * Removes Dangle Nodes (nodes with grade 1).\n */\nGraph.fromGeoJson = function fromGeoJson (geoJson) {\n    validateGeoJson(geoJson);\n\n    var graph = new Graph();\n    flattenEach(geoJson, function (feature$$1) {\n        featureOf(feature$$1, 'LineString', 'Graph::fromGeoJson');\n        // When a LineString if formed by many segments, split them\n        coordReduce(feature$$1, function (prev, cur) {\n            if (prev) {\n                var start = graph.getNode(prev),\n                    end = graph.getNode(cur);\n\n                graph.addEdge(start, end);\n            }\n            return cur;\n        });\n    });\n\n    return graph;\n};\n\n/**\n * Creates or get a Node.\n *\n * @param {number[]} coordinates - Coordinates of the node\n * @returns {Node} - The created or stored node\n */\nGraph.prototype.getNode = function getNode (coordinates) {\n    var id = Node$1.buildId(coordinates);\n    var node = this.nodes[id];\n    if (!node)\n        { node = this.nodes[id] = new Node$1(coordinates); }\n\n    return node;\n};\n\n/**\n * Adds an Edge and its symetricall.\n *\n * Edges are added symetrically, i.e.: we also add its symetric\n *\n * @param {Node} from - Node which starts the Edge\n * @param {Node} to - Node which ends the Edge\n */\nGraph.prototype.addEdge = function addEdge (from, to) {\n    var edge = new Edge(from, to),\n        symetricEdge = edge.getSymetric();\n\n    this.edges.push(edge);\n    this.edges.push(symetricEdge);\n};\n\nGraph.prototype.deleteDangles = function deleteDangles () {\n        var this$1 = this;\n\n    Object.keys(this.nodes)\n        .map(function (id) { return this$1.nodes[id]; })\n        .forEach(function (node) { return this$1._removeIfDangle(node); });\n};\n\n/**\n * Check if node is dangle, if so, remove it.\n *\n * It calls itself recursively, removing a dangling node might cause another dangling node\n *\n * @param {Node} node - Node to check if it's a dangle\n */\nGraph.prototype._removeIfDangle = function _removeIfDangle (node) {\n        var this$1 = this;\n\n// As edges are directed and symetrical, we count only innerEdges\n    if (node.innerEdges.length <= 1) {\n        var outerNodes = node.getOuterEdges().map(function (e) { return e.to; });\n        this.removeNode(node);\n        outerNodes.forEach(function (n) { return this$1._removeIfDangle(n); });\n    }\n};\n\n/**\n * Delete cut-edges (bridge edges).\n *\n * The graph will be traversed, all the edges will be labeled according the ring\n * in which they are. (The label is a number incremented by 1). Edges with the same\n * label are cut-edges.\n */\nGraph.prototype.deleteCutEdges = function deleteCutEdges () {\n        var this$1 = this;\n\n    this._computeNextCWEdges();\n    this._findLabeledEdgeRings();\n\n    // Cut-edges (bridges) are edges where both edges have the same label\n    this.edges.forEach(function (edge) {\n        if (edge.label === edge.symetric.label) {\n            this$1.removeEdge(edge.symetric);\n            this$1.removeEdge(edge);\n        }\n    });\n};\n\n/**\n * Set the `next` property of each Edge.\n *\n * The graph will be transversed in a CW form, so, we set the next of the symetrical edge as the previous one.\n * OuterEdges are sorted CCW.\n *\n * @param {Node} [node] - If no node is passed, the function calls itself for every node in the Graph\n */\nGraph.prototype._computeNextCWEdges = function _computeNextCWEdges (node) {\n        var this$1 = this;\n\n    if (typeof node === 'undefined') {\n        Object.keys(this.nodes)\n            .forEach(function (id) { return this$1._computeNextCWEdges(this$1.nodes[id]); });\n    } else {\n        node.getOuterEdges().forEach(function (edge, i) {\n            node.getOuterEdge((i === 0 ? node.getOuterEdges().length : i) - 1).symetric.next = edge;\n        });\n    }\n};\n\n/**\n * Computes the next edge pointers going CCW around the given node, for the given edgering label.\n *\n * This algorithm has the effect of converting maximal edgerings into minimal edgerings\n *\n * XXX: method literally transcribed from `geos::operation::polygonize::PolygonizeGraph::computeNextCCWEdges`,\n * could be written in a more javascript way.\n *\n * @param {Node} node - Node\n * @param {number} label - Ring's label\n */\nGraph.prototype._computeNextCCWEdges = function _computeNextCCWEdges (node, label) {\n    var edges = node.getOuterEdges();\n    var firstOutDE,\n        prevInDE;\n\n    for (var i = edges.length - 1; i >= 0; --i) {\n        var de = edges[i],\n            sym = de.symetric,\n            outDE = (void 0),\n            inDE = (void 0);\n\n        if (de.label === label)\n            { outDE = de; }\n\n        if (sym.label === label)\n            { inDE = sym; }\n\n        if (!outDE || !inDE) // This edge is not in edgering\n            { continue; }\n\n        if (inDE)\n            { prevInDE = inDE; }\n\n        if (outDE) {\n            if (prevInDE) {\n                prevInDE.next = outDE;\n                prevInDE = undefined;\n            }\n\n            if (!firstOutDE)\n                { firstOutDE = outDE; }\n        }\n    }\n\n    if (prevInDE)\n        { prevInDE.next = firstOutDE; }\n};\n\n\n/**\n * Finds rings and labels edges according to which rings are.\n *\n * The label is a number which is increased for each ring.\n *\n * @returns {Edge[]} edges that start rings\n */\nGraph.prototype._findLabeledEdgeRings = function _findLabeledEdgeRings () {\n    var edgeRingStarts = [];\n    var label = 0;\n    this.edges.forEach(function (edge) {\n        if (edge.label >= 0)\n            { return; }\n\n        edgeRingStarts.push(edge);\n\n        var e = edge;\n        do {\n            e.label = label;\n            e = e.next;\n        } while (!edge.isEqual(e));\n\n        label++;\n    });\n\n    return edgeRingStarts;\n};\n\n/**\n * Computes the EdgeRings formed by the edges in this graph.\n *\n * @returns {EdgeRing[]} - A list of all the EdgeRings in the graph.\n */\nGraph.prototype.getEdgeRings = function getEdgeRings () {\n        var this$1 = this;\n\n    this._computeNextCWEdges();\n\n    // Clear labels\n    this.edges.forEach(function (edge) {\n        edge.label = undefined;\n    });\n\n    this._findLabeledEdgeRings().forEach(function (edge) {\n        // convertMaximalToMinimalEdgeRings\n        this$1._findIntersectionNodes(edge).forEach(function (node) {\n            this$1._computeNextCCWEdges(node, edge.label);\n        });\n    });\n\n    var edgeRingList = [];\n\n    // find all edgerings\n    this.edges.forEach(function (edge) {\n        if (edge.ring)\n            { return; }\n        edgeRingList.push(this$1._findEdgeRing(edge));\n    });\n\n    return edgeRingList;\n};\n\n/**\n * Find all nodes in a Maxima EdgeRing which are self-intersection nodes.\n *\n * @param {Node} startEdge - Start Edge of the Ring\n * @returns {Node[]} - intersection nodes\n */\nGraph.prototype._findIntersectionNodes = function _findIntersectionNodes (startEdge) {\n    var intersectionNodes = [];\n    var edge = startEdge;\n    var loop = function () {\n        // getDegree\n        var degree = 0;\n        edge.from.getOuterEdges().forEach(function (e) {\n            if (e.label === startEdge.label)\n                { ++degree; }\n        });\n\n        if (degree > 1)\n            { intersectionNodes.push(edge.from); }\n\n        edge = edge.next;\n    };\n\n        do {\n            loop();\n        } while (!startEdge.isEqual(edge));\n\n    return intersectionNodes;\n};\n\n/**\n * Get the edge-ring which starts from the provided Edge.\n *\n * @param {Edge} startEdge - starting edge of the edge ring\n * @returns {EdgeRing} - EdgeRing which start Edge is the provided one.\n */\nGraph.prototype._findEdgeRing = function _findEdgeRing (startEdge) {\n    var edge = startEdge;\n    var edgeRing = new EdgeRing();\n\n    do {\n        edgeRing.push(edge);\n        edge.ring = edgeRing;\n        edge = edge.next;\n    } while (!startEdge.isEqual(edge));\n\n    return edgeRing;\n};\n\n/**\n * Removes a node from the Graph.\n *\n * It also removes edges asociated to that node\n * @param {Node} node - Node to be removed\n */\nGraph.prototype.removeNode = function removeNode (node) {\n        var this$1 = this;\n\n    node.getOuterEdges().forEach(function (edge) { return this$1.removeEdge(edge); });\n    node.innerEdges.forEach(function (edge) { return this$1.removeEdge(edge); });\n    delete this.nodes[node.id];\n};\n\n/**\n * Remove edge from the graph and deletes the edge.\n *\n * @param {Edge} edge - Edge to be removed\n */\nGraph.prototype.removeEdge = function removeEdge (edge) {\n    this.edges = this.edges.filter(function (e) { return !e.isEqual(edge); });\n    edge.deleteEdge();\n};\n\n/**\n * Polygonizes {@link LineString|(Multi)LineString(s)} into {@link Polygons}.\n *\n * Implementation of GEOSPolygonize function (`geos::operation::polygonize::Polygonizer`).\n *\n * Polygonizes a set of lines that represents edges in a planar graph. Edges must be correctly\n * noded, i.e., they must only meet at their endpoints.\n *\n * The implementation correctly handles:\n *\n * - Dangles: edges which have one or both ends which are not incident on another edge endpoint.\n * - Cut Edges (bridges): edges that are connected at both ends but which do not form part of a polygon.\n *\n * @name polygonize\n * @param {FeatureCollection|Geometry|Feature<LineString|MultiLineString>} geoJson Lines in order to polygonize\n * @returns {FeatureCollection<Polygon>} Polygons created\n * @throws {Error} if geoJson is invalid.\n */\nfunction polygonize$1(geoJson) {\n    var graph = Graph.fromGeoJson(geoJson);\n\n    // 1. Remove dangle node\n    graph.deleteDangles();\n\n    // 2. Remove cut-edges (bridge edges)\n    graph.deleteCutEdges();\n\n    // 3. Get all holes and shells\n    var holes = [],\n        shells = [];\n\n    graph.getEdgeRings()\n        .filter(function (edgeRing) { return edgeRing.isValid(); })\n        .forEach(function (edgeRing) {\n            if (edgeRing.isHole())\n                { holes.push(edgeRing); }\n            else\n                { shells.push(edgeRing); }\n        });\n\n    // 4. Assign Holes to Shells\n    holes.forEach(function (hole) {\n        if (EdgeRing.findEdgeRingContaining(hole, shells))\n            { shells.push(hole); }\n    });\n\n    // 5. EdgeRings to Polygons\n    return featureCollection(shells.map(function (shell) { return shell.toPolygon(); }));\n}\n\n/**\n * Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set.\n *\n * @name booleanDisjoint\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanDisjoint(line, point);\n * //=true\n */\nfunction booleanDisjoint(feature1, feature2) {\n    var boolean;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (boolean === false) return false;\n            boolean = disjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return boolean;\n}\n\n/**\n * Disjoint operation for simple Geometries (Point/LineString/Polygon)\n *\n * @private\n * @param {Geometry<any>} geom1 GeoJSON Geometry\n * @param {Geometry<any>} geom2 GeoJSON Geometry\n * @returns {boolean} true/false\n */\nfunction disjoint(geom1, geom2) {\n    switch (geom1.type) {\n    case 'Point':\n        switch (geom2.type) {\n        case 'Point':\n            return !compareCoords$1(geom1.coordinates, geom2.coordinates);\n        case 'LineString':\n            return !isPointOnLine$1(geom2, geom1);\n        case 'Polygon':\n            return !booleanPointInPolygon(geom1, geom2);\n        }\n        /* istanbul ignore next */\n        break;\n    case 'LineString':\n        switch (geom2.type) {\n        case 'Point':\n            return !isPointOnLine$1(geom1, geom2);\n        case 'LineString':\n            return !isLineOnLine$1(geom1, geom2);\n        case 'Polygon':\n            return !isLineInPoly$1(geom2, geom1);\n        }\n        /* istanbul ignore next */\n        break;\n    case 'Polygon':\n        switch (geom2.type) {\n        case 'Point':\n            return !booleanPointInPolygon(geom2, geom1);\n        case 'LineString':\n            return !isLineInPoly$1(geom1, geom2);\n        case 'Polygon':\n            return !isPolyInPoly$1(geom2, geom1);\n        }\n    }\n}\n\n// http://stackoverflow.com/a/11908158/1979085\nfunction isPointOnLine$1(lineString, point) {\n    for (var i = 0; i < lineString.coordinates.length - 1; i++) {\n        if (isPointOnLineSegment$2(lineString.coordinates[i], lineString.coordinates[i + 1], point.coordinates)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isLineOnLine$1(lineString1, lineString2) {\n    var doLinesIntersect = lineIntersect(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction isLineInPoly$1(polygon, lineString) {\n    var doLinesIntersect = lineIntersect(lineString, polygonToLine(polygon));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Is Polygon (geom1) in Polygon (geom2)\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly$1(feature1, feature2) {\n    for (var i = 0; i < feature1.coordinates[0].length; i++) {\n        if (booleanPointInPolygon(feature1.coordinates[0][i], feature2)) {\n            return true;\n        }\n    }\n    for (var i2 = 0; i2 < feature2.coordinates[0].length; i2++) {\n        if (booleanPointInPolygon(feature2.coordinates[0][i2], feature1)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isPointOnLineSegment$2(LineSegmentStart, LineSegmentEnd, Point) {\n    var dxc = Point[0] - LineSegmentStart[0];\n    var dyc = Point[1] - LineSegmentStart[1];\n    var dxl = LineSegmentEnd[0] - LineSegmentStart[0];\n    var dyl = LineSegmentEnd[1] - LineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n        if (dxl > 0) {\n            return LineSegmentStart[0] <= Point[0] && Point[0] <= LineSegmentEnd[0];\n        } else {\n            return LineSegmentEnd[0] <= Point[0] && Point[0] <= LineSegmentStart[0];\n        }\n    } else if (dyl > 0) {\n        return LineSegmentStart[1] <= Point[1] && Point[1] <= LineSegmentEnd[1];\n    } else {\n        return LineSegmentEnd[1] <= Point[1] && Point[1] <= LineSegmentStart[1];\n    }\n}\n\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords$1(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\n\n/**\n * Boolean-contains returns True if the second geometry is completely contained by the first geometry.\n * The interiors of both geometries must intersect and, the interior and boundary of the secondary (geometry b)\n * must not intersect the exterior of the primary (geometry a).\n * Boolean-contains returns the exact opposite result of the `@turf/boolean-within`.\n *\n * @name booleanContains\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n * var point = turf.point([1, 2]);\n *\n * turf.booleanContains(line, point);\n * //=true\n */\nfunction booleanContains(feature1, feature2) {\n    var type1 = getType(feature1);\n    var type2 = getType(feature2);\n    var geom1 = getGeom(feature1);\n    var geom2 = getGeom(feature2);\n    var coords1 = getCoords(feature1);\n    var coords2 = getCoords(feature2);\n\n    switch (type1) {\n    case 'Point':\n        switch (type2) {\n        case 'Point':\n            return compareCoords$2(coords1, coords2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'MultiPoint':\n        switch (type2) {\n        case 'Point':\n            return isPointInMultiPoint$1(geom1, geom2);\n        case 'MultiPoint':\n            return isMultiPointInMultiPoint$1(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'LineString':\n        switch (type2) {\n        case 'Point':\n            return booleanPointOnLine(geom2, geom1, {ignoreEndVertices: true});\n        case 'LineString':\n            return isLineOnLine$2(geom1, geom2);\n        case 'MultiPoint':\n            return isMultiPointOnLine$1(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'Polygon':\n        switch (type2) {\n        case 'Point':\n            return booleanPointInPolygon(geom2, geom1, {ignoreBoundary: true});\n        case 'LineString':\n            return isLineInPoly$2(geom1, geom2);\n        case 'Polygon':\n            return isPolyInPoly$2(geom1, geom2);\n        case 'MultiPoint':\n            return isMultiPointInPoly$1(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    default:\n        throw new Error('feature1 ' + type1 + ' geometry not supported');\n    }\n}\n\nfunction isPointInMultiPoint$1(multiPoint, point) {\n    var i;\n    var output = false;\n    for (i = 0; i < multiPoint.coordinates.length; i++) {\n        if (compareCoords$2(multiPoint.coordinates[i], point.coordinates)) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n\nfunction isMultiPointInMultiPoint$1(multiPoint1, multiPoint2) {\n    for (var i = 0; i < multiPoint2.coordinates.length; i++) {\n        var matchFound = false;\n        for (var i2 = 0; i2 < multiPoint1.coordinates.length; i2++) {\n            if (compareCoords$2(multiPoint2.coordinates[i], multiPoint1.coordinates[i2])) {\n                matchFound = true;\n                break;\n            }\n        }\n        if (!matchFound) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction isMultiPointOnLine$1(lineString, multiPoint) {\n    var haveFoundInteriorPoint = false;\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (booleanPointOnLine(multiPoint.coordinates[i], lineString, {ignoreEndVertices: true})) {\n            haveFoundInteriorPoint = true;\n        }\n        if (!booleanPointOnLine(multiPoint.coordinates[i], lineString)) {\n            return false;\n        }\n    }\n    if (haveFoundInteriorPoint) {\n        return true;\n    }\n    return false;\n}\n\nfunction isMultiPointInPoly$1(polygon, multiPoint) {\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (!booleanPointInPolygon(multiPoint.coordinates[i], polygon, {ignoreBoundary: true})) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isLineOnLine$2(lineString1, lineString2) {\n    var haveFoundInteriorPoint = false;\n    for (var i = 0; i < lineString2.coordinates.length; i++) {\n        if (booleanPointOnLine({type: 'Point', coordinates: lineString2.coordinates[i]}, lineString1, { ignoreEndVertices: true })) {\n            haveFoundInteriorPoint = true;\n        }\n        if (!booleanPointOnLine({type: 'Point', coordinates: lineString2.coordinates[i]}, lineString1, {ignoreEndVertices: false })) {\n            return false;\n        }\n    }\n    return haveFoundInteriorPoint;\n}\n\nfunction isLineInPoly$2(polygon, linestring) {\n    var output = false;\n    var i = 0;\n\n    var polyBbox = bbox(polygon);\n    var lineBbox = bbox(linestring);\n    if (!doBBoxOverlap$1(polyBbox, lineBbox)) {\n        return false;\n    }\n    for (i; i < linestring.coordinates.length - 1; i++) {\n        var midPoint = getMidpoint$1(linestring.coordinates[i], linestring.coordinates[i + 1]);\n        if (booleanPointInPolygon({type: 'Point', coordinates: midPoint}, polygon, { ignoreBoundary: true })) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n\n/**\n * Is Polygon2 in Polygon1\n * Only takes into account outer rings\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly$2(feature1, feature2) {\n    var poly1Bbox = bbox(feature1);\n    var poly2Bbox = bbox(feature2);\n    if (!doBBoxOverlap$1(poly1Bbox, poly2Bbox)) {\n        return false;\n    }\n    for (var i = 0; i < feature2.coordinates[0].length; i++) {\n        if (!booleanPointInPolygon(feature2.coordinates[0][i], feature1)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction doBBoxOverlap$1(bbox1, bbox2) {\n    if (bbox1[0] > bbox2[0]) return false;\n    if (bbox1[2] < bbox2[2]) return false;\n    if (bbox1[1] > bbox2[1]) return false;\n    if (bbox1[3] < bbox2[3]) return false;\n    return true;\n}\n\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords$2(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\n\nfunction getMidpoint$1(pair1, pair2) {\n    return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\n\n/**\n * Boolean-Crosses returns True if the intersection results in a geometry whose dimension is one less than\n * the maximum dimension of the two source geometries and the intersection set is interior to\n * both source geometries.\n *\n * Boolean-Crosses returns t (TRUE) for only multipoint/polygon, multipoint/linestring, linestring/linestring, linestring/polygon, and linestring/multipolygon comparisons.\n *\n * @name booleanCrosses\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line1 = turf.lineString([[-2, 2], [4, 2]]);\n * var line2 = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * var cross = turf.booleanCrosses(line1, line2);\n * //=true\n */\nfunction booleanCrosses(feature1, feature2) {\n    var type1 = getType(feature1);\n    var type2 = getType(feature2);\n    var geom1 = getGeom(feature1);\n    var geom2 = getGeom(feature2);\n\n    switch (type1) {\n    case 'MultiPoint':\n        switch (type2) {\n        case 'LineString':\n            return doMultiPointAndLineStringCross(geom1, geom2);\n        case 'Polygon':\n            return doesMultiPointCrossPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'LineString':\n        switch (type2) {\n        case 'MultiPoint': // An inverse operation\n            return doMultiPointAndLineStringCross(geom2, geom1);\n        case 'LineString':\n            return doLineStringsCross(geom1, geom2);\n        case 'Polygon':\n            return doLineStringAndPolygonCross(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'Polygon':\n        switch (type2) {\n        case 'MultiPoint': // An inverse operation\n            return doesMultiPointCrossPoly(geom2, geom1);\n        case 'LineString': // An inverse operation\n            return doLineStringAndPolygonCross(geom2, geom1);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    default:\n        throw new Error('feature1 ' + type1 + ' geometry not supported');\n    }\n}\n\nfunction doMultiPointAndLineStringCross(multiPoint$$1, lineString$$1) {\n    var foundIntPoint = false;\n    var foundExtPoint = false;\n    var pointLength = multiPoint$$1.coordinates.length;\n    var i = 0;\n    while (i < pointLength && !foundIntPoint && !foundExtPoint) {\n        for (var i2 = 0; i2 < lineString$$1.coordinates.length - 1; i2++) {\n            var incEndVertices = true;\n            if (i2 === 0 || i2 === lineString$$1.coordinates.length - 2) {\n                incEndVertices = false;\n            }\n            if (isPointOnLineSegment$3(lineString$$1.coordinates[i2], lineString$$1.coordinates[i2 + 1], multiPoint$$1.coordinates[i], incEndVertices)) {\n                foundIntPoint = true;\n            } else {\n                foundExtPoint = true;\n            }\n        }\n        i++;\n    }\n    return foundIntPoint && foundExtPoint;\n}\n\nfunction doLineStringsCross(lineString1, lineString2) {\n    var doLinesIntersect = lineIntersect(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        for (var i = 0; i < lineString1.coordinates.length - 1; i++) {\n            for (var i2 = 0; i2 < lineString2.coordinates.length - 1; i2++) {\n                var incEndVertices = true;\n                if (i2 === 0 || i2 === lineString2.coordinates.length - 2) {\n                    incEndVertices = false;\n                }\n                if (isPointOnLineSegment$3(lineString1.coordinates[i], lineString1.coordinates[i + 1], lineString2.coordinates[i2], incEndVertices)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nfunction doLineStringAndPolygonCross(lineString$$1, polygon$$1) {\n    var doLinesIntersect = lineIntersect(lineString$$1, polygonToLine(polygon$$1));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction doesMultiPointCrossPoly(multiPoint$$1, polygon$$1) {\n    var foundIntPoint = false;\n    var foundExtPoint = false;\n    var pointLength = multiPoint$$1.coordinates[0].length;\n    var i = 0;\n    while (i < pointLength && foundIntPoint && foundExtPoint) {\n        if (booleanPointInPolygon(point(multiPoint$$1.coordinates[0][i]), polygon$$1)) {\n            foundIntPoint = true;\n        } else {\n            foundExtPoint = true;\n        }\n        i++;\n    }\n\n    return foundExtPoint && foundExtPoint;\n}\n\n/**\n * Is a point on a line segment\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {number[]} lineSegmentStart coord pair of start of line\n * @param {number[]} lineSegmentEnd coord pair of end of line\n * @param {number[]} pt coord pair of point to check\n * @param {boolean} incEnd whether the point is allowed to fall on the line ends\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment$3(lineSegmentStart, lineSegmentEnd, pt, incEnd) {\n    var dxc = pt[0] - lineSegmentStart[0];\n    var dyc = pt[1] - lineSegmentStart[1];\n    var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n    var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (incEnd) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0] : lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n        }\n        return dyl > 0 ? lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1] : lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n    } else {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? lineSegmentStart[0] < pt[0] && pt[0] < lineSegmentEnd[0] : lineSegmentEnd[0] < pt[0] && pt[0] < lineSegmentStart[0];\n        }\n        return dyl > 0 ? lineSegmentStart[1] < pt[1] && pt[1] < lineSegmentEnd[1] : lineSegmentEnd[1] < pt[1] && pt[1] < lineSegmentStart[1];\n    }\n}\n\nvar keys = createCommonjsModule(function (module, exports) {\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n});\n\nvar keys_1 = keys.shim;\n\nvar is_arguments = createCommonjsModule(function (module, exports) {\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n}\n});\n\nvar is_arguments_1 = is_arguments.supported;\nvar is_arguments_2 = is_arguments.unsupported;\n\nvar deepEqual_1 = createCommonjsModule(function (module) {\nvar pSlice = Array.prototype.slice;\n\n\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (is_arguments(a)) {\n    if (!is_arguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = keys(a),\n        kb = keys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n});\n\n//index.js\n\n\nvar Equality = function(opt) {\n  this.precision = opt && opt.precision ? opt.precision : 17;\n  this.direction = opt && opt.direction ? opt.direction : false;\n  this.pseudoNode = opt && opt.pseudoNode ? opt.pseudoNode : false;\n  this.objectComparator = opt && opt.objectComparator ? opt.objectComparator : objectComparator;\n};\n\nEquality.prototype.compare = function(g1,g2) {\n  if (g1.type !== g2.type || !sameLength(g1,g2)) return false;\n\n  switch(g1.type) {\n  case 'Point':\n    return this.compareCoord(g1.coordinates, g2.coordinates);\n    break;\n  case 'LineString':\n    return this.compareLine(g1.coordinates, g2.coordinates,0,false);\n    break;\n  case 'Polygon':\n    return this.comparePolygon(g1,g2);\n    break;\n  case 'Feature':\n    return this.compareFeature(g1, g2);\n  default:\n    if (g1.type.indexOf('Multi') === 0) {\n      var context = this;\n      var g1s = explode$2(g1);\n      var g2s = explode$2(g2);\n      return g1s.every(function(g1part) {\n        return this.some(function(g2part) {\n          return context.compare(g1part,g2part);\n        });\n      },g2s);\n    }\n  }\n  return false;\n};\n\nfunction explode$2(g) {\n  return g.coordinates.map(function(part) {\n    return {\n      type: g.type.replace('Multi', ''),\n      coordinates: part}\n  });\n}\n//compare length of coordinates/array\nfunction sameLength(g1,g2) {\n   return g1.hasOwnProperty('coordinates') ?\n    g1.coordinates.length === g2.coordinates.length\n    : g1.length === g2.length;\n}\n\n// compare the two coordinates [x,y]\nEquality.prototype.compareCoord = function(c1,c2) {\n  if (c1.length !== c2.length) {\n    return false;\n  }\n\n  for (var i=0; i < c1.length; i++) {\n    if (c1[i].toFixed(this.precision) !== c2[i].toFixed(this.precision)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nEquality.prototype.compareLine = function(path1,path2,ind,isPoly) {\n  if (!sameLength(path1,path2)) return false;\n  var p1 = this.pseudoNode ? path1 : this.removePseudo(path1);\n  var p2 = this.pseudoNode ? path2 : this.removePseudo(path2);\n  if (isPoly && !this.compareCoord(p1[0],p2[0])) {\n    // fix start index of both to same point\n    p2 = this.fixStartIndex(p2,p1);\n    if(!p2) return;\n  }\n  // for linestring ind =0 and for polygon ind =1\n  var sameDirection = this.compareCoord(p1[ind],p2[ind]);\n  if (this.direction || sameDirection\n  ) {\n    return this.comparePath(p1, p2);\n  } else {\n    if (this.compareCoord(p1[ind],p2[p2.length - (1+ind)])\n    ) {\n      return this.comparePath(p1.slice().reverse(), p2);\n    }\n    return false;\n  }\n};\nEquality.prototype.fixStartIndex = function(sourcePath,targetPath) {\n  //make sourcePath first point same as of targetPath\n  var correctPath,ind = -1;\n  for (var i=0; i< sourcePath.length; i++) {\n    if(this.compareCoord(sourcePath[i],targetPath[0])) {\n      ind = i;\n      break;\n    }\n  }\n  if (ind >= 0) {\n    correctPath = [].concat(\n      sourcePath.slice(ind,sourcePath.length),\n      sourcePath.slice(1,ind+1));\n  }\n  return correctPath;\n};\nEquality.prototype.comparePath = function (p1,p2) {\n  var cont = this;\n  return p1.every(function(c,i) {\n    return cont.compareCoord(c,this[i]);\n  },p2);\n};\n\nEquality.prototype.comparePolygon = function(g1,g2) {\n  if (this.compareLine(g1.coordinates[0],g2.coordinates[0],1,true)) {\n    var holes1 = g1.coordinates.slice(1,g1.coordinates.length);\n    var holes2 = g2.coordinates.slice(1,g2.coordinates.length);\n    var cont = this;\n    return holes1.every(function(h1) {\n      return this.some(function(h2) {\n        return cont.compareLine(h1,h2,1,true);\n      });\n    },holes2);\n  } else {\n    return false;\n  }\n};\n\nEquality.prototype.compareFeature = function(g1,g2) {\n  if (\n    g1.id !== g2.id ||\n    !this.objectComparator(g1.properties, g2.properties) ||\n    !this.compareBBox(g1,g2)\n  ) {\n    return false;\n  }\n  return this.compare(g1.geometry, g2.geometry);\n};\n\nEquality.prototype.compareBBox = function(g1,g2) {\n  if (\n    (!g1.bbox && !g2.bbox) || \n    (\n      g1.bbox && g2.bbox &&\n      this.compareCoord(g1.bbox, g2.bbox)\n    )\n  )  {\n    return true;\n  }\n  return false;\n};\nEquality.prototype.removePseudo = function(path) {\n  //TODO to be implement\n  return path;\n};\n\nfunction objectComparator(obj1, obj2) {\n  return deepEqual_1(obj1, obj2, {strict: true});\n}\n\nvar geojsonEquality = Equality;\n\n/**\n * Compares two geometries of the same dimension and returns true if their intersection set results in a geometry\n * different from both but of the same dimension. It applies to Polygon/Polygon, LineString/LineString,\n * Multipoint/Multipoint, MultiLineString/MultiLineString and MultiPolygon/MultiPolygon.\n *\n * @name booleanOverlap\n * @param  {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} feature1 input\n * @param  {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} feature2 input\n * @returns {boolean} true/false\n * @example\n * var poly1 = turf.polygon([[[0,0],[0,5],[5,5],[5,0],[0,0]]]);\n * var poly2 = turf.polygon([[[1,1],[1,6],[6,6],[6,1],[1,1]]]);\n * var poly3 = turf.polygon([[[10,10],[10,15],[15,15],[15,10],[10,10]]]);\n *\n * turf.booleanOverlap(poly1, poly2)\n * //=true\n * turf.booleanOverlap(poly2, poly3)\n * //=false\n */\nfunction booleanOverlap(feature1, feature2) {\n    // validation\n    if (!feature1) throw new Error('feature1 is required');\n    if (!feature2) throw new Error('feature2 is required');\n    var type1 = getType(feature1);\n    var type2 = getType(feature2);\n    if (type1 !== type2) throw new Error('features must be of the same type');\n    if (type1 === 'Point') throw new Error('Point geometry not supported');\n\n    // features must be not equal\n    var equality = new geojsonEquality({precision: 6});\n    if (equality.compare(feature1, feature2)) return false;\n\n    var overlap = 0;\n\n    switch (type1) {\n    case 'MultiPoint':\n        var coords1 = coordAll(feature1);\n        var coords2 = coordAll(feature2);\n        coords1.forEach(function (coord1) {\n            coords2.forEach(function (coord2) {\n                if (coord1[0] === coord2[0] && coord1[1] === coord2[1]) overlap++;\n            });\n        });\n        break;\n\n    case 'LineString':\n    case 'MultiLineString':\n        segmentEach(feature1, function (segment1) {\n            segmentEach(feature2, function (segment2) {\n                if (lineOverlap(segment1, segment2).features.length) overlap++;\n            });\n        });\n        break;\n\n    case 'Polygon':\n    case 'MultiPolygon':\n        segmentEach(feature1, function (segment1) {\n            segmentEach(feature2, function (segment2) {\n                if (lineIntersect(segment1, segment2).features.length) overlap++;\n            });\n        });\n        break;\n    }\n\n    return overlap > 0;\n}\n\n/**\n * Determine whether two geometries of the same type have identical X,Y coordinate values.\n * See http://edndoc.esri.com/arcsde/9.0/general_topics/understand_spatial_relations.htm\n *\n * @name booleanEqual\n * @param {Geometry|Feature} feature1 GeoJSON input\n * @param {Geometry|Feature} feature2 GeoJSON input\n * @returns {boolean} true if the objects are equal, false otherwise\n * @example\n * var pt1 = turf.point([0, 0]);\n * var pt2 = turf.point([0, 0]);\n * var pt3 = turf.point([1, 1]);\n *\n * turf.booleanEqual(pt1, pt2);\n * //= true\n * turf.booleanEqual(pt2, pt3);\n * //= false\n */\nfunction booleanEqual(feature1, feature2) {\n    // validation\n    if (!feature1) throw new Error('feature1 is required');\n    if (!feature2) throw new Error('feature2 is required');\n    var type1 = getType(feature1);\n    var type2 = getType(feature2);\n    if (type1 !== type2) return false;\n\n    var equality = new geojsonEquality({precision: 6});\n    return equality.compare(cleanCoords(feature1), cleanCoords(feature2));\n}\n\nvar DBSCAN_1 = createCommonjsModule(function (module) {\n/**\r\n * DBSCAN - Density based clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * DBSCAN class construcotr\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {DBSCAN}\r\n */\r\nfunction DBSCAN(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {Array} */\r\n  this.dataset = [];\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 2;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n  /** @type {Array} */\r\n  this.clusters = [];\r\n  /** @type {Array} */\r\n  this.noise = [];\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._visited = [];\r\n  /** @type {Array} */\r\n  this._assigned = [];\r\n  /** @type {number} */\r\n  this._datasetLength = 0;\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n}\r\n\r\n/******************************************************************************/\r\n// public functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nDBSCAN.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0; pointId < this._datasetLength; pointId++) {\r\n    // if point is not visited, check if it forms a cluster\r\n    if (this._visited[pointId] !== 1) {\r\n      this._visited[pointId] = 1;\r\n\r\n      // if closest neighborhood is too small to form a cluster, mark as noise\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      if (neighbors.length < this.minPts) {\r\n        this.noise.push(pointId);\r\n      } else {\r\n        // create new cluster and add point\r\n        var clusterId = this.clusters.length;\r\n        this.clusters.push([]);\r\n        this._addToCluster(pointId, clusterId);\r\n\r\n        this._expandCluster(clusterId, neighbors);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this.noise = [];\r\n\r\n    this._datasetLength = dataset.length;\r\n    this._visited = new Array(this._datasetLength);\r\n    this._assigned = new Array(this._datasetLength);\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Expand cluster to closest points of given neighborhood\r\n *\r\n * @param {number} clusterId\r\n * @param {Array} neighbors\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._expandCluster = function(clusterId, neighbors) {\r\n\r\n  /**\r\n   * It's very important to calculate length of neighbors array each time,\r\n   * as the number of elements changes over time\r\n   */\r\n  for (var i = 0; i < neighbors.length; i++) {\r\n    var pointId2 = neighbors[i];\r\n\r\n    if (this._visited[pointId2] !== 1) {\r\n      this._visited[pointId2] = 1;\r\n      var neighbors2 = this._regionQuery(pointId2);\r\n\r\n      if (neighbors2.length >= this.minPts) {\r\n        neighbors = this._mergeArrays(neighbors, neighbors2);\r\n      }\r\n    }\r\n\r\n    // add to cluster\r\n    if (this._assigned[pointId2] !== 1) {\r\n      this._addToCluster(pointId2, clusterId);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add new point to cluster\r\n *\r\n * @param {number} pointId\r\n * @param {number} clusterId\r\n */\r\nDBSCAN.prototype._addToCluster = function(pointId, clusterId) {\r\n  this.clusters[clusterId].push(pointId);\r\n  this._assigned[pointId] = 1;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId,\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._regionQuery = function(pointId) {\r\n  var neighbors = [];\r\n\r\n  for (var id = 0; id < this._datasetLength; id++) {\r\n    var dist = this.distance(this.dataset[pointId], this.dataset[id]);\r\n    if (dist < this.epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * @param {Array} a\r\n * @param {Array} b\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._mergeArrays = function(a, b) {\r\n  var len = b.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var P = b[i];\r\n    if (a.indexOf(P) < 0) {\r\n      a.push(P);\r\n    }\r\n  }\r\n\r\n  return a;\r\n};\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif ('object' !== 'undefined' && module.exports) {\r\n  module.exports = DBSCAN;\r\n}\n});\n\nvar KMEANS_1 = createCommonjsModule(function (module) {\n/**\r\n * KMEANS clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * KMEANS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} k - number of clusters\r\n * @param {function} distance - distance function\r\n * @returns {KMEANS}\r\n */\r\n function KMEANS(dataset, k, distance) {\r\n  this.k = 3; // number of clusters\r\n  this.dataset = []; // set of feature vectors\r\n  this.assignments = []; // set of associated clusters for each feature vector\r\n  this.centroids = []; // vectors for our clusters\r\n\r\n  this.init(dataset, k, distance);\r\n}\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.init = function(dataset, k, distance) {\r\n  this.assignments = [];\r\n  this.centroids = [];\r\n\r\n  if (typeof dataset !== 'undefined') {\r\n    this.dataset = dataset;\r\n  }\r\n\r\n  if (typeof k !== 'undefined') {\r\n    this.k = k;\r\n  }\r\n\r\n  if (typeof distance !== 'undefined') {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.run = function(dataset, k) {\r\n  this.init(dataset, k);\r\n\r\n  var len = this.dataset.length;\r\n\r\n  // initialize centroids\r\n  for (var i = 0; i < this.k; i++) {\r\n    this.centroids[i] = this.randomCentroid();\r\n\t}\r\n\r\n  var change = true;\r\n  while(change) {\r\n\r\n    // assign feature vectors to clusters\r\n    change = this.assign();\r\n\r\n    // adjust location of centroids\r\n    for (var centroidId = 0; centroidId < this.k; centroidId++) {\r\n      var mean = new Array(maxDim);\r\n      var count = 0;\r\n\r\n      // init mean vector\r\n      for (var dim = 0; dim < maxDim; dim++) {\r\n        mean[dim] = 0;\r\n      }\r\n\r\n      for (var j = 0; j < len; j++) {\r\n        var maxDim = this.dataset[j].length;\r\n\r\n        // if current cluster id is assigned to point\r\n        if (centroidId === this.assignments[j]) {\r\n          for (var dim = 0; dim < maxDim; dim++) {\r\n            mean[dim] += this.dataset[j][dim];\r\n          }\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count > 0) {\r\n        // if cluster contain points, adjust centroid position\r\n        for (var dim = 0; dim < maxDim; dim++) {\r\n          mean[dim] /= count;\r\n        }\r\n        this.centroids[centroidId] = mean;\r\n      } else {\r\n        // if cluster is empty, generate new random centroid\r\n        this.centroids[centroidId] = this.randomCentroid();\r\n        change = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.getClusters();\r\n};\r\n\r\n/**\r\n * Generate random centroid\r\n *\r\n * @returns {Array}\r\n */\r\nKMEANS.prototype.randomCentroid = function() {\r\n  var maxId = this.dataset.length -1;\r\n  var centroid;\r\n  var id;\r\n\r\n  do {\r\n    id = Math.round(Math.random() * maxId);\r\n    centroid = this.dataset[id];\r\n  } while (this.centroids.indexOf(centroid) >= 0);\r\n\r\n  return centroid;\r\n};\r\n\r\n/**\r\n * Assign points to clusters\r\n *\r\n * @returns {boolean}\r\n */\r\nKMEANS.prototype.assign = function() {\r\n  var change = false;\r\n  var len = this.dataset.length;\r\n  var closestCentroid;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    closestCentroid = this.argmin(this.dataset[i], this.centroids, this.distance);\r\n\r\n    if (closestCentroid != this.assignments[i]) {\r\n      this.assignments[i] = closestCentroid;\r\n      change = true;\r\n    }\r\n  }\r\n\r\n  return change;\r\n};\r\n\r\n/**\r\n * Extract information about clusters\r\n *\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.getClusters = function() {\r\n  var clusters = new Array(this.k);\r\n  var centroidId;\r\n\r\n  for (var pointId = 0; pointId < this.assignments.length; pointId++) {\r\n    centroidId = this.assignments[pointId];\r\n\r\n    // init empty cluster\r\n    if (typeof clusters[centroidId] === 'undefined') {\r\n      clusters[centroidId] = [];\r\n    }\r\n\r\n    clusters[centroidId].push(pointId);\r\n  }\r\n\r\n  return clusters;\r\n};\r\n\r\n// utils\r\n\r\n/**\r\n * @params {Array} point\r\n * @params {Array.<Array>} set\r\n * @params {Function} f\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.argmin = function(point, set, f) {\r\n  var min = Number.MAX_VALUE;\r\n  var arg = 0;\r\n  var len = set.length;\r\n  var d;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    d = f(point, set[i]);\r\n    if (d < min) {\r\n      min = d;\r\n      arg = i;\r\n    }\r\n  }\r\n\r\n  return arg;\r\n};\r\n\r\n/**\r\n * Euclidean distance\r\n *\r\n * @params {number} p\r\n * @params {number} q\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.distance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    var diff = p[i] - q[i];\r\n    sum += diff * diff;\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif ('object' !== 'undefined' && module.exports) {\r\n  module.exports = KMEANS;\r\n}\n});\n\nvar PriorityQueue_1 = createCommonjsModule(function (module) {\n/**\r\n * PriorityQueue\r\n * Elements in this queue are sorted according to their value\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * PriorityQueue class construcotr\r\n * @constructor\r\n *\r\n * @example\r\n * queue: [1,2,3,4]\r\n * priorities: [4,1,2,3]\r\n * > result = [1,4,2,3]\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @param {string} sorting - asc / desc\r\n * @returns {PriorityQueue}\r\n */\r\nfunction PriorityQueue(elements, priorities, sorting) {\r\n  /** @type {Array} */\r\n  this._queue = [];\r\n  /** @type {Array} */\r\n  this._priorities = [];\r\n  /** @type {string} */\r\n  this._sorting = 'desc';\r\n\r\n  this._init(elements, priorities, sorting);\r\n}\r\n\r\n/**\r\n * Insert element\r\n *\r\n * @param {Object} ele\r\n * @param {Object} priority\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.insert = function(ele, priority) {\r\n  var indexToInsert = this._queue.length;\r\n  var index = indexToInsert;\r\n\r\n  while (index--) {\r\n    var priority2 = this._priorities[index];\r\n    if (this._sorting === 'desc') {\r\n      if (priority > priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    } else {\r\n      if (priority < priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._insertAt(ele, priority, indexToInsert);\r\n};\r\n\r\n/**\r\n * Remove element\r\n *\r\n * @param {Object} ele\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.remove = function(ele) {\r\n  var index = this._queue.length;\r\n\r\n  while (index--) {\r\n    var ele2 = this._queue[index];\r\n    if (ele === ele2) {\r\n      this._queue.splice(index, 1);\r\n      this._priorities.splice(index, 1);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For each loop wrapper\r\n *\r\n * @param {function} func\r\n * @returs {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.forEach = function(func) {\r\n  this._queue.forEach(func);\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElements = function() {\r\n  return this._queue;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @returns {Object}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementPriority = function(index) {\r\n  return this._priorities[index];\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getPriorities = function() {\r\n  return this._priorities;\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementsWithPriorities = function() {\r\n  var result = [];\r\n\r\n  for (var i = 0, l = this._queue.length; i < l; i++) {\r\n    result.push([this._queue[i], this._priorities[i]]);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._init = function(elements, priorities, sorting) {\r\n\r\n  if (elements && priorities) {\r\n    this._queue = [];\r\n    this._priorities = [];\r\n\r\n    if (elements.length !== priorities.length) {\r\n      throw new Error('Arrays must have the same length');\r\n    }\r\n\r\n    for (var i = 0; i < elements.length; i++) {\r\n      this.insert(elements[i], priorities[i]);\r\n    }\r\n  }\r\n\r\n  if (sorting) {\r\n    this._sorting = sorting;\r\n  }\r\n};\r\n\r\n/**\r\n * Insert element at given position\r\n *\r\n * @param {Object} ele\r\n * @param {number} index\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._insertAt = function(ele, priority, index) {\r\n  if (this._queue.length === index) {\r\n    this._queue.push(ele);\r\n    this._priorities.push(priority);\r\n  } else {\r\n    this._queue.splice(index, 0, ele);\r\n    this._priorities.splice(index, 0, priority);\r\n  }\r\n};\r\n\r\nif ('object' !== 'undefined' && module.exports) {\r\n  module.exports = PriorityQueue;\r\n}\n});\n\nvar OPTICS_1 = createCommonjsModule(function (module) {\n/**\r\n * @requires ./PriorityQueue.js\r\n */\r\n\r\nif ('object' !== 'undefined' && module.exports) {\r\n      var PriorityQueue = PriorityQueue_1;\r\n}\r\n\r\n/**\r\n * OPTICS - Ordering points to identify the clustering structure\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * OPTICS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {OPTICS}\r\n */\r\nfunction OPTICS(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 1;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._reachability = [];\r\n  /** @type {Array} */\r\n  this._processed = [];\r\n  /** @type {number} */\r\n  this._coreDistance = 0;\r\n  /** @type {Array} */\r\n  this._orderedList = [];\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n}\r\n\r\n/******************************************************************************/\r\n// pulic functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nOPTICS.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0, l = this.dataset.length; pointId < l; pointId++) {\r\n    if (this._processed[pointId] !== 1) {\r\n      this._processed[pointId] = 1;\r\n      this.clusters.push([pointId]);\r\n      var clusterId = this.clusters.length - 1;\r\n\r\n      this._orderedList.push(pointId);\r\n      var priorityQueue = new PriorityQueue(null, null, 'asc');\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      // using priority queue assign elements to new cluster\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, priorityQueue);\r\n        this._expandCluster(clusterId, priorityQueue);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/**\r\n * Generate reachability plot for all points\r\n *\r\n * @returns {array}\r\n * @access public\r\n */\r\nOPTICS.prototype.getReachabilityPlot = function() {\r\n  var reachabilityPlot = [];\r\n\r\n  for (var i = 0, l = this._orderedList.length; i < l; i++) {\r\n    var pointId = this._orderedList[i];\r\n    var distance = this._reachability[pointId];\r\n\r\n    reachabilityPlot.push([pointId, distance]);\r\n  }\r\n\r\n  return reachabilityPlot;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this._reachability = new Array(this.dataset.length);\r\n    this._processed = new Array(this.dataset.length);\r\n    this._coreDistance = 0;\r\n    this._orderedList = [];\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Update information in queue\r\n *\r\n * @param {number} pointId\r\n * @param {Array} neighbors\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._updateQueue = function(pointId, neighbors, queue) {\r\n  var self = this;\r\n\r\n  this._coreDistance = this._distanceToCore(pointId);\r\n  neighbors.forEach(function(pointId2) {\r\n    if (self._processed[pointId2] === undefined) {\r\n      var dist = self.distance(self.dataset[pointId], self.dataset[pointId2]);\r\n      var newReachableDistance = Math.max(self._coreDistance, dist);\r\n\r\n      if (self._reachability[pointId2] === undefined) {\r\n        self._reachability[pointId2] = newReachableDistance;\r\n        queue.insert(pointId2, newReachableDistance);\r\n      } else {\r\n        if (newReachableDistance < self._reachability[pointId2]) {\r\n          self._reachability[pointId2] = newReachableDistance;\r\n          queue.remove(pointId2);\r\n          queue.insert(pointId2, newReachableDistance);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Expand cluster\r\n *\r\n * @param {number} clusterId\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._expandCluster = function(clusterId, queue) {\r\n  var queueElements = queue.getElements();\r\n\r\n  for (var p = 0, l = queueElements.length; p < l; p++) {\r\n    var pointId = queueElements[p];\r\n    if (this._processed[pointId] === undefined) {\r\n      var neighbors = this._regionQuery(pointId);\r\n      this._processed[pointId] = 1;\r\n\r\n      this.clusters[clusterId].push(pointId);\r\n      this._orderedList.push(pointId);\r\n\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, queue);\r\n        this._expandCluster(clusterId, queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Calculating distance to cluster core\r\n *\r\n * @param {number} pointId\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._distanceToCore = function(pointId) {\r\n  var l = this.epsilon;\r\n  for (var coreDistCand = 0; coreDistCand < l; coreDistCand++) {\r\n    var neighbors = this._regionQuery(pointId, coreDistCand);\r\n    if (neighbors.length >= this.minPts) {\r\n      return coreDistCand;\r\n    }\r\n  }\r\n\r\n  return;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nOPTICS.prototype._regionQuery = function(pointId, epsilon) {\r\n  epsilon = epsilon || this.epsilon;\r\n  var neighbors = [];\r\n\r\n  for (var id = 0, l = this.dataset.length; id < l; id++) {\r\n    if (this.distance(this.dataset[pointId], this.dataset[id]) < epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif ('object' !== 'undefined' && module.exports) {\r\n  module.exports = OPTICS;\r\n}\n});\n\nvar lib = createCommonjsModule(function (module) {\nif ('object' !== 'undefined' && module.exports) {\r\n    module.exports = {\r\n      DBSCAN: DBSCAN_1,\r\n      KMEANS: KMEANS_1,\r\n      OPTICS: OPTICS_1,\r\n      PriorityQueue: PriorityQueue_1\r\n    };\r\n}\n});\n\nvar lib_1 = lib.DBSCAN;\nvar lib_2 = lib.KMEANS;\nvar lib_3 = lib.OPTICS;\nvar lib_4 = lib.PriorityQueue;\n\n/**\n * Takes a set of {@link Point|points} and partition them into clusters according to {@link DBSCAN's|https://en.wikipedia.org/wiki/DBSCAN} data clustering algorithm.\n *\n * @name clustersDbscan\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {number} maxDistance Maximum Distance between any point of the cluster to generate the clusters (kilometers only)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=kilometers] in which `maxDistance` is expressed, can be degrees, radians, miles, or kilometers\n * @param {number} [options.minPoints=3] Minimum number of points to generate a single cluster,\n * points which do not meet this requirement will be classified as an 'edge' or 'noise'.\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {string} dbscan - type of point it has been classified as ('core'|'edge'|'noise')\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var maxDistance = 100;\n * var clustered = turf.clustersDbscan(points, maxDistance);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersDbscan(points$$1, maxDistance, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var minPoints = options.minPoints;\n    var units = options.units;\n\n    // Input validation\n    collectionOf(points$$1, 'Point', 'Input must contain Points');\n    if (maxDistance === null || maxDistance === undefined) throw new Error('maxDistance is required');\n    if (!(Math.sign(maxDistance) > 0)) throw new Error('Invalid maxDistance');\n    if (!(minPoints === undefined || minPoints === null || Math.sign(minPoints) > 0)) throw new Error('Invalid minPoints');\n\n    // Clone points to prevent any mutations\n    points$$1 = clone(points$$1, true);\n\n    // Defaults\n    minPoints = minPoints || 3;\n\n    // create clustered ids\n    var dbscan = new lib.DBSCAN();\n    var clusteredIds = dbscan.run(coordAll(points$$1), convertLength(maxDistance, units), minPoints, distance);\n\n    // Tag points to Clusters ID\n    var clusterId = -1;\n    clusteredIds.forEach(function (clusterIds) {\n        clusterId++;\n        // assign cluster ids to input points\n        clusterIds.forEach(function (idx) {\n            var clusterPoint = points$$1.features[idx];\n            if (!clusterPoint.properties) clusterPoint.properties = {};\n            clusterPoint.properties.cluster = clusterId;\n            clusterPoint.properties.dbscan = 'core';\n        });\n    });\n\n    // handle noise points, if any\n    // edges points are tagged by DBSCAN as both 'noise' and 'cluster' as they can \"reach\" less than 'minPoints' number of points\n    dbscan.noise.forEach(function (noiseId) {\n        var noisePoint = points$$1.features[noiseId];\n        if (!noisePoint.properties) noisePoint.properties = {};\n        if (noisePoint.properties.cluster) noisePoint.properties.dbscan = 'edge';\n        else noisePoint.properties.dbscan = 'noise';\n    });\n\n    return points$$1;\n}\n\nvar distance$2 = {\n\t/**\n  * Euclidean distance\n  */\n\teudist: function eudist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar d = (v1[i] || 0) - (v2[i] || 0);\n\t\t\tsum += d * d;\n\t\t}\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\tmandist: function mandist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tsum += Math.abs((v1[i] || 0) - (v2[i] || 0));\n\t\t}\n\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\n\n\t/**\n  * Unidimensional distance\n  */\n\tdist: function dist(v1, v2, sqrt) {\n\t\tvar d = Math.abs(v1 - v2);\n\t\treturn sqrt ? d : d * d;\n\t}\n};\n\nvar eudist$1 = distance$2.eudist;\nvar dist$1 = distance$2.dist;\n\nvar kinit = {\n\tkmrand: function kmrand(data, k) {\n\t\tvar map = {},\n\t\t    ks = [],\n\t\t    t = k << 2;\n\t\tvar len = data.length;\n\t\tvar multi = data[0].length > 0;\n\n\t\twhile (ks.length < k && t-- > 0) {\n\t\t\tvar d = data[Math.floor(Math.random() * len)];\n\t\t\tvar key = multi ? d.join(\"_\") : \"\" + d;\n\t\t\tif (!map[key]) {\n\t\t\t\tmap[key] = true;\n\t\t\t\tks.push(d);\n\t\t\t}\n\t\t}\n\n\t\tif (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n\t},\n\n\n\t/**\n  * K-means++ initial centroid selection\n  */\n\tkmpp: function kmpp(data, k) {\n\t\tvar distance = data[0].length ? eudist$1 : dist$1;\n\t\tvar ks = [],\n\t\t    len = data.length;\n\t\tvar multi = data[0].length > 0;\n\t\tvar c = data[Math.floor(Math.random() * len)];\n\t\tvar key = multi ? c.join(\"_\") : \"\" + c;\n\t\tks.push(c);\n\t\twhile (ks.length < k) {\n\t\t\t// Min Distances between current centroids and data points\n\t\t\tvar dists = [],\n\t\t\t    lk = ks.length;\n\t\t\tvar dsum = 0,\n\t\t\t    prs = [];\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar min = Infinity;\n\t\t\t\tfor (var j = 0; j < lk; j++) {\n\t\t\t\t\tvar _dist = distance(data[i], ks[j]);\n\t\t\t\t\tif (_dist <= min) min = _dist;\n\t\t\t\t}\n\t\t\t\tdists[i] = min;\n\t\t\t}\n\n\t\t\t// Sum all min distances\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tdsum += dists[_i];\n\t\t\t}\n\n\t\t\t// Probabilities and cummulative prob (cumsum)\n\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\tprs[_i2] = { i: _i2, v: data[_i2], pr: dists[_i2] / dsum, cs: 0 };\n\t\t\t}\n\n\t\t\t// Sort Probabilities\n\t\t\tprs.sort(function (a, b) {\n\t\t\t\treturn a.pr - b.pr;\n\t\t\t});\n\n\t\t\t// Cummulative Probabilities\n\t\t\tprs[0].cs = prs[0].pr;\n\t\t\tfor (var _i3 = 1; _i3 < len; _i3++) {\n\t\t\t\tprs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n\t\t\t}\n\n\t\t\t// Randomize\n\t\t\tvar rnd = Math.random();\n\n\t\t\t// Gets only the items whose cumsum >= rnd\n\t\t\tvar idx = 0;\n\t\t\twhile (idx < len - 1 && prs[idx++].cs < rnd) {}\n\t\t\tks.push(prs[idx - 1].v);\n\t\t\t/*\n   let done = false;\n   while(!done) {\n   \t// this is our new centroid\n   \tc = prs[idx-1].v\n   \tkey = multi? c.join(\"_\") : `${c}`;\n   \tif(!map[key]) {\n   \t\tmap[key] = true;\n   \t\tks.push(c);\n   \t\tdone = true;\n   \t}\n   \telse {\n   \t\tidx++;\n   \t}\n   }\n   */\n\t\t}\n\n\t\treturn ks;\n\t}\n};\n\n/*jshint esversion: 6 */\n\nvar eudist = distance$2.eudist;\nvar kmrand = kinit.kmrand;\nvar kmpp = kinit.kmpp;\n\nvar MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len, val, v) {\n\tv = v || [];\n\tfor (var i = 0; i < len; i++) {\n\t\tv[i] = val;\n\t}return v;\n}\n\nfunction skmeans(data, k, initial, maxit) {\n\tvar ks = [],\n\t    old = [],\n\t    idxs = [],\n\t    dist = [];\n\tvar conv = false,\n\t    it = maxit || MAX;\n\tvar len = data.length,\n\t    vlen = data[0].length,\n\t    multi = vlen > 0;\n\tvar count = [];\n\n\tif (!initial) {\n\t\tvar _idxs = {};\n\t\twhile (ks.length < k) {\n\t\t\tvar idx = Math.floor(Math.random() * len);\n\t\t\tif (!_idxs[idx]) {\n\t\t\t\t_idxs[idx] = true;\n\t\t\t\tks.push(data[idx]);\n\t\t\t}\n\t\t}\n\t} else if (initial == \"kmrand\") {\n\t\tks = kmrand(data, k);\n\t} else if (initial == \"kmpp\") {\n\t\tks = kmpp(data, k);\n\t} else {\n\t\tks = initial;\n\t}\n\n\tdo {\n\t\t// Reset k count\n\t\tinit(k, 0, count);\n\n\t\t// For each value in data, find the nearest centroid\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar min = Infinity,\n\t\t\t    _idx = 0;\n\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t// Multidimensional or unidimensional\n\t\t\t\tvar dist = multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n\t\t\t\tif (dist <= min) {\n\t\t\t\t\tmin = dist;\n\t\t\t\t\t_idx = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidxs[i] = _idx; // Index of the selected centroid for that value\n\t\t\tcount[_idx]++; // Number of values for this centroid\n\t\t}\n\n\t\t// Recalculate centroids\n\t\tvar sum = [],\n\t\t    old = [];\n\t\tfor (var _j = 0; _j < k; _j++) {\n\t\t\t// Multidimensional or unidimensional\n\t\t\tsum[_j] = multi ? init(vlen, 0, sum[_j]) : 0;\n\t\t\told[_j] = ks[_j];\n\t\t}\n\n\t\t// If multidimensional\n\t\tif (multi) {\n\t\t\tfor (var _j2 = 0; _j2 < k; _j2++) {\n\t\t\t\tks[_j2] = [];\n\t\t\t} // Sum values and count for each centroid\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tvar _idx2 = idxs[_i],\n\t\t\t\t    // Centroid for that item\n\t\t\t\tvsum = sum[_idx2],\n\t\t\t\t    // Sum values for this centroid\n\t\t\t\tvect = data[_i]; // Current vector\n\n\t\t\t\t// Accumulate value on the centroid for current vector\n\t\t\t\tfor (var h = 0; h < vlen; h++) {\n\t\t\t\t\tvsum[h] += vect[h];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tconv = true;\n\t\t\tfor (var _j3 = 0; _j3 < k; _j3++) {\n\t\t\t\tvar ksj = ks[_j3],\n\t\t\t\t    // Current centroid\n\t\t\t\tsumj = sum[_j3],\n\t\t\t\t    // Accumulated centroid values\n\t\t\t\toldj = old[_j3],\n\t\t\t\t    // Old centroid value\n\t\t\t\tcj = count[_j3]; // Number of elements for this centroid\n\n\t\t\t\t// New average\n\t\t\t\tfor (var _h = 0; _h < vlen; _h++) {\n\t\t\t\t\tksj[_h] = sumj[_h] / cj || 0; // New centroid\n\t\t\t\t}\n\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tif (conv) {\n\t\t\t\t\tfor (var _h2 = 0; _h2 < vlen; _h2++) {\n\t\t\t\t\t\tif (oldj[_h2] != ksj[_h2]) {\n\t\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If unidimensional\n\t\telse {\n\t\t\t\t// Sum values and count for each centroid\n\t\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\t\tvar _idx3 = idxs[_i2];\n\t\t\t\t\tsum[_idx3] += data[_i2];\n\t\t\t\t}\n\t\t\t\t// Calculate the average for each centroid\n\t\t\t\tfor (var _j4 = 0; _j4 < k; _j4++) {\n\t\t\t\t\tks[_j4] = sum[_j4] / count[_j4] || 0; // New centroid\n\t\t\t\t}\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tconv = true;\n\t\t\t\tfor (var _j5 = 0; _j5 < k; _j5++) {\n\t\t\t\t\tif (old[_j5] != ks[_j5]) {\n\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\tconv = conv || --it <= 0;\n\t} while (!conv);\n\n\treturn {\n\t\tit: MAX - it,\n\t\tk: k,\n\t\tidxs: idxs,\n\t\tcentroids: ks\n\t};\n}\n\nvar main = skmeans;\n\n/**\n * Takes a set of {@link Point|points} and partition them into clusters using the k-mean .\n * It uses the [k-means algorithm](https://en.wikipedia.org/wiki/K-means_clustering)\n *\n * @name clustersKmeans\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.numberOfClusters=Math.sqrt(numberOfPoints/2)] numberOfClusters that will be generated\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var options = {numberOfClusters: 7};\n * var clustered = turf.clustersKmeans(points, options);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersKmeans(points, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var numberOfClusters = options.numberOfClusters;\n    var mutate = options.mutate;\n\n    // Input validation\n    collectionOf(points, 'Point', 'Input must contain Points');\n\n    // Default Params\n    var count = points.features.length;\n    numberOfClusters = numberOfClusters || Math.round(Math.sqrt(count / 2));\n\n    // numberOfClusters can't be greater than the number of points\n    // fallbacks to count\n    if (numberOfClusters > count) numberOfClusters = count;\n\n    // Clone points to prevent any mutations (enabled by default)\n    if (mutate === false || mutate === undefined) points = clone(points, true);\n\n    // collect points coordinates\n    var data = coordAll(points);\n\n    // create seed to avoid skmeans to drift\n    var initialCentroids = data.slice(0, numberOfClusters);\n\n    // create skmeans clusters\n    var skmeansResult = main(data, numberOfClusters, initialCentroids);\n\n    // store centroids {clusterId: [number, number]}\n    var centroids = {};\n    skmeansResult.centroids.forEach(function (coord, idx) {\n        centroids[idx] = coord;\n    });\n\n    // add associated cluster number\n    featureEach(points, function (point, index) {\n        var clusterId = skmeansResult.idxs[index];\n        point.properties.cluster = clusterId;\n        point.properties.centroid = centroids[clusterId];\n    });\n\n    return points;\n}\n\n/**\n * Boolean-Parallel returns True if each segment of `line1` is parallel to the correspondent segment of `line2`\n *\n * @name booleanParallel\n * @param {Geometry|Feature<LineString>} line1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<LineString>} line2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false if the lines are parallel\n * @example\n * var line1 = turf.lineString([[0, 0], [0, 1]]);\n * var line2 = turf.lineString([[1, 0], [1, 1]]);\n *\n * turf.booleanParallel(line1, line2);\n * //=true\n */\nfunction booleanParallel(line1, line2) {\n    // validation\n    if (!line1) throw new Error('line1 is required');\n    if (!line2) throw new Error('line2 is required');\n    var type1 = getType$1(line1, 'line1');\n    if (type1 !== 'LineString') throw new Error('line1 must be a LineString');\n    var type2 = getType$1(line2, 'line2');\n    if (type2 !== 'LineString') throw new Error('line2 must be a LineString');\n\n    var segments1 = lineSegment(cleanCoords(line1)).features;\n    var segments2 = lineSegment(cleanCoords(line2)).features;\n\n    for (var i = 0; i < segments1.length; i++) {\n        var segment1 = segments1[i].geometry.coordinates;\n        if (!segments2[i]) break;\n        var segment2 = segments2[i].geometry.coordinates;\n        if (!isParallel$1(segment1, segment2)) return false;\n    }\n    return true;\n}\n\n\n/**\n * Compares slopes and return result\n *\n * @private\n * @param {Geometry|Feature<LineString>} segment1 Geometry or Feature\n * @param {Geometry|Feature<LineString>} segment2 Geometry or Feature\n * @returns {boolean} if slopes are equal\n */\nfunction isParallel$1(segment1, segment2) {\n    var slope1 = bearingToAzimuth(rhumbBearing(segment1[0], segment1[1]));\n    var slope2 = bearingToAzimuth(rhumbBearing(segment2[0], segment2[1]));\n    return slope1 === slope2;\n}\n\n\n/**\n * Returns Feature's type\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Geometry or Feature\n * @param {string} name of the variable\n * @returns {string} Feature's type\n */\nfunction getType$1(geojson, name) {\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    if (geojson.type) return geojson.type; // if GeoJSON geometry\n    throw new Error('Invalid GeoJSON object for ' + name);\n}\n\n// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\nfunction pathTo(node) {\n    var curr = node,\n        path = [];\n    while (curr.parent) {\n        path.unshift(curr);\n        curr = curr.parent;\n    }\n    return path;\n}\n\nfunction getHeap() {\n    return new BinaryHeap(function (node) {\n        return node.f;\n    });\n}\n\n/**\n * Astar\n * @private\n */\nvar astar = {\n    /**\n     * Perform an A* Search on a graph given a start and end node.\n     *\n     * @private\n     * @memberof astar\n     * @param {Graph} graph Graph\n     * @param {GridNode} start Start\n     * @param {GridNode} end End\n     * @param {Object} [options] Options\n     * @param {bool} [options.closest] Specifies whether to return the path to the closest node if the target is unreachable.\n     * @param {Function} [options.heuristic] Heuristic function (see astar.heuristics).\n     * @returns {Object} Search\n     */\n    search: function (graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        var heuristic = options.heuristic || astar.heuristics.manhattan,\n            closest = options.closest || false;\n\n        var openHeap = getHeap(),\n            closestNode = start; // set the start node to be the closest if required\n\n        start.h = heuristic(start, end);\n\n        openHeap.push(start);\n\n        while (openHeap.size() > 0) {\n\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            var currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if (currentNode === end) {\n                return pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            var neighbors = graph.neighbors(currentNode);\n\n            for (var i = 0, il = neighbors.length; i < il; ++i) {\n                var neighbor = neighbors[i];\n\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                var gScore = currentNode.g + neighbor.getCost(currentNode),\n                    beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n                    neighbor.h = neighbor.h || heuristic(neighbor, end);\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    } else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    },\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    heuristics: {\n        manhattan: function (pos0, pos1) {\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return d1 + d2;\n        },\n        diagonal: function (pos0, pos1) {\n            var D = 1;\n            var D2 = Math.sqrt(2);\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n        }\n    },\n    cleanNode: function (node) {\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n};\n\n/**\n * A graph memory structure\n *\n * @private\n * @param {Array} gridIn 2D array of input weights\n * @param {Object} [options] Options\n * @param {boolean} [options.diagonal] Specifies whether diagonal moves are allowed\n * @returns {void} Graph\n */\nfunction Graph$1(gridIn, options) {\n    options = options || {};\n    this.nodes = [];\n    this.diagonal = !!options.diagonal;\n    this.grid = [];\n    for (var x = 0; x < gridIn.length; x++) {\n        this.grid[x] = [];\n\n        for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n            var node = new GridNode(x, y, row[y]);\n            this.grid[x][y] = node;\n            this.nodes.push(node);\n        }\n    }\n    this.init();\n}\n\nGraph$1.prototype.init = function () {\n    this.dirtyNodes = [];\n    for (var i = 0; i < this.nodes.length; i++) {\n        astar.cleanNode(this.nodes[i]);\n    }\n};\n\nGraph$1.prototype.cleanDirty = function () {\n    for (var i = 0; i < this.dirtyNodes.length; i++) {\n        astar.cleanNode(this.dirtyNodes[i]);\n    }\n    this.dirtyNodes = [];\n};\n\nGraph$1.prototype.markDirty = function (node) {\n    this.dirtyNodes.push(node);\n};\n\nGraph$1.prototype.neighbors = function (node) {\n    var ret = [],\n        x = node.x,\n        y = node.y,\n        grid = this.grid;\n\n    // West\n    if (grid[x - 1] && grid[x - 1][y]) {\n        ret.push(grid[x - 1][y]);\n    }\n\n    // East\n    if (grid[x + 1] && grid[x + 1][y]) {\n        ret.push(grid[x + 1][y]);\n    }\n\n    // South\n    if (grid[x] && grid[x][y - 1]) {\n        ret.push(grid[x][y - 1]);\n    }\n\n    // North\n    if (grid[x] && grid[x][y + 1]) {\n        ret.push(grid[x][y + 1]);\n    }\n\n    if (this.diagonal) {\n        // Southwest\n        if (grid[x - 1] && grid[x - 1][y - 1]) {\n            ret.push(grid[x - 1][y - 1]);\n        }\n\n        // Southeast\n        if (grid[x + 1] && grid[x + 1][y - 1]) {\n            ret.push(grid[x + 1][y - 1]);\n        }\n\n        // Northwest\n        if (grid[x - 1] && grid[x - 1][y + 1]) {\n            ret.push(grid[x - 1][y + 1]);\n        }\n\n        // Northeast\n        if (grid[x + 1] && grid[x + 1][y + 1]) {\n            ret.push(grid[x + 1][y + 1]);\n        }\n    }\n\n    return ret;\n};\n\nGraph$1.prototype.toString = function () {\n    var graphString = [],\n        nodes = this.grid, // when using grid\n        rowDebug, row, y, l;\n    for (var x = 0, len = nodes.length; x < len; x++) {\n        rowDebug = [];\n        row = nodes[x];\n        for (y = 0, l = row.length; y < l; y++) {\n            rowDebug.push(row[y].weight);\n        }\n        graphString.push(rowDebug.join(' '));\n    }\n    return graphString.join('\\n');\n};\n\nfunction GridNode(x, y, weight) {\n    this.x = x;\n    this.y = y;\n    this.weight = weight;\n}\n\nGridNode.prototype.toString = function () {\n    return '[' + this.x + ' ' + this.y + ']';\n};\n\nGridNode.prototype.getCost = function (fromNeighbor) {\n    // Take diagonal weight into consideration.\n    if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n        return this.weight * 1.41421;\n    }\n    return this.weight;\n};\n\nGridNode.prototype.isWall = function () {\n    return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction) {\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n    push: function (element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    },\n    pop: function () {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    },\n    remove: function (node) {\n        var i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        var end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            } else {\n                this.bubbleUp(i);\n            }\n        }\n    },\n    size: function () {\n        return this.content.length;\n    },\n    rescoreElement: function (node) {\n        this.sinkDown(this.content.indexOf(node));\n    },\n    sinkDown: function (n) {\n        // Fetch the element that has to be sunk.\n        var element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n\n            // Compute the parent element's index, and fetch it.\n            var parentN = ((n + 1) >> 1) - 1,\n                parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            // Found a parent that is less, no need to sink any further.\n            } else {\n                break;\n            }\n        }\n    },\n    bubbleUp: function (n) {\n        // Look up the target element and its score.\n        var length = this.content.length,\n            element = this.content[n],\n            elemScore = this.scoreFunction(element);\n\n        while (true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) << 1,\n                child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            var swap = null,\n                child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N],\n                    child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            // Otherwise, we are done.\n            } else {\n                break;\n            }\n        }\n    }\n};\n\n/**\n * Returns the shortest {@link LineString|path} from {@link Point|start} to {@link Point|end} without colliding with\n * any {@link Feature} in {@link FeatureCollection<Polygon>| obstacles}\n *\n * @name shortestPath\n * @param {Coord} start point\n * @param {Coord} end point\n * @param {Object} [options={}] optional parameters\n * @param {Geometry|Feature|FeatureCollection<Polygon>} [options.obstacles] areas which path cannot travel\n * @param {number} [options.minDistance] minimum distance between shortest path and obstacles\n * @param {string} [options.units='kilometers'] unit in which resolution & minimum distance will be expressed in; it can be degrees, radians, miles, kilometers, ...\n * @param {number} [options.resolution=100] distance between matrix points on which the path will be calculated\n * @returns {Feature<LineString>} shortest path between start and end\n * @example\n * var start = [-5, -6];\n * var end = [9, -6];\n * var options = {\n *   obstacles: turf.polygon([[[0, -7], [5, -7], [5, -3], [0, -3], [0, -7]]])\n * };\n *\n * var path = turf.shortestPath(start, end, options);\n *\n * //addToMap\n * var addToMap = [start, end, options.obstacles, path];\n */\nfunction shortestPath(start, end, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var resolution = options.resolution;\n    var minDistance = options.minDistance;\n    var obstacles = options.obstacles || featureCollection([]);\n\n    // validation\n    if (!start) throw new Error('start is required');\n    if (!end) throw new Error('end is required');\n    if (resolution && !isNumber(resolution) || resolution <= 0) throw new Error('options.resolution must be a number, greater than 0');\n    if (minDistance) throw new Error('options.minDistance is not yet implemented');\n\n    // Normalize Inputs\n    var startCoord = getCoord(start);\n    var endCoord = getCoord(end);\n    start = point(startCoord);\n    end = point(endCoord);\n\n    // Handle obstacles\n    switch (getType(obstacles)) {\n    case 'FeatureCollection':\n        if (obstacles.features.length === 0) return lineString([startCoord, endCoord]);\n        break;\n    case 'Polygon':\n        obstacles = featureCollection([feature(getGeom(obstacles))]);\n        break;\n    default:\n        throw new Error('invalid obstacles');\n    }\n\n    // define path grid area\n    var collection = obstacles;\n    collection.features.push(start);\n    collection.features.push(end);\n    var box = bbox(transformScale(bboxPolygon(bbox(collection)), 1.15)); // extend 15%\n    if (!resolution) {\n        var width = distance([box[0], box[1]], [box[2], box[1]], options);\n        resolution = width / 100;\n    }\n    collection.features.pop();\n    collection.features.pop();\n\n    var west = box[0];\n    var south = box[1];\n    var east = box[2];\n    var north = box[3];\n\n    var xFraction = resolution / (distance([west, south], [east, south], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = resolution / (distance([west, south], [west, north], options));\n    var cellHeight = yFraction * (north - south);\n\n    var bboxHorizontalSide = (east - west);\n    var bboxVerticalSide = (north - south);\n    var columns = Math.floor(bboxHorizontalSide / cellWidth);\n    var rows = Math.floor(bboxVerticalSide / cellHeight);\n    // adjust origin of the grid\n    var deltaX = (bboxHorizontalSide - columns * cellWidth) / 2;\n    var deltaY = (bboxVerticalSide - rows * cellHeight) / 2;\n\n    // loop through points only once to speed up process\n    // define matrix grid for A-star algorithm\n    var pointMatrix = [];\n    var matrix = [];\n\n    var closestToStart = [];\n    var closestToEnd = [];\n    var minDistStart = Infinity;\n    var minDistEnd = Infinity;\n    var currentY = north - deltaY;\n    var r = 0;\n    while (currentY >= south) {\n        // var currentY = south + deltaY;\n        var matrixRow = [];\n        var pointMatrixRow = [];\n        var currentX = west + deltaX;\n        var c = 0;\n        while (currentX <= east) {\n            var pt = point([currentX, currentY]);\n            var isInsideObstacle = isInside$1(pt, obstacles);\n            // feed obstacles matrix\n            matrixRow.push(isInsideObstacle ? 0 : 1); // with javascript-astar\n            // matrixRow.push(isInsideObstacle ? 1 : 0); // with astar-andrea\n            // map point's coords\n            pointMatrixRow.push(currentX + '|' + currentY);\n            // set closest points\n            var distStart = distance(pt, start);\n            // if (distStart < minDistStart) {\n            if (!isInsideObstacle && distStart < minDistStart) {\n                minDistStart = distStart;\n                closestToStart = {x: c, y: r};\n            }\n            var distEnd = distance(pt, end);\n            // if (distEnd < minDistEnd) {\n            if (!isInsideObstacle && distEnd < minDistEnd) {\n                minDistEnd = distEnd;\n                closestToEnd = {x: c, y: r};\n            }\n            currentX += cellWidth;\n            c++;\n        }\n        matrix.push(matrixRow);\n        pointMatrix.push(pointMatrixRow);\n        currentY -= cellHeight;\n        r++;\n    }\n\n    // find path on matrix grid\n\n    // javascript-astar ----------------------\n    var graph = new Graph$1(matrix, {diagonal: true});\n    var startOnMatrix = graph.grid[closestToStart.y][closestToStart.x];\n    var endOnMatrix = graph.grid[closestToEnd.y][closestToEnd.x];\n    var result = astar.search(graph, startOnMatrix, endOnMatrix);\n\n    var path = [startCoord];\n    result.forEach(function (coord) {\n        var coords = pointMatrix[coord.x][coord.y].split('|');\n        path.push([+coords[0], +coords[1]]); // make sure coords are numbers\n    });\n    path.push(endCoord);\n    // ---------------------------------------\n\n\n    // astar-andrea ------------------------\n    // var result = aStar(matrix, [closestToStart.x, closestToStart.y], [closestToEnd.x, closestToEnd.y], 'DiagonalFree');\n    // var path = [start.geometry.coordinates];\n    // result.forEach(function (coord) {\n    //     var coords = pointMatrix[coord[1]][coord[0]].split('|');\n    //     path.push([+coords[0], +coords[1]]); // make sure coords are numbers\n    // });\n    // path.push(end.geometry.coordinates);\n    // ---------------------------------------\n\n\n    return cleanCoords(lineString(path));\n}\n\n/**\n * Checks if Point is inside any of the Polygons\n *\n * @private\n * @param {Feature<Point>} pt to check\n * @param {FeatureCollection<Polygon>} polygons features\n * @returns {boolean} if inside or not\n */\nfunction isInside$1(pt, polygons$$1) {\n    for (var i = 0; i < polygons$$1.features.length; i++) {\n        if (booleanPointInPolygon(pt, polygons$$1.features[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x(d) {\n  return d[0];\n}\n\nfunction y(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon) * epsilon, Math.round(y$$1(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\n/**\n * @private\n * @param {Array<Array<number>>} coords representing a polygon\n * @returns {Feature<Polygon>} polygon\n */\nfunction coordsToPolygon(coords) {\n    coords = coords.slice();\n    coords.push(coords[0]);\n    return polygon([coords]);\n}\n\n/**\n * Takes a FeatureCollection of points, and a bounding box, and returns a FeatureCollection\n * of Voronoi polygons.\n *\n * The Voronoi algorithim used comes from the d3-voronoi package.\n *\n * @name voronoi\n * @param {FeatureCollection<Point>} points to find the Voronoi polygons around.\n * @param {Object} [options={}] Optional parameters\n * @param {number[]} [options.bbox=[-180, -85, 180, -85]] clipping rectangle, in [minX, minY, maxX, MaxY] order.\n * @returns {FeatureCollection<Polygon>} a set of polygons, one per input point.\n * @example\n * var options = {\n *   bbox: [-70, 40, -60, 60]\n * };\n * var points = turf.randomPoint(100, options);\n * var voronoiPolygons = turf.voronoi(points, options);\n *\n * //addToMap\n * var addToMap = [voronoiPolygons, points];\n */\nfunction voronoi$1(points$$1, options) {\n    // Optional params\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox || [-180, -85, 180, 85];\n\n    // Input Validation\n    if (!points$$1) throw new Error('points is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox is invalid');\n    collectionOf(points$$1, 'Point', 'points');\n\n    // Main\n    return featureCollection(\n        voronoi()\n            .x(function (feature$$1) { return feature$$1.geometry.coordinates[0]; })\n            .y(function (feature$$1) { return feature$$1.geometry.coordinates[1]; })\n            .extent([[bbox[0], bbox[1]], [bbox[2], bbox[3]]])\n            .polygons(points$$1.features)\n            .map(coordsToPolygon)\n    );\n}\n\n/**\n * Takes a {@link Point} and calculates the ellipse polygon given two semi-axes expressed in variable units and steps for precision.\n *\n * @param {Coord} center center point\n * @param {number} xSemiAxis semi (major) axis of the ellipse along the x-axis\n * @param {number} ySemiAxis semi (minor) axis of the ellipse along the y-axis\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.angle=0] angle of rotation (along the vertical axis), from North in decimal degrees, negative clockwise\n * @param {Coord} [options.pivot='origin'] point around which the rotation will be performed\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] unit of measurement for axes\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} ellipse polygon\n * @example\n * var center = [-75, 40];\n * var xSemiAxis = 5;\n * var ySemiAxis = 2;\n * var ellipse = turf.ellipse(center, xSemiAxis, ySemiAxis);\n *\n * //addToMap\n * var addToMap = [turf.point(center), ellipse]\n */\nfunction ellipse(center, xSemiAxis, ySemiAxis, options) {\n    // Optional params\n    options = options || {};\n    var steps = options.steps || 64;\n    var units = options.units || 'kilometers';\n    var angle = options.angle || 0;\n    var pivot = options.pivot || center;\n    var properties = options.properties || center.properties || {};\n\n    // validation\n    if (!center) throw new Error('center is required');\n    if (!xSemiAxis) throw new Error('xSemiAxis is required');\n    if (!ySemiAxis) throw new Error('ySemiAxis is required');\n    if (!isObject(options)) throw new Error('options must be an object');\n    if (!isNumber(steps)) throw new Error('steps must be a number');\n    if (!isNumber(angle)) throw new Error('angle must be a number');\n\n    var centerCoords = getCoord(center);\n    if (units === 'degrees') {\n        var angleRad = degreesToRadians(angle);\n    } else {\n        xSemiAxis = rhumbDestination(center, xSemiAxis, 90, {units: units});\n        ySemiAxis = rhumbDestination(center, ySemiAxis, 0, {units: units});\n        xSemiAxis = getCoord(xSemiAxis)[0] - centerCoords[0];\n        ySemiAxis = getCoord(ySemiAxis)[1] - centerCoords[1];\n    }\n\n    var coordinates = [];\n    for (var i = 0; i < steps; i += 1) {\n        var stepAngle = i * -360 / steps;\n        var x = ((xSemiAxis * ySemiAxis) / Math.sqrt(Math.pow(ySemiAxis, 2) + (Math.pow(xSemiAxis, 2) * Math.pow(getTanDeg(stepAngle), 2))));\n        var y = ((xSemiAxis * ySemiAxis) / Math.sqrt(Math.pow(xSemiAxis, 2) + (Math.pow(ySemiAxis, 2) / Math.pow(getTanDeg(stepAngle), 2))));\n\n        if (stepAngle < -90 && stepAngle >= -270) x = -x;\n        if (stepAngle < -180 && stepAngle >= -360) y = -y;\n        if (units === 'degrees') {\n            var newx = x * Math.cos(angleRad) + y * Math.sin(angleRad);\n            var newy = y * Math.cos(angleRad) - x * Math.sin(angleRad);\n            x = newx;\n            y = newy;\n        }\n\n        coordinates.push([x + centerCoords[0], y + centerCoords[1]]);\n    }\n    coordinates.push(coordinates[0]);\n    if (units === 'degrees') {\n        return polygon([coordinates], properties);\n    } else {\n        return transformRotate(polygon([coordinates], properties), angle, { pivot: pivot });\n    }\n}\n\n/**\n * Get Tan Degrees\n *\n * @private\n * @param {number} deg Degrees\n * @returns {number} Tan Degrees\n */\nfunction getTanDeg(deg) {\n    var rad = deg * Math.PI / 180;\n    return Math.tan(rad);\n}\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the mean center. Can be weighted.\n *\n * @name centerMean\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @param {number} [options.weight] the property name used to weight the center\n * @returns {Feature<Point>} a Point feature at the mean center point of all input features\n * @example\n * var features = turf.featureCollection([\n *   turf.point([-97.522259, 35.4691], {weight: 10}),\n *   turf.point([-97.502754, 35.463455], {weight: 3}),\n *   turf.point([-97.508269, 35.463245], {weight: 5})\n * ]);\n *\n * var options = {weight: \"weight\"}\n * var mean = turf.centerMean(features, options);\n *\n * //addToMap\n * var addToMap = [features, mean]\n * mean.properties['marker-size'] = 'large';\n * mean.properties['marker-color'] = '#000';\n */\nfunction centerMean(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n    var weightTerm = options.weight;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n\n    var sumXs = 0;\n    var sumYs = 0;\n    var sumNs = 0;\n    geomEach(geojson, function (geom, featureIndex, properties) {\n        var weight = properties[weightTerm];\n        weight = (weight === undefined || weight === null) ? 1 : weight;\n        if (!isNumber(weight)) throw new Error('weight value must be a number for feature index ' + featureIndex);\n        weight = Number(weight);\n        if (weight > 0) {\n            coordEach(geom, function (coord) {\n                sumXs += coord[0] * weight;\n                sumYs += coord[1] * weight;\n                sumNs += weight;\n            });\n        }\n    });\n    return point([sumXs / sumNs, sumYs / sumNs], properties);\n}\n\n/**\n * Takes a {@link FeatureCollection} of points and calculates the median center,\n * algorithimically. The median center is understood as the point that is\n * requires the least total travel from all other points.\n *\n * Turfjs has four different functions for calculating the center of a set of\n * data. Each is useful depending on circumstance.\n *\n * `@turf/center` finds the simple center of a dataset, by finding the\n * midpoint between the extents of the data. That is, it divides in half the\n * farthest east and farthest west point as well as the farthest north and\n * farthest south.\n *\n * `@turf/center-of-mass` imagines that the dataset is a sheet of paper.\n * The center of mass is where the sheet would balance on a fingertip.\n *\n * `@turf/center-mean` takes the averages of all the coordinates and\n * produces a value that respects that. Unlike `@turf/center`, it is\n * sensitive to clusters and outliers. It lands in the statistical middle of a\n * dataset, not the geographical. It can also be weighted, meaning certain\n * points are more important than others.\n *\n * `@turf/center-median` takes the mean center and tries to find, iteratively,\n * a new point that requires the least amount of travel from all the points in\n * the dataset. It is not as sensitive to outliers as `@turf/center`, but it is\n * attracted to clustered data. It, too, can be weighted.\n *\n * **Bibliography**\n *\n * Harold W. Kuhn and Robert E. Kuenne, “An Efficient Algorithm for the\n * Numerical Solution of the Generalized Weber Problem in Spatial\n * Economics,” _Journal of Regional Science_ 4, no. 2 (1962): 21–33,\n * doi:{@link https://doi.org/10.1111/j.1467-9787.1962.tb00902.x}.\n *\n * James E. Burt, Gerald M. Barber, and David L. Rigby, _Elementary\n * Statistics for Geographers_, 3rd ed., New York: The Guilford\n * Press, 2009, 150–151.\n *\n * @name centerMedian\n * @param {FeatureCollection<any>} features Any GeoJSON Feature Collection\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.weight] the property name used to weight the center\n * @param {number} [options.tolerance=0.001] the difference in distance between candidate medians at which point the algorighim stops iterating.\n * @param {number} [options.counter=10] how many attempts to find the median, should the tolerance be insufficient.\n * @returns {Feature<Point>} The median center of the collection\n * @example\n * var points = turf.points([[0, 0], [1, 0], [0, 1], [5, 8]]);\n * var medianCenter = turf.centerMedian(points);\n *\n * //addToMap\n * var addToMap = [points, medianCenter]\n */\nfunction centerMedian(features, options) {\n    // Optional params\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var counter = options.counter || 10;\n    if (!isNumber(counter)) throw new Error('counter must be a number');\n    var weightTerm = options.weight;\n\n    // Calculate mean center:\n    var meanCenter = centerMean(features, {weight: options.weight});\n\n    // Calculate center of every feature:\n    var centroids = featureCollection([]);\n    featureEach(features, function (feature$$1) {\n        centroids.features.push(centroid(feature$$1, {weight: feature$$1.properties[weightTerm]}));\n    });\n\n    centroids.properties = {\n        tolerance: options.tolerance,\n        medianCandidates: []\n    };\n    return findMedian(meanCenter.geometry.coordinates, [0, 0], centroids, counter);\n}\n\n/**\n * Recursive function to find new candidate medians.\n *\n * @private\n * @param {Position} candidateMedian current candidate median\n * @param {Position} previousCandidate the previous candidate median\n * @param {FeatureCollection<Point>} centroids the collection of centroids whose median we are determining\n * @param {number} counter how many attempts to try before quitting.\n * @returns {Feature<Point>} the median center of the dataset.\n */\nfunction findMedian(candidateMedian, previousCandidate, centroids, counter) {\n    var tolerance = centroids.properties.tolerance || 0.001;\n    var candidateXsum = 0;\n    var candidateYsum = 0;\n    var kSum = 0;\n    var centroidCount = 0;\n    featureEach(centroids, function (theCentroid) {\n        var weightValue = theCentroid.properties.weight;\n        var weight = (weightValue === undefined || weightValue === null) ? 1 : weightValue;\n        weight = Number(weight);\n        if (!isNumber(weight)) throw new Error('weight value must be a number');\n        if (weight > 0) {\n            centroidCount += 1;\n            var distanceFromCandidate = weight * distance(theCentroid, candidateMedian);\n            if (distanceFromCandidate === 0) distanceFromCandidate = 1;\n            var k = weight / distanceFromCandidate;\n            candidateXsum += theCentroid.geometry.coordinates[0] * k;\n            candidateYsum += theCentroid.geometry.coordinates[1] * k;\n            kSum += k;\n        }\n    });\n    if (centroidCount < 1) throw new Error('no features to measure');\n    var candidateX = candidateXsum / kSum;\n    var candidateY = candidateYsum / kSum;\n    if (centroidCount === 1 || counter === 0 || (Math.abs(candidateX - previousCandidate[0]) < tolerance && Math.abs(candidateY - previousCandidate[1]) < tolerance)) {\n        return point([candidateX, candidateY], {medianCandidates: centroids.properties.medianCandidates});\n    } else {\n        centroids.properties.medianCandidates.push([candidateX, candidateY]);\n        return findMedian([candidateX, candidateY], candidateMedian, centroids, counter - 1);\n    }\n}\n\n/**\n * Takes a {@link FeatureCollection} and returns a standard deviational ellipse,\n * also known as a “directional distribution.” The standard deviational ellipse\n * aims to show the direction and the distribution of a dataset by drawing\n * an ellipse that contains about one standard deviation’s worth (~ 70%) of the\n * data.\n *\n * This module mirrors the functionality of [Directional Distribution](http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-statistics-toolbox/directional-distribution.htm)\n * in ArcGIS and the [QGIS Standard Deviational Ellipse Plugin](http://arken.nmbu.no/~havatv/gis/qgisplugins/SDEllipse/)\n *\n * **Bibliography**\n *\n * • Robert S. Yuill, “The Standard Deviational Ellipse; An Updated Tool for\n * Spatial Description,” _Geografiska Annaler_ 53, no. 1 (1971): 28–39,\n * doi:{@link https://doi.org/10.2307/490885|10.2307/490885}.\n *\n * • Paul Hanly Furfey, “A Note on Lefever’s “Standard Deviational Ellipse,”\n * _American Journal of Sociology_ 33, no. 1 (1927): 94—98,\n * doi:{@link https://doi.org/10.1086/214336|10.1086/214336}.\n *\n *\n * @name standardDeviationalEllipse\n * @param {FeatureCollection<Point>} points GeoJSON points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.weight] the property name used to weight the center\n * @param {number} [options.steps=64] number of steps for the polygon\n * @param {Object} [options.properties={}] properties to pass to the resulting ellipse\n * @returns {Feature<Polygon>} an elliptical Polygon that includes approximately 1 SD of the dataset within it.\n * @example\n *\n * var bbox = [-74, 40.72, -73.98, 40.74];\n * var points = turf.randomPoint(400, {bbox: bbox});\n * var sdEllipse = turf.standardDeviationalEllipse(points);\n *\n * //addToMap\n * var addToMap = [points, sdEllipse];\n *\n */\nfunction standardDeviationalEllipse(points$$1, options) {\n    // Optional params\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var steps = options.steps || 64;\n    var weightTerm = options.weight;\n    var properties = options.properties || {};\n\n    // Validation:\n    if (!isNumber(steps)) throw new Error('steps must be a number');\n    if (!isObject(properties)) throw new Error('properties must be a number');\n\n    // Calculate mean center & number of features:\n    var numberOfFeatures = coordAll(points$$1).length;\n    var meanCenter = centerMean(points$$1, {weight: weightTerm});\n\n    // Calculate angle of rotation:\n    // [X, Y] = mean center of all [x, y].\n    // theta = arctan( (A + B) / C )\n    // A = sum((x - X)^2) - sum((y - Y)^2)\n    // B = sqrt(A^2 + 4(sum((x - X)(y - Y))^2))\n    // C = 2(sum((x - X)(y - Y)))\n\n    var xDeviationSquaredSum = 0;\n    var yDeviationSquaredSum = 0;\n    var xyDeviationSum = 0;\n\n    featureEach(points$$1, function (point$$1) {\n        var weight = point$$1.properties[weightTerm] || 1;\n        var deviation = getDeviations(getCoords(point$$1), getCoords(meanCenter));\n        xDeviationSquaredSum += Math.pow(deviation.x, 2) * weight;\n        yDeviationSquaredSum += Math.pow(deviation.y, 2) * weight;\n        xyDeviationSum += deviation.x * deviation.y * weight;\n    });\n\n    var bigA = xDeviationSquaredSum - yDeviationSquaredSum;\n    var bigB = Math.sqrt(Math.pow(bigA, 2) + 4 * Math.pow(xyDeviationSum, 2));\n    var bigC = 2 * xyDeviationSum;\n    var theta = Math.atan((bigA + bigB) / bigC);\n    var thetaDeg = theta * 180 / Math.PI;\n\n    // Calculate axes:\n    // sigmaX = sqrt((1 / n - 2) * sum((((x - X) * cos(theta)) - ((y - Y) * sin(theta)))^2))\n    // sigmaY = sqrt((1 / n - 2) * sum((((x - X) * sin(theta)) - ((y - Y) * cos(theta)))^2))\n    var sigmaXsum = 0;\n    var sigmaYsum = 0;\n    var weightsum = 0;\n    featureEach(points$$1, function (point$$1) {\n        var weight = point$$1.properties[weightTerm] || 1;\n        var deviation = getDeviations(getCoords(point$$1), getCoords(meanCenter));\n        sigmaXsum += Math.pow((deviation.x * Math.cos(theta)) - (deviation.y * Math.sin(theta)), 2) * weight;\n        sigmaYsum += Math.pow((deviation.x * Math.sin(theta)) + (deviation.y * Math.cos(theta)), 2) * weight;\n        weightsum += weight;\n    });\n\n    var sigmaX = Math.sqrt(2 * sigmaXsum / weightsum);\n    var sigmaY = Math.sqrt(2 * sigmaYsum / weightsum);\n\n    var theEllipse = ellipse(meanCenter, sigmaX, sigmaY, {units: 'degrees', angle: thetaDeg, steps: steps, properties: properties});\n    var pointsWithinEllipse = pointsWithinPolygon(points$$1, featureCollection([theEllipse]));\n    var standardDeviationalEllipseProperties = {\n        meanCenterCoordinates: getCoords(meanCenter),\n        semiMajorAxis: sigmaX,\n        semiMinorAxis: sigmaY,\n        numberOfFeatures: numberOfFeatures,\n        angle: thetaDeg,\n        percentageWithinEllipse: 100 * coordAll(pointsWithinEllipse).length / numberOfFeatures\n    };\n    theEllipse.properties.standardDeviationalEllipse = standardDeviationalEllipseProperties;\n\n    return theEllipse;\n}\n\n/**\n * Get x_i - X and y_i - Y\n *\n * @private\n * @param {Array} coordinates Array of [x_i, y_i]\n * @param {Array} center Array of [X, Y]\n * @returns {Object} { x: n, y: m }\n */\nfunction getDeviations(coordinates, center) {\n    return {\n        x: coordinates[0] - center[0],\n        y: coordinates[1] - center[1]\n    };\n}\n\n/**\n * Returns a random position within a {@link bounding box}.\n *\n * @name randomPosition\n * @param {Array<number>} [bbox=[-180, -90, 180, 90]] a bounding box inside of which positions are placed.\n * @returns {Array<number>} Position [longitude, latitude]\n * @example\n * var position = turf.randomPosition([-180, -90, 180, 90])\n * //=position\n */\nfunction randomPosition(bbox) {\n    if (isObject(bbox)) bbox = bbox.bbox;\n    if (bbox && !Array.isArray(bbox)) throw new Error('bbox is invalid');\n    if (bbox) return coordInBBox(bbox);\n    else return [lon(), lat()];\n}\n\n/**\n * Returns a random {@link point}.\n *\n * @name randomPoint\n * @param {number} [count=1] how many geometries will be generated\n * @param {Object} [options={}] Optional parameters\n * @param {Array<number>} [options.bbox=[-180, -90, 180, 90]] a bounding box inside of which geometries are placed.\n * @returns {FeatureCollection<Point>} GeoJSON FeatureCollection of points\n * @example\n * var points = turf.randomPoint(25, {bbox: [-180, -90, 180, 90]})\n * //=points\n */\nfunction randomPoint(count, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    if (count === undefined || count === null) count = 1;\n\n    var features = [];\n    for (var i = 0; i < count; i++) {\n        features.push(point(randomPosition(bbox)));\n    }\n    return featureCollection(features);\n}\n\n/**\n * Returns a random {@link polygon}.\n *\n * @name randomPolygon\n * @param {number} [count=1] how many geometries will be generated\n * @param {Object} [options={}] Optional parameters\n * @param {Array<number>} [options.bbox=[-180, -90, 180, 90]] a bounding box inside of which geometries are placed.\n * @param {number} [options.num_vertices=10] is how many coordinates each LineString will contain.\n * @param {number} [options.max_radial_length=10] is the maximum number of decimal degrees latitude or longitude that a vertex can reach out of the center of the Polygon.\n * @returns {FeatureCollection<Point>} GeoJSON FeatureCollection of points\n * @example\n * var polygons = turf.randomPolygon(25, {bbox: [-180, -90, 180, 90]})\n * //=polygons\n */\nfunction randomPolygon(count, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var num_vertices = options.num_vertices;\n    var max_radial_length = options.max_radial_length;\n    if (count === undefined || count === null) count = 1;\n\n    // Validation\n    if (!isNumber(num_vertices)) num_vertices = 10;\n    if (!isNumber(max_radial_length)) max_radial_length = 10;\n\n    var features = [];\n    for (var i = 0; i < count; i++) {\n        var vertices = [],\n            circle_offsets = Array.apply(null,\n                new Array(num_vertices + 1)).map(Math.random);\n\n        circle_offsets.forEach(sumOffsets);\n        circle_offsets.forEach(scaleOffsets);\n        vertices[vertices.length - 1] = vertices[0]; // close the ring\n\n        // center the polygon around something\n        vertices = vertices.map(vertexToCoordinate(randomPosition(bbox)));\n        features.push(polygon([vertices]));\n    }\n\n    function sumOffsets(cur, index, arr) {\n        arr[index] = (index > 0) ? cur + arr[index - 1] : cur;\n    }\n\n    function scaleOffsets(cur) {\n        cur = cur * 2 * Math.PI / circle_offsets[circle_offsets.length - 1];\n        var radial_scaler = Math.random();\n        vertices.push([\n            radial_scaler * max_radial_length * Math.sin(cur),\n            radial_scaler * max_radial_length * Math.cos(cur)\n        ]);\n    }\n\n    return featureCollection(features);\n}\n\n/**\n * Returns a random {@link linestring}.\n *\n * @name randomLineString\n * @param {number} [count=1] how many geometries will be generated\n * @param {Object} [options={}] Optional parameters\n * @param {Array<number>} [options.bbox=[-180, -90, 180, 90]] a bounding box inside of which geometries are placed.\n * @param {number} [options.num_vertices=10] is how many coordinates each LineString will contain.\n * @param {number} [options.max_length=0.0001] is the maximum number of decimal degrees that a vertex can be from its predecessor\n * @param {number} [options.max_rotation=Math.PI / 8] is the maximum number of radians that a line segment can turn from the previous segment.\n * @returns {FeatureCollection<Point>} GeoJSON FeatureCollection of points\n * @example\n * var lineStrings = turf.randomLineString(25, {bbox: [-180, -90, 180, 90]})\n * //=lineStrings\n */\nfunction randomLineString(count, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var num_vertices = options.num_vertices;\n    var max_length = options.max_length;\n    var max_rotation = options.max_rotation;\n    if (count === undefined || count === null) count = 1;\n\n    // Default parameters\n    if (!isNumber(num_vertices) || num_vertices < 2) num_vertices = 10;\n    if (!isNumber(max_length)) max_length = 0.0001;\n    if (!isNumber(max_rotation)) max_rotation = Math.PI / 8;\n\n    var features = [];\n    for (var i = 0; i < count; i++) {\n        var startingPoint = randomPosition(bbox);\n        var vertices = [startingPoint];\n        for (var j = 0; j < num_vertices - 1; j++) {\n            var priorAngle = (j === 0) ?\n                Math.random() * 2 * Math.PI :\n                Math.tan(\n                    (vertices[j][1] - vertices[j - 1][1]) /\n              (vertices[j][0] - vertices[j - 1][0])\n                );\n            var angle = priorAngle + (Math.random() - 0.5) * max_rotation * 2;\n            var distance = Math.random() * max_length;\n            vertices.push([\n                vertices[j][0] + distance * Math.cos(angle),\n                vertices[j][1] + distance * Math.sin(angle)\n            ]);\n        }\n        features.push(lineString(vertices));\n    }\n\n    return featureCollection(features);\n}\n\nfunction vertexToCoordinate(hub) {\n    return function (cur) { return [cur[0] + hub[0], cur[1] + hub[1]]; };\n}\n\nfunction rnd() { return Math.random() - 0.5; }\nfunction lon() { return rnd() * 360; }\nfunction lat() { return rnd() * 180; }\n\nfunction coordInBBox(bbox) {\n    return [\n        (Math.random() * (bbox[2] - bbox[0])) + bbox[0],\n        (Math.random() * (bbox[3] - bbox[1])) + bbox[1]];\n}\n\n\n\n\nvar main_es$4 = Object.freeze({\n\trandomPosition: randomPosition,\n\trandomPoint: randomPoint,\n\trandomPolygon: randomPolygon,\n\trandomLineString: randomLineString\n});\n\n/**\n * Get Cluster\n *\n * @name getCluster\n * @param {FeatureCollection} geojson GeoJSON Features\n * @param {*} filter Filter used on GeoJSON properties to get Cluster\n * @returns {FeatureCollection} Single Cluster filtered by GeoJSON Properties\n * @example\n * var geojson = turf.featureCollection([\n *     turf.point([0, 0], {'marker-symbol': 'circle'}),\n *     turf.point([2, 4], {'marker-symbol': 'star'}),\n *     turf.point([3, 6], {'marker-symbol': 'star'}),\n *     turf.point([5, 1], {'marker-symbol': 'square'}),\n *     turf.point([4, 2], {'marker-symbol': 'circle'})\n * ]);\n *\n * // Create a cluster using K-Means (adds `cluster` to GeoJSON properties)\n * var clustered = turf.clustersKmeans(geojson);\n *\n * // Retrieve first cluster (0)\n * var cluster = turf.getCluster(clustered, {cluster: 0});\n * //= cluster\n *\n * // Retrieve cluster based on custom properties\n * turf.getCluster(clustered, {'marker-symbol': 'circle'}).length;\n * //= 2\n * turf.getCluster(clustered, {'marker-symbol': 'square'}).length;\n * //= 1\n */\nfunction getCluster(geojson, filter) {\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.type !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (filter === undefined || filter === null) throw new Error('filter is required');\n\n    // Filter Features\n    var features = [];\n    featureEach(geojson, function (feature$$1) {\n        if (applyFilter(feature$$1.properties, filter)) features.push(feature$$1);\n    });\n    return featureCollection(features);\n}\n\n/**\n * Callback for clusterEach\n *\n * @callback clusterEachCallback\n * @param {FeatureCollection} [cluster] The current cluster being processed.\n * @param {*} [clusterValue] Value used to create cluster being processed.\n * @param {number} [currentIndex] The index of the current element being processed in the array.Starts at index 0\n * @returns {void}\n */\n\n/**\n * clusterEach\n *\n * @name clusterEach\n * @param {FeatureCollection} geojson GeoJSON Features\n * @param {string|number} property GeoJSON property key/value used to create clusters\n * @param {Function} callback a method that takes (cluster, clusterValue, currentIndex)\n * @returns {void}\n * @example\n * var geojson = turf.featureCollection([\n *     turf.point([0, 0]),\n *     turf.point([2, 4]),\n *     turf.point([3, 6]),\n *     turf.point([5, 1]),\n *     turf.point([4, 2])\n * ]);\n *\n * // Create a cluster using K-Means (adds `cluster` to GeoJSON properties)\n * var clustered = turf.clustersKmeans(geojson);\n *\n * // Iterate over each cluster\n * turf.clusterEach(clustered, 'cluster', function (cluster, clusterValue, currentIndex) {\n *     //= cluster\n *     //= clusterValue\n *     //= currentIndex\n * })\n *\n * // Calculate the total number of clusters\n * var total = 0\n * turf.clusterEach(clustered, 'cluster', function () {\n *     total++;\n * });\n *\n * // Create an Array of all the values retrieved from the 'cluster' property\n * var values = []\n * turf.clusterEach(clustered, 'cluster', function (cluster, clusterValue) {\n *     values.push(clusterValue);\n * });\n */\nfunction clusterEach(geojson, property, callback) {\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.type !== 'FeatureCollection') throw new Error('geojson must be a FeatureCollection');\n    if (property === undefined || property === null) throw new Error('property is required');\n\n    // Create clusters based on property values\n    var bins = createBins(geojson, property);\n    var values = Object.keys(bins);\n    for (var index = 0; index < values.length; index++) {\n        var value = values[index];\n        var bin = bins[value];\n        var features = [];\n        for (var i = 0; i < bin.length; i++) {\n            features.push(geojson.features[bin[i]]);\n        }\n        callback(featureCollection(features), value, index);\n    }\n}\n\n/**\n * Callback for clusterReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback clusterReduceCallback\n * @param {*} [previousValue] The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {FeatureCollection} [cluster] The current cluster being processed.\n * @param {*} [clusterValue] Value used to create cluster being processed.\n * @param {number} [currentIndex] The index of the current element being processed in the\n * array. Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n */\n\n/**\n * Reduce clusters in GeoJSON Features, similar to Array.reduce()\n *\n * @name clusterReduce\n * @param {FeatureCollection} geojson GeoJSON Features\n * @param {string|number} property GeoJSON property key/value used to create clusters\n * @param {Function} callback a method that takes (previousValue, cluster, clusterValue, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var geojson = turf.featureCollection([\n *     turf.point([0, 0]),\n *     turf.point([2, 4]),\n *     turf.point([3, 6]),\n *     turf.point([5, 1]),\n *     turf.point([4, 2])\n * ]);\n *\n * // Create a cluster using K-Means (adds `cluster` to GeoJSON properties)\n * var clustered = turf.clustersKmeans(geojson);\n *\n * // Iterate over each cluster and perform a calculation\n * var initialValue = 0\n * turf.clusterReduce(clustered, 'cluster', function (previousValue, cluster, clusterValue, currentIndex) {\n *     //=previousValue\n *     //=cluster\n *     //=clusterValue\n *     //=currentIndex\n *     return previousValue++;\n * }, initialValue);\n *\n * // Calculate the total number of clusters\n * var total = turf.clusterReduce(clustered, 'cluster', function (previousValue) {\n *     return previousValue++;\n * }, 0);\n *\n * // Create an Array of all the values retrieved from the 'cluster' property\n * var values = turf.clusterReduce(clustered, 'cluster', function (previousValue, cluster, clusterValue) {\n *     return previousValue.concat(clusterValue);\n * }, []);\n */\nfunction clusterReduce(geojson, property, callback, initialValue) {\n    var previousValue = initialValue;\n    clusterEach(geojson, property, function (cluster, clusterValue, currentIndex) {\n        if (currentIndex === 0 && initialValue === undefined) previousValue = cluster;\n        else previousValue = callback(previousValue, cluster, clusterValue, currentIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Create Bins\n *\n * @private\n * @param {FeatureCollection} geojson GeoJSON Features\n * @param {string|number} property Property values are used to create bins\n * @returns {Object} bins with Feature IDs\n * @example\n * var geojson = turf.featureCollection([\n *     turf.point([0, 0], {cluster: 0, foo: 'null'}),\n *     turf.point([2, 4], {cluster: 1, foo: 'bar'}),\n *     turf.point([5, 1], {0: 'foo'}),\n *     turf.point([3, 6], {cluster: 1}),\n * ]);\n * createBins(geojson, 'cluster');\n * //= { '0': [ 0 ], '1': [ 1, 3 ] }\n */\nfunction createBins(geojson, property) {\n    var bins = {};\n\n    featureEach(geojson, function (feature$$1, i) {\n        var properties = feature$$1.properties || {};\n        if (properties.hasOwnProperty(property)) {\n            var value = properties[property];\n            if (bins.hasOwnProperty(value)) bins[value].push(i);\n            else bins[value] = [i];\n        }\n    });\n    return bins;\n}\n\n/**\n * Apply Filter\n *\n * @private\n * @param {*} properties Properties\n * @param {*} filter Filter\n * @returns {boolean} applied Filter to properties\n */\nfunction applyFilter(properties, filter) {\n    if (properties === undefined) return false;\n    var filterType = typeof filter;\n\n    // String & Number\n    if (filterType === 'number' || filterType === 'string') return properties.hasOwnProperty(filter);\n    // Array\n    else if (Array.isArray(filter)) {\n        for (var i = 0; i < filter.length; i++) {\n            if (!applyFilter(properties, filter[i])) return false;\n        }\n        return true;\n    // Object\n    } else {\n        return propertiesContainsFilter(properties, filter);\n    }\n}\n\n/**\n * Properties contains filter (does not apply deepEqual operations)\n *\n * @private\n * @param {*} properties Properties\n * @param {Object} filter Filter\n * @returns {boolean} does filter equal Properties\n * @example\n * propertiesContainsFilter({foo: 'bar', cluster: 0}, {cluster: 0})\n * //= true\n * propertiesContainsFilter({foo: 'bar', cluster: 0}, {cluster: 1})\n * //= false\n */\nfunction propertiesContainsFilter(properties, filter) {\n    var keys = Object.keys(filter);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (properties[key] !== filter[key]) return false;\n    }\n    return true;\n}\n\n/**\n * Filter Properties\n *\n * @private\n * @param {*} properties Properties\n * @param {Array<string>} keys Used to filter Properties\n * @returns {*} filtered Properties\n * @example\n * filterProperties({foo: 'bar', cluster: 0}, ['cluster'])\n * //= {cluster: 0}\n */\nfunction filterProperties(properties, keys) {\n    if (!keys) return {};\n    if (!keys.length) return {};\n\n    var newProperties = {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (properties.hasOwnProperty(key)) newProperties[key] = properties[key];\n    }\n    return newProperties;\n}\n\n\n\n\nvar main_es$5 = Object.freeze({\n\tgetCluster: getCluster,\n\tclusterEach: clusterEach,\n\tclusterReduce: clusterReduce,\n\tcreateBins: createBins,\n\tapplyFilter: applyFilter,\n\tpropertiesContainsFilter: propertiesContainsFilter,\n\tfilterProperties: filterProperties\n});\n\n/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = function IllegalArgumentException () {};\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string} [message] Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nvar IndexOutOfBoundsException = (function (Error) {\n  function IndexOutOfBoundsException (message) {\n    Error.call(this);\n    this.message = message || '';\n  }\n\n  if ( Error ) IndexOutOfBoundsException.__proto__ = Error;\n  IndexOutOfBoundsException.prototype = Object.create( Error && Error.prototype );\n  IndexOutOfBoundsException.prototype.constructor = IndexOutOfBoundsException;\n\n  var staticAccessors = { name: { configurable: true } };\n\n  /**\n   * @type {string}\n   */\n  staticAccessors.name.get = function () { return 'IndexOutOfBoundsException' };\n\n  Object.defineProperties( IndexOutOfBoundsException, staticAccessors );\n\n  return IndexOutOfBoundsException;\n}(Error));\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString$1) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString$1 = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString$1));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString$1) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString$1) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString$1) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString$1(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString$1(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString$1(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString$1) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract$1$1[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract$1$1[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract$1$1 = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract$1$1.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract$1$1.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract$1$1.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract$1$1.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract$1$1.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract$1$1.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract$1$1.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract$1$1[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing$1 = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing$1.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing$1.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing$1.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing$1.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing$1.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing$1.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing$1.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing$1.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing$1.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing$1.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing$1.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing$1.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing$1.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing$1.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing$1.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing$1.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing$1.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing$1.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing$1.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing$1.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing$1.prototype.getClass = function getClass () {\n  return EdgeRing$1\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing$1));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing$1));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node$2 = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node$2) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node$2(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node$2) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle$1 = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle$1.prototype.area = function area () {\n  return Triangle$1.area(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.signedArea = function signedArea () {\n  return Triangle$1.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle$1.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.longestSideLength = function longestSideLength () {\n  return Triangle$1.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.isAcute = function isAcute () {\n  return Triangle$1.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.circumcentre = function circumcentre () {\n  return Triangle$1.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.area3D = function area3D () {\n  return Triangle$1.area3D(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.centroid = function centroid () {\n  return Triangle$1.centroid(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.inCentre = function inCentre () {\n  return Triangle$1.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle$1.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle$1.prototype.getClass = function getClass () {\n  return Triangle$1\n};\nTriangle$1.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle$1.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle$1.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle$1.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle$1.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle$1.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle$1.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle$1.det(ax, ay, bx, by);\n  var numx = Triangle$1.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle$1.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle$1.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle$1.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle$1.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle$1.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle$1.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle$1(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString$1) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node$2(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge$1(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge$1 = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge$1(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString$1 && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString$1) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString$1) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString$1) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString$1) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString$1) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString$1) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString$1 || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString$1 && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString$1 && arguments[1] instanceof LineString$1)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString$1 && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString$1) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString$1) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString$1 && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge$1(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge$1(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString$1) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area$1(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area$1(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$1 = 1e-6;\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\n\nvar exp = Math.exp;\n\nvar log = Math.log;\n\nvar sin = Math.sin;\n\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar deltaSum = adder();\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon$1) % tau;\n}\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$1 && abs(a[1] - b[1]) < epsilon$1;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon$1 = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\n\nvar merge$1 = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$1 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$1 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$1 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge$1(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon$1(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$1 || angle < epsilon$1 && sum$1 < -epsilon$1) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\n\nvar identity$2 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\nvar lengthSum$1 = adder();\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge$1(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon$1(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon$1 : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon$1 : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon$1) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$1) lambda0 -= sign0 * epsilon$1; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$1) lambda1 -= sign1 * epsilon$1;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$1\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$1) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$1; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$1;\n            point1[1] += epsilon$1;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon$1,\n        meridian = polar || delta < epsilon$1;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$1 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$1 || abs(lambda0 - lambda1) < epsilon$1 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$2, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$2) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent$$1, object) {\n    return fitExtent(projection, extent$$1, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nvar geoTransverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=64] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer$1(geojson, radius, options) {\n    // Optional params\n    options = options || {};\n    var units = options.units;\n    var steps = options.steps || 64;\n\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n    if (typeof steps !== 'number') throw new Error('steps must be an number');\n\n    // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n    if (radius === undefined) throw new Error('radius is required');\n    if (steps <= 0) throw new Error('steps must be greater than 0');\n\n    // default params\n    steps = steps || 64;\n    units = units || 'kilometers';\n\n    var results = [];\n    switch (geojson.type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry$$1) {\n            var buffered = bufferFeature(geometry$$1, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    case 'FeatureCollection':\n        featureEach(geojson, function (feature$$1) {\n            var multiBuffered = bufferFeature(feature$$1, radius, units, steps);\n            if (multiBuffered) {\n                featureEach(multiBuffered, function (buffered) {\n                    if (buffered) results.push(buffered);\n                });\n            }\n        });\n        return featureCollection(results);\n    }\n    return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=64] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n    var properties = geojson.properties || {};\n    var geometry$$1 = (geojson.type === 'Feature') ? geojson.geometry : geojson;\n\n    // Geometry Types faster than jsts\n    if (geometry$$1.type === 'GeometryCollection') {\n        var results = [];\n        geomEach(geojson, function (geometry$$1) {\n            var buffered = bufferFeature(geometry$$1, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    }\n\n    // Project GeoJSON to Transverse Mercator projection (convert to Meters)\n    var projected;\n    var bbox$$1 = bbox(geojson);\n    var needsTransverseMercator = bbox$$1[1] > 50 && bbox$$1[3] > 50;\n\n    if (needsTransverseMercator) {\n        projected = {\n            type: geometry$$1.type,\n            coordinates: projectCoords(geometry$$1.coordinates, defineProjection(geometry$$1))\n        };\n    } else {\n        projected = toMercator(geometry$$1);\n    }\n\n    // JSTS buffer operation\n    var reader = new GeoJSONReader();\n    var geom = reader.read(projected);\n    var distance = radiansToLength(lengthToRadians(radius, units), 'meters');\n    var buffered = BufferOp.bufferOp(geom, distance);\n    var writer = new GeoJSONWriter();\n    buffered = writer.write(buffered);\n\n    // Detect if empty geometries\n    if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n    // Unproject coordinates (convert to Degrees)\n    var result;\n    if (needsTransverseMercator) {\n        result = {\n            type: buffered.type,\n            coordinates: unprojectCoords(buffered.coordinates, defineProjection(geometry$$1))\n        };\n    } else {\n        result = toWgs84(buffered);\n    }\n\n    return (result.geometry) ? result : feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n    if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n    return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj(coords);\n    return coords.map(function (coord) {\n        return projectCoords(coord, proj);\n    });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj.invert(coords);\n    return coords.map(function (coord) {\n        return unprojectCoords(coord, proj);\n    });\n}\n\n/**\n * Define Transverse Mercator projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Transverse Mercator Projection\n */\nfunction defineProjection(geojson) {\n    var coords = center(geojson).geometry.coordinates.reverse();\n    var rotate = coords.map(function (coord) { return -coord; });\n    return geoTransverseMercator()\n        .center(coords)\n        .rotate(rotate)\n        .scale(earthRadius);\n}\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect$2(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\n/**\n * @license get-closest https://github.com/cosmosio/get-closest\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2017 Olivier Scherrer <pode.fr@gmail.com>\n */\n\n/**\n * Get the closest number in an array\n *\n * @private\n * @param {number} item the base number\n * @param {Array} array the array to search into\n * @param {Function} getDiff returns the difference between the base number and\n *   and the currently read item in the array. The item which returned the smallest difference wins.\n * @returns {Object} Get Closest\n */\nfunction _getClosest(item, array, getDiff) {\n    var closest,\n        diff;\n\n    if (!Array.isArray(array)) {\n        throw new Error('Get closest expects an array as second argument');\n    }\n\n    array.forEach(function (comparedItem, comparedItemIndex) {\n        var thisDiff = getDiff(comparedItem, item);\n\n        if (thisDiff >= 0 && (typeof diff == 'undefined' || thisDiff < diff)) {\n            diff = thisDiff;\n            closest = comparedItemIndex;\n        }\n    });\n\n    return closest;\n}\n\n/**\n * Get the closest number in an array given a base number\n *\n * @private\n * @param {number} item the base number\n * @param {Array<number>} array the array of numbers to search into\n * @returns {number} the index of the closest item in the array\n * @example\n * closestNumber(30, [20, 0, 50, 29])\n * //= will return 3 as 29 is the closest item\n */\n\n\n/**\n * Get the closest greater number in an array given a base number\n *\n * @private\n * @param {number} item the base number\n * @param {Array<number>} array the array of numbers to search into\n * @returns {number} the index of the closest item in the array\n * @example\n * closestGreaterNumber(30, [20, 0, 50, 29])\n * //= will return 2 as 50 is the closest greater item\n */\nfunction closestGreaterNumber(item, array) {\n    return _getClosest(item, array, function (comparedItem, item) {\n        return comparedItem - item;\n    });\n}\n\n/**\n * Get the closest lower number in an array given a base number\n *\n * @private\n * @param {number} item the base number\n * @param {Array<number>} array the array of numbers to search into\n * @returns {number} the index of the closest item in the array\n * @example\n * closestLowerNumber(30, [20, 0, 50, 29])\n * //= will return 0 as 20 is the closest lower item\n */\n\n\n/**\n * Get the closest item in an array given a base item and a comparator function\n *\n * @private\n * @param {*} item the base item\n * @param {Array} array an array of items\n * @param {Function} comparator a comparatof function to compare the items\n * @returns {Object} Closest Custom\n * @example\n * closestCustom(\"lundi\", [\"mundi\", \"mardi\"], getLevenshteinDistance)\n * //= will return 0 for \"lundi\"\n *\n * // The function looks like:\n *\n * // comparedItem comes from the array\n * // baseItem is the item to compare the others to\n * // It returns a number\n * function comparator(comparedItem, baseItem) {\n *     return comparedItem - baseItem;\n * }\n */\n\n/**\n * Dissolves a FeatureCollection of {@link polygon} features, filtered by an optional property name:value.\n * Note that {@link mulitpolygon} features within the collection are not supported\n *\n * @name dissolve\n * @param {FeatureCollection<Polygon>} featureCollection input feature collection to be dissolved\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.propertyName] features with equals 'propertyName' in `properties` will be merged\n * @returns {FeatureCollection<Polygon>} a FeatureCollection containing the dissolved polygons\n * @example\n * var features = turf.featureCollection([\n *   turf.polygon([[[0, 0], [0, 1], [1, 1], [1, 0], [0, 0]]], {combine: 'yes'}),\n *   turf.polygon([[[0, -1], [0, 0], [1, 0], [1, -1], [0,-1]]], {combine: 'yes'}),\n *   turf.polygon([[[1,-1],[1, 0], [2, 0], [2, -1], [1, -1]]], {combine: 'no'}),\n * ]);\n *\n * var dissolved = turf.dissolve(features, {propertyName: 'combine'});\n *\n * //addToMap\n * var addToMap = [features, dissolved]\n */\nfunction dissolve$1(featureCollection$$1, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var propertyName = options.propertyName;\n\n    // Input validation\n    collectionOf(featureCollection$$1, 'Polygon', 'dissolve');\n\n    // Main\n    var fc = clone(featureCollection$$1);\n    var features = fc.features;\n\n    var originalIndexOfItemsRemoved = [];\n\n    features.forEach(function (f, i) {\n        f.properties.origIndexPosition = i;\n    });\n    var tree = geojsonRbush();\n    tree.load(fc);\n\n    for (var i in features) {\n        var polygon$$1 = features[i];\n\n        var featureChanged = false;\n\n        tree.search(polygon$$1).features.forEach(function (potentialMatchingFeature) {\n            polygon$$1 = features[i];\n\n            var matchFeaturePosition = potentialMatchingFeature.properties.origIndexPosition;\n\n            if (originalIndexOfItemsRemoved.length > 0 && matchFeaturePosition !== 0) {\n                if (matchFeaturePosition > originalIndexOfItemsRemoved[originalIndexOfItemsRemoved.length - 1]) {\n                    matchFeaturePosition = matchFeaturePosition - (originalIndexOfItemsRemoved.length);\n                } else {\n                    var closestNumber$$1 = closestGreaterNumber(matchFeaturePosition, originalIndexOfItemsRemoved);\n                    if (closestNumber$$1 !== 0) {\n                        matchFeaturePosition = matchFeaturePosition - closestNumber$$1;\n                    }\n                }\n            }\n\n            if (matchFeaturePosition === +i) return;\n\n            var matchFeature = features[matchFeaturePosition];\n            if (!matchFeature || !polygon$$1) return;\n\n            if (propertyName !== undefined &&\n                matchFeature.properties[propertyName] !== polygon$$1.properties[propertyName]) return;\n\n            if (!booleanOverlap(polygon$$1, matchFeature) || !ringsIntersect(polygon$$1, matchFeature)) return;\n\n            features[i] = union(polygon$$1, matchFeature);\n\n            originalIndexOfItemsRemoved.push(potentialMatchingFeature.properties.origIndexPosition);\n            originalIndexOfItemsRemoved.sort(function (a, b) {\n                return a - b;\n            });\n\n            tree.remove(potentialMatchingFeature);\n            features.splice(matchFeaturePosition, 1);\n            polygon$$1.properties.origIndexPosition = i;\n            tree.remove(polygon$$1, function (a, b) {\n                return a.properties.origIndexPosition === b.properties.origIndexPosition;\n            });\n            featureChanged = true;\n        });\n\n        if (featureChanged) {\n            if (!polygon$$1) continue;\n            polygon$$1.properties.origIndexPosition = i;\n            tree.insert(polygon$$1);\n            i--;\n        }\n    }\n\n    features.forEach(function (f) {\n        delete f.properties.origIndexPosition;\n        delete f.bbox;\n    });\n\n    return fc;\n}\n\nfunction ringsIntersect(poly1, poly2) {\n    var line1 = lineString(coordAll(poly1));\n    var line2 = lineString(coordAll(poly2));\n    var points$$1 = lineIntersect(line1, line2).features;\n    return points$$1.length > 0;\n}\n\n/**\n * Takes a bounding box and the diameter of the cell and returns a {@link FeatureCollection} of flat-topped\n * hexagons or triangles ({@link Polygon} features) aligned in an \"odd-q\" vertical grid as\n * described in [Hexagonal Grids](http://www.redblobgames.com/grids/hexagons/).\n *\n * @name hexGrid\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide length of the side of the the hexagons or triangles, in units. It will also coincide with the\n * radius of the circumcircle of the hexagons.\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cell size, can be degrees, radians, miles, or kilometers\n * @param {Object} [options.properties={}] passed to each hexagon or triangle of the grid\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {boolean} [options.triangles=false] whether to return as triangles instead of hexagons\n * @returns {FeatureCollection<Polygon>} a hexagonal grid\n * @example\n * var bbox = [-96,31,-84,40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var hexgrid = turf.hexGrid(bbox, cellSide, options);\n *\n * //addToMap\n * var addToMap = [hexgrid];\n */\nfunction hexGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var properties = options.properties || {};\n    var triangles = options.triangles;\n    var mask = options.mask;\n\n    // validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n    var centerY = (south + north) / 2;\n    var centerX = (west + east) / 2;\n\n    // https://github.com/Turfjs/turf/issues/758\n    var xFraction = cellSide * 2 / (distance([west, centerY], [east, centerY], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide * 2 / (distance([centerX, south], [centerX, north], options));\n    var cellHeight = yFraction * (north - south);\n    var radius = cellWidth / 2;\n\n    var hex_width = radius * 2;\n    var hex_height = Math.sqrt(3) / 2 * cellHeight;\n\n    var box_width = east - west;\n    var box_height = north - south;\n\n    var x_interval = 3 / 4 * hex_width;\n    var y_interval = hex_height;\n\n    // adjust box_width so all hexagons will be inside the bbox\n    var x_span = (box_width - hex_width) / (hex_width - radius / 2);\n    var x_count = Math.floor(x_span);\n\n    var x_adjust = ((x_count * x_interval - radius / 2) - box_width) / 2 - radius / 2 + x_interval / 2;\n\n    // adjust box_height so all hexagons will be inside the bbox\n    var y_count = Math.floor((box_height - hex_height) / hex_height);\n\n    var y_adjust = (box_height - y_count * hex_height) / 2;\n\n    var hasOffsetY = y_count * hex_height - box_height > hex_height / 2;\n    if (hasOffsetY) {\n        y_adjust -= hex_height / 4;\n    }\n\n    // Precompute cosines and sines of angles used in hexagon creation for performance gain\n    var cosines = [];\n    var sines = [];\n    for (var i = 0; i < 6; i++) {\n        var angle = 2 * Math.PI / 6 * i;\n        cosines.push(Math.cos(angle));\n        sines.push(Math.sin(angle));\n    }\n\n    var results = [];\n    for (var x = 0; x <= x_count; x++) {\n        for (var y = 0; y <= y_count; y++) {\n\n            var isOdd = x % 2 === 1;\n            if (y === 0 && isOdd) continue;\n            if (y === 0 && hasOffsetY) continue;\n\n            var center_x = x * x_interval + west - x_adjust;\n            var center_y = y * y_interval + south + y_adjust;\n\n            if (isOdd) {\n                center_y -= hex_height / 2;\n            }\n\n            if (triangles === true) {\n                hexTriangles(\n                    [center_x, center_y],\n                    cellWidth / 2,\n                    cellHeight / 2,\n                    properties,\n                    cosines,\n                    sines).forEach(function (triangle) {\n                    if (mask) {\n                        if (intersect$2(mask, triangle)) results.push(triangle);\n                    } else {\n                        results.push(triangle);\n                    }\n                });\n            } else {\n                var hex = hexagon(\n                    [center_x, center_y],\n                    cellWidth / 2,\n                    cellHeight / 2,\n                    properties,\n                    cosines,\n                    sines\n                );\n                if (mask) {\n                    if (intersect$2(mask, hex)) results.push(hex);\n                } else {\n                    results.push(hex);\n                }\n            }\n        }\n    }\n\n    return featureCollection(results);\n}\n\n/**\n * Creates hexagon\n *\n * @private\n * @param {Array<number>} center of the hexagon\n * @param {number} rx half hexagon width\n * @param {number} ry half hexagon height\n * @param {Object} properties passed to each hexagon\n * @param {Array<number>} cosines precomputed\n * @param {Array<number>} sines precomputed\n * @returns {Feature<Polygon>} hexagon\n */\nfunction hexagon(center, rx, ry, properties, cosines, sines) {\n    var vertices = [];\n    for (var i = 0; i < 6; i++) {\n        var x = center[0] + rx * cosines[i];\n        var y = center[1] + ry * sines[i];\n        vertices.push([x, y]);\n    }\n    //first and last vertex must be the same\n    vertices.push(vertices[0].slice());\n    return polygon([vertices], properties);\n}\n\n/**\n * Creates triangles composing an hexagon\n *\n * @private\n * @param {Array<number>} center of the hexagon\n * @param {number} rx half triangle width\n * @param {number} ry half triangle height\n * @param {Object} properties passed to each triangle\n * @param {Array<number>} cosines precomputed\n * @param {Array<number>} sines precomputed\n * @returns {Array<Feature<Polygon>>} triangles\n */\nfunction hexTriangles(center, rx, ry, properties, cosines, sines) {\n    var triangles = [];\n    for (var i = 0; i < 6; i++) {\n        var vertices = [];\n        vertices.push(center);\n        vertices.push([\n            center[0] + rx * cosines[i],\n            center[1] + ry * sines[i]\n        ]);\n        vertices.push([\n            center[0] + rx * cosines[(i + 1) % 6],\n            center[1] + ry * sines[(i + 1) % 6]\n        ]);\n        vertices.push(center);\n        triangles.push(polygon([vertices], properties));\n    }\n    return triangles;\n}\n\n/**\n * Takes any type of {@link Polygon|polygon} and an optional mask and returns a {@link Polygon|polygon} exterior ring with holes.\n *\n * @name mask\n * @param {FeatureCollection|Feature<Polygon|MultiPolygon>} polygon GeoJSON Polygon used as interior rings or holes.\n * @param {Feature<Polygon>} [mask] GeoJSON Polygon used as the exterior ring (if undefined, the world extent is used)\n * @returns {Feature<Polygon>} Masked Polygon (exterior ring with holes).\n * @example\n * var polygon = turf.polygon([[[112, -21], [116, -36], [146, -39], [153, -24], [133, -10], [112, -21]]]);\n * var mask = turf.polygon([[[90, -55], [170, -55], [170, 10], [90, 10], [90, -55]]]);\n *\n * var masked = turf.mask(polygon, mask);\n *\n * //addToMap\n * var addToMap = [masked]\n */\nfunction mask(polygon$$1, mask) {\n    // Define mask\n    var maskPolygon = createMask(mask);\n\n    // Define polygon\n    var separated = separatePolygons(polygon$$1);\n    var polygonOuters = separated[0];\n    var polygonInners = separated[1];\n\n    // Union Outers & Inners\n    polygonOuters = unionPolygons(polygonOuters);\n    polygonInners = unionPolygons(polygonInners);\n\n    // Create masked area\n    var masked = buildMask(maskPolygon, polygonOuters, polygonInners);\n    return masked;\n}\n\n/**\n * Build Mask\n *\n * @private\n * @param {Feature<Polygon>} maskPolygon Mask Outer\n * @param {FeatureCollection<Polygon>} polygonOuters Polygon Outers\n * @param {FeatureCollection<Polygon>} polygonInners Polygon Inners\n * @returns {Feature<Polygon>} Feature Polygon\n */\nfunction buildMask(maskPolygon, polygonOuters, polygonInners) {\n    var coordinates = [];\n    coordinates.push(maskPolygon.geometry.coordinates[0]);\n\n    flattenEach(polygonOuters, function (feature$$1) {\n        coordinates.push(feature$$1.geometry.coordinates[0]);\n    });\n\n    flattenEach(polygonInners, function (feature$$1) {\n        coordinates.push(feature$$1.geometry.coordinates[0]);\n    });\n    return polygon(coordinates);\n}\n\n/**\n * Separate Polygons to inners & outers\n *\n * @private\n * @param {FeatureCollection|Feature<Polygon|MultiPolygon>} poly GeoJSON Feature\n * @returns {Array<FeatureCollection<Polygon>, FeatureCollection<Polygon>>} Outer & Inner lines\n */\nfunction separatePolygons(poly) {\n    var outers = [];\n    var inners = [];\n    flattenEach(poly, function (feature$$1) {\n        var coordinates = feature$$1.geometry.coordinates;\n        var featureOuter = coordinates[0];\n        var featureInner = coordinates.slice(1);\n        outers.push(polygon([featureOuter]));\n        featureInner.forEach(function (inner) {\n            inners.push(polygon([inner]));\n        });\n    });\n    return [featureCollection(outers), featureCollection(inners)];\n}\n\n/**\n * Create Mask Coordinates\n *\n * @private\n * @param {Feature<Polygon>} [mask] default to world if undefined\n * @returns {Feature<Polygon>} mask coordinate\n */\nfunction createMask(mask) {\n    var world = [[[180, 90], [-180, 90], [-180, -90], [180, -90], [180, 90]]];\n    var coordinates = mask && mask.geometry.coordinates || world;\n    return polygon(coordinates);\n}\n\n/**\n * Union Polygons\n *\n * @private\n * @param {FeatureCollection<Polygon>} polygons collection of polygons\n * @returns {FeatureCollection<Polygon>} polygons only apply union if they collide\n */\nfunction unionPolygons(polygons$$1) {\n    if (polygons$$1.features.length <= 1) return polygons$$1;\n\n    var tree = createIndex(polygons$$1);\n    var results = [];\n    var removed = {};\n\n    flattenEach(polygons$$1, function (currentFeature, currentIndex) {\n        // Exclude any removed features\n        if (removed[currentIndex]) return true;\n\n        // Don't search for itself\n        tree.remove({index: currentIndex}, filterByIndex);\n        removed[currentIndex] = true;\n\n        // Keep applying the union operation until no more overlapping features\n        while (true) {\n            var bbox$$1 = bbox(currentFeature);\n            var search = tree.search({\n                minX: bbox$$1[0],\n                minY: bbox$$1[1],\n                maxX: bbox$$1[2],\n                maxY: bbox$$1[3]\n            });\n            if (search.length > 0) {\n                var polys = search.map(function (item) {\n                    removed[item.index] = true;\n                    tree.remove({index: item.index}, filterByIndex);\n                    return item.geojson;\n                });\n                polys.push(currentFeature);\n                currentFeature = union.apply(this, polys);\n            }\n            // Done\n            if (search.length === 0) break;\n        }\n        results.push(currentFeature);\n    });\n\n    return featureCollection(results);\n}\n\n/**\n * Filter by Index - RBush helper function\n *\n * @private\n * @param {Object} a remove item\n * @param {Object} b search item\n * @returns {boolean} true if matches\n */\nfunction filterByIndex(a, b) {\n    return a.index === b.index;\n}\n\n/**\n * Create RBush Tree Index\n *\n * @private\n * @param {FeatureCollection<any>} features GeoJSON FeatureCollection\n * @returns {RBush} RBush Tree\n */\nfunction createIndex(features) {\n    var tree = rbush_1();\n    var load = [];\n    flattenEach(features, function (feature$$1, index) {\n        var bbox$$1 = bbox(feature$$1);\n        load.push({\n            minX: bbox$$1[0],\n            minY: bbox$$1[1],\n            maxX: bbox$$1[2],\n            maxY: bbox$$1[3],\n            geojson: feature$$1,\n            index: index\n        });\n    });\n    tree.load(load);\n    return tree;\n}\n\n/**\n * Creates a square grid from a bounding box, {@link Feature} or {@link FeatureCollection}.\n *\n * @name squareGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide of each cell, in units\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Polygon>} grid a grid of polygons\n * @example\n * var bbox = [-95, 30 ,-85, 40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var squareGrid = turf.squareGrid(bbox, cellSide, options);\n *\n * //addToMap\n * var addToMap = [squareGrid]\n */\nfunction squareGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var properties = options.properties;\n    var mask = options.mask;\n\n    // Containers\n    var results = [];\n\n    // Input Validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var xFraction = cellSide / (distance([west, south], [east, south], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide / (distance([west, south], [west, north], options));\n    var cellHeight = yFraction * (north - south);\n\n    // rows & columns\n    var bboxWidth = (east - west);\n    var bboxHeight = (north - south);\n    var columns = Math.floor(bboxWidth / cellWidth);\n    var rows = Math.floor(bboxHeight / cellHeight);\n\n    // adjust origin of the grid\n    var deltaX = (bboxWidth - columns * cellWidth) / 2;\n    var deltaY = (bboxHeight - rows * cellHeight) / 2;\n\n    // iterate over columns & rows\n    var currentX = west + deltaX;\n    for (var column = 0; column < columns; column++) {\n        var currentY = south + deltaY;\n        for (var row = 0; row < rows; row++) {\n            var cellPoly = polygon([[\n                [currentX, currentY],\n                [currentX, currentY + cellHeight],\n                [currentX + cellWidth, currentY + cellHeight],\n                [currentX + cellWidth, currentY],\n                [currentX, currentY]\n            ]], properties);\n            if (mask) {\n                if (intersect$2(mask, cellPoly)) results.push(cellPoly);\n            } else {\n                results.push(cellPoly);\n            }\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n    return featureCollection(results);\n}\n\n/**\n * Takes a bounding box and a cell depth and returns a set of triangular {@link Polygon|polygons} in a grid.\n *\n * @name triangleGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide dimension of each cell\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Polygon>} grid of polygons\n * @example\n * var bbox = [-95, 30 ,-85, 40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var triangleGrid = turf.triangleGrid(bbox, cellSide, options);\n *\n * //addToMap\n * var addToMap = [triangleGrid];\n */\nfunction triangleGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var properties = options.properties;\n    var mask = options.mask;\n\n    // Containers\n    var results = [];\n\n    // Input Validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    // Main\n    var xFraction = cellSide / (distance([bbox[0], bbox[1]], [bbox[2], bbox[1]], options));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSide / (distance([bbox[0], bbox[1]], [bbox[0], bbox[3]], options));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var xi = 0;\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var yi = 0;\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            var cellTriangle1 = null;\n            var cellTriangle2 = null;\n\n            if (xi % 2 === 0 && yi % 2 === 0) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]], properties);\n            } else if (xi % 2 === 0 && yi % 2 === 1) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]], properties);\n            } else if (yi % 2 === 0 && xi % 2 === 1) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n            } else if (yi % 2 === 1 && xi % 2 === 1) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]], properties);\n            }\n            if (mask) {\n                if (intersect$2(mask, cellTriangle1)) results.push(cellTriangle1);\n                if (intersect$2(mask, cellTriangle2)) results.push(cellTriangle2);\n            } else {\n                results.push(cellTriangle1);\n                results.push(cellTriangle2);\n            }\n\n            currentY += cellHeight;\n            yi++;\n        }\n        xi++;\n        currentX += cellWidth;\n    }\n    return featureCollection(results);\n}\n\n/**\n * Takes a set of points and estimates their 'property' values on a grid using the [Inverse Distance Weighting (IDW) method](https://en.wikipedia.org/wiki/Inverse_distance_weighting).\n *\n * @name interpolate\n * @param {FeatureCollection<Point>} points with known value\n * @param {number} cellSize the distance across each grid point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.gridType='square'] defines the output format based on a Grid Type (options: 'square' | 'point' | 'hex' | 'triangle')\n * @param {string} [options.property='elevation'] the property name in `points` from which z-values will be pulled, zValue fallbacks to 3rd coordinate if no property exists.\n * @param {string} [options.units='kilometers'] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @param {number} [options.weight=1] exponent regulating the distance-decay weighting\n * @returns {FeatureCollection<Point|Polygon>} grid of points or polygons with interpolated 'property'\n * @example\n * var points = turf.randomPoint(30, {bbox: [50, 30, 70, 50]});\n *\n * // add a random property to each point\n * turf.featureEach(points, function(point) {\n *     point.properties.solRad = Math.random() * 50;\n * });\n * var options = {gridType: 'points', property: 'solRad', units: 'miles'};\n * var grid = turf.interpolate(points, 100, options);\n *\n * //addToMap\n * var addToMap = [grid];\n */\nfunction interpolate$1(points$$1, cellSize, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var gridType = options.gridType;\n    var property = options.property;\n    var weight = options.weight;\n\n    // validation\n    if (!points$$1) throw new Error('points is required');\n    collectionOf(points$$1, 'Point', 'input must contain Points');\n    if (!cellSize) throw new Error('cellSize is required');\n    if (weight !== undefined && typeof weight !== 'number') throw new Error('weight must be a number');\n\n    // default values\n    property = property || 'elevation';\n    gridType = gridType || 'square';\n    weight = weight || 1;\n\n    var box = bbox(points$$1);\n    var grid;\n    switch (gridType) {\n    case 'point':\n    case 'points':\n        grid = pointGrid(box, cellSize, options);\n        break;\n    case 'square':\n    case 'squares':\n        grid = squareGrid(box, cellSize, options);\n        break;\n    case 'hex':\n    case 'hexes':\n        grid = hexGrid(box, cellSize, options);\n        break;\n    case 'triangle':\n    case 'triangles':\n        grid = triangleGrid(box, cellSize, options);\n        break;\n    default:\n        throw new Error('invalid gridType');\n    }\n    var results = [];\n    featureEach(grid, function (gridFeature) {\n        var zw = 0;\n        var sw = 0;\n        // calculate the distance from each input point to the grid points\n        featureEach(points$$1, function (point$$1) {\n            var gridPoint = (gridType === 'point') ? gridFeature : centroid(gridFeature);\n            var d = distance(gridPoint, point$$1, options);\n            var zValue;\n            // property has priority for zValue, fallbacks to 3rd coordinate from geometry\n            if (property !== undefined) zValue = point$$1.properties[property];\n            if (zValue === undefined) zValue = point$$1.geometry.coordinates[2];\n            if (zValue === undefined) throw new Error('zValue is missing');\n            if (d === 0) zw = zValue;\n            var w = 1.0 / Math.pow(d, weight);\n            sw += w;\n            zw += w * zValue;\n        });\n        // write interpolated value for each grid point\n        var newFeature = clone(gridFeature);\n        newFeature.properties[property] = zw / sw;\n        results.push(newFeature);\n    });\n    return featureCollection(results);\n}\n\n/**\n * Turf is a modular geospatial analysis engine written in JavaScript. It performs geospatial\n * processing tasks with GeoJSON data and can be run on a server or in a browser.\n *\n * @module turf\n * @summary Geospatial analysis for JavaScript\n */\n\nexport { main_es$3 as projection, main_es$4 as random, main_es$5 as clusters, main_es$1 as helpers, main_es$2 as invariant, main_es as meta, isolines, convex, pointsWithinPolygon, concave, collect, flip, simplify, bezier as bezierSpline, tag, sample, envelope, square, circle, midpoint, center, centerOfMass, centroid, combine, distance, explode, bbox, tesselate, bboxPolygon, booleanPointInPolygon, nearestPoint, nearestPointOnLine, nearestPointToLine, planepoint, tin, bearing, destination, kinks, pointOnFeature, area$1 as area, along, length, lineSlice, lineSliceAlong, pointGrid, truncate, flatten, lineIntersect, lineChunk, unkinkPolygon, greatCircle, lineSegment, lineSplit, lineArc, polygonToLine, lineToPolygon, bboxClip, lineOverlap, sector, rhumbBearing, rhumbDistance, rhumbDestination, polygonTangents, rewind, isobands, transformRotate, transformScale, transformTranslate, lineOffset, polygonize$1 as polygonize, booleanDisjoint, booleanContains, booleanCrosses, booleanClockwise, booleanOverlap, booleanPointOnLine, booleanEqual, booleanWithin, clone, cleanCoords, clustersDbscan, clustersKmeans, pointToLineDistance, booleanParallel, shortestPath, voronoi$1 as voronoi, ellipse, centerMean, centerMedian, standardDeviationalEllipse, difference, buffer$1 as buffer, union, intersect$2 as intersect, dissolve$1 as dissolve, hexGrid, mask, squareGrid, triangleGrid, interpolate$1 as interpolate, pointOnFeature as pointOnSurface, polygonToLine as polygonToLineString, lineToPolygon as lineStringToPolygon, booleanPointInPolygon as inside, pointsWithinPolygon as within, bezier, nearestPoint as nearest, nearestPointOnLine as pointOnLine, length as lineDistance, radiansToDegrees as radians2degrees, degreesToRadians as degrees2radians, lengthToDegrees as distanceToDegrees, lengthToRadians as distanceToRadians, radiansToLength as radiansToDistance, bearingToAzimuth as bearingToAngle, convertLength as convertDistance, toMercator, toWgs84, randomPosition, randomPoint, randomPolygon, randomLineString, getCluster, clusterEach, clusterReduce, createBins, applyFilter, propertiesContainsFilter, filterProperties, earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType, coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce };\n"],"names":["earthRadius","factors","feature","geometry","properties","options","isObject","bbox","id","validateBBox","validateId","feat","point","coordinates","isNumber","polygon","i","ring","j","lineString","multiLineString","multiPoint","radiansToLength","radians","units","factor","lengthToRadians","distance","lengthToDegrees","radiansToDegrees","degrees","degreesToRadians","num","input","coordEach","geojson","callback","excludeWrapCoord","k","l","geometry$$1","stopG","coords","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","type","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","coordReduce","initialValue","previousValue","currentCoord","geomEach","g","featureProperties","featureBBox","featureId","flattenEach","coordinate","geom","segmentEach","feature$$1","segmentIndex","previousCoords","featureIndexCoord","mutliPartIndexCoord","currentSegment","segmentReduce","started","BBox","coord","getCoord","obj","getCoords","containsNumber","getType","name","quickselect","partialSort","arr","left","right","compare","defaultCompare","n","m","z","s","sd","newLeft","newRight","t","swap","tmp","a","b","rbush_1","rbush","maxEntries","format","node","result","toBBox","intersects$1","nodesToSearch","len","child","childBBox","contains","data","tmpNode","item","createNode","equalsFn","path","indexes","parent","index","goingUp","findItem","compareNodeMinX","compareNodeMinY","items","height","N","M","calcBBox","N2","N1","right2","right3","multiSelect","level","targetNode","area","enlargement","minArea","minEnlargement","bboxArea","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","bbox1","bbox2","overlap","minOverlap","distBBox","intersectionArea","compareMinX","compareMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","compareArr","p","destNode","minX","minY","maxX","maxY","children","stack","mid","createCommonjsModule","fn","module","twoProduct_1","twoProduct","SPLITTER","x","c","abig","ahi","alo","d","bbig","bhi","blo","err1","err2","err3","y","robustSum","linearExpansionSum","scalarScalar","bv","av","br","ar","e","f","ne","nf","count","eptr","fptr","abs","ei","ea","fi","fa","q0","q1","_x","_bv","_av","_br","_ar","twoSum","fastTwoSum","robustScale","scaleLinearExpansion","scale","ts","q","pq","robustDiff","robustSubtract","scalarScalar$1","orientation_1","NUM_EXPAND","EPSILON","ERRBOUND3","ERRBOUND4","cofactor","r","matrix","sign","generateSum","expr","determinant","orientation","pos","neg","args","posExpr","negExpr","funcName","code","proc","orientation3Exact","orientation4Exact","CACHED","det","tol","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","bdxcdy","cdxbdy","cdxady","adxcdy","adxbdy","bdxady","permanent","slowOrient","generateOrientationProc","procArgs","monotoneConvexHull2d","monotoneConvexHull2D","orient$1","points","sorted","lower","upper","idx","ptr","nl","tinyqueue","TinyQueue","default_1$1","defaultCompare$1","top","current","halfLength","best","pointInPolygon","vs","inside","xi","yi","xj","yj","intersect","orient","concaveman_1","concaveman","default_1","concavity","lengthThreshold","hull","fastConvexHull","tree","queue","last","insertNode","segTree","updateBBox","sqConcavity","sqLenThreshold","sqLen","getSqDist","maxSqLen","findCandidate","concave","maxDist","compareDist","dist","sqSegDist","sqSegBoxDist","d0","d1","noIntersections","sqSegSegDist","d2","d3","d4","edges","intersects","p1","p2","q2","bottom","cull","filtered","indices","prev","dx","dy","x0","y0","x1","y1","x2","y2","x3","y3","ux","uy","vx","vy","wx","wy","D","sc","sN","tc","tN","sD","tD","cx","cy","cx2","cy2","convex","points$$1","convexHull","booleanPointInPolygon","ignoreBoundary","pt","polys","inBBox","insidePoly","inRing","inHole","isInside","onBoundary","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","bboxPolygon","west","south","east","north","lowLeft","topLeft","topRight","lowRight","envelope","bearing","start","end","final","calculateFinalBearing","lon1","lon2","bear","centroid","xSum","ySum","centerOfMass","centre","translation","sx","sy","sArea","pi","pj","neutralizedPoints","point$$1","areaFactor","earcut_1","earcut","default_1$2","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode$1","equals$1","removeNode","filterPoints","again","ear","pass","indexCurve","next","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","intersects$2","locallyInside","isValidDiagonal","splitPolygon","list","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","qx","mx","my","tanMin","tan","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","px","py","intersectsPolygon","middleInside","a2","Node","b2","an","bp","polygonArea","trianglesArea","sum","holeIndex","length","segment","lineclip","polygonclip","codeA","bitCode","part","codeB","lastCode","intersect$1","edge","prevInside","ab","crossProduct","v1","v2","add","sub","scalarMult","v","intersectSegments","cross","qmp","numerator","intersection","isParallel","lineOffset","lineOffsetFeature","line","segments","offsetDegrees","finalCoords","currentCoords","processSegment","seg2Coords","point1","point2","offset","L","out1x","out2x","out1y","out2y","orientationIndex","dx1","dy1","dx2","dy2","envelopeIsEqual","env1","env2","envX1","envY1","envX2","envY2","envelopeContains","self","env","coordinatesEqual","coord1","coord2","EdgeRing","prototypeAccessors","this$1","hiIndex","high","iPrev","iNext","disc","testEdgeRing","shellList","testEnvelope","minEnvelope","minShell","shell","tryEnvelope","testPoint","keys","exports","shim","key","is_arguments","supportsArgumentsClass","supported","unsupported","object","pSlice","deepEqual","actual","expected","opts","objEquiv","isUndefinedOrNull","value","isBuffer","ka","kb","DBSCAN_1","DBSCAN","dataset","epsilon","minPts","distanceFunction","pointId","neighbors","clusterId","pointId2","neighbors2","P","KMEANS_1","KMEANS","change","centroidId","mean","maxDim","maxId","closestCentroid","clusters","set","min","arg","diff","PriorityQueue_1","PriorityQueue","elements","priorities","sorting","ele","priority","indexToInsert","priority2","ele2","func","OPTICS_1","OPTICS","priorityQueue","reachabilityPlot","newReachableDistance","queueElements","coreDistCand","lib","RedBlackTree","RedBlackNode","after","grandpa","uncle","RedBlackFirst","RedBlackRotateLeft","RedBlackRotateRight","sibling","red","createEdge","v0","setEdgeEnd","cells","createBorderEdge","vertex","clipEdge","t0","t1","connectEdge","lx","ly","rx","ry","fx","fy","fm","fb","clipEdges","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","halfedges","array","clipCells","nCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","cover","dc","v00","v01","v11","v10","circlePool","firstCircle","Circle","attachCircle","arc","lArc","rArc","lSite","cSite","rSite","epsilon2","ha","hc","circle","before","circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","previous","disappearing","nArcs","iArc","addBeach","directrix","dxl","dxr","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","s0","e1","s1","radius","that","i0","i1","arrayLike","relativeStart","relativeEnd","val","NumberUtil","tolerance","IllegalArgumentException","Double","staticAccessors$1","Comparable","Clonable","Comparator","Serializable","Coordinate","staticAccessors","ordinateIndex","other","o","dz","DimensionalComparator","dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","compZ","CoordinateSequenceFactory","Location","staticAccessors$4","locationValue","hasInterface","MathUtil","staticAccessors$5","ln","v3","v4","max","x$1","min$1","max$1","v1$1","v2$1","v3$1","StringBuffer","str","Integer","Character","DD","dd","hi","lo","staticAccessors$7","insertDecimalPoint","magnitude","mag","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","continueExtractingDigits","remMag","y$1","yhi","ylo","ty","C","U","u","zhi","zlo","exp","fhi","flo","plus5","value$1","axdd","diffSq","H","h","S","H$1","h$1","T","S$1","s$1","e$1","f$1","tx","specialStr","sigDigits","numZeroes","zeroes","digits","expStr","trailingDigits","digitsWithDecimal","strlen","isNegative","signCh","numBeforeDec","ch","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","xApprox","CGAlgorithmsDD","staticAccessors$6","denom1","denom2","denom","numx1","numx2","numx","fracP","numy1","numy2","numy","fracQ","pa","pb","pc","detsum","detleft","detright","errbound","CoordinateSequence","staticAccessors$8","Exception","NotRepresentableException","Exception$$1","System","src","srcPos","dest","destPos","HCoordinate","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","pw","qy","qw","w","xInt","yInt","Envelope","staticAccessors$9","otherEnvelope","intMinX","intMinY","intMaxX","intMaxY","transX","transY","deltaX","deltaY","minq","maxq","minp","maxp","regExes","WKTParser","geometryFactory","GeometryFactory","wkt","matches","parse$1","extract$1","wktType","coordinate$1","point$1","multipoint$1","linestring$1","linearring$1","multilinestring$1","polygon$1","multipolygon$1","collection","components","lines","linestring","linearring","rings","holes","polygons","wktArray","WKTWriter","p0","RuntimeException","Error","message","AssertionFailedException","RuntimeException$$1","Assert","assertion","expectedValue","actualValue","LineIntersector","staticAccessors$10","intIndex","catBuf","p3","p4","dist0","dist1","precisionModel","inputLineIndex","ptIndex","pdx","pdy","RobustLineIntersector","LineIntersector$$1","intPt","env0","CGAlgorithms","n1","n2","n3","n4","normPt","x4","xabs","intPtDD","isIn","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","collinear","nearestPt","minDist","RobustDeterminant","RayCrossingCounter","minx","maxx","xIntSign","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","x0$1","sum$1","A","B","noIntersection","rNumb","sNum","pts","nPts","hiPt","isCCW","len2","minDistance","lineIntersector","GeometryComponentFilter","Geometry","factory","staticAccessors$11","g$1","other$1","comp","copy","SRID","userData","aElement","bElement","comparison","geometries","geometryChangedFilter","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","Collection","IndexOutOfBoundsException","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","element","oldElement","Iterator_","found","Iterator$$1","arrayList","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coll","isChanged","clone","coord$2","allowRepeated$1","allowRepeated$2","coord$3","allowRepeated$3","direction","i$2","i$3","coord$4","allowRepeated$4","size","coord$5","allowRepeated$5","inc","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","testPts","testPt","firstCoordinate","newCoordinates","coord1$1","coord2$1","coordinateComparator","coordList","nonNull","newCoord","srcStart","destStart","pts1","pts2","minCoord","npts","extractPts","iPts","forwardComp","isEqualRev","dir1","dir2","i2","comparePt","Map$1","SortedMap","Map","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","BLACK","RED","colorOf","parentOf","setColor","leftOf","rightOf","TreeMap","cmp","oldValue","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","Arrays","comparator","Dimension","staticAccessors$14","dimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","GeometryCollection","Geometry$$1","childCoordinates","otherCollection","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter","filter$1","filter$2","filter$3","MultiLineString","GeometryCollection$$1","nLines","revLines","BoundaryOp","lineStrings","bnRule","geom$1","bnRule$1","mLine","bdyPts","LineString$1","closedEndpointOnBoundary","it","entry","valence","Counter","bop","bop$1","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","os","ps","t$1","depth","stackTrace","lineNumberReader","separator","separatorlen","tokenList","tmpString","token","res","CoordinateSequences","minDim","cs1","cs2","cs1Size","cs2Size","fact","newseq","cs","isClosed","LineString","otherLineString","revLine","line$1","ls","Puntal","Point","Polygonal","Polygon","shellCoordinates","prevX","prevY","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","uniqueCoordinates","minCoordinate","poly","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","otherHole","MultiPoint","LinearRing","LineString$$1","rev","MultiPolygon","allRings","allRingsArray","GeometryEditor","staticAccessors$16","isUserDataCopied","operation","collectionForType","newPolygon","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","HashMap","MapInterface","PrecisionModel","Type","modelType","pm","staticAccessors$19","otherPrecisionModel","otherSigDigits","description","floatSingleVal","maxSigDigits","pm1","pm2","staticAccessors$1$1","staticAccessors$2","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","geom0","isCollection","coordinates$1","shell$1","editor","ptSeq","multiPolygons","multiPolygonArray","geometryArray","multiLineStrings","multiLineStringArray","lineStringArray","multiPoints","multiPointArray","linearRings","linearRingArray","pointArray","polygonArray","exemplar","Position","staticAccessors$20","position","EmptyStackException","Stack","RightmostEdgeFinder","de","side","pPrev","pNext","usePrev","star","dirEdgeList","rightmostSide","TopologyException","msg","LinkedList","BufferSubgraph","startEdge","de$1","outsideDepth","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","dirEdge","nodeStack","symNode","TopologyLocation","location","on","gl","on$1","locValue","newLoc","temp","posIndex","locIndex","locValue$1","le","loc","Label","onLoc","lbl","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","location$1","label","lineLabel","EdgeRing$1","isFirstEdge","degree","isForward","edgePts","startIndex","startIndex$1","deLabel","deLabel$1","holeLR","MinimalEdgeRing","EdgeRing$$1","er","MaximalEdgeRing","minEdgeRings","minEr","GraphComponent","isVisited","isInResult","isCovered","im","Node$2","GraphComponent$$1","out","label2","eltIndex","nLoc","argIndex","onLocation","thisLoc","NodeMap","nodeFact","node$1","bdyNodes","Quadrant","staticAccessors$21","quad","quad1","quad2","halfPlane","EdgeEnd","edge$1","edge$2","p0$1","label$1","angle","className","lastDotPos","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","depthVal","isInteriorAreaEdge","nextMin","minEdgeRing","isLine","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","directionFactor","oppositePos","delta","oppositeDepth","currLocation","nextLocation","NodeFactory","PlanarGraph","nodeit","ep0","ep1","eCoord","ee","edgesToAdd","de1","de2","nodes","PolygonBuilder","edgeRings","freeHoleList","resultPolyList","maxEdgeRings","dirEdges","testEr","testRing","testEnv","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","ItemBoundable","bounds","minItem","ItemVisitor","SpatialIndex","itemEnv","AbstractNode","staticAccessors$22","childBoundable","Collections","alen","BoundablePair","boundable1","boundable2","itemDistance","priQ","isComp1","isComp2","nd","bndComposite","bndOther","AbstractSTRtree","nodeCapacity","nodeCapacity$1","staticAccessors$23","childToRemove","valuesTree","valuesTreeForNode","valuesTreeForChild","boundables","level$1","boundables$1","boundable","searchBounds","searchBounds$1","visitor","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","item$1","childToPrune","boundablesOfALevel","parentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","IntersectsOp","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","verticalSlices","STRtreeNode","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","itemDist","initBndPair","itemDist$1","bp$1","initBndPair$1","maxDistance","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","octant","xSign","ySign","compareSign0","compareSign1","SegmentNode","segString","segmentOctant","maxSegmentIndex","SegmentNodeList","eiPrev","collapsedVertexIndexes","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","edgeList","newEdge","collapsedVertexIndex","numVerticesBetween","isCollapsed","maxSegIndex","ipt","NodedSegmentString","eiNew","splitEdges","split0","pt0","splitn","splitnPts","ptn","Octant","dx$1","dy$1","SegmentString","NodableSegmentString","intPt$1","li","segmentIndex$1","normalizedSegmentIndex","nextSegIndex","nextPt","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","ss","LineSegment","staticAccessors$24","seg","orient0","orient1","geomFactory","pf0","pf1","newp0","newp1","closestPt","close00","close01","close10","close11","comp0","segmentLengthFraction","offsetDistance","segx","segy","offsetx","offsety","inputPt","segFrac","bits0","hash0","bits1","hash1","MonotoneChainOverlapAction","mc1","start1","mc2","start2","MonotoneChain","context","start0","end0","mcs","mc","mco","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","startIndexList","safeStart","chainQuad","pts$1","mcList","Noder","SinglePassNoder","segInt","MCIndexNoder","SinglePassNoder$$1","si","segStr","segChains","inputSegStrings","overlapAction","SegmentOverlapAction","queryChain","overlapChains","testChain","MonotoneChainOverlapAction$$1","ss1","ss2","BufferParameters","quadrantSegments","quadrantSegments$1","endCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","staticAccessors$25","quadSegs","simplifyFactor","isSingleSided","alpha","BufferInputLineSimplifier","inputLine","staticAccessors$26","distanceTol","midIndex","lastIndex","isMiddleVertexDeleted","isAngleToSimplify","isConcave","simp","OffsetSegmentString","staticAccessors$28","bufPt","lastPt","ptDist","startPt","minimimVertexDistance","Angle","staticAccessors$29","dx0","dy0","dotprod","anglePrev","angleNext","tip1","tip2","a1","ang1","ang2","delAngle","angleDegrees","crossproduct","angDel","OffsetSegmentGenerator","bufParams","staticAccessors$27","addStartPoint","outsideTurn","offsetL","offsetR","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","offset1","isMitreWithinLimit","mitreRatio","startAngle","endAngle","s2","basePt","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","sideSign","totalAngle","nSegs","initAngle","currAngleInc","currAngle","numInt","OffsetCurveBuilder","inputPts","isRightSide","posDistance","segGen","curvePts","distTol","simp2","simp1","lineCoord","bufDistance","SubgraphDepthLocater","subgraphs","staticAccessors$30","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","stabbedSegments$1","ds","DepthSegment","stabbingRayLeftPt$2","stabbedSegments$2","orientIndex","seg0","seg1","compare0","Triangle$1","m00","m01","m10","m11","lenAB","lenBC","lenCA","maxLen","ccx","ccy","l1","l2","len0","frac","splitPt","uz","vz","crossx","crossy","crossz","absSq","area3D","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","inputGeom","curveBuilder","curve","offsetSide","shellCoord","holeCoord","triangleCoord","bufferDistance","tri","inCentre","distToCentre","cwLeftLoc","cwRightLoc","ringCoord","envMinDimension","PointOnGeometryLocator","GeometryCollectionIterator","SimplePointInAreaLocator","geomi","g2","EdgeEndStar","iNextCW","startLoc","currLoc","it$1","geomGraph","lastEdgeIndex","startLabel","eSearch","hasDimensionalCollapseEdge","geomi$1","DirectedEdgeStar","EdgeEndStar$$1","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","lastDepth","endIndex","startDepth$1","currDepth","nextDe","degree$1","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","oca","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","edgeColl","matchEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","EdgeIntersection","EdgeIntersectionList","Edge$1","MonotoneChainIndexer","MonotoneChainEdge","mcb","chainIndex","chainIndex0","mce","chainIndex1","mce$1","Depth","staticAccessors$31","depthValue","minDepth","newValue","Edge","newPts","newe","isIsolated","isEqualForward","isEqualReverse","iRev","BufferBuilder","existingEdge","existingLabel","labelToMerge","mergeDelta","existingDelta","newDelta","subgraphList","polyBuilder","processedGraphs","subgraph","locater","emptyGeom","noder","curveSetBuilder","bufferSegStrList","resultGeom","nodedSegStrings","oldLabel","lLoc","rLoc","ScaledNoder","scaleFactor","noder$1","scaleFactor$1","offsetX","offsetY","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","NodingValidator","staticAccessors$33","ss$1","ss0","ss0$1","ss1$1","pts0","HotPixel","staticAccessors$34","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","pScaled","safeTolerance","intersectsLeft","intersectsBottom","segIndex","MonotoneChainSelectAction","MCIndexPointSnapper","staticAccessors$35","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","HotPixelSnapAction","MonotoneChainSelectAction$$1","InteriorIntersectionFinderAdder","MCIndexSnapRounder","inputSegmentStrings","resultSegStrings","nv","intersections","intFinderAdder","edge0","isNodeAdded","snapPts","snapPt","BufferOp","staticAccessors$32","fixedPM","bufBuilder","precDigits","precisionDigits","sizeBasedScaleFactor","argPM","gBuf","geomBuf","distance$1","bufOp","geomBuf$1","g$2","distance$2","params","bufOp$1","geomBuf$2","g$3","distance$3","bufOp$2","geomBuf$3","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","PointPairDistance","DistanceToPointFinder","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","staticAccessors$36","distFilter","MaxMidpointDistanceFilter","MaxPointDistanceFilter","bufferCurve","midPt","PolygonExtracter","comps","LinearComponentExtracter","lines$1","isForcedToLineString","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","boundaryRule","shellLoc","holeLoc","p$2","ptCoord","ml","mpoly","GeometryLocation","component","component$1","staticAccessors$38","PointExtracter","ConnectedElementLocationFilter","locations","DistanceOp","g0","g1","g0$1","g1$1","terminateDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","locGeom","lines0","lines1","flip","nearestPts","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","pt1","distOp","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","staticAccessors$39","densifyFrac","discreteGeom","MaxPointDistanceFilter$1","fracFilter","MaxDensifiedByFractionDistanceFilter","fraction","delx","dely","BufferDistanceValidator","staticAccessors$37","bufCurve","haus","distDelta","inputCurve","lineExtracter","BufferResultValidator","staticAccessors$40","padding","expectedEnv","bufEnv","distValid","inputArea","resultArea","checkName","validator","BasicSegmentString","InteriorIntersectionFinder","isCheckEndSegmentsOnly","findAllIntersections","keepIntersections","isEndSegPresent","finder","FastNodingValidator","intSegs","EdgeNodingValidator","GeometryCollectionMapper","mapOp","mapped","op","mapper","LineBuilder","ptLocator","opCode","targetIndex","OverlayOp","edgesList","PointBuilder","GeometryTransformer","isAllValidLinearRings","transGeomList","transformGeom","seqSize","LineStringSnapper","srcLine","snapTolerance","srcPts","snapTolerance$1","srcCoords","srcPt","snapVert","distinctPtCount","snapIndex","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","staticAccessors$41","snapGeom","snapTrans","SnapTransformer","cleanResult","snappedGeom","ringPts","minSegLen","snapTol","ptSet","segLen","snapper0","snapper1","fixedSnapTol","minDimension","GeometryTransformer$$1","isSelfSnap","snapper","CommonBits","numBits","numSignExp","bits","numStr","padStr","bitStr","mask","nBits","invMask","zeroed","num1","num2","CommonBitsRemover","CommonCoordinateFilter","staticAccessors$42","trans","Translater","invCoord","xp","yp","SnapOverlayOp","remGeom","prepGeom","SnapIfNeededOverlayOp","isSuccess","savedException","isValid","MonotoneChain$2","SweepLineEvent","insertEvent","staticAccessors$43","deleteEventIndex","pe","ev","EdgeSetIntersector","SegmentIntersector$2","includeProper","recordIsolated","isDoneWhenProperInt","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","edges0","edges1","si$1","si$2","testAllSegments","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","staticAccessors$45","queryMin","queryMax","NodeComparator","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","SortedPackedIntervalRTree","ArrayListVisitor","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","rcc","SegmentVisitor","GeometryGraph","PlanarGraph$$1","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","isRings","computeAllSegments","edgelist","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","g0$2","GeometryMapper","op$1","mapped$1","gr","resultPointList","resultLineList","opcode","newEdges","overlayOpCode","baseSplitEdges","lineBuilder","pointBuilder","graphNode","ni","geom1","gov","geomOv","dim0","dim1","resultDimension","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","boundaryDistanceTolerance","extracter","PolygonalLineworkExtracter","linework","OffsetPointGenerator","offsetPts","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","staticAccessors$46","overlayOp","expectedInterior","overlayOp$1","ptGen","resultInInterior","GeometryCombiner","elems","elemGeom","combiner","combiner$1","combiner$2","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","staticAccessors$47","geomTree","disjointGeoms","intersectingGeoms","elem","g0Env","g1Env","combo","commonEnv","itemTree","unionAll","union","common","disjointPolys","g0Int","g1Int","overallUnion","gColl","factory$1","gColl$1","unionAll$1","UnionOp","adder","Adder","add$1","tau","rotationIdentity","lambda","phi","ascending","bisector","ascendingComparator","TransformStream"],"mappings":"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","x_google_ignoreList":[0]}