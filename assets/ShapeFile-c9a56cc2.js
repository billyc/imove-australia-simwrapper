import{h as bt,b as lt,r as I,g as $,e as F,R as Z,M as Ct,d as U,m as vt,C as Q,n as B,D as tt,S as Dt,j as wt}from"./index-2c5e1d98.js";import{r as Ft}from"./index-9e6f44a3.js";import{l as Lt,C as et}from"./Coords-23d23a7c.js";import{r as St}from"./index-e24927de.js";import{c as st}from"./turf.es-748c95cf.js";import{y as it}from"./index-8048e8dc.js";import{D as $t,S as xt}from"./set-rtl-text-plugin-b2cb8a00.js";import{O as kt}from"./LineOffsetLayer-92ce6f3a.js";import{P as Nt}from"./PathOffsetLayer-3176abbd.js";import{G as Mt,D as jt}from"./DrawingTool-1c8c329c.js";import{r as at}from"./cubehelix-658aafe4.js";import{D as zt}from"./data-filter-bd42e0a9.js";import{C as x}from"./ColorsAndWidths-c85c3e08.js";import{V as It}from"./VizConfigurator-adb2b0c6.js";import{Z as Et}from"./ZoomButtons-ecf6639c.js";import{H as _t}from"./HTTPFileSystem-f986ffa8.js";import{D as Tt,c as Ot}from"./DashboardDataManager-fec95020.js";import{a as Pt}from"./util-ddcf947a.js";import{L as Jt}from"./LegendStore-3aadd543.js";import{g as Vt}from"./group-f6e6d4c5.js";import{z as At}from"./zip-96e4f4e1.js";import{s as Wt}from"./sum-2c3bc3a6.js";import"./layer-4078ee04.js";import"./extends-98964cd2.js";import"./line-layer-0fe1d9f9.js";import"./path-layer-a3827a85.js";import"./text-layer-059aaf64.js";import"./layer-extension-eb5cba6c.js";import"./rainbow-b588906e.js";import"./threshold-6ccfe732.js";import"./index-f6506551.js";import"./DataFetcher.worker-c87933e8.js";import"./index-afc11814.js";import"./LegendBox-5cc74c64.js";import"./RoadNetworkLoader.worker-48aaa0eb.js";import"./fxp-26b9b10f.js";import"./min-7292b72b.js";const W=bt(Lt);var H=W.hasOwnProperty("default")?W.default:W;function Rt(e){return e.length>=2&&typeof e[0]=="number"&&typeof e[1]=="number"}function E(e,t){return Rt(e)?t(e):e.map(function(i){return E(i,t)})}function Ut(e){if(e==null||typeof e!="object")return e;var t=e.constructor();for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}function _(e,t,i){if(i==null)return i;var s=Ut(i),a=_.bind(this,e,t);switch(i.type){case"Feature":s.geometry=a(i.geometry);break;case"FeatureCollection":s.features=s.features.map(a);break;case"GeometryCollection":s.geometries=s.geometries.map(a);break;default:e(s);break}return t&&t(s),s}function dt(e,t){var i=e.crs,s;if(i===void 0)throw new Error('Unable to detect CRS, GeoJSON has no "crs" property.');if(i.type==="name"?s=t[i.properties.name]:i.type==="EPSG"&&(s=t["EPSG:"+i.properties.code]),!s)throw new Error("CRS defined in crs section could not be identified: "+JSON.stringify(i));return s}function ot(e,t){return typeof e=="string"||e instanceof String?t[e]||H.Proj(e):e}function Bt(e){var t=[Number.MAX_VALUE,Number.MAX_VALUE],i=[-Number.MAX_VALUE,-Number.MAX_VALUE];return _(function(s){E(s.coordinates,function(a){t[0]=Math.min(t[0],a[0]),t[1]=Math.min(t[1],a[1]),i[0]=Math.max(i[0],a[0]),i[1]=Math.max(i[1],a[1])})},null,e),[t[0],t[1],i[0],i[1]]}function nt(e,t,i,s){s=s||{},t?t=ot(t,s):t=dt(e,s),i=ot(i,s);var a=H(t,i).forward.bind(a);function o(l){var c=a(l);return l.length===3&&l[2]!==void 0&&c[2]===void 0&&(c[2]=l[2]),c}var n=function(l){l.crs&&delete l.crs,l.coordinates=E(l.coordinates,o)},r=function(l){l.bbox&&(l.bbox=Bt(l))};return _(n,r,e)}var Ht={detectCrs:dt,reproject:nt,reverse:function(e){return _(function(t){t.coordinates=E(t.coordinates,function(i){return[i[1],i[0]]})},null,e)},toWgs84:function(e,t,i){return nt(e,t,H.WGS84,i)}};const Gt=lt(Ht);function qt(e){return e>=55296&&e<=56319}function Kt(e){return e>=56320&&e<=57343}var Yt=function(t,i,s){if(typeof i!="string")throw new Error("Input must be string");for(var a=i.length,o=0,n,r,l=0;l<a;l+=1){if(n=i.charCodeAt(l),r=i[l],qt(n)&&Kt(i.charCodeAt(l+1))&&(l+=1,r+=i[l]),o+=t(r),o===s)return i.slice(0,l+1);if(o>s)return i.slice(0,l-r.length+1)}return i};function Xt(e){return e>=55296&&e<=56319}function Zt(e){return e>=56320&&e<=57343}var Qt=function(t){if(typeof t!="string")throw new Error("Input must be string");for(var i=t.length,s=0,a=null,o=null,n=0;n<i;n++)a=t.charCodeAt(n),Zt(a)?o!=null&&Xt(o)?s+=1:s+=3:a<=127?s+=1:a>=128&&a<=2047?s+=2:a>=2048&&a<=65535&&(s+=3),o=a;return s},te=Yt,ee=Qt,se=te.bind(null,ee),ie=se,ae=/[\/\?<>\\:\*\|"]/g,oe=/[\x00-\x1f\x80-\x9f]/g,ne=/^\.+$/,re=/^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i,le=/[\. ]+$/;function rt(e,t){if(typeof e!="string")throw new Error("Input must be string");var i=e.replace(ae,t).replace(oe,t).replace(ne,t).replace(re,t).replace(le,t);return ie(i,255)}var de=function(e,t){var i=t&&t.replacement||"",s=rt(e,i);return i===""?s:rt(s,"")};const ce=lt(de);function ue(e,t){const{transitions:i,updateTriggers:s}=e.props,a={updateTriggers:{},transitions:i&&{getPosition:i.geometry}};for(const o in t){const n=t[o];let r=e.props[o];o.startsWith("get")&&(r=e.getSubLayerAccessor(r),a.updateTriggers[n]=s[o],i&&(a.transitions[n]=i[o])),a[n]=r}return a}const he={NONE:0,LEFT:1,RIGHT:2},R={type:Nt,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}};class G extends Mt{constructor(t){super(t)}_renderLineLayers(){const{extruded:t,stroked:i}=this.props,{layerProps:s}=this.state,a="polygons-stroke",o="linestrings",n=!t&&i&&this.shouldRenderSubLayer(a,s.polygonsOutline.data)&&this.getSubLayerClass(a,R.type),r=this.shouldRenderSubLayer(o,s.lines.data)&&this.getSubLayerClass(o,R.type);if(n||r){const l=ue(this,R.props);return[n&&new n(l,this.getSubLayerProps({id:a,updateTriggers:l.updateTriggers}),s.polygonsOutline),r&&new r(l,this.getSubLayerProps({id:o,updateTriggers:l.updateTriggers}),s.lines)]}return null}getShaders(){return{...super.getShaders(),inject:{"vs:#decl":`
            attribute float instanceOffset;
            varying float offset;
            `,"vs:#main-start":`
            offset = instanceOffset;
            `,"fs:#decl":`
            varying float offset;
            `,"fs:#main-start":`
            if (offset == 1.0 && vPathPosition.x < 0.0) {
                discard;
            }
            if (offset == 2.0 && vPathPosition.x > 0.0) {
                discard;
            }
            if (offset == 0.0 && abs(vPathPosition.x) > 0.5) {
                discard;
            }
        `}}}}G.layerName="GeojsonOffsetLayer";G.defaultProps={getOffset:{type:"accessor",value:he.RIGHT}};async function fe(e,t){const i=e.context.deck.canvas.toDataURL("image/png"),s=t==null?void 0:t.toDataURL("image/png"),a=[];s&&a.push(s),a.push(i);const o=await me({width:e.context.deck.canvas.width,height:e.context.deck.canvas.height,imageDataURLs:a});var n=document.createElement("a");n.setAttribute("href",o),n.setAttribute("download","screenshot.png"),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function me(e){return new Promise((t,i)=>{var s=document.createElement("canvas");s.width=e.width,s.height=e.height,Promise.all(e.imageDataURLs.map(a=>pe(s,a))).then(()=>{const a=s.getContext("2d"),o=s.width-152,n=s.height-8;a.beginPath(),a.rect(o-4,n-14,158,22),a.fillStyle="#ffffff44",a.fill(),a.font="11px Arial",a.fillStyle="#888",a.fillText("© Mapbox  © OpenStreetMap",o,n),t(s.toDataURL("image/png"))})})}function pe(e,t){return new Promise((i,s)=>{e||s(),t||s();var a=new Image;a.onload=function(){e.getContext("2d").drawImage(this,0,0),i(!0)},a.src=t})}const ge={savePNG:fe};function ye({viewId:e=0,fillColors:t="#59a14f",lineColors:i="#4e79a7",lineWidths:s=0,fillHeights:a=0,calculatedValues:o=null,calculatedValueLabel:n="",normalizedValues:r=null,opacity:l=1,pointRadii:c=4,screenshot:d=0,featureDataTable:u={},featureFilter:g=new Float32Array(0),tooltip:f=[],cbTooltip:m={}}){const[v,S]=I.useState([]),[y,D]=I.useState($.state.viewState),[M,ct]=I.useState(d),T=I.useRef();F[e]=()=>{D($.state.viewState)},F[1e3+e]=h=>{const p=h.map(b=>{const k={type:""+b.type,geometry:JSON.parse(JSON.stringify(b.geometry)),properties:JSON.parse(JSON.stringify((b==null?void 0:b.properties)||{}))};return"id"in b&&(k.id=""+b.id),k});S(p)};let ut=d>M,O;if(typeof t=="string"){const h=at(t);O=[h.r,h.g,h.b]}else O=(h,p)=>[t[p.index*3+0],t[p.index*3+1],t[p.index*3+2],255];const q=!!i;let j;if(typeof i=="string"){const h=at(i);j=[h.r,h.g,h.b],q||j.push(0)}else j=(h,p)=>v[p.index].properties._hide?[0,0,0,0]:[i[p.index*3+0],i[p.index*3+1],i[p.index*3+2],255];let P;typeof s=="number"?P=s:P=(h,p)=>s[p.index];let J;typeof c=="number"?J=c:J=(h,p)=>c[p.index];let V;typeof a=="number"?V=a:V=(h,p)=>a[p.index];function ht(h){h.latitude&&(h.center=[h.longitude,h.latitude],D(h),$.commit("setMapCamera",h))}function ft(){console.log("click!")}function z({value:h,precision:p}){if(typeof h!="number")return h;let b=""+h;return b.includes(".")&&b.indexOf(".")===b.lastIndexOf(".")&&/\d$/.test(b)?b.substring(0,1+4+b.lastIndexOf(".")):h}function mt({object:h,index:p}){var X;if(!m)return null;if(h===null||!((X=v[p])!=null&&X.properties))return m(null),null;const b=[];if(r){const w=n??"Normalized Value";let L=z({value:r[p],precision:4});b.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${w}</td><td><b>${L}</b></td></tr>`)}if(o){let w=n??"Value";const L=r?w.substring(0,w.lastIndexOf("/")):w;let N=z({value:o[p],precision:4});n.startsWith("%")&&(N=`${N} %`),b.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${L}</td><td><b>${N}</b></td></tr>
         <tr><td>&nbsp;</td></tr>`)}let k="";const gt=Object.entries(v[p].properties);for(const[w,L]of gt){if(L===null)continue;let N=z({value:L,precision:4});k+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${w}</td><td><b>${N}</b></td></tr>`}k&&b.push(k);let Y=Object.keys(u);f&&f.length&&(Y=f.map(w=>w.substring(w.indexOf(".")+1)));let A="";if(Y.forEach(w=>{if(u[w]){let L=u[w].values[p];if(L==null)return;typeof L=="number"&&(L=z({value:L,precision:4})),A+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${w}</td><td><b>${L}</b></td></tr>`}}),A&&b.push(A),!b.length){m(null);return}const yt=`<table>${b.join("")}</table>`;return m(yt),null}const pt=new G({id:"geoJsonOffsetLayer",data:v,getLineWidth:P,getLineColor:j,getFillColor:O,getPointRadius:J,getElevation:V,autoHighlight:!0,extruded:!!a,highlightColor:[255,0,224],lineWidthUnits:"pixels",lineWidthScale:1,lineWidthMinPixels:typeof s=="number"?0:1,lineWidthMaxPixels:50,getOffset:kt.RIGHT,opacity:a?1:.8,pickable:!0,pointRadiusUnits:"pixels",pointRadiusMinPixels:2,stroked:q,useDevicePixels:ut,fp64:!1,updateTriggers:{getFillColor:t,getLineColor:i,getLineWidth:s,getPointRadius:c,getElevation:a,getFilterValue:g},transitions:{getFillColor:300,getLineColor:300,getLineWidth:300,getPointRadius:300},parameters:{depthTest:!!a,fp64:!1},glOptions:{preserveDrawingBuffer:!0,fp64:!1},extensions:[new zt({filterSize:1})],filterRange:[0,1],getFilterValue:(h,p)=>g[p.index]}),K=Z.createElement($t,{layers:[pt],viewState:y,controller:!0,pickingRadius:4,getTooltip:mt,onClick:ft,onViewStateChange:h=>ht(h.viewState),getCursor:({isDragging:h,isHovering:p})=>h?"grabbing":p?"pointer":"grab",onAfterRender:async()=>{var h;d>M&&(await ge.savePNG(K.props.layers[0],(h=T==null?void 0:T.current)==null?void 0:h.getMap()._canvas),ct(d))}},Z.createElement(xt,{mapStyle:$.getters.mapStyle,mapboxApiAccessToken:Ct}));return K}const be=U({name:"BackgroundMapOnTop",components:{},data:()=>({containerId:`c${Math.floor(1e12*Math.random())}`,globalState:$.state,isDarkMode:!1,isMapMoving:!1,mapId:`map-${Math.floor(1e12*Math.random())}`,mymap:{},resizer:null}),computed:{},methods:{setupResizer(){this.resizer=new ResizeObserver(()=>{this.mymap.resize()});const e=document.getElementById(this.containerId);this.resizer.observe(e)},handleMapMotion(){const e={longitude:this.mymap.getCenter().lng,latitude:this.mymap.getCenter().lat,bearing:this.mymap.getBearing(),zoom:this.mymap.getZoom(),pitch:this.mymap.getPitch()};this.$store.commit("setMapCamera",e),this.isMapMoving||(this.isMapMoving=!0)},async setupMap(){const e=$.state.mapStyles;try{this.mymap=new vt.Map({container:this.mapId,style:this.isDarkMode?e.transparentDark:e.transparentLight,logoPosition:"top-left"});const t={...this.globalState.viewState};this.mymap.jumpTo(t)}catch(t){console.error("HUH?"+t);return}this.mymap.on("load",this.mapIsReady),this.mymap.on("move",this.handleMapMotion);{let t=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-attrib mapboxgl-compact");for(const i of t)i.setAttribute("style","display: none");t=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-group");for(const i of t)i.setAttribute("style","display: none");t=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const i of t)i.setAttribute("style","display: none")}},async mapIsReady(){this.setupResizer()},viewMoved(e){if(!this.mymap||this.isMapMoving){this.isMapMoving=!1;return}const{bearing:t,longitude:i,latitude:s,zoom:a,pitch:o}=e;a&&(this.mymap.off("move",this.handleMapMotion),this.mymap.jumpTo({bearing:t,zoom:a,center:[i,s],pitch:o}),this.mymap.on("move",this.handleMapMotion))}},watch:{"$store.state.viewState"(e){this.viewMoved(e)},"$store.state.colorScheme"(){if(this.isDarkMode=this.$store.state.colorScheme===Q.DarkMode,!this.mymap)return;const e=$.state.mapStyles;this.mymap.setStyle(this.isDarkMode?e.transparentDark:e.transparentLight),this.mymap.on("style.load",()=>{})},"$store.state.resizeEvents"(){this.mymap&&this.mymap.resize()}},async mounted(){this.isDarkMode=this.$store.state.colorScheme===Q.DarkMode,this.setupMap()}});var Ce=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"mymaplibre-map",attrs:{id:t.containerId}},[i("div",{staticClass:"mymap",attrs:{id:t.mapId}})])},ve=[];var De=B(be,Ce,ve,!1,null,"87b9eb46",null,null);const we=De.exports,Fe={messages:{en:{},de:{}}},Le=["id","ID","TAZ","AB"],Se=U({name:"ModalJoinColumnPicker",i18n:Fe,props:{data1:{type:Object,required:!0}},data(){return{selected1:0}},computed:{columns(){return[...this.data1.columns].sort()}},methods:{clickedJoin(){this.$emit("join",this.columns[this.selected1])},clickedCancel(){this.$emit("join","")}},mounted(){for(const e of Le){const t=this.columns.indexOf(e);if(t>-1){this.selected1=t;break}}}});var $e=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"join-picker"},[i("div",{staticClass:"picker-panel"},[t._m(0),i("p",{staticClass:"subheader"},[t._v("Which property contains the unique ID for each feature?")]),i("div",{staticClass:"split-panel"},[i("div",{staticClass:"column"},[i("p",[i("b",[t._v(t._s(t.data1.title))])]),i("div",{staticClass:"options-box"},t._l(t.columns,function(s,a){return i("p",{key:"@"+a,class:{selected:a===t.selected1},on:{click:function(o){t.selected1=a}}},[t._v(t._s(s))])}),0)])]),i("div",{staticClass:"buttons"},[i("div",{staticClass:"button-holder"},[i("button",{staticClass:"button",on:{click:t.clickedCancel}},[t._v("Cancel")]),i("button",{staticClass:"button is-primary",on:{click:t.clickedJoin}},[t._v("Select")])])])])])},xe=[function(){var e=this,t=e._self._c;return e._self._setupProxy,t("p",{staticClass:"header"},[t("b",[e._v("Select ID Column")])])}];var ke=B(Se,$e,xe,!1,null,"abb7a60d",null,null);const Ne=ke.exports,Me=U({name:"ShapeFilePlugin",components:{BackgroundMapOnTop:we,GeojsonLayer:ye,ModalIdColumnPicker:Ne,VizConfigurator:It,ZoomButtons:Et,DrawingTool:jt},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},datamanager:{type:Object},configFromDashboard:{type:Object},yamlConfig:String,thumbnail:Boolean},data(){return{boundaries:[],centroids:[],cbDatasetJoined:void 0,legendStore:new Jt,chosenNewFilterColumn:"",boundaryDataTable:{},dataFillColors:"#888",dataLineColors:"",dataLineWidths:1,dataPointRadii:5,dataFillHeights:0,dataCalculatedValues:null,dataNormalizedValues:null,constantLineWidth:null,dataCalculatedValueLabel:"",globalStore:$,globalState:$.state,layerId:Math.floor(1e12*Math.random()),activeColumn:"",useCircles:!1,sliderOpacity:100,maxValue:1e3,expColors:!1,isLoaded:!1,isAreaMode:!0,statusText:"Loading...",filters:{},needsInitialMapExtent:!0,datasetJoinColumn:"",featureJoinColumn:"",triggerScreenshot:0,datasetKeyToFilename:{},datasetJoinSelector:{},showJoiner:!1,myDataManager:this.datamanager||new Tt(this.root,this.subfolder),config:{},currentUIFilterDefinitions:{},currentUIFillColorDefinitions:{},currentUILineColorDefinitions:{},filterDefinitions:[],isEmbedded:!1,resizer:null,boundaryFilters:new Float32Array(0),thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",boundaryJoinLookups:{},datasetValuesColumn:"",tooltipHtml:"",vizDetails:{title:"",description:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",widthFactor:null,thumbnail:"",sum:!1,filters:[],shapes:"",zoom:null,center:null,pitch:null,bearing:null,display:{fill:{},fillHeight:{},color:{},width:{},lineColor:{},lineWidth:{},radius:{}},tooltip:[]},datasets:{}}},computed:{fileApi(){return new _t(this.fileSystem,$)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},configuratorSections(){return this.isAreaMode?["fill-color","fill-height","line-color","line-width","circle-radius","filters"]:["line-color","line-width","filters"]},datasetChoices(){return Object.keys(this.datasets)},generatedExportFilename(){let e=ce(this.yamlConfig??"");return e=e.replaceAll(" ","-"),e.startsWith("viz-map-")||(e="viz-map-"+e),!e.endsWith(".yml")&&!e.endsWith(".yaml")&&(e=e+".yaml"),e},urlThumbnail(){return this.thumbnailUrl}},watch:{"globalState.viewState"(){F[this.layerId]&&F[this.layerId]()},"globalState.colorScheme"(){this.$nextTick().then(e=>{const t=this.vizDetails.tooltip||[];this.vizDetails.tooltip=[...t]})}},methods:{takeScreenshot(){this.triggerScreenshot++},setEmbeddedMode(){"embed"in this.$route.query&&(console.log("EMBEDDED MODE"),this.isEmbedded=!0,this.$store.commit("setShowLeftBar",!1),this.$store.commit("setFullWidth",!0))},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const e=document.getElementById(`container-${this.layerId}`);this.resizer.observe(e)},moveLogo(){const e=document.getElementById(`container-${this.layerId}`),t=e==null?void 0:e.querySelector(".mapboxgl-ctrl-bottom-left");if(t){const i=e.clientWidth>640?"280px":"36px";t.style.right=i}},columnsInDataset(e){const t=this.datasets[e];return Object.keys(t)},filterShapesNow(){const e=this.filterDefinitions.filter(i=>i.dataset==="shapes");if(this.boundaryFilters=new Float32Array(this.boundaries.length),!e.length)return;const t=/^(<|>)/;for(const i of e){let s=i.value,a="";if(s=="@categorical")a="@categorical",s="";else if(t.test(s))s.startsWith("<=")?(a="<=",s=parseFloat(s.substring(2).trim())):s.startsWith(">=")?(a=">=",s=parseFloat(s.substring(2).trim())):s.startsWith("<")?(a="<",s=parseFloat(s.substring(1).trim())):s.startsWith(">")&&(a=">",s=parseFloat(s.substring(1).trim()));else if(typeof s=="string")if(s.indexOf(",")>-1)s=s.split(",").map(r=>r.trim()).map(r=>Number.isNaN(parseFloat(r))?r:parseFloat(r));else{const r=parseFloat(s);Number.isNaN(r)||(s=r)}Array.isArray(s)||(s=[s]);const o={conditional:a,invert:i.invert||!1,values:s},n=this.boundaryDataTable[i.column].values;for(let r=0;r<this.boundaries.length;r++)Ot(o,n[r])||(this.boundaryFilters[r]=-1)}},cbTooltip(e){this.tooltipHtml=e},filterShapesNowOriginal(){const e=this.filterDefinitions.filter(t=>t.dataset==="shapes");if(this.boundaryFilters=new Float32Array(this.boundaries.length),!!e.length)for(let t=0;t<this.boundaries.length;t++)for(const i of e)!this.checkIsFiltered(t,i)&&(this.boundaryFilters[t]=-1)},checkIsFiltered(e,t){const s=(t.dataset=="shapes"?this.boundaryDataTable:this.datasets[t.dataset])[t.column].values[e];let a=!1,o=t.value;return typeof o=="string"&&o.indexOf(",")>-1&&(o=o.split(",").map(n=>n.trim()).map(n=>isNaN(parseFloat(n))?n:parseFloat(n))),Array.isArray(o)?a=o.indexOf(s)>-1:a=o==s,t.invert&&(a=!a),a},parseFilterDefinitions(e){if(!e)return[];const t=[];let i;Array.isArray(e)?i=e.map(s=>Object.entries(s)[0]):i=Object.entries(e);for(const s of i){const[a,o]=s,[n,r]=a.split("."),l={dataset:n,value:o,column:r.endsWith("!")?r.substring(0,r.length-1):r,invert:r.endsWith("!")};t.push(l)}return t},honorQueryParameters(){this.$route.query.show=="dots"&&(this.useCircles=!0)},setupQueryFilters(){const e=Object.keys(this.datasets);if(e.length!==2)return;const t=e[1],i=this.datasets[t],s=Object.keys(i),a=Object.keys(this.$route.query).filter(o=>s.indexOf(o)>-1);for(const o of a){this.filters[o]||(console.log("CREATING category filter:",o),this.handleUserCreatedNewFilter(`${t}:${o}`));const n=""+this.$route.query[o];n&&(this.filters[o].active=n.split(",")),this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[t],column:o,value:this.filters[o].active}),this.activateFiltersForDataset(t)}},convertCommasToArray(e){return e===void 0?[]:(Array.isArray(e)||(e.indexOf(",")>-1?e=e.split(",").map(t=>t.trim()):e=[e.trim()]),e)},async getVizDetails(){const e={datasets:{},display:{fill:{}}};if(this.configFromDashboard)this.config=JSON.parse(JSON.stringify(this.configFromDashboard)),this.vizDetails=Object.assign({},e,this.configFromDashboard);else{const i=(this.yamlConfig??"").toLocaleLowerCase();if(i!=null&&i.endsWith("yaml")||i!=null&&i.endsWith("yml")){const s=await this.loadYamlConfig();this.config=s,this.vizDetails=Object.assign({},e,s)}if(/(\.geojson)(|\.gz)$/.test(i)||/\.shp$/.test(i)){const s=`${i.endsWith("shp")?"Shapefile":"GeoJSON"}: ${this.yamlConfig}`;this.vizDetails=Object.assign({},e,this.vizDetails,{title:s,description:this.subfolder,shapes:this.yamlConfig}),this.config=JSON.parse(JSON.stringify(this.vizDetails))}}const t=this.vizDetails.title||"Map";this.$emit("title",t)},buildOldJoinLookups(){const e={};for(const t of Object.keys(this.vizDetails.datasets||[])){const i=this.vizDetails.datasets[t].join;if(!i)continue;const s=i.indexOf(":");if(e[t]=i.substring(s+1),typeof this.vizDetails.shapes=="string"){const a=s>-1?i.substring(0,s):i;this.vizDetails.shapes={file:this.vizDetails.shapes,join:a}}}for(const t of Object.keys(this.vizDetails.display||[])){const s=this.vizDetails.display[t];(s.dataset||s.diff)&&!s.join&&(s.join=e[s.dataset])}},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const e=await this.fileApi.getFileBlob(this.subfolder+"/"+this.vizDetails.thumbnail),t=await Ft.arraybuffer(e),i=Pt(t);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(e){console.error(e)}},getFileSystem(e){const t=this.$store.state.svnProjects.filter(i=>i.slug===e);if(t.length===0)throw console.log("no such project"),Error;return t[0]},async loadYamlConfig(){const e=this.yamlConfig??"",t=e.indexOf("/")>-1?e:this.subfolder+"/"+e;try{const s=await this.fileApi.getFileText(t);return it.parse(s)}catch(s){const a=""+s;a.startsWith("YAMLSemantic")&&this.$emit("error",`${t}: ${a}`),console.log(`${t} not found, trying config folders`)}const{vizes:i}=await this.fileApi.findAllYamlConfigs(this.subfolder);if(i[e])try{const s=await this.fileApi.getFileText(i[e]);return it.parse(s)}catch{console.error(`Also failed to load ${i[e]}`)}this.$emit("error","Could not load YAML: "+t)},changeConfiguration(e){console.log("PROPS",e);try{e.fill&&(this.vizDetails.display.fill=e.fill,this.handleNewFillColor(e.fill)),e.fillHeight&&(this.vizDetails.display.fillHeight=e.fillHeight,this.handleNewFillHeight(e.fillHeight)),e.lineColor&&(this.vizDetails.display.lineColor=e.lineColor,this.handleNewLineColor(e.lineColor)),e.lineWidth&&(this.vizDetails.display.lineWidth=e.lineWidth,this.handleNewLineWidth(e.lineWidth),this.currentUILineColorDefinitions&&this.handleNewLineColor(this.currentUILineColorDefinitions)),e.radius&&(this.vizDetails.display.radius=e.radius,this.handleNewRadius(e.radius)),e.dataset&&this.handleNewDataset(e.dataset),e.filters&&this.handleNewFilters(e.filters)}catch(t){this.$emit("error",""+t)}},async handleNewDataset(e){const{key:t,dataTable:i,filename:s}=e,a=t,o=s||a;if(console.log("HANDLE NEW DATSET:",a,o),!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[a],dataTable:i}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[a]},this.processFiltersNow),this.vizDetails.datasets[a]={file:o},this.vizDetails=Object.assign({},this.vizDetails),this.datasets[a]=i,this.datasets=Object.assign({},this.datasets)},setupJoin(e){var c;const{dataTable:t,datasetId:i,dataJoinColumn:s}=e;if(!s||`@@${s}`in t)return;if(!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);if(!t[s])throw Error(`Dataset ${i} does not have column ${s}`);const a={type:tt.LOOKUP,values:[],name:`@@${s}`},o=t[s].values,n=this.getBoundaryOffsetLookup(this.featureJoinColumn),l=(this.vizDetails.tooltip||[]).filter(d=>d.substring(0,d.indexOf(".")).startsWith(i)).map(d=>({id:d,column:d.substring(1+d.indexOf("."))}));for(const d of l)t[d.column]||this.$emit("error",{type:Dt.WARNING,msg:`Tooltip references "${d.id}" but that column doesn't exist`,desc:"Check the tooltip spec and column names"});for(let d=0;d<o.length;d++){const u=n[o[d]];a.values[d]=u;const g=this.boundaries[u];for(const f of l){if(!t[f.column])continue;const m=((c=t[f.column])==null?void 0:c.values[d])&&"";g&&m&&(g.properties[f.id]=m)}}F[1e3+this.layerId]&&F[1e3+this.layerId](this.boundaries),t[`@@${s}`]=a,this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[i],dataTable:t}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[i]},this.processFiltersNow),this.vizDetails.datasets[i]={file:this.datasetKeyToFilename[i],join:this.featureJoinColumn===s?this.featureJoinColumn:`${this.featureJoinColumn}:${s}`},this.datasets[i]=t},getBoundaryOffsetLookup(e){if(this.boundaryJoinLookups[e])return this.boundaryJoinLookups[e];this.statusText="Joining datasets...",this.boundaryJoinLookups[e]={};const t=this.boundaryJoinLookups[e],i=this.boundaryDataTable[e].values;for(let s=0;s<this.boundaries.length;s++)t[i[s]]=s;return this.statusText="",t},removeAnyOldFilters(e){const t=new Set(Object.keys(this.currentUIFilterDefinitions).filter(s=>!s.startsWith("shapes.")));new Set(Object.keys(e).filter(s=>!s.startsWith("shapes."))).forEach(s=>t.delete(s));for(const s of t){console.log("REMOVING",s);const a=s.indexOf("."),o=s.slice(0,a),n=s.slice(a+1);if(this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[o],column:n,value:[]}),n in this.filters){const r=Object.assign({},this.$route.query);delete r[n],this.$router.replace({query:r}),delete this.filters[n]}}},handleNewFilters(e){this.removeAnyOldFilters(e),this.currentUIFilterDefinitions=e;const t=this.parseFilterDefinitions(e);this.filterDefinitions=t,this.filterShapesNow(),Object.keys(this.datasets).forEach((i,s)=>{s!==0&&this.activateFiltersForDataset(i)})},handleColorDiffMode(e,t){if(!t.diffDatasets)return;const i=t.columnName,s=t.join||"",a=t.diffDatasets[0]||"",o=this.datasets[a],n=t.diffDatasets[1]||"",r=this.datasets[n],l=!!t.relative;if(o&&r){this.setupJoin({datasetId:a,dataTable:o,dataJoinColumn:s}),this.setupJoin({datasetId:n,dataTable:r,dataJoinColumn:s});const c=o[`@@${s}`],d=r[`@@${s}`],u=o[i],g=r[i];if(!u)throw Error(`Dataset ${a} does not contain column "${i}"`);if(!g)throw Error(`Dataset ${n} does not contain column "${i}"`);let f,m;if(t.normalize){const[y,D]=t.normalize.split(":");if(!this.datasets[y]||!this.datasets[y][D])throw Error(`${y} does not contain column "${D}"`);this.dataCalculatedValueLabel+=`/ ${D}`,f=this.datasets[y][D],this.datasetChoices[0]!==y&&(this.setupJoin({datasetId:y,dataTable:this.datasets[y],dataJoinColumn:s}),m=this.datasets[y][`@@${s}`])}const{array:C,legend:v,calculatedValues:S}=x.getColorsForDataColumn({numFeatures:this.boundaries.length,data:u,data2:g,lookup:c,lookup2:d,normalize:f,normalLookup:m,options:t,filter:this.boundaryFilters,relative:l});if(!C)return;e==="fill"?this.dataFillColors=C:this.dataLineColors=C,this.dataCalculatedValues=S,this.dataCalculatedValueLabel=`${l?"% ":""}Diff: ${i}`,this.legendStore.setLegendSection({section:e==="fill"?"FillColor":"Line Color",column:u.name,values:v,diff:!0,relative:l,normalColumn:f?f.name:""})}},paintColorsWithFilter(e,t){const i=e==="fill"?this.currentUIFillColorDefinitions:this.currentUILineColorDefinitions,s=i.columnName,a=i.join==="@count"?t[`@@${s}`]:t[`@@${i.join}`];let o;if(i.normalize){const d=i.normalize.split(":");this.dataCalculatedValueLabel=s+"/"+d[1];const u=i.dataset;if(!this.datasets[d[0]]||!this.datasets[d[0]][d[1]])throw Error(`Dataset ${u} does not contain column "${s}"`);o=t[d[1]]}const n={numFeatures:this.boundaries.length,data:t[s],normalize:o,lookup:a,filter:this.boundaryFilters,options:i,join:i.join},{array:r,legend:l,calculatedValues:c}=x.getColorsForDataColumn(n);r&&(e==="fill"?this.dataFillColors=r:this.dataLineColors=r,this.dataCalculatedValues=c,this.legendStore.setLegendSection({section:e==="fill"?"FillColor":"Line Color",column:s,values:l}))},handleNewFillColor(e){const t="columnName"in e,i=!t;if(t){const o=e==null?void 0:e.dataset,{filteredRows:n}=this.myDataManager.getFilteredDataset({dataset:`${o}`||""});if(n&&n.length){this.currentUIFillColorDefinitions=e,this.processFiltersNow(o);return}}if(i){this.paintColorsWithFilter("fill",e);return}const s=e;this.currentUIFillColorDefinitions=s;const a=s.columnName;if(s.diffDatasets){this.handleColorDiffMode("fill",s);return}else if(a){const o=s.dataset||"",n=this.datasets[o];if(this.dataCalculatedValueLabel="",!n){console.warn("color: no selected dataset yet, maybe still loading");return}const r=n[a];if(!r)throw Error(`Dataset ${o} does not contain column "${a}"`);this.dataCalculatedValueLabel=a??"";let l="";s.join&&s.join!=="@count"?l=s.join:s.join==="@count"?l=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:l});const c=n[`@@${l}`];let d,u;if(s.normalize){const[v,S]=s.normalize.split(":");if(!this.datasets[v]||!this.datasets[v][S])throw Error(`${v} does not contain column "${S}"`);this.dataCalculatedValueLabel+=`/ ${S}`,d=this.datasets[v][S],this.datasetChoices[0]!==v&&(this.setupJoin({datasetId:v,dataTable:this.datasets[v],dataJoinColumn:l}),u=this.datasets[v][`@@${l}`])}const{array:g,legend:f,calculatedValues:m,normalizedValues:C}=x.getColorsForDataColumn({numFeatures:this.boundaries.length,data:r,normalize:d,normalLookup:u,lookup:c,filter:this.boundaryFilters,options:s,join:s.join});g&&(this.dataFillColors=g,this.dataCalculatedValues=m,this.dataNormalizedValues=C||null,this.legendStore.setLegendSection({section:"FillColor",column:r.name,values:f,normalColumn:d?d.name:""}))}else{this.dataFillColors=s.fixedColors[0],this.dataCalculatedValueLabel="",this.legendStore.clear("FillColor");return}},handleNewLineColor(e){if(e===!1){this.dataLineColors="",this.legendStore.clear("Line Color");return}const t="columnName"in e,i=!t;if(t){const o=e==null?void 0:e.dataset,{filteredRows:n}=this.myDataManager.getFilteredDataset({dataset:`${o}`||""});if(n&&n.length){this.currentUILineColorDefinitions=e,this.processFiltersNow(o);return}}if(i){this.paintColorsWithFilter("lineColor",e);return}const s=e;this.currentUILineColorDefinitions=s;const a=s.columnName;if(s.diffDatasets){this.handleColorDiffMode("lineColor",s);return}else if(a){const o=s.dataset||"",n=this.datasets[o];if(this.dataCalculatedValueLabel="",!n){console.warn("color: no selected dataset yet, maybe still loading");return}const r=n[a];if(!r)throw Error(`Dataset ${o} does not contain column "${a}"`);this.dataCalculatedValueLabel=a??"";let l="";s.join&&s.join!=="@count"?l=s.join:s.join==="@count"?l=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:l});const c=n[`@@${l}`];let d,u;if(s.normalize){const[y,D]=s.normalize.split(":");if(!this.datasets[y]||!this.datasets[y][D])throw Error(`${y} does not contain column "${D}"`);this.dataCalculatedValueLabel+=`/ ${D}`,d=this.datasets[y][D],this.datasetChoices[0]!==y&&(this.setupJoin({datasetId:y,dataTable:this.datasets[y],dataJoinColumn:l}),u=this.datasets[y][`@@${l}`])}const g=x.getColorsForDataColumn({numFeatures:this.boundaries.length,data:r,normalize:d,normalLookup:u,lookup:c,filter:this.boundaryFilters,options:s,join:s.join}),{array:f,legend:m,calculatedValues:C,normalizedValues:v,hasCategory:S}=g;if(!f)return;if(this.dataLineColors=f,this.dataCalculatedValues=C,this.dataNormalizedValues=v||null,S&&this.constantLineWidth!==null){const y=this.constantLineWidth,D=new Float32Array(this.boundaries.length).fill(1);Object.keys(S).forEach(M=>{D[M]=y}),this.dataLineWidths=D}this.legendStore.setLegendSection({section:"Line Color",column:r.name,values:m,normalColumn:d?d.name:""})}else{this.dataLineColors=s.fixedColors[0],this.dataCalculatedValueLabel="",this.legendStore.clear("Line Color");return}},handleNewLineWidth(e){const t=e.columnName||"";if(e.dataset&&/^@\d$/.test(e.dataset)){this.dataLineWidths=Number.parseInt(e.dataset.substring(1)),this.constantLineWidth=this.dataLineWidths,this.legendStore.clear("Line Width");return}else this.constantLineWidth=null;if(e.scaleFactor&&isNaN(e.scaleFactor)){this.dataLineWidths=1,this.legendStore.clear("Line Width");return}if(e.diffDatasets){const i=e.join||"",s=e.diffDatasets[0]||"",a=this.datasets[s],o=e.diffDatasets[1]||"",n=this.datasets[o];if(a&&n){this.setupJoin({datasetId:s,dataTable:a,dataJoinColumn:i}),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:i});const r=a[`@@${i}`],l=n[`@@${i}`],c=a[t],d=n[t];if(!c)throw Error(`Dataset ${s} does not contain column "${t}"`);if(!d)throw Error(`Dataset ${o} does not contain column "${t}"`);const{array:u,legend:g,calculatedValues:f}=x.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:c,data2:d,lookup:r,lookup2:l,options:e});this.dataLineWidths=u||0,this.dataCalculatedValues=f,this.dataCalculatedValueLabel="Diff: "+t,this.legendStore.setLegendSection({section:"Line Width",column:`${c.name} (Diff)`,values:g})}}else if(t){const i=e.dataset||"",s=this.datasets[i];if(s){const a=s[t];if(!a)throw Error(`Dataset ${i} does not contain column "${t}"`);let o="";e.join&&e.join!=="@count"?o=e.join:e.join==="@count"?o=t:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`],{array:r,legend:l,calculatedValues:c}=x.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:a,lookup:n,join:e.join,options:e});this.dataLineWidths=r||0,this.dataCalculatedValues=c,this.dataCalculatedValueLabel=t,l.length?this.legendStore.setLegendSection({section:"Line Width",column:a.name,values:l}):this.legendStore.clear("Line Width")}}else this.dataLineWidths=1,this.dataCalculatedValueLabel="",this.legendStore.clear("Line Width")},handleNewFillHeight(e){const t=e.columnName;if(t){const i=e.dataset||"",s=this.datasets[i];if(s){const a=s[t];if(!a)throw Error(`Dataset ${i} does not contain column "${t}"`);let o="";e.join&&e.join!=="@count"?o=e.join:e.join==="@count"?o=t:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`];let r;if(e.normalize){const u=e.normalize.split(":");if(!this.datasets[u[0]]||!this.datasets[u[0]][u[1]])throw Error(`Dataset ${i} does not contain column "${t}"`);r=this.datasets[u[0]][u[1]],this.dataCalculatedValueLabel=t+"/"+u[1]}const{heights:l,calculatedValues:c,normalizedValues:d}=x.getHeightsBasedOnNumericValues({length:this.boundaries.length,data:a,lookup:n,options:e,normalize:r,join:e.join});if(this.dataFillHeights=l,this.dataCalculatedValues=c,this.dataNormalizedValues=d||null,this.$store.state.viewState.pitch==0){const u=Object.assign({},this.$store.state.viewState,{pitch:30});this.$store.commit("setMapCamera",u)}}}else this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""},handleNewRadius(e){const t=e.columnName;if(t){const i=e.dataset||"",s=this.datasets[i];if(!s){console.warn("radius: no selected dataset yet, maybe still loading");return}if(s){const a=s[t];if(!a)throw Error(`Dataset ${i} does not contain column "${t}"`);let o="";e.join&&e.join!=="@count"?o=e.join:e.join==="@count"?o=t:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`],{radius:r,calculatedValues:l}=x.getRadiusForDataColumn({length:this.boundaries.length,data:a,lookup:n,join:o,options:e});this.dataPointRadii=r,this.dataCalculatedValues=l,this.dataCalculatedValueLabel=a.name}}else this.dataPointRadii=5;F[1e3+this.layerId]&&F[1e3+this.layerId](typeof this.dataPointRadii=="number"?this.boundaries:this.centroids)},async handleMapClick(e){try{const{x:t,y:i,data:s}=e.points[0],a=this.config.groupBy,o=t}catch(t){console.error(t)}},async figureOutFeatureIdColumn(){if(this.featureJoinColumn)return this.featureJoinColumn;if(typeof this.vizDetails.shapes!="string"&&this.vizDetails.shapes.join)return this.vizDetails.shapes.join;const e=this.datasets[Object.keys(this.datasets)[0]],t=Object.keys(e);if(t.length===1)return t[0];const i=await new Promise((s,a)=>{const o=new Set;this.boundaries[0].id&&o.add("id"),Object.keys(e).forEach(n=>o.add(n)),this.datasetJoinSelector={data1:{title:"Properties",columns:Array.from(o)}},this.showJoiner=!0,this.cbDatasetJoined=n=>{this.datasetJoinSelector={},this.showJoiner=!1,s(n)}});return i.length?i:"id"},async processFiltersNow(e){var s,a;console.log("> processFiltersNow",e);const{filteredRows:t}=this.myDataManager.getFilteredDataset({dataset:e||""}),i={};t&&(t.length>0?Object.keys(t[0]):[]).forEach(n=>{const r={name:n,values:[],type:tt.UNKNOWN};for(const l of t)r.values.push(l[n]);i[n]=r}),(s=this.currentUIFillColorDefinitions)!=null&&s.dataset&&this.handleNewFillColor(t?i:this.currentUIFillColorDefinitions),(a=this.currentUILineColorDefinitions)!=null&&a.dataset&&this.handleNewLineColor(t?i:this.currentUILineColorDefinitions)},async loadBoundaries(){const e=this.config.boundaries||this.config.shapes||this.config.geojson||this.config.network;if(!e)return;let t=e.file||e,i=[],s;try{this.statusText="Loading features...",t.startsWith("http")?s=(await fetch(t).then(async r=>await r.json())).features:t.toLocaleLowerCase().endsWith(".shp")?s=await this.loadShapefileFeatures(t):s=(await this.fileApi.getFileJson(`${this.subfolder}/${t}`)).features;let a=!0,o=!0,n=!1;s.forEach(r=>{const l=r.properties??{};"id"in r&&(l.id=r.id),i.push({...l}),r.properties={},(r.geometry.type=="Point"||r.geometry.type=="MultiPoint")&&(n=!0),a&&(r.geometry.type=="LineString"||r.geometry.type=="MultiLineString")&&(a=!1),o&&(r.geometry.type=="Polygon"||r.geometry.type=="MultiPolygon")&&(o=!1)}),this.moveLogo(),await this.setFeaturePropertiesAsDataSource(t,[...i],e),(!a||s.length<5e3)&&(this.dataLineColors="#4e79a7"),o&&(this.isAreaMode=!1),n&&(this.isAreaMode=!0),this.boundaries=s,!o||n?await this.generateCentroidsAndMapCenter():this.needsInitialMapExtent&&this.calculateAndMoveToCenter(),await this.$nextTick(),F[1e3+this.layerId]&&F[1e3+this.layerId](this.boundaries)}catch(a){const r=`${a.statusText||"Could not load"}: "${t}"`;throw this.statusText="",this.$emit("isLoaded"),Error(r)}if(!this.boundaries)throw Error('No "features" found in shapes file')},async setFeaturePropertiesAsDataSource(e,t,i){const s=await this.myDataManager.setFeatureProperties(e,t,i);this.boundaryDataTable=s;const a=e.substring(1+e.lastIndexOf("/"));this.datasets[a]=s,this.vizDetails.datasets[a]={file:a,join:this.datasetJoinColumn},this.config.datasets=Object.assign({},this.vizDetails.datasets)},async calculateAndMoveToCenter(){var a;let e=0,t=0,i=0;const s=this.boundaries.length;for(let o=0;o<s;o+=256){const n=st(this.boundaries[o]);(a=n==null?void 0:n.geometry)!=null&&a.coordinates&&(e+=n.geometry.coordinates[0],t+=n.geometry.coordinates[1],i+=1)}e/=i,t/=i,console.log("CENTER",e,t),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:e,latitude:t,center:[e,t],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async generateCentroidsAndMapCenter(){this.statusText="Calculating centroids...",await this.$nextTick();const e=this.config.shapes.join||"id";let t=0,i=0,s=0;for(const a of this.boundaries){let o={};try{o=st(a)}catch{console.warn("no coordinates:"),console.warn(a);continue}o.properties||(o.properties={}),a.properties[this.config.boundariesLabel]&&(o.properties.label=a.properties[this.config.boundariesLabel]),o.properties.id=a.properties[e],o.properties.id===void 0&&(o.properties.id=a[e]),this.centroids.push(o),o.geometry&&(t+=o.geometry.coordinates[0],i+=o.geometry.coordinates[1],s++)}t/=s,i/=s,console.log("CENTER",t,i),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:t,latitude:i,center:[t,i],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async loadShapefileFeatures(e){var l,c;this.statusText="Loading shapefile...",console.log("loading",e);const t=`${this.subfolder}/${e}`;let i={};try{const d=this.fileApi.getFileBlob(t),u=t.replace(".shp",".dbf").replace(".SHP",".DBF").replace(".Shp",".Dbf"),g=this.fileApi.getFileBlob(u);await Promise.all([d,g]);const f=await((l=await d)==null?void 0:l.arrayBuffer()),m=await((c=await g)==null?void 0:c.arrayBuffer());if(!f||!m)return[];this.statusText="Generating shapes...",i=await St(f,m),i.features=i.features.filter(C=>!!C.geometry)}catch(d){return console.error(d),this.$emit("error",""+d),[]}let s=wt;const a=t.replace(".shp",".prj").replace(".SHP",".PRJ").replace(".Shp",".Prj");try{s=await this.fileApi.getFileText(a)}catch{}const o=this.vizDetails.projection||et.guessProjection(s);console.log({guessCRS:o}),o&&(this.statusText="Projecting coordinates...",await this.$nextTick(),i=Gt.toWgs84(i,o,et.allEPSGs),this.statusText="");function n(d){return Array.isArray(d[0])?n(d[0]):[d[0],d[1]]}const r=n(i.features[0].geometry.coordinates);if(Math.abs(r[0])>180||Math.abs(r[1])>90){const d=`Coordinates not lon/lat. Try providing ${a.substring(1+a.lastIndexOf("/"))}`;return this.$emit("error",d),this.statusText=d,[]}{const d=[],u=[];for(let m=0;m<i.features.length;m+=128){const C=n(i.features[m].geometry.coordinates);d.push(C[0]),u.push(C[1])}const g=d.reduce((m,C)=>m+C)/d.length,f=u.reduce((m,C)=>m+C)/u.length;this.$store.commit("setMapCamera",{longitude:g,latitude:f,bearing:0,pitch:0,zoom:9,center:[g,f],initial:!0})}return this.needsInitialMapExtent=!1,i.features},async loadDatasets(){const e=Object.keys(this.vizDetails.datasets);for(const t of e)t in this.datasets||await this.loadDataset(t)},async loadDataset(e){try{if(!e)return;const t=typeof this.config.datasets[e]=="string"?this.config.datasets[e]:this.config.datasets[e].file;this.statusText=`Loading dataset ${t} ...`,await this.$nextTick();let i={dataset:t};typeof this.config.datasets[e]!="string"&&(i=Object.assign(i,this.config.datasets[e])),this.datasetKeyToFilename[e]=t;const s=await this.myDataManager.getDataset(i),a=typeof this.config.datasets[e]=="string"?Object.keys(s.allRows)[0]:this.config.datasets[e].join,o=(a==null?void 0:a.split(":"))||[];o.length==2&&(this.featureJoinColumn=o[0]),o.length==1&&o.push(o[0]),this.datasets[e]=s.allRows,await this.$nextTick(),this.myDataManager.addFilterListener({dataset:t},this.processFiltersNow),this.activateFiltersForDataset(e)}catch(t){const i=""+t;console.error(i),this.$emit("error",i)}return[]},activateFiltersForDataset(e){const t=this.filterDefinitions.filter(i=>i.dataset===e);for(const i of t)console.log(3,JSON.stringify(i)),i.value=="@categorical"?this.filters[i.column]?i.value=this.filters[i.column].active:this.handleUserCreatedNewFilter(`${e}:${i.column}`):this.myDataManager.setFilter(Object.assign(i,{dataset:this.datasetKeyToFilename[e]}))},filterLabel(e){let t=this.filters[e].active.join(",").substring(0,50)||"Select...";return t.length===50&&(t+="..."),t},async handleUserSelectedNewMetric(){await this.$nextTick(),console.log("METRIC",this.datasetValuesColumn);const e=Object.assign({},this.$route.query);e.display=this.datasetValuesColumn,this.$router.replace({query:e}),this.maxValue=this.boundaryDataTable[this.datasetValuesColumn].max||0,console.log("MAXVALUE",this.maxValue),this.vizDetails.display.fill.columnName=this.datasetValuesColumn,this.vizDetails=Object.assign({},this.vizDetails),this.processFiltersNow()},handleUserSelectedNewFilters(e){const t=this.filters[e],i=t.active;this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[t.dataset],column:e,invert:!1,value:i});const s=Object.assign({},this.$route.query);for(const a of Object.entries(this.filters))a[1].active.length?s[a[0]]=a[1].active.join(","):delete s[a[0]];JSON.stringify(this.$route.query)!==JSON.stringify(s)&&this.$router.replace({query:s})},showCircles(e){this.useCircles=e;const t=Object.assign({},this.$route.query);e?t.show="dots":delete t.show,this.$router.replace({query:t})},handleUserCreatedNewFilter(e){const t=e||this.chosenNewFilterColumn,[i,s]=t.split(":");let a=[...new Set(this.datasets[i][s].values)];if(this.chosenNewFilterColumn="",a.length>48){alert(`Column ${s} has too many values to be used as a filter.`);return}this.filters[s]={column:s,label:s,options:a,active:[],dataset:i}},updateChart(){var l;if(!this.config.display||!this.config.datasets)return;let e="id";(l=this.config.shapes)!=null&&l.join&&(e=this.config.shapes.join);const t=this.datasetJoinColumn;if(!t){console.error(`No join column ${t}`);return}let i=this.config.display.fill.values;if(!i)throw this.statusText="",Error("Need to specify column for data values");this.$route.query.display&&(this.config.display.fill.columnName=this.$route.query.display);let s=this.config.display.fill.columnName||i[0];this.datasetValuesColumn=s;const a=this.boundaryDataTable[t].values,o=this.boundaryDataTable[s].values,n=Vt(At(a,o),c=>c[0]);let r=0;for(let c=0;c<this.boundaries.length;c++){const d=this.boundaries[c],u=this.centroids[c];let g=d[e];g==null&&(g=d.properties[e]),g===void 0&&this.$emit("error",`Shape is missing property "${e}"`);const f=n.get(g);f?(d.properties.value=Wt(f.map(m=>m[1])),r=Math.max(r,d.properties.value)):d.properties.value="N/A",u&&(u.properties.value=d.properties.value)}this.maxValue=this.boundaryDataTable[s].max||0,this.centroids=this.centroids.sort((c,d)=>c.properties.value>d.properties.value?-1:1),this.activeColumn="value"},clearData(){this.boundaries=[],this.centroids=[],this.boundaryDataTable={},this.boundaryFilters=new Float32Array(0),this.datasets={},this.dataFillColors="#888",this.dataLineColors="",this.dataLineWidths=1,this.dataPointRadii=5,this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""}},async mounted(){var e,t,i,s;try{if(this.setEmbeddedMode(),this.clearData(),await this.getVizDetails(),this.vizDetails.center&&typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(a=>parseFloat(a)),this.config.center=this.config.center.split(",").map(a=>parseFloat(a))),this.buildThumbnail(),this.thumbnail)return;this.buildOldJoinLookups(),this.filterDefinitions=this.parseFilterDefinitions(this.vizDetails.filters),this.setupLogoMover(),this.needsInitialMapExtent&&this.vizDetails.center&&(this.$store.commit("setMapCamera",{center:this.vizDetails.center,zoom:this.vizDetails.zoom||9,bearing:this.vizDetails.bearing||0,pitch:this.vizDetails.pitch||0,longitude:this.vizDetails.center?this.vizDetails.center[0]:0,latitude:this.vizDetails.center?this.vizDetails.center[1]:0,initial:!0}),this.needsInitialMapExtent=!1),this.expColors=(t=(e=this.config.display)==null?void 0:e.fill)==null?void 0:t.exponentColors,this.dataFillColors=$.state.isDarkMode?"#44445580":"#dddddd80",this.config.display.fill||(this.config.display.fill={}),(s=(i=this.config.display)==null?void 0:i.fill)!=null&&s.values&&(this.config.display.fill.values=this.convertCommasToArray(this.config.display.fill.values)),await this.loadBoundaries(),this.filterShapesNow(),this.isLoaded=!0,this.$emit("isLoaded"),await this.loadDatasets(),this.datasets=Object.assign({},this.datasets),this.config.datasets=JSON.parse(JSON.stringify(this.datasets)),this.vizDetails=Object.assign({},this.vizDetails),this.honorQueryParameters(),this.statusText="",this.featureJoinColumn=await this.figureOutFeatureIdColumn()}catch(a){this.$emit("error",""+a),this.statusText="",this.$emit("isLoaded")}},beforeDestroy(){var e;delete F[this.layerId],F[1e3+this.layerId]&&(F[1e3+this.layerId]([]),delete F[1e3+this.layerId]),this.clearData(),this.legendStore.clear(),(e=this.resizer)==null||e.disconnect(),this.myDataManager.removeFilterListener(this.config,this.processFiltersNow),this.$store.commit("setFullScreen",!1)}});var je=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"map-layout",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[i("div",{directives:[{name:"show",rawName:"v-show",value:t.statusText,expression:"statusText"}],staticClass:"status-bar"},[t._v(t._s(t.statusText))]),t.showJoiner?i("modal-id-column-picker",t._b({on:{join:t.cbDatasetJoined}},"modal-id-column-picker",t.datasetJoinSelector,!1)):t._e(),t.thumbnail?t._e():i("div",{staticClass:"area-map",attrs:{id:`container-${t.layerId}`}},[t.needsInitialMapExtent?t._e():i("geojson-layer",{attrs:{viewId:t.layerId,fillColors:t.dataFillColors,featureDataTable:t.boundaryDataTable,lineColors:t.dataLineColors,lineWidths:t.dataLineWidths,fillHeights:t.dataFillHeights,screenshot:t.triggerScreenshot,calculatedValues:t.dataCalculatedValues,calculatedValueLabel:t.dataCalculatedValueLabel,normalizedValues:t.dataNormalizedValues,featureFilter:t.boundaryFilters,opacity:t.sliderOpacity,pointRadii:t.dataPointRadii,tooltip:t.vizDetails.tooltip,cbTooltip:t.cbTooltip}}),t.isLoaded?i("viz-configurator",{attrs:{embedded:t.isEmbedded,sections:t.configuratorSections,fileSystem:t.fileSystem,subfolder:t.subfolder,yamlConfig:t.generatedExportFilename,vizDetails:t.vizDetails,datasets:t.datasets,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration,screenshot:t.takeScreenshot}}):t._e(),t.tooltipHtml&&!t.statusText?i("div",{staticClass:"details-panel",domProps:{innerHTML:t._s(t.tooltipHtml)}}):t._e()],1),t.isLoaded&&!t.thumbnail?i("zoom-buttons"):t._e(),!t.thumbnail&&!t.isEmbedded&&t.isLoaded&&Object.keys(t.filters).length?i("div",{staticClass:"config-bar",class:{"is-standalone":!t.configFromDashboard,"is-disabled":!t.isLoaded}},t._l(Object.keys(t.filters),function(s){return i("div",{staticClass:"filter"},[i("p",[t._v(t._s(s))]),i("b-dropdown",{attrs:{scrollable:t.filters[s].active.length>10,"max-height":"250",multiple:"","aria-role":"list","mobile-modal":!1,"close-on-click":!0},on:{change:function(a){return t.handleUserSelectedNewFilters(s)}},scopedSlots:t._u([{key:"trigger",fn:function({active:a}){return[i("b-button",{staticClass:"is-primary",attrs:{type:t.filters[s].active.length?"":"is-outlined",label:t.filterLabel(s)}})]}}],null,!0),model:{value:t.filters[s].active,callback:function(a){t.$set(t.filters[s],"active",a)},expression:"filters[filter].active"}},t._l(t.filters[s].options,function(a){return i("b-dropdown-item",{key:a,attrs:{value:a,"aria-role":"listitem"}},[t._v(t._s(a))])}),1)],1)}),0):t._e()],1)},ze=[];var Ie=B(Me,je,ze,!1,null,"dfde4b5c",null,null);const bs=Ie.exports;export{bs as default};
//# sourceMappingURL=ShapeFile-c9a56cc2.js.map
