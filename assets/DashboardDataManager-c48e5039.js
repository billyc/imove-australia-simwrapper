var v=Object.defineProperty;var y=(d,t,e)=>t in d?v(d,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[t]=e;var h=(d,t,e)=>(y(d,typeof t!="symbol"?t+"":t,e),e);import{g}from"./index-6ca30cbc.js";import{H as w}from"./HTTPFileSystem-a263b5e7.js";import{f as p}from"./util-6eb30833.js";import{W as m}from"./DataFetcher.worker-c87933e8.js";import{W as F}from"./RoadNetworkLoader.worker-48aaa0eb.js";import{r as b}from"./group-f6e6d4c5.js";const k=!!window.showDirectoryPicker,R=!k;class x{constructor(...t){h(this,"files",[]);h(this,"threads",[]);h(this,"subfolder","");h(this,"root","");h(this,"fileApi");h(this,"networks",{});h(this,"datasets",{});this.root=t.length?t[0]:"",this.subfolder=t.length?t[1]:"",this.fileApi=this._getFileSystem(this.root)}kill(){for(const t of this.threads)t.terminate()}getFilteredDataset(t){return t.dataset in this.datasets?{filteredRows:this.datasets[t.dataset].filteredRows}:{filteredRows:null}}async OLDgetFiltered(t){const e=this.datasets[t.dataset].filteredRows;if(!e)return{filteredRows:null};let s={};if(t.value&&t.groupBy){const l=t.value,n=t.groupBy;s=b(e,o=>o.reduce((u,r)=>u+r[l],0),o=>o[n])}const i=Array.from(s.keys()),a=Array.from(s.values());return{filteredRows:{x:i,y:a}}}async getDataset(t,e){try{this.datasets[t.dataset]||(console.log("load:",t.dataset),this.datasets[t.dataset]={dataset:this._fetchDataset(t,e),activeFilters:{},filteredRows:null,filterListeners:new Set});let s=await this.datasets[t.dataset].dataset,i={...s};return t.ignoreColumns&&t.ignoreColumns.forEach(a=>{delete i[a]}),t.useLastRow&&Object.keys(i).forEach(a=>{const l=s[a].values;i[a]=l[l.length-1]}),{allRows:i}}catch{return{allRows:{}}}}setFeatureProperties(t,e,s){const i=t.substring(t.lastIndexOf("/")+1);let a={dataset:i};return typeof s!="string"&&(a=Object.assign(a,s)),this.datasets[i]={activeFilters:{},filteredRows:null,filterListeners:new Set,dataset:new Promise((l,n)=>{const o=new m;this.threads.push(o);try{o.postMessage({config:a,featureProperties:e}),o.onmessage=u=>{o.terminate(),u.data.error&&(console.error(u.data.error),n(`Problem loading properties in ${t}`)),l(u.data)}}catch(u){o.terminate(),console.error(u),n(u)}})},this.datasets[i].dataset}setPreloadedDataset(t){this.datasets[t.key]={dataset:new Promise((e,s)=>{e(t.dataTable)}),activeFilters:{},filteredRows:null,filterListeners:new Set}}async getRoadNetwork(t,e,s,i){const a=`/${e}/${t}`;return this.networks[a]||(this.networks[a]=this._fetchNetwork({subfolder:e,filename:t,vizDetails:s,cbStatus:i})),await this.networks[a]}setFilter(t){const{dataset:e,column:s,value:i,invert:a,range:l}=t;if(!this.datasets[e]){console.warn(`${e} doesn't exist yet`),console.warn(Object.keys(this.datasets));return}console.log("> setFilter",e,s,i);const n=Array.isArray(i)?i:[i];this.datasets[e].activeFilters==null&&(this.datasets[e].activeFilters={});const o=this.datasets[e].activeFilters;n.length?o[s]={values:n,invert:a,range:l}:delete o[s],this._updateFilters(e)}addFilterListener(t,e){if(!this.datasets[t.dataset])throw Error("No dataset named: "+t.dataset);this.datasets[t.dataset].filterListeners.add(e)}removeFilterListener(t,e){try{this.datasets[t.dataset].filterListeners&&this.datasets[t.dataset].filterListeners.delete(e)}catch{}}clearCache(){this.kill(),this.datasets={},this.networks={}}async _updateFilters(t){console.log("> updateFilters ",t);const e=this.datasets[t];if(console.log({metaData:e}),!Object.keys(e.activeFilters).length){console.log("no keys"),e.filteredRows=null,this._notifyListeners(t);return}const s=await e.dataset,i=Object.keys(s);let a=[];const l=s[i[0]].values.length;console.log("FILTERS:",e.activeFilters),console.log("TOTLROWS",l);const n=new Array(l).fill(!0),o=/^(<|>)/;for(const[u,r]of Object.entries(e.activeFilters)){const f=s[u];if(r.values[0]===void 0||r.values[0]==="")throw Error(t+": filter error");if(o.test(r.values[0]))r.values[0].startsWith("<=")?(r.conditional="<=",r.values[0]=r.values[0].substring(2).trim()):r.values[0].startsWith(">=")?(r.conditional=">=",r.values[0]=r.values[0].substring(2).trim()):r.values[0].startsWith("<")?(r.conditional="<",r.values[0]=r.values[0].substring(1).trim()):r.values[0].startsWith(">")&&(r.conditional=">",r.values[0]=r.values[0].substring(1).trim());else if(r.values.length===1&&typeof r.values[0]=="string"){const c=parseFloat(r.values[0]);Number.isFinite(c)&&r.values.push(c)}for(let c=0;c<l;c++)D(r,f.values[c])||(n[c]=!1)}for(let u=0;u<l;u++)if(n[u]){const r={};i.forEach(f=>r[f]=s[f].values[u]),a.push(r)}e.filteredRows=a,this._notifyListeners(t)}_notifyListeners(t){const e=this.datasets[t];for(const s of e.filterListeners)s(t)}async _fetchDataset(t,e){if(!this.files.length){const{files:s}=await new w(this.fileApi).getDirectory(this.subfolder);this.files=s}return new Promise((s,i)=>{const a=new m;this.threads.push(a);try{a.postMessage({fileSystemConfig:this.fileApi,subfolder:this.subfolder,files:this.files,config:t,options:e}),a.onmessage=l=>{if(a.terminate(),l.data.error){let n=""+l.data.error;n=n.replace("[object Response]","Error loading file"),t!=null&&t.dataset&&n.indexOf(t.dataset)===-1&&(n+=`: ${t.dataset}`),i(n)}s(l.data)}}catch(l){a.terminate(),console.error(l),i(l)}})}async _fetchNetwork(t){return new Promise(async(e,s)=>{const{subfolder:i,filename:a,vizDetails:l,cbStatus:n}=t,o=`/${i}/${a}`;console.log("load network:",o);let u=o.indexOf("/")>-1?o.substring(0,o.lastIndexOf("/")):this.subfolder;try{const{files:f}=await new w(this.fileApi).getDirectory(u);let c=o.indexOf("/")===-1?o:o.substring(o.lastIndexOf("/")+1);p(f,c).length!==1&&s("File not found: "+o)}catch{s("Error reading folder: "+u)}const r=new F;try{r.onmessage=f=>{if(f.data.promptUserForCRS){let c=prompt('Enter the projection coordinate reference system, e.g. "EPSG:25832", or cancel if unknown')||"Atlantis";Number.isInteger(parseInt(c))&&(c=`EPSG:${c}`),r.postMessage({crs:c});return}if(f.data.status){n&&n(f.data.status);return}r.terminate(),f.data.error&&(console.error(f.data.error),s(f.data.error)),e(f.data.links)},r.postMessage({filePath:o,fileSystem:this.fileApi,vizDetails:l,isFirefox:R})}catch(f){r.terminate(),console.error(f),s(f)}})}_getFileSystem(t){const e=g.state.svnProjects.filter(s=>s.slug===t);if(e.length===0)throw console.error(`DDM: no such project, is slug correct? (${t})`),Error;return e[0]}}function D(d,t){const e={"<":()=>t<d.values[0],"<=":()=>t<=d.values[0],">":()=>t>d.values[0],">=":()=>t>=d.values[0]};let s;return d.range?s=t>=d.values[0]&&t<=d.values[1]:d.conditional?s=e[d.conditional]():s=d.values.includes(t),d.invert?!s:s}export{x as D,D as c};
//# sourceMappingURL=DashboardDataManager-c48e5039.js.map
