{"version":3,"file":"TransitSupplyHelper.worker-08dcaf1a.js","sources":["../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/projs.js","../node_modules/proj4/lib/index.js","../src/js/Coords.ts","../src/plugins/transit-demand/TransitSupplyHelper.worker.ts"],"sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import proj4 from 'proj4'\nimport EPSG from 'epsg-index/all.json'\n\n// These strings in a shapefile .PRJ will trigger the following EPSG codes.\n// Add your own to this list!\n\nconst lookups = {\n  NAD_1983_StatePlane_California_III_FIPS_0403_Feet: 'EPSG:2227',\n  NAD_1983_UTM_Zone_10N: 'EPSG:26910',\n  D_North_American_1983: 'EPSG:4326',\n  DHDN_3_degree_Gauss_Kruger_zone_4: 'EPSG:31468',\n  ETRS89_UTM_zone_32N: 'EPSG:25832',\n  ETRS89_UTM_zone_33N: 'EPSG:25833',\n  Hartebeesthoek94: 'EPSG:2048',\n  UTM_Zone_32N: 'EPSG:25832',\n}\n\n// Set up ALL coordinate systems in 'epsg' repository\nconst allEPSGs = Object.entries(EPSG).map(epsg => [`EPSG:${epsg[0]}`, epsg[1].proj4]) as any[]\nproj4.defs(allEPSGs)\n\n// // Add all standard MATSim projects from TransformationFactory to proj4\nproj4.defs([\n  [\n    // south africa\n    'EPSG:2048',\n    '+proj=tmerc +lat_0=0 +lon_0=19 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n  ],\n  [\n    // berlin\n    'EPSG:31468',\n    '+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel +datum=potsdam +units=m +no_defs',\n  ],\n  [\n    // cottbus\n    'EPSG:25833',\n    '+proj=utm +zone=33 +ellps=GRS80 +units=m +no_defs',\n  ],\n  [\n    // ruhr\n    'EPSG:25832',\n    '+proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs',\n  ],\n])\n\n// aliases for existing definitions here\nproj4.defs('DK4', proj4.defs('EPSG:31468'))\nproj4.defs('GK4', proj4.defs('EPSG:31468'))\n\n// aliases for common cities\nproj4.defs('Cottbus', proj4.defs('EPSG:25833'))\nproj4.defs('Berlin', proj4.defs('EPSG:31468'))\nproj4.defs('South Africa', proj4.defs('EPSG:2048'))\n\nfunction toLngLat(projection: string, p: any) {\n  return proj4(projection, 'WGS84', p) as any\n}\n\n/**\n *\n * @param def Whatever random string you have for your projection\n * @returns EPSG code in \"EPSG:1234\" format\n */\nfunction guessProjection(definition: string) {\n  const favoriteEPSG = ['31468', '25832', '25833', '2048', '26910', '4326']\n\n  // Simple EPSG:xxxx code? Just return it\n  const epsg = /^EPSG:\\d+$/\n  if (epsg.test(definition.trim())) return definition.trim()\n\n  // maybe a DHDN GK4 or another known string is in there\n  for (const [key, epsg] of Object.entries(lookups)) {\n    if (definition.indexOf(key) > -1) return epsg\n  }\n\n  // Authority mentioned? Use it\n  const authority = /AUTHORITY\\[\"EPSG\",\"\\d+\"\\]/g\n  let matches = ''\n  definition\n    .match(authority)\n    ?.reverse()\n    .map(m => (matches += m))\n\n  if (matches) {\n    for (const fave of favoriteEPSG) {\n      if (matches.indexOf(`\"${fave}\"`) > -1) return `EPSG:${fave}`\n    }\n  }\n\n  // all else fails: return nothing\n  return ''\n}\n\nexport default { toLngLat, guessProjection, allEPSGs }\n","import { NetworkNode, TransitLine, RouteDetails } from './Interfaces'\n\nimport Coords from '@/js/Coords'\n\nlet params!: any\nlet projection!: string\nlet _xml!: any\nconst _network: any = { nodes: {}, links: {} }\nconst _routeData: { [index: string]: RouteDetails } = {}\nconst _stopFacilities: { [index: string]: NetworkNode } = {}\nconst _transitLines: { [index: string]: TransitLine } = {}\nconst _mapExtentXYXY = [180, 90, -180, -90]\n\n// -----------------------------------------------------------\nonmessage = function (e) {\n  params = e.data\n  _xml = params.xml\n  projection = params.projection\n\n  try {\n    createNodesAndLinksFromXML()\n    convertCoords()\n    const answer = processTransit()\n\n    postMessage(answer)\n  } catch (e) {\n    console.error('' + e)\n    postMessage({ error: e })\n  }\n}\n// -----------------------------------------------------------\n\n// XML is sent in during worker initialization\nfunction createNodesAndLinksFromXML() {\n  postMessage({ status: 'Parsing road network...' })\n\n  const roadXML = _xml.roadXML\n  const netNodes = roadXML.network.nodes.node\n  const netLinks = roadXML.network.links.link\n\n  for (const node of netNodes) {\n    node.x = parseFloat(node.x)\n    node.y = parseFloat(node.y)\n    _network.nodes[node.id] = node\n  }\n\n  for (const link of netLinks) {\n    _network.links[link.id] = link\n  }\n  return { data: {}, transferrables: [] }\n}\n\nfunction convertCoords() {\n  postMessage({ status: 'Converting coordinates...' })\n\n  for (const id in _network.nodes) {\n    if (_network.nodes.hasOwnProperty(id)) {\n      const node: NetworkNode = _network.nodes[id]\n      const z = Coords.toLngLat(projection, node)\n      node.x = z.x\n      node.y = z.y\n    }\n  }\n  return { data: {}, transferrables: [] }\n}\n\nfunction processTransit() {\n  postMessage({ status: 'Crunching transit network...' })\n\n  generateStopFacilitiesFromXML()\n  let uniqueRouteID = 0\n\n  const transitLines = _xml.transitXML.transitSchedule.transitLine\n\n  for (const line of transitLines) {\n    const attr: TransitLine = {\n      id: line.id,\n      transitRoutes: [],\n    }\n\n    if (!line.transitRoute) continue\n\n    for (const route of line.transitRoute) {\n      const details: RouteDetails = buildTransitRouteDetails(line.id, route)\n      details.uniqueRouteID = uniqueRouteID++\n      attr.transitRoutes.push(details)\n    }\n\n    // attr.transitRoutes.sort((a, b) => (a.id < b.id ? -1 : 1))\n    _transitLines[attr.id] = attr\n  }\n\n  return {\n    network: _network,\n    routeData: _routeData,\n    stopFacilities: _stopFacilities,\n    transitLines: _transitLines,\n    mapExtent: _mapExtentXYXY,\n  }\n}\n\nfunction generateStopFacilitiesFromXML() {\n  const stopFacilities = _xml.transitXML.transitSchedule.transitStops.stopFacility\n\n  for (const stop of stopFacilities) {\n    stop.x = parseFloat(stop.x)\n    stop.y = parseFloat(stop.y)\n    // convert coords\n    const z = Coords.toLngLat(projection, stop)\n    stop.x = z.x\n    stop.y = z.y\n\n    _stopFacilities[stop.id] = stop\n  }\n}\n\nfunction buildTransitRouteDetails(lineId: string, route: any): RouteDetails {\n  const allDepartures = route.departures.departure\n  allDepartures.sort(function (a: any, b: any) {\n    const timeA = a.departureTime\n    const timeB = b.departureTime\n    if (timeA < timeB) return -1\n    if (timeA > timeB) return 1\n    return 0\n  })\n\n  const routeDetails: RouteDetails = {\n    id: `${lineId} (${route.id})`,\n    transportMode: route.transportMode,\n    routeProfile: [],\n    route: [],\n    departures: route.departures.departure.length,\n    firstDeparture: allDepartures[0].departureTime,\n    lastDeparture: allDepartures[allDepartures.length - 1].departureTime,\n    geojson: '',\n  }\n\n  if (Array.isArray(route.routeProfile.stop)) {\n    for (const stop of route.routeProfile.stop) {\n      routeDetails.routeProfile.push(stop)\n    }\n  } else {\n    console.warn('Route only has one stop: ', route)\n    routeDetails.routeProfile.push(route.routeProfile.stop)\n  }\n\n  for (const link of route.route.link) {\n    routeDetails.route.push(link.refId)\n  }\n\n  routeDetails.geojson = buildCoordinatesForRoute(routeDetails)\n  _routeData[routeDetails.id] = routeDetails\n\n  return routeDetails\n}\n\nfunction buildCoordinatesForRoute(transitRoute: RouteDetails) {\n  const coords = []\n  let previousLink: boolean = false\n\n  for (const linkID of transitRoute.route) {\n    const networkLink = _network.links[linkID]\n\n    if (!previousLink) {\n      const x0 = _network.nodes[networkLink?.from]?.x\n      const y0 = _network.nodes[networkLink?.from]?.y\n      if (x0 !== undefined && y0 !== undefined) coords.push([x0, y0])\n    }\n    const x = _network.nodes[networkLink?.to]?.x\n    const y = _network.nodes[networkLink?.to]?.y\n    if (x !== undefined && y !== undefined) coords.push([x, y])\n    previousLink = true\n  }\n\n  // save the extent of this line so map can zoom in on startup\n  if (coords.length > 0) {\n    updateMapExtent(coords[0])\n    updateMapExtent(coords[coords.length - 1])\n  }\n\n  const geojson = {\n    type: 'Feature',\n    geometry: {\n      type: 'LineString',\n      coordinates: coords,\n    },\n    properties: {\n      id: transitRoute.id,\n      from: coords[0],\n      to: coords[coords.length - 1],\n    },\n  }\n  return geojson\n}\n\nfunction updateMapExtent(coordinates: any) {\n  _mapExtentXYXY[0] = Math.min(_mapExtentXYXY[0], coordinates[0])\n  _mapExtentXYXY[1] = Math.min(_mapExtentXYXY[1], coordinates[1])\n  _mapExtentXYXY[2] = Math.max(_mapExtentXYXY[2], coordinates[0])\n  _mapExtentXYXY[3] = Math.max(_mapExtentXYXY[3], coordinates[1])\n}\n\n// make the typescript compiler happy on import\n// export default null as any\n"],"names":["globals","defs","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","ignoredChar","match","obj","key","keys","lkey","i","testkey","processedKey","projStr","defData","self","paramObj","v","a","p","split","paramName","paramVal","paramOutname","params","unit","pm","PrimeMeridian","legalAxis","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","char","newObjects","parseString","txt","parser","mapit","value","thing","out","newObj","item","sExpr","rename","outName","inName","d2r","input","cleanWKT","wkt","axisOrder","ii","axis","geogcs","toMeter","ratio","renamer","list","lisp","type","name","that","def","parseProj","testObj","code","testDef","codeWords","testWKT","word","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","extend","destination","source","property","msfnz","eccent","sinphi","cosphi","con","sign","x","adjust_lon","tsfnz","phi","com","phi2z","ts","eccnth","dphi","init","forward","lon","lat","y","inverse","names","merc","identity","pt","longlat","projs","projStore","add","proj","len","n","get","start","projections","exports$2","WGS84","eccentricity","b","rf","R_A","a2","b2","es","e","ep2","sphere","ellps","ellipse","Ellipsoid","exports$1","datum","datumCode","datum_params","nadgrids","loadedNadgrids","nadgrid","data","view","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","grids","parseNadgridString","optional","secondsToRadians","seconds","nFields","decodeString","end","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","latColumnCount","mapNodes","r","offset","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","Projection","srsCode","callback","error","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","compareDatums","dest","geodeticToGeocentric","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","output","attemptedGrids","grid","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","pin","ct","val","tb","nadInterpolate","tol","dif","del","t","indx","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","checkSanity","checkCoord","num","checkNotWGS","transform","enforceAxis","wgs84","toPoint","transformer","from","to","coords","transformedArray","checkProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","ll","accuracy","encode","LLtoUTM","bbox","UTMtoLL","decode","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","k0","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","getLetterDesignator","utm","zoneLetter","zoneNumber","e1","N1","T1","C1","R1","D","mu","phi1Rad","result","topRight","LetterDesignator","seasting","snorthing","get100kID","easting","northing","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","length","hunK","sb","testChar","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","z","mgrsStr","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","k","s","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","tan_phi","d","ds","f","g","temp","h","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr1","hr2","hr","cosh","clens_cmplx","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","j","hi1","hi","hi2","np","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","etmerc","adjust_zone","zone","dependsOn","srat","esinp","exp","DEL_TOL","gauss","sinc","cosc","cosl","rho","sterea","ssfn_","phit","eccen","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","stere","phy0","sinPhy0","semiMajorAxis","invF","flattening","e2","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","somerc","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","alp","gam","one_es","U","W","u","Qp","Sp","Tp","Vp","Up","omerc","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","theta","lcc","gfi","deltav","eps","ro","fi1","ok","krovak","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","dd","ml1","nl1","rl1","tl1","dl","dsq","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","authset","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","laea","asinz","qs","phi1z","eccnts","aea","coslon","ksp","gnom","iqsfnz","cea","dlat","eqc","el","bl","tanphi","mln","mlnp","ma","poly","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg","mill","sinu","delta_theta","moll","eqdc","sinth","costh","gsq","m","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","vandg","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","aeqd","ortho","FACE_ENUM","AREA_ENUM","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin","geocent","mode","omega","yt","ba","bm","bq","tpers","rone_es","v_x","v_y","v_z","det","v_zp","geos","includedProjections","Proj","lookups","allEPSGs","EPSG","epsg","toLngLat","projection","guessProjection","definition","favoriteEPSG","authority","matches","_a","fave","Coords","_xml","_network","_routeData","_stopFacilities","_transitLines","_mapExtentXYXY","createNodesAndLinksFromXML","convertCoords","answer","processTransit","roadXML","netNodes","netLinks","node","link","id","generateStopFacilitiesFromXML","uniqueRouteID","transitLines","line","attr","route","details","buildTransitRouteDetails","stopFacilities","stop","lineId","allDepartures","timeA","timeB","routeDetails","buildCoordinatesForRoute","transitRoute","previousLink","linkID","networkLink","x0","y0","_b","_c","_d","updateMapExtent","coordinates"],"mappings":"yBAAe,SAAQA,GAACC,EAAM,CAC5BA,EAAK,YAAa,iFAAiF,EACnGA,EAAK,YAAa,iHAAiH,EACnIA,EAAK,YAAa,kJAAkJ,EAEpKA,EAAK,MAAQA,EAAK,WAAW,EAC7BA,EAAK,WAAW,EAAIA,EAAK,WAAW,EACpCA,EAAK,OAASA,EAAK,WAAW,EAC9BA,EAAK,aAAa,EAAIA,EAAK,WAAW,EACtCA,EAAK,aAAa,EAAIA,EAAK,WAAW,CACxC,CCVO,IAAIC,GAAa,EACbC,GAAa,EACbC,GAAgB,EAChBC,GAAY,EACZC,GAAc,EACdC,GAAsB,QACtBC,GAAsB,cACtBC,GAAqB,qBACrBC,GAAa,oBACbC,EAAU,KAAK,GAAG,EAElBC,GAAQ,mBAERC,GAAM,mBAENC,GAAM,oBACNC,EAAQ,MAIRC,EAAM,oBACNC,EAAM,kBACNC,EAAS,KAAK,GAAG,EACjBC,GAAS,KAAK,GAAK,EAKnBC,EAAM,cC5BbC,EAAU,CAAA,EAGdA,EAAQ,UAAY,EACpBA,EAAQ,OAAS,gBACjBA,EAAQ,MAAQ,eAChBA,EAAQ,OAAS,iBACjBA,EAAQ,OAAS,gBACjBA,EAAQ,KAAO,gBACfA,EAAQ,KAAO,eACfA,EAAQ,QAAU,iBAClBA,EAAQ,MAAQ,iBAChBA,EAAQ,SAAW,SACnBA,EAAQ,UAAY,gBACpBA,EAAQ,OAAS,WACjBA,EAAQ,KAAO,gBCfA,IAAAC,GAAA,CACb,GAAI,CAAC,SAAU,KAAM,EACrB,QAAS,CAAC,SAAU,KAAO,IAAI,CACjC,ECHIC,GAAc,iBACH,SAASC,EAAMC,EAAKC,EAAK,CACtC,GAAID,EAAIC,CAAG,EACT,OAAOD,EAAIC,CAAG,EAMhB,QAJIC,EAAO,OAAO,KAAKF,CAAG,EACtBG,EAAOF,EAAI,YAAW,EAAG,QAAQH,GAAa,EAAE,EAChDM,EAAI,GACJC,EAASC,EACN,EAAEF,EAAIF,EAAK,QAGhB,GAFAG,EAAUH,EAAKE,CAAC,EAChBE,EAAeD,EAAQ,YAAW,EAAG,QAAQP,GAAa,EAAE,EACxDQ,IAAiBH,EACnB,OAAOH,EAAIK,CAAO,CAGxB,CCXe,SAAQE,GAACC,EAAS,CAC/B,IAAIC,EAAO,CAAA,EACPC,EAAWF,EAAQ,MAAM,GAAG,EAAE,IAAI,SAASG,EAAG,CAChD,OAAOA,EAAE,MACb,CAAG,EAAE,OAAO,SAASC,EAAG,CACpB,OAAOA,CACR,CAAA,EAAE,OAAO,SAASC,EAAGD,EAAG,CACvB,IAAIE,EAAQF,EAAE,MAAM,GAAG,EACvB,OAAAE,EAAM,KAAK,EAAI,EACfD,EAAEC,EAAM,CAAC,EAAE,YAAW,CAAE,EAAIA,EAAM,CAAC,EAC5BD,CACR,EAAE,CAAE,CAAA,EACDE,EAAWC,EAAUC,EACrBC,EAAS,CACX,KAAM,WACN,MAAO,YACP,GAAI,SAASP,EAAG,CACdF,EAAK,GAAK,WAAWE,CAAC,CACvB,EACD,MAAO,SAASA,EAAG,CACjBF,EAAK,KAAOE,EAAIpB,CACjB,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,KAAOE,EAAIpB,CACjB,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,KAAOE,EAAIpB,CACjB,EACD,OAAQ,SAASoB,EAAG,CAClBF,EAAK,OAASE,EAAIpB,CACnB,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,MAAQE,EAAIpB,CAClB,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,MAAQE,EAAIpB,CAClB,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,MAAQE,EAAIpB,CAClB,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,MAAQ,WAAWE,CAAC,EAAIpB,CAC9B,EACD,MAAO,SAASoB,EAAG,CACjBF,EAAK,qBAAuB,WAAWE,CAAC,CACzC,EACD,KAAM,SAASA,EAAG,CAChBF,EAAK,MAAQE,EAAIpB,CAClB,EACD,IAAK,SAASoB,EAAG,CACfF,EAAK,GAAK,WAAWE,CAAC,CACvB,EACD,IAAK,SAASA,EAAG,CACfF,EAAK,GAAK,WAAWE,CAAC,CACvB,EACD,IAAK,SAASA,EAAG,CACfF,EAAK,GAAK,WAAWE,CAAC,CACvB,EACD,EAAG,SAASA,EAAG,CACbF,EAAK,GAAK,WAAWE,CAAC,CACvB,EACD,EAAG,SAASA,EAAG,CACbF,EAAK,EAAI,WAAWE,CAAC,CACtB,EACD,EAAG,SAASA,EAAG,CACbF,EAAK,EAAI,WAAWE,CAAC,CACtB,EACD,IAAK,UAAW,CACdF,EAAK,IAAM,EACZ,EACD,KAAM,SAASE,EAAG,CAChBF,EAAK,KAAO,SAASE,EAAG,EAAE,CAC3B,EACD,MAAO,UAAW,CAChBF,EAAK,SAAW,EACjB,EACD,QAAS,SAASE,EAAG,CACnBF,EAAK,aAAeE,EAAE,MAAM,GAAG,EAAE,IAAI,SAASC,EAAG,CAC/C,OAAO,WAAWA,CAAC,CAC3B,CAAO,CACF,EACD,SAAU,SAASD,EAAG,CACpBF,EAAK,SAAW,WAAWE,CAAC,CAC7B,EACD,MAAO,SAASA,EAAG,CACjBF,EAAK,MAAQE,EACb,IAAIQ,EAAOpB,EAAMF,GAAOc,CAAC,EACrBQ,IACFV,EAAK,SAAWU,EAAK,SAExB,EACD,eAAgB,SAASR,EAAG,CAC1BF,EAAK,eAAiBE,EAAIpB,CAC3B,EACD,GAAI,SAASoB,EAAG,CACd,IAAIS,EAAKrB,EAAMsB,EAAeV,CAAC,EAC/BF,EAAK,gBAAkBW,GAAU,WAAWT,CAAC,GAAKpB,CACnD,EACD,SAAU,SAASoB,EAAG,CAChBA,IAAM,QACRF,EAAK,UAAY,OAGjBA,EAAK,SAAWE,CAEnB,EACD,KAAM,SAASA,EAAG,CAChB,IAAIW,EAAY,SACZX,EAAE,SAAW,GAAKW,EAAU,QAAQX,EAAE,OAAO,EAAG,CAAC,CAAC,IAAM,IAAMW,EAAU,QAAQX,EAAE,OAAO,EAAG,CAAC,CAAC,IAAM,IAAMW,EAAU,QAAQX,EAAE,OAAO,EAAG,CAAC,CAAC,IAAM,KAClJF,EAAK,KAAOE,EAEf,EACD,OAAQ,UAAW,CACjBF,EAAK,OAAS,EACf,CACL,EACE,IAAKM,KAAaL,EAChBM,EAAWN,EAASK,CAAS,EACzBA,KAAaG,GACfD,EAAeC,EAAOH,CAAS,EAC3B,OAAOE,GAAiB,WAC1BA,EAAaD,CAAQ,EAGrBP,EAAKQ,CAAY,EAAID,GAIvBP,EAAKM,CAAS,EAAIC,EAGtB,OAAG,OAAOP,EAAK,WAAc,UAAYA,EAAK,YAAc,UAC1DA,EAAK,UAAYA,EAAK,UAAU,YAAW,GAEtCA,CACT,CC1IA,IAAIc,GAAU,EACVC,GAAU,EACVC,GAAS,EACTC,GAAS,EACTC,GAAa,EACbC,GAAQ,GACRC,GAAa,KACbC,GAAQ,WACRC,GAAU,cACVC,GAAY,QACZC,GAAS,cAEb,SAASC,EAAOC,EAAM,CACpB,GAAI,OAAOA,GAAS,SAClB,MAAM,IAAI,MAAM,cAAc,EAEhC,KAAK,KAAOA,EAAK,OACjB,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,KAAO,KACZ,KAAK,MAAQ,GACb,KAAK,cAAgB,KACrB,KAAK,MAAQZ,EACf,CACAW,EAAO,UAAU,cAAgB,UAAW,CAC1C,IAAIE,EAAO,KAAK,KAAK,KAAK,OAAO,EACjC,GAAI,KAAK,QAAUV,GACjB,KAAOG,GAAW,KAAKO,CAAI,GAAG,CAC5B,GAAI,KAAK,OAAS,KAAK,KAAK,OAC1B,OAEFA,EAAO,KAAK,KAAK,KAAK,OAAO,CAC9B,CAEH,OAAQ,KAAK,MAAK,CAChB,KAAKb,GACH,OAAO,KAAK,QAAQa,CAAI,EAC1B,KAAKZ,GACH,OAAO,KAAK,QAAQY,CAAI,EAC1B,KAAKV,GACH,OAAO,KAAK,OAAOU,CAAI,EACzB,KAAKT,GACH,OAAO,KAAK,WAAWS,CAAI,EAC7B,KAAKX,GACH,OAAO,KAAK,OAAOW,CAAI,EACzB,KAAKR,GACH,MACH,CACH,EACAM,EAAO,UAAU,WAAa,SAASE,EAAM,CAC3C,GAAIA,IAAS,IAAK,CAChB,KAAK,MAAQ,IACb,KAAK,MAAQV,GACb,MACD,CACD,GAAIM,GAAU,KAAKI,CAAI,EAAG,CACxB,KAAK,KAAO,KAAK,KAAK,KAAI,EAC1B,KAAK,UAAUA,CAAI,EACnB,MACD,CACD,MAAM,IAAI,MAAM,mBAAqBA,EAAO,8BAAgC,KAAK,KAAK,CACxF,EACAF,EAAO,UAAU,UAAY,SAASE,EAAM,CAC1C,GAAIA,IAAS,IAAK,CACZ,KAAK,OAAS,MAChB,KAAK,cAAc,KAAK,KAAK,IAAI,EAEnC,KAAK,KAAO,KACZ,KAAK,MAAQb,GACb,MACD,CACD,GAAIa,IAAS,IAAK,CAChB,KAAK,QACD,KAAK,OAAS,OAChB,KAAK,cAAc,KAAK,KAAK,IAAI,EACjC,KAAK,KAAO,MAEd,KAAK,MAAQb,GACb,KAAK,cAAgB,KAAK,MAAM,IAAG,EAC9B,KAAK,gBACR,KAAK,MAAQK,IAGf,MACD,CACH,EACAM,EAAO,UAAU,OAAS,SAASE,EAAM,CACvC,GAAIH,GAAO,KAAKG,CAAI,EAAG,CACrB,KAAK,MAAQA,EACb,MACD,CACD,GAAIJ,GAAU,KAAKI,CAAI,EAAG,CACxB,KAAK,KAAO,WAAW,KAAK,IAAI,EAChC,KAAK,UAAUA,CAAI,EACnB,MACD,CACD,MAAM,IAAI,MAAM,mBAAqBA,EAAO,0BAA4B,KAAK,KAAK,CACpF,EACAF,EAAO,UAAU,OAAS,SAASE,EAAM,CACvC,GAAIA,IAAS,IAAK,CAChB,KAAK,MAAQT,GACb,MACD,CACD,KAAK,MAAQS,CAEf,EACAF,EAAO,UAAU,QAAU,SAASE,EAAM,CACxC,GAAIL,GAAQ,KAAKK,CAAI,EAAG,CACtB,KAAK,MAAQA,EACb,MACD,CACD,GAAIA,IAAS,IAAK,CAChB,IAAIC,EAAa,CAAA,EACjBA,EAAW,KAAK,KAAK,IAAI,EACzB,KAAK,QACD,KAAK,OAAS,KAChB,KAAK,KAAOA,EAEZ,KAAK,cAAc,KAAKA,CAAU,EAEpC,KAAK,MAAM,KAAK,KAAK,aAAa,EAClC,KAAK,cAAgBA,EACrB,KAAK,MAAQd,GACb,MACD,CACD,GAAIS,GAAU,KAAKI,CAAI,EAAG,CACxB,KAAK,UAAUA,CAAI,EACnB,MACD,CACD,MAAM,IAAI,MAAM,mBAAqBA,EAAO,2BAA6B,KAAK,KAAK,CACrF,EACAF,EAAO,UAAU,QAAU,SAASE,EAAM,CACxC,GAAIN,GAAM,KAAKM,CAAI,EAAG,CACpB,KAAK,KAAOA,EACZ,KAAK,MAAQZ,GACb,MACD,CACD,GAAIY,IAAS,IAAK,CAChB,KAAK,KAAO,GACZ,KAAK,MAAQV,GACb,MACD,CACD,GAAIO,GAAO,KAAKG,CAAI,EAAG,CACrB,KAAK,KAAOA,EACZ,KAAK,MAAQX,GACb,MACD,CACD,GAAIO,GAAU,KAAKI,CAAI,EAAG,CACxB,KAAK,UAAUA,CAAI,EACnB,MACD,CACD,MAAM,IAAI,MAAM,mBAAqBA,EAAO,2BAA6B,KAAK,KAAK,CACrF,EACAF,EAAO,UAAU,OAAS,UAAW,CACnC,KAAO,KAAK,MAAQ,KAAK,KAAK,QAC5B,KAAK,cAAa,EAEpB,GAAI,KAAK,QAAUN,GACjB,OAAO,KAAK,KAEd,MAAM,IAAI,MAAM,2BAA4B,KAAK,KAAO,eAAiB,KAAK,KAAK,CACrF,EAEA,SAASU,GAAYC,EAAK,CACxB,IAAIC,EAAS,IAAIN,EAAOK,CAAG,EAC3B,OAAOC,EAAO,QAChB,CCtKA,SAASC,GAAMzC,EAAKC,EAAKyC,EAAO,CAC1B,MAAM,QAAQzC,CAAG,IACnByC,EAAM,QAAQzC,CAAG,EACjBA,EAAM,MAER,IAAI0C,EAAQ1C,EAAM,CAAE,EAAGD,EAEnB4C,EAAMF,EAAM,OAAO,SAASG,EAAQC,EAAM,CAC5C,OAAAC,GAAMD,EAAMD,CAAM,EACXA,CACR,EAAEF,CAAK,EACJ1C,IACFD,EAAIC,CAAG,EAAI2C,EAEf,CAEO,SAASG,GAAMpC,EAAGX,EAAK,CAC5B,GAAI,CAAC,MAAM,QAAQW,CAAC,EAAG,CACrBX,EAAIW,CAAC,EAAI,GACT,MACD,CACD,IAAIV,EAAMU,EAAE,QAIZ,GAHIV,IAAQ,cACVA,EAAMU,EAAE,SAENA,EAAE,SAAW,EAAG,CAClB,GAAI,MAAM,QAAQA,EAAE,CAAC,CAAC,EAAG,CACvBX,EAAIC,CAAG,EAAI,GACX8C,GAAMpC,EAAE,CAAC,EAAGX,EAAIC,CAAG,CAAC,EACpB,MACD,CACDD,EAAIC,CAAG,EAAIU,EAAE,CAAC,EACd,MACD,CACD,GAAI,CAACA,EAAE,OAAQ,CACbX,EAAIC,CAAG,EAAI,GACX,MACD,CACD,GAAIA,IAAQ,UAAW,CACrBD,EAAIC,CAAG,EAAIU,EACX,MACD,CACD,GAAIV,IAAQ,OAAQ,CACZA,KAAOD,IACXA,EAAIC,CAAG,EAAI,IAEbD,EAAIC,CAAG,EAAE,KAAKU,CAAC,EACf,MACD,CACI,MAAM,QAAQV,CAAG,IACpBD,EAAIC,CAAG,EAAI,IAGb,IAAIG,EACJ,OAAQH,EAAG,CACT,IAAK,OACL,IAAK,SACL,IAAK,aACHD,EAAIC,CAAG,EAAI,CACT,KAAMU,EAAE,CAAC,EAAE,YAAa,EACxB,QAASA,EAAE,CAAC,CACpB,EACUA,EAAE,SAAW,GACfoC,GAAMpC,EAAE,CAAC,EAAGX,EAAIC,CAAG,CAAC,EAEtB,OACF,IAAK,WACL,IAAK,YACHD,EAAIC,CAAG,EAAI,CACT,KAAMU,EAAE,CAAC,EACT,EAAGA,EAAE,CAAC,EACN,GAAIA,EAAE,CAAC,CACf,EACUA,EAAE,SAAW,GACfoC,GAAMpC,EAAE,CAAC,EAAGX,EAAIC,CAAG,CAAC,EAEtB,OACF,IAAK,eACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,UACL,IAAK,cACL,IAAK,gBACL,IAAK,SACL,IAAK,mBACL,IAAK,UACL,IAAK,UACL,IAAK,cACL,IAAK,WACL,IAAK,cACL,IAAK,iBACL,IAAK,SACL,IAAK,YACL,IAAK,cACL,IAAK,QACHU,EAAE,CAAC,EAAI,CAAC,OAAQA,EAAE,CAAC,CAAC,EACpB8B,GAAMzC,EAAKC,EAAKU,CAAC,EACjB,OACF,QAEE,IADAP,EAAI,GACG,EAAEA,EAAIO,EAAE,QACb,GAAI,CAAC,MAAM,QAAQA,EAAEP,CAAC,CAAC,EACrB,OAAO2C,GAAMpC,EAAGX,EAAIC,CAAG,CAAC,EAG5B,OAAOwC,GAAMzC,EAAKC,EAAKU,CAAC,CAC3B,CACH,CChHA,IAAIpB,GAAM,oBAMV,SAASyD,GAAOhD,EAAKkB,EAAQ,CAC3B,IAAI+B,EAAU/B,EAAO,CAAC,EAClBgC,EAAShC,EAAO,CAAC,EACjB,EAAE+B,KAAWjD,IAASkD,KAAUlD,IAClCA,EAAIiD,CAAO,EAAIjD,EAAIkD,CAAM,EACrBhC,EAAO,SAAW,IACpBlB,EAAIiD,CAAO,EAAI/B,EAAO,CAAC,EAAElB,EAAIiD,CAAO,CAAC,GAG3C,CAEA,SAASE,EAAIC,EAAO,CAClB,OAAOA,EAAQ7D,EACjB,CAEA,SAAS8D,GAASC,EAAK,CAarB,GAZIA,EAAI,OAAS,SACfA,EAAI,SAAW,UACNA,EAAI,OAAS,YACtBA,EAAI,SAAW,WACfA,EAAI,MAAQ,IAER,OAAOA,EAAI,YAAe,SAC5BA,EAAI,SAAW,OAAO,KAAKA,EAAI,UAAU,EAAE,CAAC,EAE5CA,EAAI,SAAWA,EAAI,WAGnBA,EAAI,KAAM,CAEZ,QADIC,EAAY,GACPnD,EAAI,EAAGoD,EAAKF,EAAI,KAAK,OAAQlD,EAAIoD,EAAI,EAAEpD,EAAG,CACjD,IAAIqD,EAAO,CAACH,EAAI,KAAKlD,CAAC,EAAE,CAAC,EAAE,YAAa,EAAEkD,EAAI,KAAKlD,CAAC,EAAE,CAAC,EAAE,YAAW,CAAE,EAClEqD,EAAK,CAAC,EAAE,QAAQ,OAAO,IAAM,KAAQA,EAAK,CAAC,IAAM,KAAOA,EAAK,CAAC,IAAM,QAAUA,EAAK,CAAC,IAAM,QAC5FF,GAAa,IACJE,EAAK,CAAC,EAAE,QAAQ,OAAO,IAAM,KAAQA,EAAK,CAAC,IAAM,KAAOA,EAAK,CAAC,IAAM,QAAUA,EAAK,CAAC,IAAM,QACnGF,GAAa,IACJE,EAAK,CAAC,EAAE,QAAQ,MAAM,IAAM,KAAQA,EAAK,CAAC,IAAM,KAAOA,EAAK,CAAC,IAAM,QAAUA,EAAK,CAAC,IAAM,OAClGF,GAAa,KACJE,EAAK,CAAC,EAAE,QAAQ,MAAM,IAAM,KAAQA,EAAK,CAAC,IAAM,KAAOA,EAAK,CAAC,IAAM,QAAUA,EAAK,CAAC,IAAM,UAClGF,GAAa,IAEhB,CACGA,EAAU,SAAW,IACvBA,GAAa,KAEXA,EAAU,SAAW,IACvBD,EAAI,KAAOC,EAEd,CACGD,EAAI,OACNA,EAAI,MAAQA,EAAI,KAAK,KAAK,YAAW,EACjCA,EAAI,QAAU,UAChBA,EAAI,MAAQ,SAEVA,EAAI,KAAK,UACPA,EAAI,OAAS,SACXA,EAAI,OAASA,EAAI,MAAM,WACzBA,EAAI,SAAWA,EAAI,KAAK,QAAQA,EAAI,MAAM,SAAS,GAGrDA,EAAI,SAAWA,EAAI,KAAK,UAI9B,IAAII,EAASJ,EAAI,OACbA,EAAI,OAAS,WACfI,EAASJ,GAEPI,IAIEA,EAAO,MACTJ,EAAI,UAAYI,EAAO,MAAM,KAAK,YAAW,EAE7CJ,EAAI,UAAYI,EAAO,KAAK,YAAW,EAErCJ,EAAI,UAAU,MAAM,EAAG,CAAC,IAAM,OAChCA,EAAI,UAAYA,EAAI,UAAU,MAAM,CAAC,IAEnCA,EAAI,YAAc,mCAAqCA,EAAI,YAAc,sBAC3EA,EAAI,UAAY,WAEdA,EAAI,YAAc,YAAcA,EAAI,YAAc,gCAChDA,EAAI,aAAe,8BACrBA,EAAI,OAAS,IAEfA,EAAI,UAAY,SAEdA,EAAI,UAAU,MAAM,EAAE,IAAM,WAC9BA,EAAI,UAAYA,EAAI,UAAU,MAAM,EAAG,EAAG,GAExCA,EAAI,UAAU,MAAM,EAAE,IAAM,aAC9BA,EAAI,UAAYA,EAAI,UAAU,MAAM,EAAG,EAAG,GAExC,CAACA,EAAI,UAAU,QAAQ,OAAO,IAChCA,EAAI,UAAY,SAEdI,EAAO,OAASA,EAAO,MAAM,WAC/BJ,EAAI,MAAQI,EAAO,MAAM,SAAS,KAAK,QAAQ,MAAO,EAAE,EAAE,QAAQ,gBAAiB,MAAM,EACrFJ,EAAI,MAAM,YAAa,EAAC,MAAM,EAAG,EAAE,IAAM,kBAC3CA,EAAI,MAAQ,QAGdA,EAAI,EAAII,EAAO,MAAM,SAAS,EAC9BJ,EAAI,GAAK,WAAWI,EAAO,MAAM,SAAS,GAAI,EAAE,GAG9CA,EAAO,OAASA,EAAO,MAAM,UAC/BJ,EAAI,aAAeI,EAAO,MAAM,SAE9B,CAACJ,EAAI,UAAU,QAAQ,WAAW,IACpCA,EAAI,UAAY,UAEd,CAACA,EAAI,UAAU,QAAQ,WAAW,IACpCA,EAAI,UAAY,WAEd,CAACA,EAAI,UAAU,QAAQ,MAAM,GAC5B,CAACA,EAAI,UAAU,QAAQ,wBAAwB,KAClDA,EAAI,UAAY,SAEdA,EAAI,YAAc,YACpBA,EAAI,UAAY,UAEd,CAACA,EAAI,UAAU,QAAQ,QAAQ,IACjCA,EAAI,UAAY,UAGhBA,EAAI,GAAK,CAAC,SAASA,EAAI,CAAC,IAC1BA,EAAI,EAAIA,EAAI,GAGd,SAASK,EAAQP,EAAO,CACtB,IAAIQ,EAAQN,EAAI,UAAY,EAC5B,OAAOF,EAAQQ,CAChB,CACD,IAAIC,EAAU,SAASjD,EAAG,CACxB,OAAOoC,GAAOM,EAAK1C,CAAC,CACxB,EACMkD,EAAO,CACT,CAAC,sBAAuB,qBAAqB,EAC7C,CAAC,sBAAuB,mCAAmC,EAC3D,CAAC,sBAAuB,qBAAqB,EAC7C,CAAC,sBAAuB,mCAAmC,EAC3D,CAAC,gBAAiB,eAAe,EACjC,CAAC,gBAAiB,eAAe,EACjC,CAAC,gBAAiB,yBAAyB,EAC3C,CAAC,iBAAkB,gBAAgB,EACnC,CAAC,iBAAkB,gBAAgB,EACnC,CAAC,iBAAkB,0BAA0B,EAC7C,CAAC,mBAAoB,kBAAkB,EACvC,CAAC,mBAAoB,6BAA6B,EAClD,CAAC,mBAAoB,2BAA2B,EAChD,CAAC,qBAAsB,oBAAoB,EAC3C,CAAC,qBAAsB,kBAAkB,EACzC,CAAC,qBAAsB,4BAA4B,EACnD,CAAC,qBAAsB,0BAA0B,EACjD,CAAC,eAAgB,cAAc,EAC/B,CAAC,KAAM,cAAc,EACrB,CAAC,qBAAsB,oBAAoB,EAC3C,CAAC,qBAAsB,oBAAoB,EAC3C,CAAC,OAAQ,qBAAsBX,CAAG,EAClC,CAAC,sBAAuB,qBAAqB,EAC7C,CAAC,sBAAuB,qBAAqB,EAC7C,CAAC,QAAS,sBAAuBA,CAAG,EACpC,CAAC,KAAM,gBAAiBQ,CAAO,EAC/B,CAAC,KAAM,iBAAkBA,CAAO,EAChC,CAAC,QAAS,mBAAoBR,CAAG,EACjC,CAAC,OAAQ,qBAAsBA,CAAG,EAClC,CAAC,OAAQ,sBAAuBA,CAAG,EACnC,CAAC,OAAQ,sBAAuBA,CAAG,EACnC,CAAC,OAAQ,sBAAuBA,CAAG,EACnC,CAAC,UAAW,SAAS,EACrB,CAAC,QAAS,UAAWA,CAAG,EACxB,CAAC,UAAW,MAAM,CACtB,EACEW,EAAK,QAAQD,CAAO,EAChB,CAACP,EAAI,OAASA,EAAI,QAAUA,EAAI,WAAa,2BAA6BA,EAAI,WAAa,kCAC7FA,EAAI,MAAQA,EAAI,OAEd,CAACA,EAAI,QAAUA,EAAI,OAASA,EAAI,WAAa,4BAA8BA,EAAI,WAAa,qCAC9FA,EAAI,KAAOH,EAAIG,EAAI,KAAO,EAAI,GAAK,GAAG,EACtCA,EAAI,OAASA,EAAI,KAErB,CACe,SAAQA,GAACA,EAAK,CAC3B,IAAIS,EAAOvB,GAAOc,CAAG,EACjBU,EAAOD,EAAK,QACZE,EAAOF,EAAK,QAChBA,EAAK,QAAQ,CAAC,OAAQE,CAAI,CAAC,EAC3BF,EAAK,QAAQ,CAAC,OAAQC,CAAI,CAAC,EAC3B,IAAIhE,EAAM,CAAA,EACV,OAAA+C,GAAMgB,EAAM/D,CAAG,EACfqD,GAASrD,CAAG,EACLA,CACT,CCrMA,SAASxB,EAAKyF,EAAM,CAElB,IAAIC,EAAO,KACX,GAAI,UAAU,SAAW,EAAG,CAC1B,IAAIC,EAAM,UAAU,CAAC,EACjB,OAAOA,GAAQ,SACbA,EAAI,OAAO,CAAC,IAAM,IACpB3F,EAAKyF,CAAI,EAAIG,GAAU,UAAU,CAAC,CAAC,EAGnC5F,EAAKyF,CAAI,EAAIX,GAAI,UAAU,CAAC,CAAC,EAG/B9E,EAAKyF,CAAI,EAAIE,CAEhB,SACQ,UAAU,SAAW,EAAG,CAC/B,GAAI,MAAM,QAAQF,CAAI,EACpB,OAAOA,EAAK,IAAI,SAAStD,EAAG,CACtB,MAAM,QAAQA,CAAC,EACjBnC,EAAK,MAAM0F,EAAMvD,CAAC,EAGlBnC,EAAKmC,CAAC,CAEhB,CAAO,EAEE,GAAI,OAAOsD,GAAS,UACvB,GAAIA,KAAQzF,EACV,OAAOA,EAAKyF,CAAI,MAGX,SAAUA,EACjBzF,EAAK,QAAUyF,EAAK,IAAI,EAAIA,EAErB,SAAUA,EACjBzF,EAAK,QAAUyF,EAAK,IAAI,EAAIA,EAErB,YAAaA,EACpBzF,EAAK,WAAayF,EAAK,OAAO,EAAIA,EAGlC,QAAQ,IAAIA,CAAI,EAElB,MACD,CAGH,CACA1F,GAAQC,CAAI,ECjDZ,SAAS6F,GAAQC,EAAK,CACpB,OAAO,OAAOA,GAAS,QACzB,CACA,SAASC,GAAQD,EAAK,CACpB,OAAOA,KAAQ9F,CACjB,CACA,IAAIgG,GAAY,CAAC,eAAgB,UAAW,SAAS,SAAS,SAAS,WAAY,UAAW,cAAe,gBAAiB,SAAU,gBAAgB,EACxJ,SAASC,GAAQH,EAAK,CACpB,OAAOE,GAAU,KAAK,SAAUE,EAAM,CACpC,OAAOJ,EAAK,QAAQI,CAAI,EAAI,EAChC,CAAG,CACH,CACA,IAAIC,GAAQ,CAAC,OAAQ,SAAU,OAAQ,QAAQ,EAC/C,SAASC,GAAc9B,EAAM,CAC3B,IAAI+B,EAAO9E,EAAM+C,EAAM,WAAW,EAClC,GAAK+B,EAGL,KAAIP,EAAOvE,EAAM8E,EAAM,MAAM,EAC7B,OAAOP,GAAQK,GAAM,QAAQL,CAAI,EAAI,GACvC,CACA,SAASQ,GAAahC,EAAM,CAC1B,IAAIiC,EAAMhF,EAAM+C,EAAM,WAAW,EACjC,GAAKiC,EAGL,OAAOhF,EAAMgF,EAAK,OAAO,CAC3B,CACA,SAASC,GAASV,EAAK,CACrB,OAAOA,EAAK,CAAC,IAAM,GACrB,CACA,SAASW,GAAMX,EAAK,CAClB,GAAID,GAAQC,CAAI,EAAG,CAEjB,GAAIC,GAAQD,CAAI,EACd,OAAO9F,EAAK8F,CAAI,EAElB,GAAIG,GAAQH,CAAI,EAAG,CACjB,IAAI1B,EAAMU,GAAIgB,CAAI,EAElB,GAAIM,GAAchC,CAAG,EACnB,OAAOpE,EAAK,WAAW,EAEzB,IAAI0G,EAAeJ,GAAalC,CAAG,EACnC,OAAIsC,EACK3E,GAAQ2E,CAAY,EAEtBtC,CACR,CACD,GAAIoC,GAASV,CAAI,EACf,OAAO/D,GAAQ+D,CAAI,CAEzB,KACI,QAAOA,CAEX,CC3De,SAAAa,GAASC,EAAaC,EAAQ,CAC3CD,EAAcA,GAAe,GAC7B,IAAI1C,EAAO4C,EACX,GAAI,CAACD,EACH,OAAOD,EAET,IAAKE,KAAYD,EACf3C,EAAQ2C,EAAOC,CAAQ,EACnB5C,IAAU,SACZ0C,EAAYE,CAAQ,EAAI5C,GAG5B,OAAO0C,CACT,CCbe,SAAAG,EAASC,EAAQC,EAAQC,EAAQ,CAC9C,IAAIC,EAAMH,EAASC,EACnB,OAAOC,EAAU,KAAK,KAAK,EAAIC,EAAMA,CAAG,CAC1C,CCHe,SAAQC,GAACC,EAAG,CACzB,OAAOA,EAAE,EAAI,GAAK,CACpB,CCEe,SAAQC,EAACD,EAAG,CACzB,OAAQ,KAAK,IAAIA,CAAC,GAAKlG,EAAOkG,EAAKA,EAAKD,GAAKC,CAAC,EAAInG,EACpD,CCJe,SAAAqG,EAASP,EAAQQ,EAAKP,EAAQ,CAC3C,IAAIE,EAAMH,EAASC,EACfQ,EAAM,GAAMT,EAChB,OAAAG,EAAM,KAAK,KAAM,EAAIA,IAAQ,EAAIA,GAAOM,CAAG,EACnC,KAAK,IAAI,IAAO/G,EAAU8G,EAAI,EAAIL,CAC5C,CCLe,SAAAO,GAASV,EAAQW,EAAI,CAIlC,QAHIC,EAAS,GAAMZ,EACfG,EAAKU,EACLL,EAAM9G,EAAU,EAAI,KAAK,KAAKiH,CAAE,EAC3B/F,EAAI,EAAGA,GAAK,GAAIA,IAIvB,GAHAuF,EAAMH,EAAS,KAAK,IAAIQ,CAAG,EAC3BK,EAAOnH,EAAU,EAAI,KAAK,KAAKiH,EAAM,KAAK,KAAM,EAAIR,IAAQ,EAAIA,GAAOS,CAAM,CAAE,EAAIJ,EACnFA,GAAOK,EACH,KAAK,IAAIA,CAAI,GAAK,MACpB,OAAOL,EAIX,MAAO,KACT,CCVO,SAASM,IAAO,CACrB,IAAIX,EAAM,KAAK,EAAI,KAAK,EACxB,KAAK,GAAK,EAAIA,EAAMA,EACf,OAAQ,OACX,KAAK,GAAK,GAEP,OAAQ,OACX,KAAK,GAAK,GAEZ,KAAK,EAAI,KAAK,KAAK,KAAK,EAAE,EACtB,KAAK,OACH,KAAK,OACP,KAAK,GAAK,KAAK,IAAI,KAAK,MAAM,EAG9B,KAAK,GAAKJ,EAAM,KAAK,EAAG,KAAK,IAAI,KAAK,MAAM,EAAG,KAAK,IAAI,KAAK,MAAM,CAAC,EAIjE,KAAK,KACJ,KAAK,EACP,KAAK,GAAK,KAAK,EAGf,KAAK,GAAK,EAIlB,CAKO,SAASgB,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAEZ,GAAI4F,EAAMjH,EAAM,IAAMiH,EAAMjH,EAAM,KAAOgH,EAAMhH,EAAM,KAAOgH,EAAMhH,EAAM,KACtE,OAAO,KAGT,IAAIqG,EAAGa,EACP,GAAI,KAAK,IAAI,KAAK,IAAID,CAAG,EAAIvH,CAAO,GAAKI,EACvC,OAAO,KAGP,GAAI,KAAK,OACPuG,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,GAAKC,EAAWU,EAAM,KAAK,KAAK,EAC5DE,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,GAAK,KAAK,IAAI,KAAK,IAAIjH,EAAS,GAAMgH,CAAG,CAAC,MAEnE,CACH,IAAIhB,EAAS,KAAK,IAAIgB,CAAG,EACrBN,EAAKJ,EAAM,KAAK,EAAGU,EAAKhB,CAAM,EAClCI,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,GAAKC,EAAWU,EAAM,KAAK,KAAK,EAC5DE,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,GAAK,KAAK,IAAIP,CAAE,CAC7C,CACD,OAAAtF,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CAEX,CAIO,SAAS8F,GAAQ9F,EAAG,CAEzB,IAAIgF,EAAIhF,EAAE,EAAI,KAAK,GACf6F,EAAI7F,EAAE,EAAI,KAAK,GACf2F,EAAKC,EAET,GAAI,KAAK,OACPA,EAAMvH,EAAU,EAAI,KAAK,KAAK,KAAK,IAAI,CAACwH,GAAK,KAAK,EAAI,KAAK,GAAG,CAAC,MAE5D,CACH,IAAIP,EAAK,KAAK,IAAI,CAACO,GAAK,KAAK,EAAI,KAAK,GAAG,EAEzC,GADAD,EAAMP,GAAM,KAAK,EAAGC,CAAE,EAClBM,IAAQ,MACV,OAAO,IAEV,CACD,OAAAD,EAAMV,EAAW,KAAK,MAAQD,GAAK,KAAK,EAAI,KAAK,GAAG,EAEpDhF,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,WAAY,wCAAyC,eAAgB,4BAA6B,MAAM,EAC7GC,GAAA,CACb,KAAMP,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECnGO,SAASN,IAAO,CAEvB,CAEA,SAASQ,GAASC,EAAI,CACpB,OAAOA,CACT,CAGO,IAAIH,GAAQ,CAAC,UAAW,UAAU,EAC1BI,GAAA,CACb,KAAMV,GACN,QAASQ,GACT,QAASA,GACT,MAAOF,EACT,ECbIK,GAAQ,CAACJ,GAAMG,EAAO,EACtBJ,GAAQ,CAAA,EACRM,GAAY,CAAA,EAEhB,SAASC,GAAIC,EAAMhH,EAAG,CACpB,IAAIiH,EAAMH,GAAU,OACpB,OAAKE,EAAK,OAIVF,GAAUG,CAAG,EAAID,EACjBA,EAAK,MAAM,QAAQ,SAASE,EAAG,CAC7BV,GAAMU,EAAE,YAAa,CAAA,EAAID,CAC7B,CAAG,EACM,OAPL,QAAQ,IAAIjH,CAAC,EACN,GAOX,CAIO,SAASmH,GAAItD,EAAM,CACxB,GAAI,CAACA,EACH,MAAO,GAET,IAAIqD,EAAIrD,EAAK,cACb,GAAI,OAAO2C,GAAMU,CAAC,EAAM,KAAeJ,GAAUN,GAAMU,CAAC,CAAC,EACvD,OAAOJ,GAAUN,GAAMU,CAAC,CAAC,CAE7B,CAEO,SAASE,IAAQ,CACtBP,GAAM,QAAQE,EAAG,CACnB,CACe,IAAAM,GAAA,CACb,MAAOD,GACP,IAAKL,GACL,IAAKI,EACP,ECtCI3H,EAAU,CAAA,EAEP8H,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,QACJ,YAAa,YACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,QACJ,YAAa,2BACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,cACJ,YAAa,sBACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,QACJ,YAAa,UACf,EAEOA,EAAC,KAAO,CACb,EAAG,cACH,EAAG,aACH,YAAa,WACf,EAEOA,EAAC,KAAO,CACb,EAAG,QACH,GAAI,OACJ,YAAa,qBACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,OACJ,YAAa,0BACf,EAEOA,EAAC,SAAW,CACjB,EAAG,cACH,EAAG,cACH,YAAa,eACf,EAEOA,EAAC,OAAS,CACf,EAAG,aACH,GAAI,IACJ,YAAa,4BACf,EAEOA,EAAC,QAAU,CAChB,EAAG,QACH,GAAI,OACJ,YAAa,iCACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,cACJ,YAAa,mBACf,EAEOA,EAAC,OAAS,CACf,EAAG,cACH,GAAI,YACJ,YAAa,aACf,EAEOA,EAAC,SAAW,CACjB,EAAG,cACH,GAAI,YACJ,YAAa,uBACf,EAEOA,EAAC,OAAS,CACf,EAAG,YACH,EAAG,YACH,YAAa,aACf,EAEOA,EAAC,OAAS,CACf,EAAG,cACH,GAAI,SACJ,YAAa,kBACf,EAEOA,EAAC,OAAS,CACf,EAAG,oBACH,GAAI,kBACJ,YAAa,aACf,EAEOA,EAAC,IAAM,CACZ,EAAG,YACH,GAAI,OACJ,YAAa,iCACf,EAEOA,EAAC,OAAS,CACf,EAAG,QACH,GAAI,MACJ,YAAa,yBACf,EAEOA,EAAC,QAAU,CAChB,EAAG,aACH,GAAI,SACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,cACH,GAAI,SACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,cACH,GAAI,SACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,cACH,GAAI,SACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,cACH,GAAI,SACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,cACH,GAAI,SACJ,YAAa,2BACf,EAEOA,EAAC,QAAU,CAChB,EAAG,QACH,GAAI,MACJ,YAAa,8BACf,EAEOA,EAAC,SAAW,CACjB,EAAG,QACH,GAAI,MACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,QACH,GAAI,MACJ,YAAa,cACf,EAEOA,EAAC,QAAU,CAChB,EAAG,QACH,GAAI,MACJ,YAAa,cACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,IACJ,YAAa,OACf,EAEOA,EAAC,KAAO,CACb,EAAG,QACH,GAAI,IACJ,YAAa,8BACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,OACJ,YAAa,YACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,QACJ,YAAa,YACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,IACJ,YAAa,iBACf,EAEOA,EAAC,SAAW,CACjB,EAAG,YACH,EAAG,YACH,YAAa,wBACf,EAEOA,EAAC,QAAU,CAChB,EAAG,QACH,GAAI,QACJ,YAAa,uBACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,MACJ,YAAa,kBACf,EAEOA,EAAC,OAAS,CACf,EAAG,QACH,EAAG,eACH,YAAa,gBACf,EAEOA,EAAC,QAAU,CAChB,EAAG,QACH,EAAG,eACH,YAAa,SACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,MACJ,YAAa,QACf,EAEOA,EAAC,MAAQ,CACd,EAAG,QACH,GAAI,OACJ,YAAa,QACf,EAEOA,EAAC,KAAO,CACb,EAAG,QACH,GAAI,OACJ,YAAa,QACf,EAEO,IAAIC,GAAQ/H,EAAQ,MAAQ,CACjC,EAAG,QACH,GAAI,cACJ,YAAa,QACf,EAEO8H,EAAC,OAAS,CACf,EAAG,QACH,EAAG,QACH,YAAa,2BACf,EC9PO,SAASE,GAAahH,EAAGiH,EAAGC,EAAIC,EAAK,CAC1C,IAAIC,EAAKpH,EAAIA,EACTqH,EAAKJ,EAAIA,EACTK,GAAMF,EAAKC,GAAMD,EACjBG,EAAI,EACJJ,GACFnH,GAAK,EAAIsH,GAAM/I,GAAQ+I,GAAM9I,GAAM8I,EAAK7I,KACxC2I,EAAKpH,EAAIA,EACTsH,EAAK,GAELC,EAAI,KAAK,KAAKD,CAAE,EAElB,IAAIE,GAAOJ,EAAKC,GAAMA,EACtB,MAAO,CACL,GAAIC,EACJ,EAAGC,EACH,IAAKC,CACT,CACA,CACO,SAASC,GAAOzH,EAAGiH,EAAGC,EAAIQ,EAAOD,EAAQ,CAC9C,GAAI,CAACzH,EAAG,CACN,IAAI2H,EAAUxI,EAAMyI,EAAWF,CAAK,EAC/BC,IACHA,EAAUZ,IAEZ/G,EAAI2H,EAAQ,EACZV,EAAIU,EAAQ,EACZT,EAAKS,EAAQ,EACd,CAED,OAAIT,GAAM,CAACD,IACTA,GAAK,EAAM,EAAMC,GAAMlH,IAErBkH,IAAO,GAAK,KAAK,IAAIlH,EAAIiH,CAAC,EAAIvI,KAChC+I,EAAS,GACTR,EAAIjH,GAEC,CACL,EAAGA,EACH,EAAGiH,EACH,GAAIC,EACJ,OAAQO,CACZ,CACA,CC/CA,IAAIzI,EAAU,CAAA,EAEP6I,EAAC,MAAQ,CACd,QAAS,QACT,QAAS,QACT,UAAW,OACb,EAEOA,EAAC,OAAS,CACf,QAAS,yBACT,QAAS,SACT,UAAW,OACb,EAEOA,EAAC,OAAS,CACf,QAAS,uBACT,QAAS,QACT,UAAW,sCACb,EAEOA,EAAC,MAAQ,CACd,QAAS,QACT,QAAS,QACT,UAAW,2BACb,EAEOA,EAAC,MAAQ,CACd,SAAU,2CACV,QAAS,SACT,UAAW,2BACb,EAEOA,EAAC,QAAU,CAChB,QAAS,0CACT,QAAS,SACT,UAAW,6BACb,EAEOA,EAAC,SAAW,CACjB,QAAS,mBACT,QAAS,UACT,UAAW,uBACb,EAEOA,EAAC,cAAgB,CACtB,QAAS,kDACT,QAAS,SACT,UAAW,eACb,EAEOA,EAAC,OAAS,CACf,QAAS,qDACT,QAAS,OACT,UAAW,gBACb,EAEOA,EAAC,MAAQ,CACd,QAAS,qDACT,QAAS,WACT,UAAW,cACb,EAEOA,EAAC,WAAa,CACnB,QAAS,yBACT,QAAS,OACT,UAAW,YACb,EAEOA,EAAC,OAAS,CACf,QAAS,6CACT,QAAS,OACT,UAAW,iCACb,EAEOA,EAAC,OAAS,CACf,QAAS,yDACT,QAAS,OACT,UAAW,WACb,EAEOA,EAAC,OAAS,CACf,QAAS,aACT,QAAS,SACT,UAAW,gBACb,EAEOA,EAAC,SAAW,CACjB,QAAS,eACT,QAAS,SACT,UAAW,UACb,EAEOA,EAAC,cAAgB,CACtB,QAAS,cACT,QAAS,SACT,UAAW,uBACb,EAEOA,EAAC,MAAQ,CACd,QAAS,wDACT,QAAS,OACT,UAAW,4BACb,ECpGA,SAASC,GAAMC,EAAWC,EAAchI,EAAGiH,EAAGK,EAAIE,EAAKS,EAAU,CAC/D,IAAIjG,EAAM,CAAA,EAEV,OAAI+F,IAAc,QAAaA,IAAc,OAC3C/F,EAAI,WAAa/D,GAEjB+D,EAAI,WAAahE,GAGfgK,IACFhG,EAAI,aAAegG,EAAa,IAAI,UAAU,GAC1ChG,EAAI,aAAa,CAAC,IAAM,GAAKA,EAAI,aAAa,CAAC,IAAM,GAAKA,EAAI,aAAa,CAAC,IAAM,KACpFA,EAAI,WAAanE,IAEfmE,EAAI,aAAa,OAAS,IACxBA,EAAI,aAAa,CAAC,IAAM,GAAKA,EAAI,aAAa,CAAC,IAAM,GAAKA,EAAI,aAAa,CAAC,IAAM,GAAKA,EAAI,aAAa,CAAC,IAAM,KACjHA,EAAI,WAAalE,GACjBkE,EAAI,aAAa,CAAC,GAAK3D,GACvB2D,EAAI,aAAa,CAAC,GAAK3D,GACvB2D,EAAI,aAAa,CAAC,GAAK3D,GACvB2D,EAAI,aAAa,CAAC,EAAKA,EAAI,aAAa,CAAC,EAAI,IAAa,IAK5DiG,IACFjG,EAAI,WAAajE,GACjBiE,EAAI,MAAQiG,GAEdjG,EAAI,EAAIhC,EACRgC,EAAI,EAAIiF,EACRjF,EAAI,GAAKsF,EACTtF,EAAI,IAAMwF,EACHxF,CACT,CC9BA,IAAIkG,GAAiB,CAAA,EAMN,SAASC,GAAQ9I,EAAK+I,EAAM,CACzC,IAAIC,EAAO,IAAI,SAASD,CAAI,EACxBE,EAAiBC,GAAmBF,CAAI,EACxCG,EAASC,GAAWJ,EAAMC,CAAc,EACxCE,EAAO,UAAY,GACrB,QAAQ,IAAI,qFAAqF,EAEnG,IAAIE,EAAWC,GAAaN,EAAMG,EAAQF,CAAc,EACpDH,EAAU,CAAC,OAAQK,EAAQ,SAAUE,CAAQ,EACjD,OAAAR,GAAe7I,CAAG,EAAI8I,EACfA,CACT,CAKO,SAASS,GAAYX,EAAU,CAEpC,GAAIA,IAAa,OAAa,OAAO,KACrC,IAAIY,EAAQZ,EAAS,MAAM,GAAG,EAC9B,OAAOY,EAAM,IAAIC,EAAkB,CACrC,CAEA,SAASA,GAAmBhH,EAAO,CACjC,GAAIA,EAAM,SAAW,EACnB,OAAO,KAET,IAAIiH,EAAWjH,EAAM,CAAC,IAAM,IAI5B,OAHIiH,IACFjH,EAAQA,EAAM,MAAM,CAAC,GAEnBA,IAAU,OACL,CAAC,KAAM,OAAQ,UAAW,CAACiH,EAAU,KAAM,KAAM,OAAQ,EAAI,EAE/D,CACL,KAAMjH,EACN,UAAW,CAACiH,EACZ,KAAMb,GAAepG,CAAK,GAAK,KAC/B,OAAQ,EACZ,CACA,CAEA,SAASkH,GAAiBC,EAAS,CACjC,OAAQA,EAAU,KAAQ,KAAK,GAAK,GACtC,CAEA,SAASV,GAAmBF,EAAM,CAChC,IAAIa,EAAUb,EAAK,SAAS,EAAG,EAAK,EACpC,OAAIa,IAAY,GACP,IAETA,EAAUb,EAAK,SAAS,EAAG,EAAI,EAC3Ba,IAAY,IACd,QAAQ,KAAK,mEAAmE,EAE3E,GACT,CAEA,SAAST,GAAWJ,EAAMC,EAAgB,CACxC,MAAO,CACL,QAASD,EAAK,SAAS,EAAGC,CAAc,EACxC,eAAgBD,EAAK,SAAS,GAAIC,CAAc,EAChD,UAAWD,EAAK,SAAS,GAAIC,CAAc,EAC3C,UAAWa,GAAad,EAAM,GAAI,GAAK,CAAC,EAAE,KAAM,EAChD,kBAAmBA,EAAK,WAAW,IAAKC,CAAc,EACtD,kBAAmBD,EAAK,WAAW,IAAKC,CAAc,EACtD,gBAAiBD,EAAK,WAAW,IAAKC,CAAc,EACpD,gBAAiBD,EAAK,WAAW,IAAKC,CAAc,CACxD,CACA,CAEA,SAASa,GAAad,EAAMzB,EAAOwC,EAAK,CACtC,OAAO,OAAO,aAAa,MAAM,KAAM,IAAI,WAAWf,EAAK,OAAO,MAAMzB,EAAOwC,CAAG,CAAC,CAAC,CACtF,CAEA,SAAST,GAAaN,EAAMG,EAAQF,EAAgB,CAGlD,QAFIe,EAAa,IACbR,EAAQ,CAAA,EACHrJ,EAAI,EAAGA,EAAIgJ,EAAO,UAAWhJ,IAAK,CACzC,IAAI8J,EAAYC,GAAelB,EAAMgB,EAAYf,CAAc,EAC3DkB,EAAQC,GAAcpB,EAAMgB,EAAYC,EAAWhB,CAAc,EACjEoB,EAAiB,KAAK,MACxB,GAAKJ,EAAU,eAAiBA,EAAU,gBAAkBA,EAAU,iBAAiB,EACrFK,EAAiB,KAAK,MACxB,GAAKL,EAAU,cAAgBA,EAAU,eAAiBA,EAAU,gBAAgB,EAEtFT,EAAM,KAAK,CACT,GAAI,CAACG,GAAiBM,EAAU,cAAc,EAAGN,GAAiBM,EAAU,aAAa,CAAC,EAC1F,IAAK,CAACN,GAAiBM,EAAU,iBAAiB,EAAGN,GAAiBM,EAAU,gBAAgB,CAAC,EACjG,IAAK,CAACI,EAAgBC,CAAc,EACpC,MAAOL,EAAU,cACjB,IAAKM,GAASJ,CAAK,CACzB,CAAK,CACF,CACD,OAAOX,CACT,CAEA,SAASe,GAASJ,EAAO,CACvB,OAAOA,EAAM,IAAI,SAAUK,EAAG,CAAC,MAAO,CAACb,GAAiBa,EAAE,cAAc,EAAGb,GAAiBa,EAAE,aAAa,CAAC,CAAE,CAAC,CACjH,CAEA,SAASN,GAAelB,EAAMyB,EAAQxB,EAAgB,CACpD,MAAO,CACL,KAAMa,GAAad,EAAMyB,EAAS,EAAGA,EAAS,EAAE,EAAE,KAAM,EACxD,OAAQX,GAAad,EAAMyB,EAAS,GAAIA,EAAS,GAAK,CAAC,EAAE,KAAM,EAC/D,cAAezB,EAAK,WAAWyB,EAAS,GAAIxB,CAAc,EAC1D,cAAeD,EAAK,WAAWyB,EAAS,GAAIxB,CAAc,EAC1D,eAAgBD,EAAK,WAAWyB,EAAS,IAAKxB,CAAc,EAC5D,eAAgBD,EAAK,WAAWyB,EAAS,IAAKxB,CAAc,EAC5D,iBAAkBD,EAAK,WAAWyB,EAAS,IAAKxB,CAAc,EAC9D,kBAAmBD,EAAK,WAAWyB,EAAS,IAAKxB,CAAc,EAC/D,cAAeD,EAAK,SAASyB,EAAS,IAAKxB,CAAc,CAC7D,CACA,CAEA,SAASmB,GAAcpB,EAAMyB,EAAQC,EAAYzB,EAAgB,CAI/D,QAHI0B,EAAcF,EAAS,IACvBG,EAAmB,GACnBC,EAAmB,CAAA,EACd1K,EAAI,EAAGA,EAAIuK,EAAW,cAAevK,IAAK,CACjD,IAAI2K,EAAS,CACX,cAAe9B,EAAK,WAAW2B,EAAcxK,EAAIyK,EAAkB3B,CAAc,EACjF,eAAgBD,EAAK,WAAW2B,EAAcxK,EAAIyK,EAAmB,EAAG3B,CAAc,EACtF,iBAAkBD,EAAK,WAAW2B,EAAcxK,EAAIyK,EAAmB,EAAG3B,CAAc,EACxF,kBAAmBD,EAAK,WAAW2B,EAAcxK,EAAIyK,EAAmB,GAAI3B,CAAc,CAChG,EACI4B,EAAiB,KAAKC,CAAM,CAC7B,CACD,OAAOD,CACT,CCpIA,SAASE,EAAWC,EAAQC,EAAU,CACpC,GAAI,EAAE,gBAAgBF,GACpB,OAAO,IAAIA,EAAWC,CAAO,EAE/BC,EAAWA,GAAY,SAASC,EAAM,CACpC,GAAGA,EACD,MAAMA,CAEZ,EACE,IAAIC,EAAOC,GAAUJ,CAAO,EAC5B,GAAG,OAAOG,GAAS,SAAS,CAC1BF,EAASD,CAAO,EAChB,MACD,CACD,IAAIK,EAAUN,EAAW,YAAY,IAAII,EAAK,QAAQ,EACtD,GAAG,CAACE,EAAQ,CACVJ,EAASD,CAAO,EAChB,MACD,CACD,GAAIG,EAAK,WAAaA,EAAK,YAAc,OAAQ,CAC/C,IAAIG,EAAWxL,EAAMyL,EAAOJ,EAAK,SAAS,EACtCG,IACFH,EAAK,aAAeA,EAAK,eAAiBG,EAAS,QAAUA,EAAS,QAAQ,MAAM,GAAG,EAAI,MAC3FH,EAAK,MAAQG,EAAS,QACtBH,EAAK,UAAYG,EAAS,UAAYA,EAAS,UAAYH,EAAK,UAEnE,CACDA,EAAK,GAAKA,EAAK,IAAM,EACrBA,EAAK,KAAOA,EAAK,MAAQ,MACzBA,EAAK,MAAQA,EAAK,OAAS,QAC3BA,EAAK,KAAOA,EAAK,MAAQA,EAAK,KAE9B,IAAIK,EAAUC,GAAUN,EAAK,EAAGA,EAAK,EAAGA,EAAK,GAAIA,EAAK,MAAOA,EAAK,MAAM,EACpEO,EAAMC,GAAgBH,EAAQ,EAAGA,EAAQ,EAAGA,EAAQ,GAAIL,EAAK,GAAG,EAChEvC,EAAWW,GAAY4B,EAAK,QAAQ,EACpCS,EAAWT,EAAK,OAAS1C,GAAM0C,EAAK,UAAWA,EAAK,aAAcK,EAAQ,EAAGA,EAAQ,EAAGE,EAAI,GAAIA,EAAI,IACtG9C,CAAQ,EAEV1D,GAAO,KAAMiG,CAAI,EACjBjG,GAAO,KAAMmG,CAAO,EAGpB,KAAK,EAAIG,EAAQ,EACjB,KAAK,EAAIA,EAAQ,EACjB,KAAK,GAAKA,EAAQ,GAClB,KAAK,OAASA,EAAQ,OAGtB,KAAK,GAAKE,EAAI,GACd,KAAK,EAAIA,EAAI,EACb,KAAK,IAAMA,EAAI,IAGf,KAAK,MAAQE,EAGb,KAAK,KAAI,EAGTX,EAAS,KAAM,IAAI,CAErB,CACAF,EAAW,YAAcvD,GACzBuD,EAAW,YAAY,MAAO,ECtEvB,SAASc,GAAczG,EAAQ0G,EAAM,CAC1C,OAAI1G,EAAO,aAAe0G,EAAK,YAEpB1G,EAAO,IAAM0G,EAAK,GAAK,KAAK,IAAI1G,EAAO,GAAK0G,EAAK,EAAE,EAAI,MADzD,GAKE1G,EAAO,aAAe5G,GACvB4G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,EACnJ1G,EAAO,aAAe3G,GACvB2G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,GAAK1G,EAAO,aAAa,CAAC,IAAM0G,EAAK,aAAa,CAAC,EAEjW,EAEX,CAeO,SAASC,GAAqBnL,EAAGqH,EAAItH,EAAG,CAC7C,IAAIqL,EAAYpL,EAAE,EACdqL,EAAWrL,EAAE,EACbsL,EAAStL,EAAE,EAAIA,EAAE,EAAI,EAErBuL,EACAC,EACAC,EACAC,EAOJ,GAAIL,EAAW,CAAChN,GAAWgN,EAAW,OAAShN,EAC7CgN,EAAW,CAAChN,UACHgN,EAAWhN,GAAWgN,EAAW,MAAQhN,EAClDgN,EAAWhN,MACN,IAAIgN,EAAW,CAAChN,EAGrB,MAAO,CAAE,EAAG,KAAW,EAAG,KAAW,EAAG2B,EAAE,GACrC,GAAIqL,EAAWhN,EAEpB,MAAO,CAAE,EAAG,IAAU,EAAG,IAAU,EAAG2B,EAAE,GAG1C,OAAIoL,EAAY,KAAK,KACnBA,GAAc,EAAI,KAAK,IAEzBI,EAAU,KAAK,IAAIH,CAAQ,EAC3BK,EAAU,KAAK,IAAIL,CAAQ,EAC3BI,EAAWD,EAAUA,EACrBD,EAAKxL,EAAK,KAAK,KAAK,EAAQsH,EAAKoE,CAAQ,EAClC,CACL,GAAIF,EAAKD,GAAUI,EAAU,KAAK,IAAIN,CAAS,EAC/C,GAAIG,EAAKD,GAAUI,EAAU,KAAK,IAAIN,CAAS,EAC/C,GAAKG,GAAM,EAAIlE,GAAOiE,GAAUE,CACpC,CACA,CAEO,SAASG,GAAqB3L,EAAGqH,EAAItH,EAAGiH,EAAG,CAGhD,IAAI4E,EAAQ,MACRC,EAAUD,EAAQA,EAClBE,EAAU,GAEVC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAAI5M,EAAE,EACN6M,EAAI7M,EAAE,EACN8M,EAAI9M,EAAE,EAAIA,EAAE,EAAI,EAChBoL,EACAC,EACAC,EAMJ,GAJAS,EAAI,KAAK,KAAKa,EAAIA,EAAIC,EAAIA,CAAC,EAC3Bb,EAAK,KAAK,KAAKY,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAAC,EAGhCf,EAAIhM,EAAI6L,GAOV,GAJAR,EAAY,EAIRY,EAAKjM,EAAI6L,EACX,OAAAP,EAAWhN,EACXiN,EAAS,CAACtE,EACH,CACL,EAAGhH,EAAE,EACL,EAAGA,EAAE,EACL,EAAGA,EAAE,CACb,OAKIoL,EAAY,KAAK,MAAMyB,EAAGD,CAAC,EAY7BX,EAAKa,EAAId,EACTE,EAAKH,EAAIC,EACTG,EAAK,EAAM,KAAK,KAAK,EAAM9E,GAAM,EAAMA,GAAM6E,EAAKA,CAAE,EACpDI,EAAQJ,GAAM,EAAM7E,GAAM8E,EAC1BI,EAAQN,EAAKE,EACbQ,EAAO,EAIP,GACEA,IACAN,EAAKtM,EAAI,KAAK,KAAK,EAAMsH,EAAKkF,EAAQA,CAAK,EAG3CjB,EAASS,EAAIO,EAAQQ,EAAIP,EAAQF,GAAM,EAAMhF,EAAKkF,EAAQA,GAE1DH,EAAK/E,EAAKgF,GAAMA,EAAKf,GACrBa,EAAK,EAAM,KAAK,KAAK,EAAMC,GAAM,EAAMA,GAAMF,EAAKA,CAAE,EACpDM,EAAON,GAAM,EAAME,GAAMD,EACzBM,EAAOR,EAAKE,EACZO,EAAQD,EAAOH,EAAQE,EAAOD,EAC9BD,EAAQE,EACRD,EAAQE,QAEHC,EAAQA,EAAQb,GAAUc,EAAOb,GAGxC,OAAAT,EAAW,KAAK,KAAKoB,EAAO,KAAK,IAAID,CAAI,CAAC,EACnC,CACL,EAAGpB,EACH,EAAGC,EACH,EAAGC,CACP,CACA,CAYO,SAASyB,GAAkB/M,EAAGgN,EAAYjF,EAAc,CAE7D,GAAIiF,IAAepP,GAGjB,MAAO,CACL,EAAGoC,EAAE,EAAI+H,EAAa,CAAC,EACvB,EAAG/H,EAAE,EAAI+H,EAAa,CAAC,EACvB,EAAG/H,EAAE,EAAI+H,EAAa,CAAC,CAC7B,EACS,GAAIiF,IAAenP,GAAY,CACpC,IAAIoP,EAAQlF,EAAa,CAAC,EACtBmF,EAAQnF,EAAa,CAAC,EACtBoF,EAAQpF,EAAa,CAAC,EACtBqF,EAAQrF,EAAa,CAAC,EACtBsF,EAAQtF,EAAa,CAAC,EACtBuF,EAAQvF,EAAa,CAAC,EACtBwF,EAAOxF,EAAa,CAAC,EAGzB,MAAO,CACL,EAAGwF,GAAQvN,EAAE,EAAIsN,EAAQtN,EAAE,EAAIqN,EAAQrN,EAAE,GAAKiN,EAC9C,EAAGM,GAAQD,EAAQtN,EAAE,EAAIA,EAAE,EAAIoN,EAAQpN,EAAE,GAAKkN,EAC9C,EAAGK,GAAQ,CAACF,EAAQrN,EAAE,EAAIoN,EAAQpN,EAAE,EAAIA,EAAE,GAAKmN,CACrD,CACG,CACH,CAMO,SAASK,GAAoBxN,EAAGgN,EAAYjF,EAAc,CAE/D,GAAIiF,IAAepP,GAGjB,MAAO,CACL,EAAGoC,EAAE,EAAI+H,EAAa,CAAC,EACvB,EAAG/H,EAAE,EAAI+H,EAAa,CAAC,EACvB,EAAG/H,EAAE,EAAI+H,EAAa,CAAC,CAC7B,EAES,GAAIiF,IAAenP,GAAY,CACpC,IAAIoP,EAAQlF,EAAa,CAAC,EACtBmF,EAAQnF,EAAa,CAAC,EACtBoF,EAAQpF,EAAa,CAAC,EACtBqF,EAAQrF,EAAa,CAAC,EACtBsF,EAAQtF,EAAa,CAAC,EACtBuF,EAAQvF,EAAa,CAAC,EACtBwF,EAAOxF,EAAa,CAAC,EACrB0F,GAASzN,EAAE,EAAIiN,GAASM,EACxBG,GAAS1N,EAAE,EAAIkN,GAASK,EACxBI,GAAS3N,EAAE,EAAImN,GAASI,EAI5B,MAAO,CACL,EAAGE,EAAQH,EAAQI,EAAQL,EAAQM,EACnC,EAAG,CAACL,EAAQG,EAAQC,EAAQN,EAAQO,EACpC,EAAGN,EAAQI,EAAQL,EAAQM,EAAQC,CACzC,CACG,CACH,CCxOA,SAASC,GAAYzK,EAAM,CACzB,OAAQA,IAASvF,IAAcuF,IAAStF,EAC1C,CAEe,SAAAgQ,GAASrJ,EAAQ0G,EAAM4C,EAAO,CAS3C,GAPI7C,GAAczG,EAAQ0G,CAAI,GAO1B1G,EAAO,aAAexG,IAAekN,EAAK,aAAelN,GAC3D,OAAO8P,EAIT,IAAIC,EAAWvJ,EAAO,EAClBwJ,EAAYxJ,EAAO,GACvB,GAAIA,EAAO,aAAe1G,GAAe,CACvC,IAAImQ,EAAgBC,GAAe1J,EAAQ,GAAOsJ,CAAK,EACvD,GAAIG,IAAkB,EACpB,OAEFF,EAAW9P,GACX+P,EAAY7P,EACb,CAED,IAAIgQ,EAASjD,EAAK,EACdkD,EAASlD,EAAK,EACdmD,EAAUnD,EAAK,GAQnB,GAPIA,EAAK,aAAepN,KACtBqQ,EAASlQ,GACTmQ,EAASlQ,GACTmQ,EAAUlQ,IAIR6P,IAAcK,GAAWN,IAAaI,GAAU,CAACP,GAAYpJ,EAAO,UAAU,GAAM,CAACoJ,GAAY1C,EAAK,UAAU,EAClH,OAAO4C,EAcT,GAVAA,EAAQ3C,GAAqB2C,EAAOE,EAAWD,CAAQ,EAEnDH,GAAYpJ,EAAO,UAAU,IAC/BsJ,EAAQf,GAAkBe,EAAOtJ,EAAO,WAAYA,EAAO,YAAY,GAErEoJ,GAAY1C,EAAK,UAAU,IAC7B4C,EAAQN,GAAoBM,EAAO5C,EAAK,WAAYA,EAAK,YAAY,GAEvE4C,EAAQnC,GAAqBmC,EAAOO,EAASF,EAAQC,CAAM,EAEvDlD,EAAK,aAAepN,GAAe,CACrC,IAAIwQ,EAAsBJ,GAAehD,EAAM,GAAM4C,CAAK,EAC1D,GAAIQ,IAAwB,EAC1B,MAEH,CAED,OAAOR,CACT,CAEO,SAASI,GAAe1J,EAAQsB,EAASgI,EAAO,CACrD,GAAItJ,EAAO,QAAU,MAAQA,EAAO,MAAM,SAAW,EACnD,eAAQ,IAAI,4BAA4B,EACjC,GAMT,QAJIjC,EAAQ,CAAC,EAAG,CAACuL,EAAM,EAAG,EAAGA,EAAM,CAAC,EAChCS,EAAS,CAAC,EAAG,OAAO,IAAK,EAAG,OAAO,GAAG,EAEtCC,EAAiB,CAAA,EACZjP,EAAI,EAAGA,EAAIiF,EAAO,MAAM,OAAQjF,IAAK,CAC5C,IAAIkP,EAAOjK,EAAO,MAAMjF,CAAC,EAEzB,GADAiP,EAAe,KAAKC,EAAK,IAAI,EACzBA,EAAK,OAAQ,CACfF,EAAShM,EACT,KACD,CAED,GADqBkM,EAAK,UACtBA,EAAK,OAAS,KAAM,CACtB,GAAIA,EAAK,UACP,eAAQ,IAAI,kCAAoCA,EAAK,KAAO,GAAG,EACxD,GAET,QACD,CACD,IAAIC,EAAUD,EAAK,KAAK,SAAS,CAAC,EAE9BE,GAAW,KAAK,IAAID,EAAQ,IAAI,CAAC,CAAC,EAAI,KAAK,IAAIA,EAAQ,IAAI,CAAC,CAAC,GAAK,IAClEE,EAAOF,EAAQ,GAAG,CAAC,EAAIC,EACvBE,EAAOH,EAAQ,GAAG,CAAC,EAAIC,EACvBG,EAAOJ,EAAQ,GAAG,CAAC,GAAKA,EAAQ,IAAI,CAAC,EAAI,GAAKA,EAAQ,IAAI,CAAC,EAAIC,EAC/DI,EAAOL,EAAQ,GAAG,CAAC,GAAKA,EAAQ,IAAI,CAAC,EAAI,GAAKA,EAAQ,IAAI,CAAC,EAAIC,EACnE,GAAI,EAAAE,EAAOtM,EAAM,GAAKqM,EAAOrM,EAAM,GAAKwM,EAAOxM,EAAM,GAAKuM,EAAOvM,EAAM,KAGvEgM,EAASS,GAAkBzM,EAAOuD,EAAS4I,CAAO,EAC9C,CAAC,MAAMH,EAAO,CAAC,GACjB,KAEH,CACD,OAAI,MAAMA,EAAO,CAAC,GAChB,QAAQ,IAAI,mDACV,CAAChM,EAAM,EAAI5D,EAAM,IAAM4D,EAAM,EAAI5D,EAAM,YAAc6P,EAAiB,GAAG,EACpE,KAETV,EAAM,EAAI,CAACS,EAAO,EAClBT,EAAM,EAAIS,EAAO,EACV,EACT,CAEA,SAASS,GAAkBC,EAAKnJ,EAASoJ,EAAI,CAC3C,IAAIC,EAAM,CAAC,EAAG,OAAO,IAAK,EAAG,OAAO,GAAG,EACvC,GAAI,MAAMF,EAAI,CAAC,EAAK,OAAOE,EAC3B,IAAIC,EAAK,CAAC,EAAGH,EAAI,EAAG,EAAGA,EAAI,CAAC,EAC5BG,EAAG,GAAKF,EAAG,GAAG,CAAC,EACfE,EAAG,GAAKF,EAAG,GAAG,CAAC,EACfE,EAAG,EAAInK,EAAWmK,EAAG,EAAI,KAAK,EAAE,EAAI,KAAK,GACzC,IAAI,EAAIC,GAAeD,EAAIF,CAAE,EAC7B,GAAIpJ,EAAS,CACX,GAAI,MAAM,EAAE,CAAC,EACX,OAAOqJ,EAET,EAAE,EAAIC,EAAG,EAAI,EAAE,EACf,EAAE,EAAIA,EAAG,EAAI,EAAE,EACf,IAAI7P,EAAI,EAAG+P,EAAM,MACbC,EAAKC,EACT,EAAG,CAED,GADAA,EAAMH,GAAe,EAAGH,CAAE,EACtB,MAAMM,EAAI,CAAC,EAAG,CAChB,QAAQ,IAAI,2FAA2F,EACvG,KACD,CACDD,EAAM,CAAC,EAAGH,EAAG,GAAKI,EAAI,EAAI,EAAE,GAAI,EAAGJ,EAAG,GAAKI,EAAI,EAAI,EAAE,EAAE,EACvD,EAAE,GAAKD,EAAI,EACX,EAAE,GAAKA,EAAI,CACZ,OAAQhQ,KAAO,KAAK,IAAIgQ,EAAI,CAAC,EAAID,GAAO,KAAK,IAAIC,EAAI,CAAC,EAAID,GAC3D,GAAI/P,EAAI,EACN,eAAQ,IAAI,iDAAiD,EACtD4P,EAETA,EAAI,EAAIlK,EAAW,EAAE,EAAIiK,EAAG,GAAG,CAAC,CAAC,EACjCC,EAAI,EAAI,EAAE,EAAID,EAAG,GAAG,CAAC,CACzB,MACS,MAAM,EAAE,CAAC,IACZC,EAAI,EAAIF,EAAI,EAAI,EAAE,EAClBE,EAAI,EAAIF,EAAI,EAAI,EAAE,GAGtB,OAAOE,CACT,CAEA,SAASE,GAAeJ,EAAKC,EAAI,CAC/B,IAAIO,EAAI,CAAC,EAAGR,EAAI,EAAIC,EAAG,IAAI,CAAC,EAAG,EAAGD,EAAI,EAAIC,EAAG,IAAI,CAAC,CAAC,EAC/CQ,EAAO,CAAC,EAAG,KAAK,MAAMD,EAAE,CAAC,EAAG,EAAG,KAAK,MAAMA,EAAE,CAAC,CAAC,EAC9CE,EAAO,CAAC,EAAGF,EAAE,EAAI,EAAMC,EAAK,EAAG,EAAGD,EAAE,EAAI,EAAMC,EAAK,CAAC,EACpDP,EAAK,CAAC,EAAG,OAAO,IAAK,EAAG,OAAO,GAAG,EAClCS,EAIJ,GAHIF,EAAK,EAAI,GAAKA,EAAK,GAAKR,EAAG,IAAI,CAAC,GAGhCQ,EAAK,EAAI,GAAKA,EAAK,GAAKR,EAAG,IAAI,CAAC,EAClC,OAAOC,EAETS,EAAOF,EAAK,EAAIR,EAAG,IAAI,CAAC,EAAKQ,EAAK,EAClC,IAAIG,EAAM,CAAC,EAAGX,EAAG,IAAIU,CAAG,EAAE,CAAC,EAAG,EAAGV,EAAG,IAAIU,CAAG,EAAE,CAAC,CAAC,EAC/CA,IACA,IAAIE,EAAK,CAAC,EAAGZ,EAAG,IAAIU,CAAG,EAAE,CAAC,EAAG,EAAGV,EAAG,IAAIU,CAAG,EAAE,CAAC,CAAC,EAC9CA,GAAOV,EAAG,IAAI,CAAC,EACf,IAAIa,EAAM,CAAC,EAAGb,EAAG,IAAIU,CAAG,EAAE,CAAC,EAAG,EAAGV,EAAG,IAAIU,CAAG,EAAE,CAAC,CAAC,EAC/CA,IACA,IAAII,EAAM,CAAC,EAAGd,EAAG,IAAIU,CAAG,EAAE,CAAC,EAAG,EAAGV,EAAG,IAAIU,CAAG,EAAE,CAAC,CAAC,EAC3CK,EAAMN,EAAK,EAAIA,EAAK,EAAGO,EAAMP,EAAK,GAAK,EAAMA,EAAK,GACpDQ,GAAO,EAAMR,EAAK,IAAM,EAAMA,EAAK,GAAIS,GAAO,EAAMT,EAAK,GAAKA,EAAK,EACrE,OAAAR,EAAI,EAAKgB,EAAMN,EAAI,EAAIK,EAAMJ,EAAI,EAAIM,EAAMJ,EAAI,EAAIC,EAAMF,EAAI,EAC7DZ,EAAI,EAAKgB,EAAMN,EAAI,EAAIK,EAAMJ,EAAI,EAAIM,EAAMJ,EAAI,EAAIC,EAAMF,EAAI,EACtDZ,CACT,CC/Le,SAAAkB,GAASC,EAAKC,EAAQzC,EAAO,CAC1C,IAAI0C,EAAM1C,EAAM,EACd2C,EAAM3C,EAAM,EACZ4C,EAAM5C,EAAM,GAAK,EACfhO,EAAG2P,EAAGlQ,EACNwC,EAAM,CAAA,EACV,IAAKxC,EAAI,EAAGA,EAAI,EAAGA,IACjB,GAAI,EAAAgR,GAAUhR,IAAM,GAAKuO,EAAM,IAAM,QAwBrC,OArBIvO,IAAM,GACRO,EAAI0Q,EACA,KAAK,QAAQF,EAAI,KAAK/Q,CAAC,CAAC,IAAM,GAChCkQ,EAAI,IAEJA,EAAI,KAIClQ,IAAM,GACbO,EAAI2Q,EACA,KAAK,QAAQH,EAAI,KAAK/Q,CAAC,CAAC,IAAM,GAChCkQ,EAAI,IAEJA,EAAI,MAIN3P,EAAI4Q,EACJjB,EAAI,KAEEa,EAAI,KAAK/Q,CAAC,EAAC,CACnB,IAAK,IACHwC,EAAI0N,CAAC,EAAI3P,EACT,MACF,IAAK,IACHiC,EAAI0N,CAAC,EAAI,CAAC3P,EACV,MACF,IAAK,IACHiC,EAAI0N,CAAC,EAAI3P,EACT,MACF,IAAK,IACHiC,EAAI0N,CAAC,EAAI,CAAC3P,EACV,MACF,IAAK,IACCgO,EAAM2B,CAAC,IAAM,SACf1N,EAAI,EAAIjC,GAEV,MACF,IAAK,IACCgO,EAAM2B,CAAC,IAAM,SACf1N,EAAI,EAAI,CAACjC,GAEX,MACF,QAEE,OAAO,IACR,CAEH,OAAOiC,CACT,CC5De,SAAQ4O,GAAEC,EAAM,CAC7B,IAAI7O,EAAM,CACR,EAAG6O,EAAM,CAAC,EACV,EAAGA,EAAM,CAAC,CACd,EACE,OAAIA,EAAM,OAAO,IACf7O,EAAI,EAAI6O,EAAM,CAAC,GAEbA,EAAM,OAAO,IACf7O,EAAI,EAAI6O,EAAM,CAAC,GAEV7O,CACT,CCZe,SAAQ8O,GAAE/C,EAAO,CAC9BgD,GAAWhD,EAAM,CAAC,EAClBgD,GAAWhD,EAAM,CAAC,CACpB,CACA,SAASgD,GAAWC,EAAK,CACvB,GAAI,OAAO,OAAO,UAAa,WAAY,CACzC,GAAI,OAAO,SAASA,CAAG,EACrB,OAEF,MAAM,IAAI,UAAU,oCAAoC,CACzD,CACD,GAAI,OAAOA,GAAQ,UAAYA,IAAQA,GAAO,CAAC,SAASA,CAAG,EACzD,MAAM,IAAI,UAAU,oCAAoC,CAE5D,CCPA,SAASC,GAAYxM,EAAQ0G,EAAM,CACjC,OAAS1G,EAAO,MAAM,aAAe5G,IAAc4G,EAAO,MAAM,aAAe3G,KAAeqN,EAAK,YAAc,UAAcA,EAAK,MAAM,aAAetN,IAAcsN,EAAK,MAAM,aAAerN,KAAe2G,EAAO,YAAc,OACvO,CAEe,SAASyM,GAAUzM,EAAQ0G,EAAM4C,EAAOoD,EAAa,CAClE,IAAIC,EAgBJ,GAfI,MAAM,QAAQrD,CAAK,IACrBA,EAAQsD,GAAQtD,CAAK,GAEvB+C,GAAY/C,CAAK,EAEbtJ,EAAO,OAAS0G,EAAK,OAAS8F,GAAYxM,EAAQ0G,CAAI,IACxDiG,EAAQ,IAAI5K,EAAK,OAAO,EACxBuH,EAAQmD,GAAUzM,EAAQ2M,EAAOrD,EAAOoD,CAAW,EACnD1M,EAAS2M,GAGPD,GAAe1M,EAAO,OAAS,QACjCsJ,EAAQuC,GAAY7L,EAAQ,GAAOsJ,CAAK,GAGtCtJ,EAAO,WAAa,UACtBsJ,EAAQ,CACN,EAAGA,EAAM,EAAIpP,EACb,EAAGoP,EAAM,EAAIpP,EACb,EAAGoP,EAAM,GAAK,CACpB,UAEQtJ,EAAO,WACTsJ,EAAQ,CACN,EAAGA,EAAM,EAAItJ,EAAO,SACpB,EAAGsJ,EAAM,EAAItJ,EAAO,SACpB,EAAGsJ,EAAM,GAAK,CACtB,GAEIA,EAAQtJ,EAAO,QAAQsJ,CAAK,EACxB,CAACA,EACH,OAUJ,GANItJ,EAAO,iBACTsJ,EAAM,GAAKtJ,EAAO,gBAIpBsJ,EAAQD,GAAgBrJ,EAAO,MAAO0G,EAAK,MAAO4C,CAAK,EACnD,EAACA,EAgCL,OA3BI5C,EAAK,iBACP4C,EAAQ,CACN,EAAGA,EAAM,EAAI5C,EAAK,eAClB,EAAG4C,EAAM,EACT,EAAGA,EAAM,GAAK,CACpB,GAGM5C,EAAK,WAAa,UAEpB4C,EAAQ,CACN,EAAGA,EAAM,EAAInP,EACb,EAAGmP,EAAM,EAAInP,EACb,EAAGmP,EAAM,GAAK,CACpB,GAEIA,EAAQ5C,EAAK,QAAQ4C,CAAK,EACtB5C,EAAK,WACP4C,EAAQ,CACN,EAAGA,EAAM,EAAI5C,EAAK,SAClB,EAAG4C,EAAM,EAAI5C,EAAK,SAClB,EAAG4C,EAAM,GAAK,CACtB,IAKMoD,GAAehG,EAAK,OAAS,MACxBmF,GAAYnF,EAAM,GAAM4C,CAAK,EAG/BA,CACT,CCzFA,IAAIqD,GAAQ5K,EAAK,OAAO,EAExB,SAAS8K,GAAYC,EAAMC,EAAIC,EAAQN,EAAa,CAClD,IAAIO,EAAkB1P,EAAK1C,EAC3B,OAAI,MAAM,QAAQmS,CAAM,GACtBC,EAAmBR,GAAUK,EAAMC,EAAIC,EAAQN,CAAW,GAAK,CAAC,EAAG,IAAK,EAAG,GAAG,EAC1EM,EAAO,OAAS,EACb,OAAOF,EAAK,KAAS,KAAeA,EAAK,OAAS,WAAe,OAAOC,EAAG,KAAS,KAAeA,EAAG,OAAS,UAC9G,OAAOE,EAAiB,GAAM,SACzB,CAACA,EAAiB,EAAGA,EAAiB,EAAGA,EAAiB,CAAC,EAAE,OAAOD,EAAO,OAAO,CAAC,CAAC,EAEpF,CAACC,EAAiB,EAAGA,EAAiB,EAAGD,EAAO,CAAC,CAAC,EAAE,OAAOA,EAAO,OAAO,CAAC,CAAC,EAG7E,CAACC,EAAiB,EAAGA,EAAiB,CAAC,EAAE,OAAOD,EAAO,OAAO,CAAC,CAAC,EAGlE,CAACC,EAAiB,EAAGA,EAAiB,CAAC,IAGhD1P,EAAMkP,GAAUK,EAAMC,EAAIC,EAAQN,CAAW,EAC7C7R,EAAO,OAAO,KAAKmS,CAAM,EACrBnS,EAAK,SAAW,GAGpBA,EAAK,QAAQ,SAAUD,EAAK,CAC1B,GAAK,OAAOkS,EAAK,KAAS,KAAeA,EAAK,OAAS,WAAe,OAAOC,EAAG,KAAS,KAAeA,EAAG,OAAS,WAClH,GAAInS,IAAQ,KAAOA,IAAQ,KAAOA,IAAQ,IACxC,eAGEA,IAAQ,KAAOA,IAAQ,IACzB,OAGJ2C,EAAI3C,CAAG,EAAIoS,EAAOpS,CAAG,CAC3B,CAAK,EACM2C,EAEX,CAEA,SAAS2P,GAAUzP,EAAM,CACvB,OAAIA,aAAgBsE,EACXtE,EAELA,EAAK,MACAA,EAAK,MAEPsE,EAAKtE,CAAI,CAClB,CAEA,SAAS0P,EAAMC,EAAUC,EAAQC,EAAO,CACtCF,EAAWF,GAAUE,CAAQ,EAC7B,IAAIG,EAAS,GACT5S,EAYJ,OAXI,OAAO0S,EAAW,KACpBA,EAASD,EACTA,EAAWT,GACXY,EAAS,KACA,OAAOF,EAAO,EAAM,KAAe,MAAM,QAAQA,CAAM,KAChEC,EAAQD,EACRA,EAASD,EACTA,EAAWT,GACXY,EAAS,IAEXF,EAASH,GAAUG,CAAM,EACrBC,EACKT,GAAYO,EAAUC,EAAQC,CAAK,GAE1C3S,EAAM,CACJ,QAAS,SAAUqS,EAAQN,EAAa,CACtC,OAAOG,GAAYO,EAAUC,EAAQL,EAAQN,CAAW,CACzD,EACD,QAAS,SAAUM,EAAQN,EAAa,CACtC,OAAOG,GAAYQ,EAAQD,EAAUJ,EAAQN,CAAW,CACzD,CACP,EACQa,IACF5S,EAAI,MAAQ0S,GAEP1S,EAEX,CC3EA,IAAI6S,GAAgB,EAQhBC,GAA4B,SAQ5BC,GAAyB,SAEzBC,GAAI,GACJC,EAAI,GACJC,EAAI,GACJC,GAAI,GACJxF,GAAI,GACOyF,GAAA,CACb,QAAS7M,GACT,QAASI,GACT,QAASsL,EACX,EAUO,SAAS1L,GAAQ8M,EAAIC,EAAU,CACpC,OAAAA,EAAWA,GAAY,EAChBC,GAAOC,GAAQ,CACpB,IAAKH,EAAG,CAAC,EACT,IAAKA,EAAG,CAAC,CACb,CAAG,EAAGC,CAAQ,CACd,CAUO,SAAS3M,GAAQyM,EAAM,CAC5B,IAAIK,EAAOC,GAAQC,GAAOP,EAAK,YAAa,CAAA,CAAC,EAC7C,OAAIK,EAAK,KAAOA,EAAK,IACZ,CAACA,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAKA,EAAK,GAAG,EAEzC,CAACA,EAAK,KAAMA,EAAK,OAAQA,EAAK,MAAOA,EAAK,GAAG,CACtD,CAEO,SAASxB,GAAQmB,EAAM,CAC5B,IAAIK,EAAOC,GAAQC,GAAOP,EAAK,YAAa,CAAA,CAAC,EAC7C,OAAIK,EAAK,KAAOA,EAAK,IACZ,CAACA,EAAK,IAAKA,EAAK,GAAG,EAErB,EAAEA,EAAK,KAAOA,EAAK,OAAS,GAAIA,EAAK,IAAMA,EAAK,QAAU,CAAC,CACpE,CAQA,SAASG,GAASC,EAAK,CACrB,OAAQA,GAAO,KAAK,GAAK,IAC3B,CASA,SAASC,GAASC,EAAK,CACrB,MAAQ,MAASA,EAAM,KAAK,GAC9B,CAaA,SAASP,GAAQH,EAAI,CACnB,IAAIW,EAAMX,EAAG,IACTY,EAAOZ,EAAG,IACVzS,EAAI,QACJsT,EAAa,UACbC,EAAK,MACLC,EACAC,EACAC,EAAGC,EAAGC,EAAG,EAAGC,EACZC,EAASd,GAASI,CAAG,EACrBW,EAAUf,GAASK,CAAI,EACvBW,EACAC,EAEJA,EAAa,KAAK,OAAOZ,EAAO,KAAO,CAAC,EAAI,EAGxCA,IAAS,MACXY,EAAa,IAIXb,GAAO,IAAQA,EAAM,IAAQC,GAAQ,GAAOA,EAAO,KACrDY,EAAa,IAIXb,GAAO,IAAQA,EAAM,KACnBC,GAAQ,GAAOA,EAAO,EACxBY,EAAa,GAENZ,GAAQ,GAAOA,EAAO,GAC7BY,EAAa,GAENZ,GAAQ,IAAQA,EAAO,GAC9BY,EAAa,GAENZ,GAAQ,IAAQA,EAAO,KAC9BY,EAAa,KAIjBT,GAAcS,EAAa,GAAK,EAAI,IAAM,EAG1CD,EAAgBhB,GAASQ,CAAU,EAEnCC,EAAmBH,GAAe,EAAIA,GAEtCI,EAAI1T,EAAI,KAAK,KAAK,EAAIsT,EAAa,KAAK,IAAIQ,CAAM,EAAI,KAAK,IAAIA,CAAM,CAAC,EACtEH,EAAI,KAAK,IAAIG,CAAM,EAAI,KAAK,IAAIA,CAAM,EACtCF,EAAIH,EAAkB,KAAK,IAAIK,CAAM,EAAI,KAAK,IAAIA,CAAM,EACxD,EAAI,KAAK,IAAIA,CAAM,GAAKC,EAAUC,GAElCH,EAAI7T,IAAM,EAAIsT,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,KAAOQ,GAAU,EAAIR,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,GAAKA,EAAaA,EAAaA,EAAa,MAAQ,KAAK,IAAI,EAAIQ,CAAM,GAAK,GAAKR,EAAaA,EAAa,IAAM,GAAKA,EAAaA,EAAaA,EAAa,MAAQ,KAAK,IAAI,EAAIQ,CAAM,EAAK,GAAKR,EAAaA,EAAaA,EAAa,KAAQ,KAAK,IAAI,EAAIQ,CAAM,GAE1b,IAAII,EAAcX,EAAKG,GAAK,GAAK,EAAIC,EAAIC,GAAK,EAAI,EAAI,EAAI,GAAO,EAAI,GAAKD,EAAIA,EAAIA,EAAI,GAAKC,EAAI,GAAKH,GAAmB,EAAI,EAAI,EAAI,EAAI,EAAI,KAAS,IAEhJU,EAAeZ,GAAMM,EAAIH,EAAI,KAAK,IAAII,CAAM,GAAK,EAAI,EAAI,GAAK,EAAIH,EAAI,EAAIC,EAAI,EAAIA,EAAIA,GAAK,EAAI,EAAI,EAAI,EAAI,IAAQ,GAAK,GAAKD,EAAIA,EAAIA,EAAI,IAAMC,EAAI,IAAMH,GAAmB,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,MACxM,OAAIL,EAAM,IACRe,GAAe,KAIV,CACL,SAAU,KAAK,MAAMA,CAAW,EAChC,QAAS,KAAK,MAAMD,CAAU,EAC9B,WAAYD,EACZ,WAAYG,GAAoBhB,CAAG,CACvC,CACA,CAiBA,SAASN,GAAQuB,EAAK,CAEpB,IAAIF,EAAcE,EAAI,SAClBH,EAAaG,EAAI,QACjBC,EAAaD,EAAI,WACjBE,EAAaF,EAAI,WAErB,GAAIE,EAAa,GAAKA,EAAa,GACjC,OAAO,KAGT,IAAIhB,EAAK,MACLvT,EAAI,QACJsT,EAAa,UACbG,EACAe,GAAM,EAAI,KAAK,KAAK,EAAIlB,CAAU,IAAM,EAAI,KAAK,KAAK,EAAIA,CAAU,GACpEmB,EAAIC,EAAIC,EAAIC,EAAIC,EAAGhB,EACnBL,EACAsB,EAAIC,EAGJ9P,EAAIiP,EAAa,IACjBpO,EAAIqO,EAMJG,EAAa,MACfxO,GAAK,KAKP0N,GAAce,EAAa,GAAK,EAAI,IAAM,EAI1Cd,EAAmBH,GAAe,EAAIA,GAEtCO,EAAI/N,EAAIyN,EACRuB,EAAKjB,GAAK7T,GAAK,EAAIsT,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,MAElHyB,EAAUD,GAAM,EAAIN,EAAK,EAAI,GAAKA,EAAKA,EAAKA,EAAK,IAAM,KAAK,IAAI,EAAIM,CAAE,GAAK,GAAKN,EAAKA,EAAK,GAAK,GAAKA,EAAKA,EAAKA,EAAKA,EAAK,IAAM,KAAK,IAAI,EAAIM,CAAE,EAAK,IAAMN,EAAKA,EAAKA,EAAK,GAAM,KAAK,IAAI,EAAIM,CAAE,EAG5LL,EAAKzU,EAAI,KAAK,KAAK,EAAIsT,EAAa,KAAK,IAAIyB,CAAO,EAAI,KAAK,IAAIA,CAAO,CAAC,EACzEL,EAAK,KAAK,IAAIK,CAAO,EAAI,KAAK,IAAIA,CAAO,EACzCJ,EAAKlB,EAAkB,KAAK,IAAIsB,CAAO,EAAI,KAAK,IAAIA,CAAO,EAC3DH,EAAK5U,GAAK,EAAIsT,GAAc,KAAK,IAAI,EAAIA,EAAa,KAAK,IAAIyB,CAAO,EAAI,KAAK,IAAIA,CAAO,EAAG,GAAG,EAChGF,EAAI5P,GAAKwP,EAAKlB,GAEd,IAAI1N,EAAMkP,EAAWN,EAAK,KAAK,IAAIM,CAAO,EAAIH,GAAOC,EAAIA,EAAI,GAAK,EAAI,EAAIH,EAAK,GAAKC,EAAK,EAAIA,EAAKA,EAAK,EAAIlB,GAAmBoB,EAAIA,EAAIA,EAAIA,EAAI,IAAM,GAAK,GAAKH,EAAK,IAAMC,EAAK,GAAKD,EAAKA,EAAK,IAAMjB,EAAkB,EAAIkB,EAAKA,GAAME,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAC5PhP,EAAMqN,GAASrN,CAAG,EAElB,IAAID,GAAOiP,GAAK,EAAI,EAAIH,EAAKC,GAAME,EAAIA,EAAIA,EAAI,GAAK,EAAI,EAAIF,EAAK,GAAKD,EAAK,EAAIC,EAAKA,EAAK,EAAIlB,EAAkB,GAAKiB,EAAKA,GAAMG,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAO,KAAK,IAAIE,CAAO,EAC1KnP,EAAM4N,EAAaN,GAAStN,CAAG,EAE/B,IAAIoP,EACJ,GAAIX,EAAI,SAAU,CAChB,IAAIY,EAAWnC,GAAQ,CACrB,SAAUuB,EAAI,SAAWA,EAAI,SAC7B,QAASA,EAAI,QAAUA,EAAI,SAC3B,WAAYA,EAAI,WAChB,WAAYA,EAAI,UACtB,CAAK,EACDW,EAAS,CACP,IAAKC,EAAS,IACd,MAAOA,EAAS,IAChB,OAAQpP,EACR,KAAMD,CACZ,CACG,MAECoP,EAAS,CACP,IAAKnP,EACL,IAAKD,CACX,EAEE,OAAOoP,CACT,CAUA,SAASZ,GAAoBvO,EAAK,CAGhC,IAAIqP,EAAmB,IAEvB,MAAK,KAAMrP,GAASA,GAAO,GACzBqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,GAC7BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,EAC7BqP,EAAmB,IAEX,EAAIrP,GAASA,GAAO,EAC5BqP,EAAmB,IAEX,EAAIrP,GAASA,GAAO,GAC5BqP,EAAmB,IAEX,GAAKrP,GAASA,GAAO,IAC7BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,IAC9BqP,EAAmB,IAEX,IAAMrP,GAASA,GAAO,MAC9BqP,EAAmB,KAEdA,CACT,CAWA,SAASvC,GAAO0B,EAAK3B,EAAU,CAE7B,IAAIyC,EAAW,QAAUd,EAAI,QAC3Be,EAAY,QAAUf,EAAI,SAE5B,OAAOA,EAAI,WAAaA,EAAI,WAAagB,GAAUhB,EAAI,QAASA,EAAI,SAAUA,EAAI,UAAU,EAAIc,EAAS,OAAOA,EAAS,OAAS,EAAGzC,CAAQ,EAAI0C,EAAU,OAAOA,EAAU,OAAS,EAAG1C,CAAQ,CAClM,CAYA,SAAS2C,GAAUC,EAASC,EAAUhB,EAAY,CAChD,IAAIiB,EAAUC,GAAkBlB,CAAU,EACtCmB,EAAY,KAAK,MAAMJ,EAAU,GAAM,EACvCK,EAAS,KAAK,MAAMJ,EAAW,GAAM,EAAI,GAC7C,OAAOK,GAAgBF,EAAWC,EAAQH,CAAO,CACnD,CASA,SAASC,GAAkBjW,EAAG,CAC5B,IAAIgW,EAAUhW,EAAIyS,GAClB,OAAIuD,IAAY,IACdA,EAAUvD,IAGLuD,CACT,CAkBA,SAASI,GAAgBC,EAAQC,EAAKC,EAAM,CAE1C,IAAIC,EAAQD,EAAO,EACfE,EAAY/D,GAA0B,WAAW8D,CAAK,EACtDE,EAAY/D,GAAuB,WAAW6D,CAAK,EAGnDG,EAASF,EAAYJ,EAAS,EAC9BO,EAASF,EAAYJ,EACrBO,EAAW,GAEXF,EAASpJ,KACXoJ,EAASA,EAASpJ,GAAIqF,GAAI,EAC1BiE,EAAW,KAGTF,IAAW9D,GAAM4D,EAAY5D,GAAK8D,EAAS9D,IAAQ8D,EAAS9D,GAAK4D,EAAY5D,IAAMgE,IACrFF,KAGEA,IAAW7D,GAAM2D,EAAY3D,GAAK6D,EAAS7D,IAAQ6D,EAAS7D,GAAK2D,EAAY3D,IAAM+D,KACrFF,IAEIA,IAAW9D,GACb8D,KAIAA,EAASpJ,KACXoJ,EAASA,EAASpJ,GAAIqF,GAAI,GAGxBgE,EAAS7D,IACX6D,EAASA,EAAS7D,GAAIH,GAAI,EAC1BiE,EAAW,IAGXA,EAAW,IAGPD,IAAW/D,GAAQ6D,EAAY7D,GAAO+D,EAAS/D,IAAW+D,EAAS/D,GAAO6D,EAAY7D,IAAOgE,IACjGD,KAGIA,IAAW9D,GAAQ4D,EAAY5D,GAAO8D,EAAS9D,IAAW8D,EAAS9D,GAAO4D,EAAY5D,IAAO+D,KACjGD,IAEIA,IAAW/D,GACb+D,KAIAA,EAAS7D,KACX6D,EAASA,EAAS7D,GAAIH,GAAI,GAG5B,IAAIkE,EAAY,OAAO,aAAaH,CAAM,EAAI,OAAO,aAAaC,CAAM,EACxE,OAAOE,CACT,CAUA,SAASvD,GAAOwD,EAAY,CAE1B,GAAIA,GAAcA,EAAW,SAAW,EACtC,KAAO,mCAWT,QARIC,EAASD,EAAW,OAEpBE,EAAO,KACPC,EAAK,GACLC,EACAnX,EAAI,EAGD,CAAE,QAAS,KAAKmX,EAAWJ,EAAW,OAAO/W,CAAC,CAAC,GAAG,CACvD,GAAIA,GAAK,EACP,KAAO,kCAAoC+W,EAE7CG,GAAMC,EACNnX,GACD,CAED,IAAI+U,EAAa,SAASmC,EAAI,EAAE,EAEhC,GAAIlX,IAAM,GAAKA,EAAI,EAAIgX,EAGrB,KAAO,kCAAoCD,EAG7C,IAAIjC,EAAaiC,EAAW,OAAO/W,GAAG,EAGtC,GAAI8U,GAAc,KAAOA,IAAe,KAAOA,IAAe,KAAOA,GAAc,KAAOA,IAAe,KAAOA,IAAe,IAC7H,KAAO,yBAA2BA,EAAa,iBAAmBiC,EAGpEE,EAAOF,EAAW,UAAU/W,EAAGA,GAAK,CAAC,EAWrC,QATIoX,EAAMnB,GAAkBlB,CAAU,EAElCsC,EAAWC,GAAmBL,EAAK,OAAO,CAAC,EAAGG,CAAG,EACjDG,EAAYC,GAAoBP,EAAK,OAAO,CAAC,EAAGG,CAAG,EAMhDG,EAAYE,GAAe3C,CAAU,GAC1CyC,GAAa,IAIf,IAAIG,EAAYV,EAAShX,EAEzB,GAAI0X,EAAY,IAAM,EACpB,KAAO;AAAA;AAAA;AAAA,iBAAsKX,EAG/K,IAAIY,EAAMD,EAAY,EAElBE,EAAa,EACbC,EAAc,EACdC,EAAeC,EAAkBC,EAAmBlC,EAASC,EACjE,OAAI4B,EAAM,IACRG,EAAgB,IAAW,KAAK,IAAI,GAAIH,CAAG,EAC3CI,EAAmBhB,EAAW,UAAU/W,EAAGA,EAAI2X,CAAG,EAClDC,EAAa,WAAWG,CAAgB,EAAID,EAC5CE,EAAoBjB,EAAW,UAAU/W,EAAI2X,CAAG,EAChDE,EAAc,WAAWG,CAAiB,EAAIF,GAGhDhC,EAAU8B,EAAaP,EACvBtB,EAAW8B,EAAcN,EAElB,CACL,QAASzB,EACT,SAAUC,EACV,WAAYjB,EACZ,WAAYC,EACZ,SAAU+C,CACd,CACA,CAYA,SAASR,GAAmB,EAAGF,EAAK,CAOlC,QAJIa,EAASvF,GAA0B,WAAW0E,EAAM,CAAC,EACrDc,EAAe,IACfC,EAAe,GAEZF,IAAW,EAAE,WAAW,CAAC,GAAG,CAQjC,GAPAA,IACIA,IAAWpF,GACboF,IAEEA,IAAWnF,GACbmF,IAEEA,EAAS1K,GAAG,CACd,GAAI4K,EACF,KAAO,kBAAoB,EAE7BF,EAASrF,GACTuF,EAAe,EAChB,CACDD,GAAgB,GACjB,CAED,OAAOA,CACT,CAkBA,SAASV,GAAoBtQ,EAAGkQ,EAAK,CAEnC,GAAIlQ,EAAI,IACN,KAAO,oCAAsCA,EAS/C,QAJIkR,EAASzF,GAAuB,WAAWyE,EAAM,CAAC,EAClDiB,EAAgB,EAChBF,EAAe,GAEZC,IAAWlR,EAAE,WAAW,CAAC,GAAG,CAUjC,GATAkR,IACIA,IAAWvF,GACbuF,IAEEA,IAAWtF,GACbsF,IAIEA,EAASrF,GAAG,CACd,GAAIoF,EACF,KAAO,kBAAoBjR,EAE7BkR,EAASxF,GACTuF,EAAe,EAChB,CACDE,GAAiB,GAClB,CAED,OAAOA,CACT,CAYA,SAASZ,GAAe3C,EAAY,CAClC,IAAIiB,EACJ,OAAQjB,EAAU,CAClB,IAAK,IACHiB,EAAW,KACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,EACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,QACEA,EAAW,EACZ,CACD,GAAIA,GAAY,EACd,OAAOA,EAGP,KAAO,wBAA0BjB,CAGrC,CCvuBA,SAASwD,GAAM7S,EAAGa,EAAGiS,EAAG,CACtB,GAAI,EAAE,gBAAgBD,IACpB,OAAO,IAAIA,GAAM7S,EAAGa,EAAGiS,CAAC,EAE1B,GAAI,MAAM,QAAQ9S,CAAC,EACjB,KAAK,EAAIA,EAAE,CAAC,EACZ,KAAK,EAAIA,EAAE,CAAC,EACZ,KAAK,EAAIA,EAAE,CAAC,GAAK,UACT,OAAOA,GAAM,SACrB,KAAK,EAAIA,EAAE,EACX,KAAK,EAAIA,EAAE,EACX,KAAK,EAAIA,EAAE,GAAK,UACP,OAAOA,GAAM,UAAY,OAAOa,EAAM,IAAa,CAC5D,IAAI2L,EAASxM,EAAE,MAAM,GAAG,EACxB,KAAK,EAAI,WAAWwM,EAAO,CAAC,EAAG,EAAE,EACjC,KAAK,EAAI,WAAWA,EAAO,CAAC,EAAG,EAAE,EACjC,KAAK,EAAI,WAAWA,EAAO,CAAC,EAAG,EAAE,GAAK,CAC1C,MACI,KAAK,EAAIxM,EACT,KAAK,EAAIa,EACT,KAAK,EAAIiS,GAAK,EAEhB,QAAQ,KAAK,6DAA6D,CAC5E,CAEAD,GAAM,SAAW,SAASE,EAAS,CACjC,OAAO,IAAIF,GAAMzG,GAAQ2G,CAAO,CAAC,CACnC,EACAF,GAAM,UAAU,OAAS,SAASpF,EAAU,CAC1C,OAAO/M,GAAQ,CAAC,KAAK,EAAG,KAAK,CAAC,EAAG+M,CAAQ,CAC3C,EChCA,IAAIuF,GAAM,EACNC,GAAM,IACNC,GAAM,QACNC,GAAM,UACNC,GAAM,gBACNC,GAAM,IACNC,GAAM,OACNC,GAAM,oBACNC,GAAM,oBACNC,GAAM,kBACNC,GAAM,oBACNC,GAAM,YAEK,SAAQC,GAACvR,EAAI,CAC1B,IAAIwR,EAAK,CAAA,EACTA,EAAG,CAAC,EAAIb,GAAM3Q,GAAM4Q,GAAM5Q,GAAM6Q,GAAM7Q,GAAM8Q,GAAM9Q,EAAK+Q,MACvDS,EAAG,CAAC,EAAIxR,GAAMgR,GAAMhR,GAAM6Q,GAAM7Q,GAAM8Q,GAAM9Q,EAAK+Q,MACjD,IAAI3I,EAAIpI,EAAKA,EACb,OAAAwR,EAAG,CAAC,EAAIpJ,GAAK6I,GAAMjR,GAAMkR,GAAMlR,EAAKmR,KACpC/I,GAAKpI,EACLwR,EAAG,CAAC,EAAIpJ,GAAKgJ,GAAMpR,EAAKqR,IACxBG,EAAG,CAAC,EAAIpJ,EAAIpI,EAAKsR,GACVE,CACT,CCvBe,SAAQC,GAAC3T,EAAK4T,EAAMC,EAAMH,EAAI,CAC3C,OAAAG,GAAQD,EACRA,GAAQA,EACAF,EAAG,CAAC,EAAI1T,EAAM6T,GAAQH,EAAG,CAAC,EAAIE,GAAQF,EAAG,CAAC,EAAIE,GAAQF,EAAG,CAAC,EAAIE,EAAOF,EAAG,CAAC,IACnF,CCDA,IAAII,GAAW,GAEA,SAAAC,GAASC,EAAK9R,EAAIwR,EAAI,CAGnC,QAFIO,EAAI,GAAK,EAAI/R,GACblC,EAAMgU,EACD5Z,EAAI0Z,GAAU1Z,EAAG,EAAEA,EAAG,CAC7B,IAAI8Z,EAAI,KAAK,IAAIlU,CAAG,EAChBsK,EAAI,EAAIpI,EAAKgS,EAAIA,EAKrB,GAFA5J,GAAKqJ,GAAQ3T,EAAKkU,EAAG,KAAK,IAAIlU,CAAG,EAAG0T,CAAE,EAAIM,IAAQ1J,EAAI,KAAK,KAAKA,CAAC,GAAK2J,EACtEjU,GAAOsK,EACH,KAAK,IAAIA,CAAC,EAAIhR,EAChB,OAAO0G,CAEV,CAED,OAAOA,CACT,CCVO,SAASM,IAAO,CACrB,KAAK,GAAK,KAAK,KAAO,OAAY,KAAK,GAAK,EAC5C,KAAK,GAAK,KAAK,KAAO,OAAY,KAAK,GAAK,EAC5C,KAAK,MAAQ,KAAK,QAAU,OAAY,KAAK,MAAQ,EACrD,KAAK,KAAO,KAAK,OAAS,OAAY,KAAK,KAAO,EAE9C,KAAK,KACP,KAAK,GAAKmT,GAAQ,KAAK,EAAE,EACzB,KAAK,IAAME,GAAQ,KAAK,KAAM,KAAK,IAAI,KAAK,IAAI,EAAG,KAAK,IAAI,KAAK,IAAI,EAAG,KAAK,EAAE,EAEnF,CAMO,SAASpT,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAERsZ,EAAYrU,EAAWU,EAAM,KAAK,KAAK,EACvCb,EACAE,EAAGa,EACH0T,EAAU,KAAK,IAAI3T,CAAG,EACtB4T,EAAU,KAAK,IAAI5T,CAAG,EAE1B,GAAK,KAAK,GA8BL,CACH,IAAI6T,EAAKD,EAAUF,EACfI,EAAM,KAAK,IAAID,EAAI,CAAC,EACpBE,EAAI,KAAK,IAAM,KAAK,IAAIH,EAAS,CAAC,EAClCI,EAAK,KAAK,IAAID,EAAG,CAAC,EAClBE,EAAK,KAAK,IAAIL,CAAO,EAAI/a,EAAQ,KAAK,IAAImH,CAAG,EAAI,EACjD6J,EAAI,KAAK,IAAIoK,EAAI,CAAC,EAClBvU,EAAK,KAAK,IAAImK,EAAG,CAAC,EACtB3K,EAAM,EAAI,KAAK,GAAK,KAAK,IAAIyU,EAAS,CAAC,EACvCE,EAAKA,EAAK,KAAK,KAAK3U,CAAG,EACvB,IAAIgV,EAAKhB,GAAQlT,EAAK2T,EAASC,EAAS,KAAK,EAAE,EAE/CxU,EAAI,KAAK,GAAK,KAAK,GAAKyU,GAAM,EAC5BC,EAAM,GAAK,EAAIjK,EAAIkK,EACnBD,EAAM,IAAM,EAAI,GAAKjK,EAAInK,EAAK,GAAKqU,EAAI,GAAKlK,EAAIkK,EAChDD,EAAM,IAAM,GAAK,IAAMpU,EAAKA,EAAKmK,EAAI,IAAMA,OAC3C,KAAK,GAEP5J,EAAI,KAAK,GAAK,KAAK,IAAMiU,EAAK,KAAK,IACjCP,EAAUD,EAAYG,EAAK,GAAK,EAChCC,EAAM,IAAM,EAAIjK,EAAI,EAAIkK,EAAI,EAAIC,EAChCF,EAAM,IAAM,GAAKpU,EAAK,GAAKmK,EAAI,IAAMkK,EAAI,IAAMlK,EAAIkK,EACnDD,EAAM,IAAM,KAAO,IAAMpU,EAAKA,EAAKmK,EAAI,KAAOA,QAC9C,KAAK,EACR,KAtDa,CACZ,IAAIzI,EAAIwS,EAAU,KAAK,IAAIF,CAAS,EAEpC,GAAK,KAAK,IAAI,KAAK,IAAItS,CAAC,EAAI,CAAC,EAAKvI,EAChC,MAAQ,IAOR,GAJAuG,EAAI,GAAM,KAAK,EAAI,KAAK,GAAK,KAAK,KAAK,EAAIgC,IAAM,EAAIA,EAAE,EAAI,KAAK,GAChEnB,EAAI2T,EAAU,KAAK,IAAIF,CAAS,EAAI,KAAK,KAAK,EAAI,KAAK,IAAItS,EAAG,CAAC,CAAC,EAChEA,EAAI,KAAK,IAAInB,CAAC,EAEVmB,GAAK,EAAG,CACV,GAAKA,EAAI,EAAKvI,EACZ,MAAQ,IAGRoH,EAAI,CAEP,MAECA,EAAI,KAAK,KAAKA,CAAC,EAGbD,EAAM,IACRC,EAAI,CAACA,GAGPA,EAAI,KAAK,EAAI,KAAK,IAAMA,EAAI,KAAK,MAAQ,KAAK,EAEjD,CA2BD,OAAA7F,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EAEC7F,CACT,CAKO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI8E,EAAKK,EACLS,EAAKD,EACLX,GAAKhF,EAAE,EAAI,KAAK,KAAO,EAAI,KAAK,GAChC6F,GAAK7F,EAAE,EAAI,KAAK,KAAO,EAAI,KAAK,GAEpC,GAAK,KAAK,GAuBR,GAHA8E,EAAM,KAAK,IAAMe,EAAI,KAAK,GAC1BV,EAAM+T,GAAYpU,EAAK,KAAK,GAAI,KAAK,EAAE,EAEnC,KAAK,IAAIK,CAAG,EAAI9G,EAAS,CAC3B,IAAIkb,EAAU,KAAK,IAAIpU,CAAG,EACtBqU,EAAU,KAAK,IAAIrU,CAAG,EACtB4U,EAAU,KAAK,IAAIP,CAAO,EAAI/a,EAAQ,KAAK,IAAI0G,CAAG,EAAI,EACtDwU,EAAI,KAAK,IAAM,KAAK,IAAIH,EAAS,CAAC,EAClCI,EAAK,KAAK,IAAID,EAAG,CAAC,EAClBlK,EAAI,KAAK,IAAIsK,EAAS,CAAC,EACvBzU,EAAK,KAAK,IAAImK,EAAG,CAAC,EACtB3K,EAAM,EAAI,KAAK,GAAK,KAAK,IAAIyU,EAAS,CAAC,EACvC,IAAIS,EAAIhV,EAAI,KAAK,KAAKF,CAAG,EAAI,KAAK,GAC9BmV,EAAK,KAAK,IAAID,EAAG,CAAC,EACtBlV,EAAMA,EAAMiV,EAEZnU,EAAMT,EAAOL,EAAMmV,GAAM,EAAI,KAAK,IAAO,IAAO,EAC9CA,EAAK,IAAM,EAAI,EAAIxK,EAAI,EAAIkK,EAAIlK,EAAIkK,EAAI,EAAIC,EAC3CK,EAAK,IAAM,GAAK,GAAKxK,EAAI,IAAMkK,EAAIlK,EAAI,GAAKnK,EAAK,GAAKqU,EACtDM,EAAK,IAAM,KAAO,KAAOxK,EAAI,KAAOnK,EAAK,KAAOA,EAAKmK,MAEvD9J,EAAMV,EAAW,KAAK,MAAS+U,GAAK,EAClCC,EAAK,GAAK,EAAI,EAAIxK,EAAIkK,EACtBM,EAAK,IAAM,EAAI,GAAKxK,EAAI,GAAKnK,EAAK,EAAIqU,EAAIlK,EAAI,EAAIkK,EAClDM,EAAK,IAAM,GAAK,IAAMxK,EAAI,KAAOnK,EAAK,IAAMA,EAAKmK,MAAQ+J,CAAQ,CACpE,MAEC5T,EAAMvH,EAAU0G,GAAKc,CAAC,EACtBF,EAAM,MAhDI,CACZ,IAAIuU,EAAI,KAAK,IAAIlV,EAAI,KAAK,EAAE,EACxBmV,EAAI,IAAOD,EAAI,EAAIA,GACnBE,EAAO,KAAK,KAAOvU,EAAI,KAAK,GAC5BwU,EAAI,KAAK,IAAID,CAAI,EACrBtV,EAAM,KAAK,MAAM,EAAI,KAAK,IAAIuV,EAAG,CAAC,IAAM,EAAI,KAAK,IAAIF,EAAG,CAAC,EAAE,EAC3DvU,EAAM,KAAK,KAAKd,CAAG,EAEfe,EAAI,IACND,EAAM,CAACA,GAGJuU,IAAM,GAAOE,IAAM,EACtB1U,EAAM,EAGNA,EAAMV,EAAW,KAAK,MAAMkV,EAAGE,CAAC,EAAI,KAAK,KAAK,CAEjD,CAkCD,OAAAra,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EAEC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,2BAA4B,0BAA0B,EAC3DuU,GAAA,CACb,KAAM7U,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EC5Ke,SAAQwU,GAACvV,EAAG,CACzB,IAAI4E,EAAI,KAAK,IAAI5E,CAAC,EAClB,OAAA4E,GAAKA,EAAI,EAAIA,GAAK,EACXA,CACT,CCJe,SAAA4Q,EAASxV,EAAGa,EAAG,CAC5Bb,EAAI,KAAK,IAAIA,CAAC,EACda,EAAI,KAAK,IAAIA,CAAC,EACd,IAAI9F,EAAI,KAAK,IAAIiF,EAAGa,CAAC,EACjBmB,EAAI,KAAK,IAAIhC,EAAGa,CAAC,GAAK9F,GAAQ,GAElC,OAAOA,EAAI,KAAK,KAAK,EAAI,KAAK,IAAIiH,EAAG,CAAC,CAAC,CACzC,CCPe,SAAQyT,GAACzV,EAAG,CACzB,IAAIa,EAAI,EAAIb,EACR8S,EAAIjS,EAAI,EAEZ,OAAOiS,IAAM,EAAI9S,EAAIA,EAAI,KAAK,IAAIa,CAAC,EAAIiS,CACzC,CCFe,SAAQ4C,GAAC1V,EAAG,CACzB,IAAIa,EAAI,KAAK,IAAIb,CAAC,EAClB,OAAAa,EAAI4U,GAAO5U,GAAK,EAAIA,GAAK2U,EAAM,EAAG3U,CAAC,EAAI,GAAG,EAEnCb,EAAI,EAAI,CAACa,EAAIA,CACtB,CCRe,SAAA8U,GAASC,EAAIC,EAAG,CAO7B,QANIC,EAAS,EAAI,KAAK,IAAI,EAAID,CAAC,EAC3Btb,EAAIqb,EAAG,OAAS,EAChBG,EAAKH,EAAGrb,CAAC,EACTyb,EAAK,EACLX,EAEG,EAAE9a,GAAK,GACZ8a,EAAI,CAACW,EAAKF,EAASC,EAAKH,EAAGrb,CAAC,EAC5Byb,EAAKD,EACLA,EAAKV,EAGP,OAAQQ,EAAIR,EAAI,KAAK,IAAI,EAAIQ,CAAC,CAChC,CCde,SAAAI,GAASL,EAAIM,EAAO,CAOjC,QANItR,EAAI,EAAI,KAAK,IAAIsR,CAAK,EACtB3b,EAAIqb,EAAG,OAAS,EAChBO,EAAMP,EAAGrb,CAAC,EACV6b,EAAM,EACNC,EAEG,EAAE9b,GAAK,GACZ8b,EAAK,CAACD,EAAMxR,EAAIuR,EAAMP,EAAGrb,CAAC,EAC1B6b,EAAMD,EACNA,EAAME,EAGR,OAAO,KAAK,IAAIH,CAAK,EAAIG,CAC3B,CCde,SAAQC,GAACtW,EAAG,CACzB,IAAI4E,EAAI,KAAK,IAAI5E,CAAC,EAClB,OAAA4E,GAAKA,EAAI,EAAIA,GAAK,EACXA,CACT,CCDe,SAAA2R,GAASX,EAAIM,EAAOM,EAAO,CAexC,QAdIC,EAAY,KAAK,IAAIP,CAAK,EAC1BQ,EAAY,KAAK,IAAIR,CAAK,EAC1BS,EAAapB,GAAKiB,CAAK,EACvBI,EAAaN,GAAKE,CAAK,EACvB5R,EAAI,EAAI8R,EAAYE,EACpBrc,EAAI,GAAKkc,EAAYE,EACrBE,EAAIjB,EAAG,OAAS,EAChBS,EAAKT,EAAGiB,CAAC,EACTC,EAAM,EACNX,EAAM,EACNY,EAAK,EACLX,EACAY,EAEG,EAAEH,GAAK,GACZT,EAAMD,EACNa,EAAMF,EACNX,EAAME,EACNS,EAAMC,EACNV,EAAK,CAACD,EAAMxR,EAAIuR,EAAM5b,EAAIuc,EAAMlB,EAAGiB,CAAC,EACpCE,EAAK,CAACC,EAAMzc,EAAI4b,EAAMvR,EAAIkS,EAG5B,OAAAlS,EAAI6R,EAAYG,EAChBrc,EAAImc,EAAYC,EAET,CAAC/R,EAAIyR,EAAK9b,EAAIwc,EAAInS,EAAImS,EAAKxc,EAAI8b,CAAE,CAC1C,CCnBO,SAAS5V,IAAO,CACrB,GAAI,CAAC,KAAK,SAAW,MAAM,KAAK,EAAE,GAAK,KAAK,IAAM,GAChD,MAAM,IAAI,MAAM,oIAAoI,EAElJ,KAAK,SAEP6U,GAAM,KAAK,MAAM,IAAI,EACrB,KAAK,QAAUA,GAAM,QACrB,KAAK,QAAUA,GAAM,SAGvB,KAAK,GAAK,KAAK,KAAO,OAAY,KAAK,GAAK,EAC5C,KAAK,GAAK,KAAK,KAAO,OAAY,KAAK,GAAK,EAC5C,KAAK,MAAQ,KAAK,QAAU,OAAY,KAAK,MAAQ,EACrD,KAAK,KAAO,KAAK,OAAS,OAAY,KAAK,KAAO,EAElD,KAAK,IAAM,GACX,KAAK,IAAM,GACX,KAAK,IAAM,GACX,KAAK,IAAM,GAEX,IAAIJ,EAAI,KAAK,IAAM,EAAI,KAAK,KAAK,EAAI,KAAK,EAAE,GACxCzT,EAAIyT,GAAK,EAAIA,GACb+B,EAAKxV,EAET,KAAK,IAAI,CAAC,EAAIA,GAAK,EAAIA,GAAK,GAAK,EAAIA,GAAK,GAAKA,GAAK,IAAM,GAAKA,GAAK,GAAK,GAAKA,GAAK,MAAQ,UAC3F,KAAK,IAAI,CAAC,EAAIA,GAAK,GAAKA,GAAM,EAAI,EAAIA,GAAM,EAAI,EAAIA,GAAK,IAAM,GAAKA,GAAK,GAAK,GAAKA,GAAK,KAAO,WAE/FwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,EAAI,EAAIxV,GAAK,GAAK,EAAIA,GAAK,KAAO,GAAKA,GAAK,KAAO,IAAMA,GAAK,KAAO,SACzF,KAAK,IAAI,CAAC,EAAIwV,GAAM,EAAI,EAAIxV,GAAK,IAAM,GAAKA,GAAM,IAAM,EAAIA,GAAK,IAAM,IAAMA,GAAK,MAAQ,SAE1FwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,GAAK,GAAKxV,GAAK,KAAO,GAAKA,GAAK,MAAQ,IAAMA,GAAK,MAAQ,SAC/E,KAAK,IAAI,CAAC,EAAIwV,GAAM,IAAM,GAAKxV,GAAK,GAAK,GAAKA,GAAK,EAAI,EAAIA,GAAK,OAAS,SAEzEwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,KAAO,IAAMxV,GAAK,KAAO,GAAKA,GAAK,QAAU,SACjE,KAAK,IAAI,CAAC,EAAIwV,GAAM,KAAO,IAAMxV,GAAK,IAAM,EAAIA,GAAM,OAAS,SAE/DwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,KAAO,IAAMxV,GAAK,QAAU,OAChD,KAAK,IAAI,CAAC,EAAIwV,GAAM,KAAO,IAAMxV,GAAK,OAAS,QAE/CwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,OAAS,OAC7B,KAAK,IAAI,CAAC,EAAIA,GAAM,OAAS,QAE7BA,EAAK,KAAK,IAAIxV,EAAG,CAAC,EAClB,KAAK,GAAK,KAAK,IAAM,EAAIA,IAAM,EAAIwV,GAAM,EAAI,EAAIA,GAAM,EAAI,GAAKA,EAAK,OAErE,KAAK,IAAI,CAAC,EAAIxV,GAAK,IAAOA,GAAM,EAAI,EAAIA,GAAK,IAAM,GAAKA,GAAM,EAAI,IAAMA,GAAK,GAAK,IAAMA,GAAK,OAAS,aACtG,KAAK,IAAI,CAAC,EAAIA,GAAK,GAAMA,GAAK,GAAK,EAAIA,GAAK,EAAI,GAAKA,GAAK,GAAK,IAAMA,GAAK,KAAO,IAAMA,GAAK,KAAO,YAEnG,KAAK,IAAI,CAAC,EAAIwV,GAAM,GAAK,GAAKxV,GAAK,GAAK,GAAKA,GAAK,IAAM,KAAOA,GAAK,IAAM,IAAMA,GAAK,QAAU,aAC/F,KAAK,IAAI,CAAC,EAAIwV,GAAM,GAAK,GAAKxV,GAAK,GAAK,EAAIA,GAAK,IAAM,KAAOA,GAAK,IAAM,IAAMA,GAAK,SAAW,aAE/FwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,IAAM,IAAMxV,GAAK,GAAK,IAAMA,GAAK,IAAM,KAAOA,GAAK,MAAQ,UAC/E,KAAK,IAAI,CAAC,EAAIwV,GAAM,GAAK,IAAMxV,GAAK,KAAO,IAAMA,GAAK,MAAQ,MAAQA,GAAK,OAAS,WAEpFwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,MAAQ,OAASxV,GAAK,GAAK,IAAMA,GAAK,OAAS,WACnE,KAAK,IAAI,CAAC,EAAIwV,GAAM,MAAQ,OAASxV,GAAK,KAAO,IAAMA,GAAK,QAAU,WAEtEwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,MAAQ,OAASxV,GAAK,OAAS,UACnD,KAAK,IAAI,CAAC,EAAIwV,GAAM,MAAQ,MAAQxV,GAAK,SAAW,UAEpDwV,EAAKA,EAAKxV,EACV,KAAK,IAAI,CAAC,EAAIwV,GAAM,UAAY,WAChC,KAAK,IAAI,CAAC,EAAIA,GAAM,UAAY,WAEhC,IAAInP,EAAI6N,GAAK,KAAK,IAAK,KAAK,IAAI,EAChC,KAAK,GAAK,CAAC,KAAK,IAAM7N,EAAImO,GAAM,KAAK,IAAK,EAAInO,CAAC,EACjD,CAEO,SAASpH,GAAQ1F,EAAG,CACzB,IAAIkc,EAAKjX,EAAWjF,EAAE,EAAI,KAAK,KAAK,EAChCmc,EAAKnc,EAAE,EAEXmc,EAAKxB,GAAK,KAAK,IAAKwB,CAAE,EACtB,IAAIC,EAAS,KAAK,IAAID,CAAE,EACpBE,EAAS,KAAK,IAAIF,CAAE,EACpBG,EAAS,KAAK,IAAIJ,CAAE,EACpBK,EAAS,KAAK,IAAIL,CAAE,EAExBC,EAAK,KAAK,MAAMC,EAAQG,EAASF,CAAM,EACvCH,EAAK,KAAK,MAAMI,EAASD,EAAQ7B,EAAM4B,EAAQC,EAASE,CAAM,CAAC,EAC/DL,EAAKxB,GAAO,KAAK,IAAIwB,CAAE,CAAC,EAExB,IAAIM,EAAMjB,GAAY,KAAK,IAAK,EAAIY,EAAI,EAAID,CAAE,EAE9CC,EAAKA,EAAKK,EAAI,CAAC,EACfN,EAAKA,EAAKM,EAAI,CAAC,EAEf,IAAIxX,EACAa,EAEJ,OAAI,KAAK,IAAIqW,CAAE,GAAK,gBAClBlX,EAAI,KAAK,GAAK,KAAK,GAAKkX,GAAM,KAAK,GACnCrW,EAAI,KAAK,GAAK,KAAK,GAAKsW,EAAK,KAAK,IAAM,KAAK,KAG7CnX,EAAI,IACJa,EAAI,KAGN7F,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EAEC7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAIkc,GAAMlc,EAAE,EAAI,KAAK,KAAO,EAAI,KAAK,GACjCmc,GAAMnc,EAAE,EAAI,KAAK,KAAO,EAAI,KAAK,GAErCmc,GAAMA,EAAK,KAAK,IAAM,KAAK,GAC3BD,EAAKA,EAAK,KAAK,GAEf,IAAIvW,EACAC,EAEJ,GAAI,KAAK,IAAIsW,CAAE,GAAK,eAAgB,CAClC,IAAIM,EAAMjB,GAAY,KAAK,IAAK,EAAIY,EAAI,EAAID,CAAE,EAE9CC,EAAKA,EAAKK,EAAI,CAAC,EACfN,EAAKA,EAAKM,EAAI,CAAC,EACfN,EAAK,KAAK,KAAK3B,GAAK2B,CAAE,CAAC,EAEvB,IAAIE,EAAS,KAAK,IAAID,CAAE,EACpBE,EAAS,KAAK,IAAIF,CAAE,EACpBG,EAAS,KAAK,IAAIJ,CAAE,EACpBK,EAAS,KAAK,IAAIL,CAAE,EAExBC,EAAK,KAAK,MAAMC,EAASG,EAAQ/B,EAAM8B,EAAQC,EAASF,CAAM,CAAC,EAC/DH,EAAK,KAAK,MAAMI,EAAQC,EAASF,CAAM,EAEvC1W,EAAMV,EAAWiX,EAAK,KAAK,KAAK,EAChCtW,EAAM+U,GAAK,KAAK,IAAKwB,CAAE,CACxB,MAECxW,EAAM,IACNC,EAAM,IAGR,OAAA5F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EAEC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,+BAAgC,+BAAgC,SAAU,sBAAuB,sBAAuB,OAAO,EACpI0W,GAAA,CACb,KAAMhX,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECzKe,SAAA2W,GAASC,EAAMhX,EAAK,CACjC,GAAIgX,IAAS,OAAW,CAGtB,GAFAA,EAAO,KAAK,OAAO1X,EAAWU,CAAG,EAAI,KAAK,IAAM,GAAK,KAAK,EAAE,EAAI,EAE5DgX,EAAO,EACT,MAAO,GACF,GAAIA,EAAO,GAChB,MAAO,GAEV,CACD,OAAOA,CACT,CCXO,IAAIC,GAAY,SAIhB,SAASnX,IAAO,CACrB,IAAIkX,EAAOD,GAAY,KAAK,KAAM,KAAK,KAAK,EAC5C,GAAIC,IAAS,OACX,MAAM,IAAI,MAAM,kBAAkB,EAEpC,KAAK,KAAO,EACZ,KAAK,OAAW,EAAI,KAAK,IAAIA,CAAI,EAAK,KAAOje,EAC7C,KAAK,GAAK,IACV,KAAK,GAAK,KAAK,SAAW,IAAW,EACrC,KAAK,GAAK,MAEV+d,GAAO,KAAK,MAAM,IAAI,EACtB,KAAK,QAAUA,GAAO,QACtB,KAAK,QAAUA,GAAO,OACxB,CAEO,IAAI1W,GAAQ,CAAC,uCAAwC,KAAK,EAClDqO,GAAA,CACb,KAAM3O,GACN,MAAOM,GACP,UAAW6W,EACb,EC3Be,SAAAC,GAASC,EAAOC,EAAK,CAClC,OAAQ,KAAK,KAAK,EAAID,IAAU,EAAIA,GAAQC,CAAG,CACjD,CCDA,IAAI9D,GAAW,GAGR,SAASxT,IAAO,CACrB,IAAIsT,EAAO,KAAK,IAAI,KAAK,IAAI,EACzBC,EAAO,KAAK,IAAI,KAAK,IAAI,EAC7BA,GAAQA,EACR,KAAK,GAAK,KAAK,KAAK,EAAI,KAAK,EAAE,GAAK,EAAI,KAAK,GAAKD,EAAOA,GACzD,KAAK,EAAI,KAAK,KAAK,EAAI,KAAK,GAAKC,EAAOA,GAAQ,EAAI,KAAK,GAAG,EAC5D,KAAK,MAAQ,KAAK,KAAKD,EAAO,KAAK,CAAC,EACpC,KAAK,OAAS,GAAM,KAAK,EAAI,KAAK,EAClC,KAAK,EAAI,KAAK,IAAI,GAAM,KAAK,MAAQna,CAAM,GAAK,KAAK,IAAI,KAAK,IAAI,GAAM,KAAK,KAAOA,CAAM,EAAG,KAAK,CAAC,EAAIie,GAAK,KAAK,EAAI9D,EAAM,KAAK,MAAM,EACxI,CAEO,SAASrT,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAEZ,OAAAA,EAAE,EAAI,EAAI,KAAK,KAAK,KAAK,EAAI,KAAK,IAAI,KAAK,IAAI,GAAM4F,EAAMhH,CAAM,EAAG,KAAK,CAAC,EAAIie,GAAK,KAAK,EAAI,KAAK,IAAIjX,CAAG,EAAG,KAAK,MAAM,CAAC,EAAIvH,EAC3H2B,EAAE,EAAI,KAAK,EAAI2F,EACR3F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CAKzB,QAJIgd,EAAU,MACVrX,EAAM3F,EAAE,EAAI,KAAK,EACjB4F,EAAM5F,EAAE,EACR+Q,EAAM,KAAK,IAAI,KAAK,IAAI,GAAMnL,EAAMhH,CAAM,EAAI,KAAK,EAAG,EAAI,KAAK,CAAC,EAC3DW,EAAI0Z,GAAU1Z,EAAI,IACzBqG,EAAM,EAAI,KAAK,KAAKmL,EAAM8L,GAAK,KAAK,EAAI,KAAK,IAAI7c,EAAE,CAAC,EAAG,IAAQ,KAAK,CAAC,CAAC,EAAI3B,EACtE,OAAK,IAAIuH,EAAM5F,EAAE,CAAC,EAAIgd,IAFE,EAAEzd,EAK9BS,EAAE,EAAI4F,EAGR,OAAKrG,GAGLS,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,GAJE,IAKX,CAEO,IAAI+F,GAAQ,CAAC,OAAO,EACZkX,GAAA,CACb,KAAMxX,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EChDO,SAASN,IAAO,CACrBwX,GAAM,KAAK,MAAM,IAAI,EAChB,KAAK,KAGV,KAAK,MAAQ,KAAK,IAAI,KAAK,KAAK,EAChC,KAAK,MAAQ,KAAK,IAAI,KAAK,KAAK,EAChC,KAAK,GAAK,EAAI,KAAK,GACd,KAAK,QACR,KAAK,MAAQ,qCAEjB,CAEO,SAASvX,GAAQ1F,EAAG,CACzB,IAAIkd,EAAMC,EAAMC,EAAMhE,EACtB,OAAApZ,EAAE,EAAIiF,EAAWjF,EAAE,EAAI,KAAK,KAAK,EACjCid,GAAM,QAAQ,MAAM,KAAM,CAACjd,CAAC,CAAC,EAC7Bkd,EAAO,KAAK,IAAIld,EAAE,CAAC,EACnBmd,EAAO,KAAK,IAAInd,EAAE,CAAC,EACnBod,EAAO,KAAK,IAAIpd,EAAE,CAAC,EACnBoZ,EAAI,KAAK,GAAK,KAAK,IAAM,EAAI,KAAK,MAAQ8D,EAAO,KAAK,MAAQC,EAAOC,GACrEpd,EAAE,EAAIoZ,EAAI+D,EAAO,KAAK,IAAInd,EAAE,CAAC,EAC7BA,EAAE,EAAIoZ,GAAK,KAAK,MAAQ8D,EAAO,KAAK,MAAQC,EAAOC,GACnDpd,EAAE,EAAI,KAAK,EAAIA,EAAE,EAAI,KAAK,GAC1BA,EAAE,EAAI,KAAK,EAAIA,EAAE,EAAI,KAAK,GACnBA,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAIkd,EAAMC,EAAMxX,EAAKC,EAAKyX,EAM1B,GALArd,EAAE,GAAKA,EAAE,EAAI,KAAK,IAAM,KAAK,EAC7BA,EAAE,GAAKA,EAAE,EAAI,KAAK,IAAM,KAAK,EAE7BA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACPqd,EAAM,KAAK,KAAKrd,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EAAI,CAC5C,IAAI2Z,EAAI,EAAI,KAAK,MAAM0D,EAAK,KAAK,EAAE,EACnCH,EAAO,KAAK,IAAIvD,CAAC,EACjBwD,EAAO,KAAK,IAAIxD,CAAC,EACjB/T,EAAM,KAAK,KAAKuX,EAAO,KAAK,MAAQnd,EAAE,EAAIkd,EAAO,KAAK,MAAQG,CAAG,EACjE1X,EAAM,KAAK,MAAM3F,EAAE,EAAIkd,EAAMG,EAAM,KAAK,MAAQF,EAAOnd,EAAE,EAAI,KAAK,MAAQkd,CAAI,CAC/E,MAECtX,EAAM,KAAK,MACXD,EAAM,EAGR,OAAA3F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACNqX,GAAM,QAAQ,MAAM,KAAM,CAACjd,CAAC,CAAC,EAC7BA,EAAE,EAAIiF,EAAWjF,EAAE,EAAI,KAAK,KAAK,EAC1BA,CACT,CAEO,IAAI+F,GAAQ,CAAC,2BAA4B,wBAAyB,sBAAuB,SAAS,oCAAoC,sBAAsB,EACpJuX,GAAA,CACb,KAAM7X,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECvDO,SAASwX,GAAMC,EAAM5Y,EAAQ6Y,EAAO,CACzC,OAAA7Y,GAAU6Y,EACF,KAAK,IAAI,IAAOpf,EAAUmf,EAAK,EAAI,KAAK,KAAK,EAAI5Y,IAAW,EAAIA,GAAS,GAAM6Y,CAAK,CAC9F,CAEO,SAAShY,IAAO,CACrB,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,OACH,KAAK,KAAO,GAAK,CAAC,MAAM,KAAK,MAAM,GAAK,KAAK,IAAI,KAAK,OAAO,GAAKhH,IACpE,KAAK,GAAK,IAAO,EAAIsG,GAAK,KAAK,IAAI,EAAI,KAAK,IAAI,KAAK,MAAM,KAIzD,KAAK,IAAI,KAAK,OAAO,GAAKtG,IACxB,KAAK,KAAO,EAGd,KAAK,IAAM,EAKX,KAAK,IAAM,IAGf,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,EAAI,KAAK,EAAG,EAAI,KAAK,CAAC,EAAI,KAAK,IAAI,EAAI,KAAK,EAAG,EAAI,KAAK,CAAC,CAAC,EACrF,KAAK,KAAO,GAAK,CAAC,MAAM,KAAK,MAAM,GAAK,KAAK,IAAI,KAAK,OAAO,GAAKA,IACpE,KAAK,GAAK,GAAM,KAAK,KAAOiG,EAAM,KAAK,EAAG,KAAK,IAAI,KAAK,MAAM,EAAG,KAAK,IAAI,KAAK,MAAM,CAAC,EAAIQ,EAAM,KAAK,EAAG,KAAK,IAAM,KAAK,OAAQ,KAAK,IAAM,KAAK,IAAI,KAAK,MAAM,CAAC,GAElK,KAAK,IAAMR,EAAM,KAAK,EAAG,KAAK,QAAS,KAAK,OAAO,EACnD,KAAK,GAAK,EAAI,KAAK,KAAK,KAAK,MAAM,KAAK,KAAM,KAAK,QAAS,KAAK,CAAC,CAAC,EAAIrG,EACvE,KAAK,MAAQ,KAAK,IAAI,KAAK,EAAE,EAC7B,KAAK,MAAQ,KAAK,IAAI,KAAK,EAAE,EAEjC,CAGO,SAASqH,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACR0d,EAAS,KAAK,IAAI9X,CAAG,EACrB+X,EAAS,KAAK,IAAI/X,CAAG,EACrBuM,EAAGvF,EAAGgR,EAAMC,EAAMvY,EAAIwY,EACtBC,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAEtC,OAAI,KAAK,IAAI,KAAK,IAAIA,EAAM,KAAK,KAAK,EAAI,KAAK,EAAE,GAAKlH,GAAS,KAAK,IAAImH,EAAM,KAAK,IAAI,GAAKnH,GAG1FuB,EAAE,EAAI,IACNA,EAAE,EAAI,IACCA,GAEL,KAAK,QAEPmS,EAAI,EAAI,KAAK,IAAM,EAAI,KAAK,QAAUuL,EAAS,KAAK,QAAUC,EAAS,KAAK,IAAII,CAAI,GACpF/d,EAAE,EAAI,KAAK,EAAImS,EAAIwL,EAAS,KAAK,IAAII,CAAI,EAAI,KAAK,GAClD/d,EAAE,EAAI,KAAK,EAAImS,GAAK,KAAK,QAAUuL,EAAS,KAAK,QAAUC,EAAS,KAAK,IAAII,CAAI,GAAK,KAAK,GACpF/d,IAGP4M,EAAI,EAAI,KAAK,KAAK,KAAK,MAAMhH,EAAK8X,EAAQ,KAAK,CAAC,CAAC,EAAIrf,EACrDwf,EAAO,KAAK,IAAIjR,CAAC,EACjBgR,EAAO,KAAK,IAAIhR,CAAC,EACb,KAAK,IAAI,KAAK,OAAO,GAAKnO,GAC5B6G,EAAKJ,EAAM,KAAK,EAAGU,EAAM,KAAK,IAAK,KAAK,IAAM8X,CAAM,EACpDI,EAAK,EAAI,KAAK,EAAI,KAAK,GAAKxY,EAAK,KAAK,KACtCtF,EAAE,EAAI,KAAK,GAAK8d,EAAK,KAAK,IAAInY,EAAM,KAAK,KAAK,EAC9C3F,EAAE,EAAI,KAAK,GAAK,KAAK,IAAM8d,EAAK,KAAK,IAAInY,EAAM,KAAK,KAAK,EAElD3F,IAEA,KAAK,IAAI,KAAK,OAAO,EAAIvB,GAGhC0T,EAAI,EAAI,KAAK,EAAI,KAAK,IAAM,EAAI0L,EAAO,KAAK,IAAIE,CAAI,GACpD/d,EAAE,EAAImS,EAAIyL,IAKVzL,EAAI,EAAI,KAAK,EAAI,KAAK,GAAK,KAAK,KAAO,KAAK,OAAS,EAAI,KAAK,MAAQyL,EAAO,KAAK,MAAQC,EAAO,KAAK,IAAIE,CAAI,IAC9G/d,EAAE,EAAImS,GAAK,KAAK,MAAQyL,EAAO,KAAK,MAAQC,EAAO,KAAK,IAAIE,CAAI,GAAK,KAAK,IAE5E/d,EAAE,EAAImS,EAAI0L,EAAO,KAAK,IAAIE,CAAI,EAAI,KAAK,GAGlC/d,GACT,CAGO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ,IAAI2F,EAAKC,EAAKN,EAAI0Y,EAAIC,EAClBH,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACxC,GAAI,KAAK,OAAQ,CACf,IAAI2Z,EAAI,EAAI,KAAK,KAAKmE,GAAM,EAAI,KAAK,EAAI,KAAK,GAAG,EAGjD,OAFAnY,EAAM,KAAK,MACXC,EAAM,KAAK,KACPkY,GAAMrf,GACRuB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,IAET4F,EAAM,KAAK,KAAK,KAAK,IAAI+T,CAAC,EAAI,KAAK,QAAU3Z,EAAE,EAAI,KAAK,IAAI2Z,CAAC,EAAI,KAAK,QAAUmE,CAAE,EAC9E,KAAK,IAAI,KAAK,OAAO,EAAIrf,EACvB,KAAK,KAAO,EACdkH,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAG,GAAMA,EAAE,CAAC,CAAC,EAGxD2F,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAGA,EAAE,CAAC,CAAC,EAIpD2F,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAI,KAAK,IAAI2Z,CAAC,EAAGmE,EAAK,KAAK,QAAU,KAAK,IAAInE,CAAC,EAAI3Z,EAAE,EAAI,KAAK,QAAU,KAAK,IAAI2Z,CAAC,CAAC,CAAC,EAEjI3Z,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,EACR,SAEK,KAAK,IAAI,KAAK,OAAO,GAAKvB,EAAO,CACnC,GAAIqf,GAAMrf,EACR,OAAAmH,EAAM,KAAK,KACXD,EAAM,KAAK,MACX3F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EAEC5F,EAETA,EAAE,GAAK,KAAK,IACZA,EAAE,GAAK,KAAK,IACZsF,EAAKwY,EAAK,KAAK,MAAQ,EAAI,KAAK,EAAI,KAAK,IACzClY,EAAM,KAAK,IAAMP,GAAM,KAAK,EAAGC,CAAE,EACjCK,EAAM,KAAK,IAAMV,EAAW,KAAK,IAAM,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAG,GAAMA,EAAE,CAAC,CAAC,CAC/E,MAECge,EAAK,EAAI,KAAK,KAAKF,EAAK,KAAK,OAAS,EAAI,KAAK,EAAI,KAAK,GAAK,KAAK,IAAI,EACtEnY,EAAM,KAAK,MACPmY,GAAMrf,EACRwf,EAAM,KAAK,IAGXA,EAAM,KAAK,KAAK,KAAK,IAAID,CAAE,EAAI,KAAK,MAAQhe,EAAE,EAAI,KAAK,IAAIge,CAAE,EAAI,KAAK,MAAQF,CAAE,EAChFnY,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAI,KAAK,IAAIge,CAAE,EAAGF,EAAK,KAAK,MAAQ,KAAK,IAAIE,CAAE,EAAIhe,EAAE,EAAI,KAAK,MAAQ,KAAK,IAAIge,CAAE,CAAC,CAAC,GAEhIpY,EAAM,GAAKP,GAAM,KAAK,EAAG,KAAK,IAAI,IAAOhH,EAAU4f,EAAI,CAAC,EAG5D,OAAAje,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EAGC5F,CAET,CAEO,IAAI+F,GAAQ,CAAC,QAAS,2BAA4B,iCAAiC,EAC3EmY,GAAA,CACb,KAAMzY,GACN,QAASC,GACT,QAASI,GACT,MAAOC,GACP,MAAOwX,EACT,ECrKO,SAAS9X,IAAO,CACrB,IAAI0Y,EAAO,KAAK,KAChB,KAAK,QAAU,KAAK,MACpB,IAAIC,EAAU,KAAK,IAAID,CAAI,EACvBE,EAAgB,KAAK,EACrBC,EAAO,KAAK,GACZC,EAAa,EAAID,EACjBE,EAAK,EAAID,EAAa,KAAK,IAAIA,EAAY,CAAC,EAC5CjX,EAAI,KAAK,EAAI,KAAK,KAAKkX,CAAE,EAC7B,KAAK,EAAI,KAAK,GAAKH,EAAgB,KAAK,KAAK,EAAIG,CAAE,GAAK,EAAIA,EAAK,KAAK,IAAIJ,EAAS,CAAC,GACpF,KAAK,MAAQ,KAAK,KAAK,EAAII,GAAM,EAAIA,GAAM,KAAK,IAAI,KAAK,IAAIL,CAAI,EAAG,CAAC,CAAC,EACtE,KAAK,GAAK,KAAK,KAAKC,EAAU,KAAK,KAAK,EACxC,IAAIK,EAAK,KAAK,IAAI,KAAK,IAAI,KAAK,GAAK,EAAI,KAAK,GAAK,CAAC,CAAC,EACjDC,EAAK,KAAK,IAAI,KAAK,IAAI,KAAK,GAAK,EAAIP,EAAO,CAAC,CAAC,EAC9CQ,EAAK,KAAK,KAAK,EAAIrX,EAAI8W,IAAY,EAAI9W,EAAI8W,EAAQ,EACvD,KAAK,EAAIK,EAAK,KAAK,MAAQC,EAAK,KAAK,MAAQpX,EAAI,EAAIqX,CACvD,CAEO,SAASjZ,GAAQ1F,EAAG,CACzB,IAAI4e,EAAM,KAAK,IAAI,KAAK,IAAI,KAAK,GAAK,EAAI5e,EAAE,EAAI,CAAC,CAAC,EAC9C6e,EAAM,KAAK,EAAI,EAAI,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,IAAI7e,EAAE,CAAC,IAAM,EAAI,KAAK,EAAI,KAAK,IAAIA,EAAE,CAAC,EAAE,EACvF8e,EAAI,CAAC,KAAK,OAASF,EAAMC,GAAO,KAAK,EAGrC7X,EAAI,GAAK,KAAK,KAAK,KAAK,IAAI8X,CAAC,CAAC,EAAI,KAAK,GAAK,GAG5C1M,EAAI,KAAK,OAASpS,EAAE,EAAI,KAAK,SAG7B+e,EAAO,KAAK,KAAK,KAAK,IAAI3M,CAAC,GAAK,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIpL,CAAC,EAAI,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIoL,CAAC,EAAE,EAElG4M,EAAO,KAAK,KAAK,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIhY,CAAC,EAAI,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIA,CAAC,EAAI,KAAK,IAAIoL,CAAC,CAAC,EAEpG,OAAApS,EAAE,EAAI,KAAK,EAAI,EAAI,KAAK,KAAK,EAAI,KAAK,IAAIgf,CAAI,IAAM,EAAI,KAAK,IAAIA,CAAI,EAAE,EAAI,KAAK,GAChFhf,EAAE,EAAI,KAAK,EAAI+e,EAAO,KAAK,GACpB/e,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CAgBzB,QAfI6M,EAAI7M,EAAE,EAAI,KAAK,GACf4M,EAAI5M,EAAE,EAAI,KAAK,GAEf+e,EAAOlS,EAAI,KAAK,EAChBmS,EAAO,GAAK,KAAK,KAAK,KAAK,IAAIpS,EAAI,KAAK,CAAC,CAAC,EAAI,KAAK,GAAK,GAExD5F,EAAI,KAAK,KAAK,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIgY,CAAI,EAAI,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIA,CAAI,EAAI,KAAK,IAAID,CAAI,CAAC,EACtG3M,EAAI,KAAK,KAAK,KAAK,IAAI2M,CAAI,GAAK,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIA,CAAI,EAAI,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIC,CAAI,EAAE,EAExGC,EAAS,KAAK,QAAU7M,EAAI,KAAK,MAEjC0M,EAAI,EACJI,EAAMlY,EACNmY,EAAU,KACVC,EAAY,EACT,KAAK,IAAIF,EAAMC,CAAO,EAAI,MAAW,CAC1C,GAAI,EAAEC,EAAY,GAEhB,OAGFN,EAAI,EAAI,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,KAAK,GAAK,EAAI9X,EAAI,CAAC,CAAC,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAK,EAAI,KAAK,KAAK,KAAK,EAAI,KAAK,IAAIkY,CAAG,CAAC,EAAI,CAAC,CAAC,EACzJC,EAAUD,EACVA,EAAM,EAAI,KAAK,KAAK,KAAK,IAAIJ,CAAC,CAAC,EAAI,KAAK,GAAK,CAC9C,CAED,OAAA9e,EAAE,EAAIif,EACNjf,EAAE,EAAIkf,EACClf,CACT,CAEO,IAAI+F,GAAQ,CAAC,QAAQ,EACbsZ,GAAA,CACb,KAAM5Z,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EChFIuZ,GAAM,KAEV,SAASC,GAAQxT,EAAG,CAClB,IAAIyT,EAAmB,CAAC,0BAA0B,gDAAgD,EAC9FC,EAAiB,OAAO1T,EAAE,YAAe,SAAW,OAAO,KAAKA,EAAE,UAAU,EAAE,CAAC,EAAIA,EAAE,WAEzF,MAAO,YAAaA,GAAK,WAAYA,GAAKyT,EAAiB,QAAQC,CAAc,IAAM,EACzF,CAKO,SAASha,IAAO,CAClB,IAACX,EAAKM,EAAKsa,EAAQ9K,EAAG+K,EAAGC,EAAGC,EAAGC,EAAQ9f,EAAG+f,EAAGC,EAAQ,EACtDC,EAAQC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAU,EAItE,KAAK,OAAShB,GAAQ,IAAI,EAC1B,KAAK,OAAS,WAAY,KAE1B,IAAIiB,EAAM,GACN,UAAW,OACbA,EAAM,IAGR,IAAIC,EAAM,GAaV,GAZI,yBAA0B,OAC5BA,EAAM,IAGJD,IACFD,EAAU,KAAK,OAGbE,IACFT,EAAS,KAAK,qBAAuBthB,GAGnC8hB,GAAOC,EACTP,EAAO,KAAK,cAEZC,EAAO,KAAK,MACZE,EAAO,KAAK,KACZD,EAAO,KAAK,MACZE,EAAO,KAAK,KAER,KAAK,IAAID,EAAOC,CAAI,GAAKhB,KAAQxa,EAAM,KAAK,IAAIub,CAAI,IAAMf,IAC1D,KAAK,IAAIxa,EAAMzG,CAAO,GAAKihB,IAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,EAAIjhB,CAAO,GAAKihB,IAC7E,KAAK,IAAI,KAAK,IAAIgB,CAAI,EAAIjiB,CAAO,GAAKihB,GACxC,MAAM,IAAI,MAId,IAAIoB,EAAS,EAAM,KAAK,GACxBtb,EAAM,KAAK,KAAKsb,CAAM,EAElB,KAAK,IAAI,KAAK,IAAI,EAAIjiB,GACxBqhB,EAAS,KAAK,IAAI,KAAK,IAAI,EAC3BJ,EAAS,KAAK,IAAI,KAAK,IAAI,EAC3B5a,EAAM,EAAI,KAAK,GAAKgb,EAASA,EAC7B,KAAK,EAAIJ,EAASA,EAClB,KAAK,EAAI,KAAK,KAAK,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,EAAIgB,CAAM,EACzD,KAAK,EAAI,KAAK,EAAI,KAAK,GAAKtb,EAAMN,EAClC8P,EAAI,KAAK,EAAIxP,GAAOsa,EAAS,KAAK,KAAK5a,CAAG,GAC1C6a,EAAI/K,EAAIA,EAAG,EAEP+K,GAAK,EACPA,EAAI,GAEJA,EAAI,KAAK,KAAKA,CAAC,EACX,KAAK,KAAO,IACdA,EAAI,CAACA,IAIT,KAAK,EAAIA,GAAK/K,EACd,KAAK,GAAK,KAAK,IAAI1P,EAAM,KAAK,EAAG,KAAK,KAAM4a,CAAM,EAAG,KAAK,CAAC,IAE3D,KAAK,EAAI,EAAI1a,EACb,KAAK,EAAI,KAAK,GACd,KAAK,EAAIwP,EAAI+K,EAAI,GAGfa,GAAOC,GACLD,GACFP,EAAS,KAAK,KAAK,KAAK,IAAIM,CAAO,EAAI3L,CAAC,EACnC6L,IACHT,EAAQO,KAGVN,EAASD,EACTO,EAAU,KAAK,KAAK3L,EAAI,KAAK,IAAIqL,CAAM,CAAC,GAE1C,KAAK,KAAOC,EAAO,KAAK,KAAK,IAAOP,EAAI,EAAIA,GAAK,KAAK,IAAIM,CAAM,CAAC,EAAI,KAAK,IAE1EL,EAAI,KAAK,IAAI1a,EAAM,KAAK,EAAGmb,EAAM,KAAK,IAAIA,CAAI,CAAC,EAAG,KAAK,CAAC,EACxDR,EAAI,KAAK,IAAI3a,EAAM,KAAK,EAAGob,EAAM,KAAK,IAAIA,CAAI,CAAC,EAAG,KAAK,CAAC,EACxDX,EAAI,KAAK,EAAIC,EACb5f,GAAK6f,EAAID,IAAMC,EAAID,GACnBG,EAAI,KAAK,EAAI,KAAK,EAClBA,GAAKA,EAAIF,EAAID,IAAMG,EAAIF,EAAID,GAC3B9a,EAAMqb,EAAOC,EAETtb,EAAM,CAAC,KAAK,GACdsb,GAAOvhB,GACEiG,EAAM,KAAK,KACpBsb,GAAQvhB,IAGV,KAAK,KAAOoG,EAAW,IAAOkb,EAAOC,GAAQ,KAAK,KAAKL,EAAI,KAAK,IAAI,GAAM,KAAK,GAAKI,EAAOC,EAAK,EAAIpgB,CAAC,EAAI,KAAK,CAAC,EAC/GigB,EAAS,KAAK,KAAK,EAAI,KAAK,IAAI,KAAK,EAAIhb,EAAWkb,EAAO,KAAK,IAAI,CAAC,GAAKR,EAAI,EAAIA,EAAE,EACpFK,EAAQO,EAAU,KAAK,KAAK3L,EAAI,KAAK,IAAIqL,CAAM,CAAC,GAGlD,KAAK,OAAS,KAAK,IAAIA,CAAM,EAC7B,KAAK,OAAS,KAAK,IAAIA,CAAM,EAC7B,KAAK,OAAS,KAAK,IAAID,CAAK,EAC5B,KAAK,OAAS,KAAK,IAAIA,CAAK,EAE5B,KAAK,GAAK,EAAI,KAAK,EACnB,KAAK,IAAM,KAAK,EAAI,KAAK,GACzB,KAAK,IAAM,EAAI,KAAK,IACf,KAAK,EAAI,KAAK,EAEf,KAAK,OACP,KAAK,IAAM,GAEX,KAAK,IAAM,KAAK,IAAI,KAAK,IAAM,KAAK,KAAK,KAAK,KAAKpL,EAAIA,EAAI,CAAC,EAAI,KAAK,IAAI2L,CAAO,CAAC,CAAC,EAE9E,KAAK,KAAO,IACd,KAAK,IAAM,CAAE,KAAK,MAItBZ,EAAI,GAAMM,EACV,KAAK,SAAW,KAAK,IAAM,KAAK,IAAI,KAAK,IAAIrhB,EAAS+gB,CAAC,CAAC,EACxD,KAAK,SAAW,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI/gB,EAAS+gB,CAAC,CAAC,CAC1D,CAKO,SAASja,GAAQ1F,EAAG,CACzB,IAAIwR,EAAS,CAAA,EACTsN,EAAGpL,EAAGiN,EAAGrO,EAAGsO,EAAGxG,EAAMyG,EAAG/gB,EAG5B,GAFAE,EAAE,EAAIA,EAAE,EAAI,KAAK,KAEb,KAAK,IAAI,KAAK,IAAIA,EAAE,CAAC,EAAI3B,CAAO,EAAII,EAAO,CAS7C,GARAmiB,EAAI,KAAK,EAAI,KAAK,IAAI1b,EAAM,KAAK,EAAGlF,EAAE,EAAG,KAAK,IAAIA,EAAE,CAAC,CAAC,EAAG,KAAK,CAAC,EAE/Doa,EAAO,EAAIwG,EACX9B,EAAI,IAAO8B,EAAIxG,GACf1G,EAAI,IAAOkN,EAAIxG,GACf9H,EAAI,KAAK,IAAI,KAAK,EAAItS,EAAE,CAAC,EACzB2gB,GAAK7B,EAAI,KAAK,OAASxM,EAAI,KAAK,QAAUoB,EAEtC,KAAK,IAAI,KAAK,IAAIiN,CAAC,EAAI,CAAG,EAAIliB,EAChC,MAAM,IAAI,MAGZqB,EAAI,GAAM,KAAK,IAAM,KAAK,KAAK,EAAI6gB,IAAI,EAAIA,EAAE,EAC7CvG,EAAO,KAAK,IAAI,KAAK,EAAIpa,EAAE,CAAC,EAExB,KAAK,IAAIoa,CAAI,EAAIkF,GACnBuB,EAAI,KAAK,EAAI7gB,EAAE,EAEf6gB,EAAI,KAAK,IAAM,KAAK,MAAO/B,EAAI,KAAK,OAASxM,EAAI,KAAK,OAAS8H,CAAI,CAEzE,MACIta,EAAIE,EAAE,EAAI,EAAI,KAAK,SAAW,KAAK,SACnC6gB,EAAI,KAAK,IAAM7gB,EAAE,EAGnB,OAAI,KAAK,QACPwR,EAAO,EAAIqP,EACXrP,EAAO,EAAI1R,IAEX+gB,GAAK,KAAK,IACVrP,EAAO,EAAI1R,EAAI,KAAK,OAAS+gB,EAAI,KAAK,OACtCrP,EAAO,EAAIqP,EAAI,KAAK,OAAS/gB,EAAI,KAAK,QAGxC0R,EAAO,EAAK,KAAK,EAAIA,EAAO,EAAI,KAAK,GACrCA,EAAO,EAAK,KAAK,EAAIA,EAAO,EAAI,KAAK,GAE9BA,CACT,CAEO,SAAS1L,GAAQ9F,EAAG,CACzB,IAAI6gB,EAAG/gB,EAAGghB,EAAIC,EAAIC,EAAIC,EAAIC,EACtB1P,EAAS,CAAA,EAmBb,GAjBAxR,EAAE,GAAKA,EAAE,EAAI,KAAK,KAAO,EAAM,KAAK,GACpCA,EAAE,GAAKA,EAAE,EAAI,KAAK,KAAO,EAAM,KAAK,GAEhC,KAAK,QACPF,EAAIE,EAAE,EACN6gB,EAAI7gB,EAAE,IAENF,EAAIE,EAAE,EAAI,KAAK,OAASA,EAAE,EAAI,KAAK,OACnC6gB,EAAI7gB,EAAE,EAAI,KAAK,OAASA,EAAE,EAAI,KAAK,OAAS,KAAK,KAGnD8gB,EAAK,KAAK,IAAI,CAAC,KAAK,IAAMhhB,CAAC,EAC3BihB,EAAK,IAAOD,EAAK,EAAIA,GACrBE,EAAK,IAAOF,EAAK,EAAIA,GACrBG,EAAK,KAAK,IAAI,KAAK,IAAMJ,CAAC,EAC1BK,GAAMD,EAAK,KAAK,OAASF,EAAK,KAAK,QAAUC,EAEzC,KAAK,IAAI,KAAK,IAAIE,CAAE,EAAI,CAAC,EAAIziB,EAC/B+S,EAAO,EAAI,EACXA,EAAO,EAAI0P,EAAK,EAAI,CAAC7iB,EAAUA,MAC1B,CAIL,GAHAmT,EAAO,EAAI,KAAK,EAAI,KAAK,MAAM,EAAI0P,IAAO,EAAIA,EAAG,EACjD1P,EAAO,EAAInM,GAAM,KAAK,EAAG,KAAK,IAAImM,EAAO,EAAG,EAAI,KAAK,CAAC,CAAC,EAEnDA,EAAO,IAAM,IACf,MAAM,IAAI,MAGZA,EAAO,EAAI,CAAC,KAAK,GAAK,KAAK,MAAOuP,EAAK,KAAK,OAASE,EAAK,KAAK,OAAS,KAAK,IAAI,KAAK,IAAMJ,CAAC,CAAC,CAC/F,CAED,OAAArP,EAAO,GAAK,KAAK,KAEVA,CACT,CAEO,IAAIzL,GAAQ,CAAC,0BAA2B,0BAA2B,iDAAkD,mDAAoD,yCAA0C,mBAAoB,OAAO,EACtOob,GAAA,CACb,KAAM1b,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EC1OO,SAASN,IAAO,CAuBrB,GATK,KAAK,OACR,KAAK,KAAO,KAAK,MAEd,KAAK,KACR,KAAK,GAAK,GAEZ,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,GAAK,KAAK,IAAM,EAEjB,OAAK,IAAI,KAAK,KAAO,KAAK,IAAI,EAAIhH,GAItC,KAAI2b,EAAO,KAAK,EAAI,KAAK,EACzB,KAAK,EAAI,KAAK,KAAK,EAAIA,EAAOA,CAAI,EAElC,IAAIgH,EAAO,KAAK,IAAI,KAAK,IAAI,EACzBC,EAAO,KAAK,IAAI,KAAK,IAAI,EACzBC,EAAM5c,EAAM,KAAK,EAAG0c,EAAMC,CAAI,EAC9BE,EAAMrc,EAAM,KAAK,EAAG,KAAK,KAAMkc,CAAI,EAEnCI,EAAO,KAAK,IAAI,KAAK,IAAI,EACzBC,EAAO,KAAK,IAAI,KAAK,IAAI,EACzBC,EAAMhd,EAAM,KAAK,EAAG8c,EAAMC,CAAI,EAC9BE,EAAMzc,EAAM,KAAK,EAAG,KAAK,KAAMsc,CAAI,EAEnCI,EAAM1c,EAAM,KAAK,EAAG,KAAK,KAAM,KAAK,IAAI,KAAK,IAAI,CAAC,EAElD,KAAK,IAAI,KAAK,KAAO,KAAK,IAAI,EAAIzG,EACpC,KAAK,GAAK,KAAK,IAAI6iB,EAAMI,CAAG,EAAI,KAAK,IAAIH,EAAMI,CAAG,EAGlD,KAAK,GAAKP,EAER,MAAM,KAAK,EAAE,IACf,KAAK,GAAKA,GAEZ,KAAK,GAAKE,GAAO,KAAK,GAAK,KAAK,IAAIC,EAAK,KAAK,EAAE,GAChD,KAAK,GAAK,KAAK,EAAI,KAAK,GAAK,KAAK,IAAIK,EAAK,KAAK,EAAE,EAC7C,KAAK,QACR,KAAK,MAAQ,2BAEjB,CAIO,SAASlc,GAAQ1F,EAAG,CAEzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAGR,KAAK,IAAI,EAAI,KAAK,IAAI4F,CAAG,EAAI,KAAK,EAAE,GAAKnH,IAC3CmH,EAAMb,GAAKa,CAAG,GAAKvH,EAAU,EAAII,IAGnC,IAAIqG,EAAM,KAAK,IAAI,KAAK,IAAIc,CAAG,EAAIvH,CAAO,EACtCiH,EAAIuc,EACR,GAAI/c,EAAMrG,EACR6G,EAAKJ,EAAM,KAAK,EAAGU,EAAK,KAAK,IAAIA,CAAG,CAAC,EACrCic,EAAM,KAAK,EAAI,KAAK,GAAK,KAAK,IAAIvc,EAAI,KAAK,EAAE,MAE1C,CAEH,GADAR,EAAMc,EAAM,KAAK,GACbd,GAAO,EACT,OAAO,KAET+c,EAAM,CACP,CACD,IAAIC,EAAQ,KAAK,GAAK7c,EAAWU,EAAM,KAAK,KAAK,EACjD,OAAA3F,EAAE,EAAI,KAAK,IAAM6hB,EAAM,KAAK,IAAIC,CAAK,GAAK,KAAK,GAC/C9hB,EAAE,EAAI,KAAK,IAAM,KAAK,GAAK6hB,EAAM,KAAK,IAAIC,CAAK,GAAK,KAAK,GAElD9hB,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CAEzB,IAAI6hB,EAAK/c,EAAKQ,EACVM,EAAKD,EACLX,GAAKhF,EAAE,EAAI,KAAK,IAAM,KAAK,GAC3B6F,EAAK,KAAK,IAAM7F,EAAE,EAAI,KAAK,IAAM,KAAK,GACtC,KAAK,GAAK,GACZ6hB,EAAM,KAAK,KAAK7c,EAAIA,EAAIa,EAAIA,CAAC,EAC7Bf,EAAM,IAGN+c,EAAM,CAAC,KAAK,KAAK7c,EAAIA,EAAIa,EAAIA,CAAC,EAC9Bf,EAAM,IAER,IAAIgd,EAAQ,EAIZ,GAHID,IAAQ,IACVC,EAAQ,KAAK,MAAOhd,EAAME,EAAKF,EAAMe,IAElCgc,IAAQ,GAAO,KAAK,GAAK,GAI5B,GAHA/c,EAAM,EAAI,KAAK,GACfQ,EAAK,KAAK,IAAKuc,GAAO,KAAK,EAAI,KAAK,IAAM/c,CAAG,EAC7Cc,EAAMP,GAAM,KAAK,EAAGC,CAAE,EAClBM,IAAQ,MACV,OAAO,UAITA,EAAM,CAACvH,EAET,OAAAsH,EAAMV,EAAW6c,EAAQ,KAAK,GAAK,KAAK,KAAK,EAE7C9hB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CACjB,gDACA,0BACA,8BACA,8BACA,MACA,gCACA,+BACF,EAEegc,GAAA,CACb,KAAMtc,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECnJO,SAASN,IAAO,CACrB,KAAK,EAAI,cACT,KAAK,GAAK,iBACV,KAAK,EAAI,KAAK,KAAK,KAAK,EAAE,EACrB,KAAK,OACR,KAAK,KAAO,kBAET,KAAK,QACR,KAAK,MAAQ,kBAAqB,kBAG/B,KAAK,KACR,KAAK,GAAK,OAEZ,KAAK,IAAM,iBACX,KAAK,IAAM,EAAI,KAAK,IACpB,KAAK,IAAM,KAAK,KAChB,KAAK,GAAK,KAAK,GACf,KAAK,EAAI,KAAK,KAAK,KAAK,EAAE,EAC1B,KAAK,KAAO,KAAK,KAAK,EAAK,KAAK,GAAK,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,EAAG,CAAC,GAAM,EAAI,KAAK,GAAG,EACrF,KAAK,GAAK,iBACV,KAAK,GAAK,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,EAAI,KAAK,IAAI,EAClD,KAAK,EAAI,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,IAAI,KAAK,GAAG,IAAM,EAAI,KAAK,EAAI,KAAK,IAAI,KAAK,GAAG,GAAI,KAAK,KAAO,KAAK,EAAI,CAAC,EAC/G,KAAK,EAAI,KAAK,IAAI,KAAK,GAAK,EAAI,KAAK,GAAG,EAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAM,EAAI,KAAK,GAAG,EAAG,KAAK,IAAI,EAAI,KAAK,EAC1G,KAAK,GAAK,KAAK,GACf,KAAK,GAAK,KAAK,EAAI,KAAK,KAAK,EAAI,KAAK,EAAE,GAAK,EAAI,KAAK,GAAK,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,EAAG,CAAC,GACzF,KAAK,GAAK,iBACV,KAAK,EAAI,KAAK,IAAI,KAAK,EAAE,EACzB,KAAK,IAAM,KAAK,GAAK,KAAK,GAAK,KAAK,IAAI,KAAK,EAAE,EAC/C,KAAK,GAAK,KAAK,IAAM,KAAK,EAC5B,CAKO,SAASC,GAAQ1F,EAAG,CACzB,IAAIgiB,EAAKnB,EAAGoB,EAAQ5I,EAAGW,EAAGkI,EAAKC,EAC3Bxc,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACRsZ,EAAYrU,EAAWU,EAAM,KAAK,KAAK,EAE3C,OAAAqc,EAAM,KAAK,KAAM,EAAI,KAAK,EAAI,KAAK,IAAIpc,CAAG,IAAM,EAAI,KAAK,EAAI,KAAK,IAAIA,CAAG,GAAM,KAAK,KAAO,KAAK,EAAI,GACpGib,EAAI,GAAK,KAAK,KAAK,KAAK,EAAI,KAAK,IAAI,KAAK,IAAIjb,EAAM,EAAI,KAAK,GAAG,EAAG,KAAK,IAAI,EAAIoc,CAAG,EAAI,KAAK,KAC5FC,EAAS,CAAC3I,EAAY,KAAK,KAC3BD,EAAI,KAAK,KAAK,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIwH,CAAC,EAAI,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIA,CAAC,EAAI,KAAK,IAAIoB,CAAM,CAAC,EAClGjI,EAAI,KAAK,KAAK,KAAK,IAAI6G,CAAC,EAAI,KAAK,IAAIoB,CAAM,EAAI,KAAK,IAAI5I,CAAC,CAAC,EAC1D6I,EAAM,KAAK,EAAIlI,EACfmI,EAAK,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,KAAK,GAAK,EAAI,KAAK,GAAG,EAAG,KAAK,CAAC,EAAI,KAAK,IAAI,KAAK,IAAI9I,EAAI,EAAI,KAAK,GAAG,EAAG,KAAK,CAAC,EAChHrZ,EAAE,EAAImiB,EAAK,KAAK,IAAID,CAAG,EAAI,EAC3BliB,EAAE,EAAImiB,EAAK,KAAK,IAAID,CAAG,EAAI,EAEtB,KAAK,QACRliB,EAAE,GAAK,GACPA,EAAE,GAAK,IAEDA,CACV,CAGO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI6gB,EAAGoB,EAAQ5I,EAAGW,EAAGkI,EAAKC,EAAIC,EAC1BC,EAIA7F,EAAMxc,EAAE,EACZA,EAAE,EAAIA,EAAE,EACRA,EAAE,EAAIwc,EACD,KAAK,QACRxc,EAAE,GAAK,GACPA,EAAE,GAAK,IAETmiB,EAAK,KAAK,KAAKniB,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACpCkiB,EAAM,KAAK,MAAMliB,EAAE,EAAGA,EAAE,CAAC,EACzBga,EAAIkI,EAAM,KAAK,IAAI,KAAK,EAAE,EAC1B7I,EAAI,GAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAM8I,EAAI,EAAI,KAAK,CAAC,EAAI,KAAK,IAAI,KAAK,GAAK,EAAI,KAAK,GAAG,CAAC,EAAI,KAAK,KAClGtB,EAAI,KAAK,KAAK,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIxH,CAAC,EAAI,KAAK,IAAI,KAAK,EAAE,EAAI,KAAK,IAAIA,CAAC,EAAI,KAAK,IAAIW,CAAC,CAAC,EAC7FiI,EAAS,KAAK,KAAK,KAAK,IAAI5I,CAAC,EAAI,KAAK,IAAIW,CAAC,EAAI,KAAK,IAAI6G,CAAC,CAAC,EAC1D7gB,EAAE,EAAI,KAAK,MAAQiiB,EAAS,KAAK,KACjCG,EAAMvB,EACNwB,EAAK,EACL,IAAI1V,EAAO,EACX,GACE3M,EAAE,EAAI,GAAK,KAAK,KAAK,KAAK,IAAI,KAAK,EAAG,GAAM,KAAK,IAAI,EAAI,KAAK,IAAI,KAAK,IAAI6gB,EAAI,EAAI,KAAK,GAAG,EAAG,EAAI,KAAK,IAAI,EAAI,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,IAAIuB,CAAG,IAAM,EAAI,KAAK,EAAI,KAAK,IAAIA,CAAG,GAAI,KAAK,EAAI,CAAC,CAAC,EAAI,KAAK,KACrM,KAAK,IAAIA,EAAMpiB,EAAE,CAAC,EAAI,QACxBqiB,EAAK,GAEPD,EAAMpiB,EAAE,EACR2M,GAAQ,QACD0V,IAAO,GAAK1V,EAAO,IAC5B,OAAIA,GAAQ,GACH,KAGD3M,CACV,CAEO,IAAI+F,GAAQ,CAAC,SAAU,QAAQ,EACvBuc,GAAA,CACb,KAAM7c,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECzGe,SAAQwc,EAACC,EAAIjO,EAAIiK,EAAIiE,EAAItd,EAAK,CAC3C,OAAQqd,EAAKrd,EAAMoP,EAAK,KAAK,IAAI,EAAIpP,CAAG,EAAIqZ,EAAK,KAAK,IAAI,EAAIrZ,CAAG,EAAIsd,EAAK,KAAK,IAAI,EAAItd,CAAG,CAC5F,CCFe,SAAQud,GAAC1d,EAAG,CACzB,MAAQ,GAAI,IAAOA,GAAK,EAAIA,EAAI,IAAM,EAAI,KAAOA,GACnD,CCFe,SAAQ2d,GAAC3d,EAAG,CACzB,MAAQ,MAAQA,GAAK,EAAI,IAAOA,GAAK,EAAI,OAAUA,GACrD,CCFe,SAAQ4d,GAAC5d,EAAG,CACzB,MAAQ,WAAaA,EAAIA,GAAK,EAAI,IAAOA,EAC3C,CCFe,SAAQ6d,GAAC7d,EAAG,CACzB,OAAQA,EAAIA,EAAIA,GAAK,GAAK,KAC5B,CCFe,SAAA8d,GAAS/iB,EAAGuH,EAAG1C,EAAQ,CACpC,IAAIwV,EAAO9S,EAAI1C,EACf,OAAO7E,EAAI,KAAK,KAAK,EAAIqa,EAAOA,CAAI,CACtC,CCAe,SAAQ2I,GAAC/d,EAAG,CACzB,OAAQ,KAAK,IAAIA,CAAC,EAAI3G,EAAW2G,EAAKA,EAAKD,GAAKC,CAAC,EAAI,KAAK,EAC5D,CCLe,SAAQge,GAAClJ,EAAI0I,EAAIjO,EAAIiK,EAAIiE,EAAI,CAC1C,IAAItd,EACAK,EAEJL,EAAM2U,EAAK0I,EACX,QAASjjB,EAAI,EAAGA,EAAI,GAAIA,IAGtB,GAFAiG,GAAQsU,GAAM0I,EAAKrd,EAAMoP,EAAK,KAAK,IAAI,EAAIpP,CAAG,EAAIqZ,EAAK,KAAK,IAAI,EAAIrZ,CAAG,EAAIsd,EAAK,KAAK,IAAI,EAAItd,CAAG,KAAOqd,EAAK,EAAIjO,EAAK,KAAK,IAAI,EAAIpP,CAAG,EAAI,EAAIqZ,EAAK,KAAK,IAAI,EAAIrZ,CAAG,EAAI,EAAIsd,EAAK,KAAK,IAAI,EAAItd,CAAG,GAC/LA,GAAOK,EACH,KAAK,IAAIA,CAAI,GAAK,MACpB,OAAOL,EAKX,MAAO,IACT,CCJO,SAASM,IAAO,CAChB,KAAK,SACR,KAAK,GAAKid,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,IAAM,KAAK,EAAIN,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAAI,EAE1E,CAIO,SAAS7c,GAAQ1F,EAAG,CAIzB,IAAIgF,EAAGa,EACHod,EAAMjjB,EAAE,EACRmF,EAAMnF,EAAE,EAGZ,GAFAijB,EAAMhe,EAAWge,EAAM,KAAK,KAAK,EAE7B,KAAK,OACPje,EAAI,KAAK,EAAI,KAAK,KAAK,KAAK,IAAIG,CAAG,EAAI,KAAK,IAAI8d,CAAG,CAAC,EACpDpd,EAAI,KAAK,GAAK,KAAK,MAAM,KAAK,IAAIV,CAAG,EAAG,KAAK,IAAI8d,CAAG,CAAC,EAAI,KAAK,UAE3D,CAEH,IAAIre,EAAS,KAAK,IAAIO,CAAG,EACrBN,EAAS,KAAK,IAAIM,CAAG,EACrB+d,EAAKJ,GAAG,KAAK,EAAG,KAAK,EAAGle,CAAM,EAC9Bue,EAAK,KAAK,IAAIhe,CAAG,EAAI,KAAK,IAAIA,CAAG,EACjCsU,EAAKwJ,EAAM,KAAK,IAAI9d,CAAG,EACvBie,EAAM3J,EAAKA,EACX4J,EAAK,KAAK,GAAKxe,EAASA,GAAU,EAAI,KAAK,IAC3CiV,EAAK,KAAK,EAAIyI,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAIpd,CAAG,EAE9DH,EAAIke,EAAKzJ,GAAM,EAAI2J,EAAMD,GAAM,EAAI,GAAK,EAAIA,EAAK,EAAIE,GAAMD,EAAM,MACjEvd,EAAIiU,EAAK,KAAK,IAAMoJ,EAAKte,EAASC,EAASue,GAAO,IAAO,EAAID,EAAK,EAAIE,GAAMD,EAAM,GAGnF,CAED,OAAApjB,EAAE,EAAIgF,EAAI,KAAK,GACfhF,EAAE,EAAI6F,EAAI,KAAK,GACR7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ,IAAIgF,EAAIhF,EAAE,EAAI,KAAK,EACf6F,EAAI7F,EAAE,EAAI,KAAK,EACfmF,EAAK8d,EAET,GAAI,KAAK,OAAQ,CACf,IAAIK,EAAKzd,EAAI,KAAK,KAClBV,EAAM,KAAK,KAAK,KAAK,IAAIme,CAAE,EAAI,KAAK,IAAIte,CAAC,CAAC,EAC1Cie,EAAM,KAAK,MAAM,KAAK,IAAIje,CAAC,EAAG,KAAK,IAAIse,CAAE,CAAC,CAC3C,KACI,CAEH,IAAIC,EAAM,KAAK,IAAM,KAAK,EAAI1d,EAC1Bwa,EAAO2C,GAAMO,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,EAAE,EACxD,GAAI,KAAK,IAAI,KAAK,IAAIlD,CAAI,EAAIhiB,CAAO,GAAKI,EACxC,OAAAuB,EAAE,EAAI,KAAK,MACXA,EAAE,EAAI3B,EACFwH,EAAI,IACN7F,EAAE,GAAK,IAEFA,EAET,IAAIwjB,EAAMV,GAAG,KAAK,EAAG,KAAK,EAAG,KAAK,IAAIzC,CAAI,CAAC,EAEvCoD,EAAMD,EAAMA,EAAMA,EAAM,KAAK,EAAI,KAAK,GAAK,EAAI,KAAK,IACpDE,EAAM,KAAK,IAAI,KAAK,IAAIrD,CAAI,EAAG,CAAC,EAChCsD,EAAK3e,EAAI,KAAK,EAAIwe,EAClBI,EAAMD,EAAKA,EACfxe,EAAMkb,EAAOmD,EAAM,KAAK,IAAInD,CAAI,EAAIoD,EAAME,EAAKA,GAAM,IAAO,EAAI,EAAID,GAAOC,EAAKA,EAAK,IACrFV,EAAMU,GAAM,EAAIC,GAAOF,EAAM,GAAK,EAAI,EAAIA,GAAOA,EAAME,EAAM,KAAO,KAAK,IAAIvD,CAAI,CAElF,CAED,OAAArgB,EAAE,EAAIiF,EAAWge,EAAM,KAAK,KAAK,EACjCjjB,EAAE,EAAI+iB,GAAW5d,CAAG,EACbnF,CAET,CAEO,IAAI+F,GAAQ,CAAC,UAAW,kBAAmB,MAAM,EACzC8d,GAAA,CACb,KAAMpe,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EC3Ge,SAAA+d,EAASnf,EAAQC,EAAQ,CACtC,IAAIE,EACJ,OAAIH,EAAS,MACXG,EAAMH,EAASC,GACN,EAAID,EAASA,IAAWC,GAAU,EAAIE,EAAMA,GAAQ,GAAMH,EAAU,KAAK,KAAK,EAAIG,IAAQ,EAAIA,EAAI,IAGnG,EAAIF,CAEhB,CCGO,IAAImf,GAAS,EAETC,GAAS,EACTC,GAAQ,EACRC,GAAQ,EAIZ,SAASze,IAAO,CACrB,IAAIgK,EAAI,KAAK,IAAI,KAAK,IAAI,EAU1B,GATI,KAAK,IAAIA,EAAIpR,CAAO,EAAII,EAC1B,KAAK,KAAO,KAAK,KAAO,EAAI,KAAK,OAAS,KAAK,OAExC,KAAK,IAAIgR,CAAC,EAAIhR,EACrB,KAAK,KAAO,KAAK,MAGjB,KAAK,KAAO,KAAK,MAEf,KAAK,GAAK,EAAG,CACf,IAAImG,EAKJ,OAHA,KAAK,GAAKkf,EAAM,KAAK,EAAG,CAAC,EACzB,KAAK,IAAM,IAAO,EAAI,KAAK,IAC3B,KAAK,IAAMK,GAAQ,KAAK,EAAE,EAClB,KAAK,KAAI,CACjB,KAAK,KAAK,OACR,KAAK,GAAK,EACV,MACF,KAAK,KAAK,OACR,KAAK,GAAK,EACV,MACF,KAAK,KAAK,MACR,KAAK,GAAK,KAAK,KAAK,GAAM,KAAK,EAAE,EACjC,KAAK,GAAK,EAAI,KAAK,GACnB,KAAK,IAAM,EACX,KAAK,IAAM,GAAM,KAAK,GACtB,MACF,KAAK,KAAK,MACR,KAAK,GAAK,KAAK,KAAK,GAAM,KAAK,EAAE,EACjCvf,EAAS,KAAK,IAAI,KAAK,IAAI,EAC3B,KAAK,MAAQkf,EAAM,KAAK,EAAGlf,CAAM,EAAI,KAAK,GAC1C,KAAK,MAAQ,KAAK,KAAK,EAAI,KAAK,MAAQ,KAAK,KAAK,EAClD,KAAK,GAAK,KAAK,IAAI,KAAK,IAAI,GAAK,KAAK,KAAK,EAAI,KAAK,GAAKA,EAASA,CAAM,EAAI,KAAK,GAAK,KAAK,OAC3F,KAAK,KAAO,KAAK,IAAM,KAAK,IAAM,KAAK,GACvC,KAAK,KAAO,KAAK,GACjB,KACD,CACF,MAEK,KAAK,OAAS,KAAK,QACrB,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAGtC,CAIO,SAASc,GAAQ1F,EAAG,CAIzB,IAAIgF,EAAGa,EAAGue,EAAQC,EAAQzf,EAAQ0f,EAAGC,EAAMC,EAAMxd,EAAGnC,EAChDoe,EAAMjjB,EAAE,EACRmF,EAAMnF,EAAE,EAGZ,GADAijB,EAAMhe,EAAWge,EAAM,KAAK,KAAK,EAC7B,KAAK,QAIP,GAHAre,EAAS,KAAK,IAAIO,CAAG,EACrBN,EAAS,KAAK,IAAIM,CAAG,EACrBif,EAAS,KAAK,IAAInB,CAAG,EACjB,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,MAAO,CAExD,GADApd,EAAK,KAAK,OAAS,KAAK,MAAS,EAAIhB,EAASuf,EAAS,EAAI,KAAK,OAASxf,EAAS,KAAK,OAASC,EAASuf,EACrGve,GAAKpH,EACP,OAAO,KAEToH,EAAI,KAAK,KAAK,EAAIA,CAAC,EACnBb,EAAIa,EAAIhB,EAAS,KAAK,IAAIoe,CAAG,EAC7Bpd,GAAM,KAAK,OAAS,KAAK,MAASjB,EAAS,KAAK,OAASA,EAAS,KAAK,OAASC,EAASuf,CAC1F,SACQ,KAAK,OAAS,KAAK,QAAU,KAAK,OAAS,KAAK,OAAQ,CAI/D,GAHI,KAAK,OAAS,KAAK,SACrBA,EAAS,CAACA,GAER,KAAK,IAAIjf,EAAM,KAAK,IAAI,EAAI1G,EAC9B,OAAO,KAEToH,EAAIjH,EAASuG,EAAM,GACnBU,EAAI,GAAM,KAAK,OAAS,KAAK,OAAU,KAAK,IAAIA,CAAC,EAAI,KAAK,IAAIA,CAAC,GAC/Db,EAAIa,EAAI,KAAK,IAAIod,CAAG,EACpBpd,GAAKue,CACN,MAEE,CAYH,OAXAG,EAAO,EACPC,EAAO,EACPxd,EAAI,EACJod,EAAS,KAAK,IAAInB,CAAG,EACrBoB,EAAS,KAAK,IAAIpB,CAAG,EACrBre,EAAS,KAAK,IAAIO,CAAG,EACrBmf,EAAIR,EAAM,KAAK,EAAGlf,CAAM,GACpB,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,SACjD2f,EAAOD,EAAI,KAAK,GAChBE,EAAO,KAAK,KAAK,EAAID,EAAOA,CAAI,GAE1B,KAAK,KAAI,CACjB,KAAK,KAAK,MACRvd,EAAI,EAAI,KAAK,MAAQud,EAAO,KAAK,MAAQC,EAAOJ,EAChD,MACF,KAAK,KAAK,MACRpd,EAAI,EAAIwd,EAAOJ,EACf,MACF,KAAK,KAAK,OACRpd,EAAI3I,EAAU8G,EACdmf,EAAI,KAAK,GAAKA,EACd,MACF,KAAK,KAAK,OACRtd,EAAI7B,EAAM9G,EACVimB,EAAI,KAAK,GAAKA,EACd,KACD,CACD,GAAI,KAAK,IAAItd,CAAC,EAAIvI,EAChB,OAAO,KAET,OAAQ,KAAK,KAAI,CACjB,KAAK,KAAK,MACV,KAAK,KAAK,MACRuI,EAAI,KAAK,KAAK,EAAIA,CAAC,EACf,KAAK,OAAS,KAAK,MACrBnB,EAAI,KAAK,IAAMmB,GAAK,KAAK,MAAQud,EAAO,KAAK,MAAQC,EAAOJ,GAG5Dve,GAAKmB,EAAI,KAAK,KAAK,GAAK,EAAIwd,EAAOJ,EAAO,GAAKG,EAAO,KAAK,IAE7Dvf,EAAI,KAAK,IAAMgC,EAAIwd,EAAOH,EAC1B,MACF,KAAK,KAAK,OACV,KAAK,KAAK,OACJC,GAAK,GACPtf,GAAKgC,EAAI,KAAK,KAAKsd,CAAC,GAAKD,EACzBxe,EAAIue,GAAW,KAAK,OAAS,KAAK,OAAUpd,EAAI,CAACA,IAGjDhC,EAAIa,EAAI,EAEV,KACD,CACF,CAED,OAAA7F,EAAE,EAAI,KAAK,EAAIgF,EAAI,KAAK,GACxBhF,EAAE,EAAI,KAAK,EAAI6F,EAAI,KAAK,GACjB7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ,IAAIgF,EAAIhF,EAAE,EAAI,KAAK,EACf6F,EAAI7F,EAAE,EAAI,KAAK,EACfijB,EAAK9d,EAAKsf,EAAKC,EAAKJ,EAAGjH,EAAKsH,EAChC,GAAI,KAAK,OAAQ,CACf,IAAIC,EAAO,EACT9G,EAAI+G,EAAO,EAIb,GAFA/G,EAAK,KAAK,KAAK9Y,EAAIA,EAAIa,EAAIA,CAAC,EAC5BV,EAAM2Y,EAAK,GACP3Y,EAAM,EACR,OAAO,KAOT,OALAA,EAAM,EAAI,KAAK,KAAKA,CAAG,GACnB,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,SACjD0f,EAAO,KAAK,IAAI1f,CAAG,EACnByf,EAAO,KAAK,IAAIzf,CAAG,GAEb,KAAK,KAAI,CACjB,KAAK,KAAK,MACRA,EAAO,KAAK,IAAI2Y,CAAE,GAAKrf,EAAS,EAAI,KAAK,KAAKoH,EAAIgf,EAAO/G,CAAE,EAC3D9Y,GAAK6f,EACLhf,EAAI+e,EAAO9G,EACX,MACF,KAAK,KAAK,MACR3Y,EAAO,KAAK,IAAI2Y,CAAE,GAAKrf,EAAS,KAAK,KAAO,KAAK,KAAKmmB,EAAO,KAAK,OAAS/e,EAAIgf,EAAO,KAAK,OAAS/G,CAAE,EACtG9Y,GAAK6f,EAAO,KAAK,OACjBhf,GAAK+e,EAAO,KAAK,IAAIzf,CAAG,EAAI,KAAK,QAAU2Y,EAC3C,MACF,KAAK,KAAK,OACRjY,EAAI,CAACA,EACLV,EAAM9G,EAAU8G,EAChB,MACF,KAAK,KAAK,OACRA,GAAO9G,EACP,KACD,CACD4kB,EAAOpd,IAAM,IAAM,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAU,EAAI,KAAK,MAAMb,EAAGa,CAAC,CAChG,KACI,CAEH,GADA8e,EAAK,EACD,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,MAAO,CAIxD,GAHA3f,GAAK,KAAK,GACVa,GAAK,KAAK,GACVwX,EAAM,KAAK,KAAKrY,EAAIA,EAAIa,EAAIA,CAAC,EACzBwX,EAAM5e,EACR,OAAAuB,EAAE,EAAI,KAAK,MACXA,EAAE,EAAI,KAAK,KACJA,EAET0kB,EAAM,EAAI,KAAK,KAAK,GAAMrH,EAAM,KAAK,EAAE,EACvCoH,EAAM,KAAK,IAAIC,CAAG,EAClB1f,GAAM0f,EAAM,KAAK,IAAIA,CAAG,EACpB,KAAK,OAAS,KAAK,OACrBC,EAAKF,EAAM,KAAK,MAAQ5e,EAAI6e,EAAM,KAAK,MAAQrH,EAC/CiH,EAAI,KAAK,GAAKK,EACd9e,EAAIwX,EAAM,KAAK,MAAQoH,EAAM5e,EAAI,KAAK,MAAQ6e,IAG9CC,EAAK9e,EAAI6e,EAAMrH,EACfiH,EAAI,KAAK,GAAKK,EACd9e,EAAIwX,EAAMoH,EAEb,SACQ,KAAK,OAAS,KAAK,QAAU,KAAK,OAAS,KAAK,OAAQ,CAK/D,GAJI,KAAK,OAAS,KAAK,SACrB5e,EAAI,CAACA,GAEPye,EAAKtf,EAAIA,EAAIa,EAAIA,EACb,CAACye,EACH,OAAAtkB,EAAE,EAAI,KAAK,MACXA,EAAE,EAAI,KAAK,KACJA,EAET2kB,EAAK,EAAIL,EAAI,KAAK,GACd,KAAK,OAAS,KAAK,SACrBK,EAAK,CAACA,EAET,CACD1B,EAAM,KAAK,MAAMje,EAAGa,CAAC,EACrBV,EAAM2f,GAAQ,KAAK,KAAKH,CAAE,EAAG,KAAK,GAAG,CACtC,CAED,OAAA3kB,EAAE,EAAIiF,EAAW,KAAK,MAAQge,CAAG,EACjCjjB,EAAE,EAAImF,EACCnF,CACT,CAGA,IAAI+kB,GAAM,kBAENC,GAAM,mBACNC,GAAM,mBACNC,GAAM,mBACNC,GAAM,kBACNC,GAAM,oBAEV,SAASjB,GAAQ9c,EAAI,CACnB,IAAIoI,EACA4V,EAAM,CAAA,EACV,OAAAA,EAAI,CAAC,EAAIhe,EAAK0d,GACdtV,EAAIpI,EAAKA,EACTge,EAAI,CAAC,GAAK5V,EAAIuV,GACdK,EAAI,CAAC,EAAI5V,EAAIyV,GACbzV,GAAKpI,EACLge,EAAI,CAAC,GAAK5V,EAAIwV,GACdI,EAAI,CAAC,GAAK5V,EAAI0V,GACdE,EAAI,CAAC,EAAI5V,EAAI2V,GACNC,CACT,CAEA,SAASP,GAAQQ,EAAMD,EAAK,CAC1B,IAAI5V,EAAI6V,EAAOA,EACf,OAAQA,EAAOD,EAAI,CAAC,EAAI,KAAK,IAAI5V,CAAC,EAAI4V,EAAI,CAAC,EAAI,KAAK,IAAI5V,EAAIA,CAAC,EAAI4V,EAAI,CAAC,EAAI,KAAK,IAAI5V,EAAIA,EAAIA,CAAC,CAC9F,CAEO,IAAI1J,GAAQ,CAAC,+BAAgC,+BAAgC,MAAM,EAC3Ewf,GAAA,CACb,KAAM9f,GACN,QAASC,GACT,QAASI,GACT,MAAOC,GACP,OAAQge,GACR,OAAQC,GACR,MAAOC,GACP,MAAOC,EACT,ECzSe,SAAQsB,GAACxgB,EAAG,CACzB,OAAI,KAAK,IAAIA,CAAC,EAAI,IAChBA,EAAKA,EAAI,EAAK,EAAI,IAEb,KAAK,KAAKA,CAAC,CACpB,CCCO,SAASS,IAAO,CAEjB,KAAK,IAAI,KAAK,KAAO,KAAK,IAAI,EAAIhH,IAGtC,KAAK,KAAO,KAAK,EAAI,KAAK,EAC1B,KAAK,GAAK,EAAI,KAAK,IAAI,KAAK,KAAM,CAAC,EACnC,KAAK,GAAK,KAAK,KAAK,KAAK,EAAE,EAE3B,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,GAAK,KAAK,OACf,KAAK,IAAM,KAAK,OAChB,KAAK,IAAMiG,EAAM,KAAK,GAAI,KAAK,OAAQ,KAAK,MAAM,EAClD,KAAK,IAAMof,EAAM,KAAK,GAAI,KAAK,OAAQ,KAAK,MAAM,EAElD,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,GAAK,KAAK,OACf,KAAK,IAAMpf,EAAM,KAAK,GAAI,KAAK,OAAQ,KAAK,MAAM,EAClD,KAAK,IAAMof,EAAM,KAAK,GAAI,KAAK,OAAQ,KAAK,MAAM,EAElD,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,GAAK,KAAK,OACf,KAAK,IAAMA,EAAM,KAAK,GAAI,KAAK,OAAQ,KAAK,MAAM,EAE9C,KAAK,IAAI,KAAK,KAAO,KAAK,IAAI,EAAIrlB,EACpC,KAAK,KAAO,KAAK,IAAM,KAAK,IAAM,KAAK,IAAM,KAAK,MAAQ,KAAK,IAAM,KAAK,KAG1E,KAAK,IAAM,KAAK,IAElB,KAAK,EAAI,KAAK,IAAM,KAAK,IAAM,KAAK,IAAM,KAAK,IAC/C,KAAK,GAAK,KAAK,EAAI,KAAK,KAAK,KAAK,EAAI,KAAK,IAAM,KAAK,GAAG,EAAI,KAAK,IACpE,CAIO,SAASiH,GAAQ1F,EAAG,CAEzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAEZ,KAAK,QAAU,KAAK,IAAI4F,CAAG,EAC3B,KAAK,QAAU,KAAK,IAAIA,CAAG,EAE3B,IAAI6f,EAAK3B,EAAM,KAAK,GAAI,KAAK,QAAS,KAAK,OAAO,EAC9CjC,EAAM,KAAK,EAAI,KAAK,KAAK,KAAK,EAAI,KAAK,IAAM4D,CAAE,EAAI,KAAK,IACxD3D,EAAQ,KAAK,IAAM7c,EAAWU,EAAM,KAAK,KAAK,EAC9CX,EAAI6c,EAAM,KAAK,IAAIC,CAAK,EAAI,KAAK,GACjCjc,EAAI,KAAK,GAAKgc,EAAM,KAAK,IAAIC,CAAK,EAAI,KAAK,GAE/C,OAAA9hB,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI6hB,EAAK4D,EAAI3gB,EAAKgd,EAAOnc,EAAKC,EAE9B,OAAA5F,EAAE,GAAK,KAAK,GACZA,EAAE,EAAI,KAAK,GAAKA,EAAE,EAAI,KAAK,GACvB,KAAK,KAAO,GACd6hB,EAAM,KAAK,KAAK7hB,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACrC8E,EAAM,IAGN+c,EAAM,CAAC,KAAK,KAAK7hB,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACtC8E,EAAM,IAERgd,EAAQ,EACJD,IAAQ,IACVC,EAAQ,KAAK,MAAMhd,EAAM9E,EAAE,EAAG8E,EAAM9E,EAAE,CAAC,GAEzC8E,EAAM+c,EAAM,KAAK,IAAM,KAAK,EACxB,KAAK,OACPjc,EAAM,KAAK,MAAM,KAAK,EAAId,EAAMA,IAAQ,EAAI,KAAK,IAAI,GAGrD2gB,GAAM,KAAK,EAAI3gB,EAAMA,GAAO,KAAK,IACjCc,EAAM,KAAK,MAAM,KAAK,GAAI6f,CAAE,GAG9B9f,EAAMV,EAAW6c,EAAQ,KAAK,IAAM,KAAK,KAAK,EAC9C9hB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAKO,SAAS0lB,GAAM/gB,EAAQ8gB,EAAI,CAChC,IAAI7gB,EAAQC,EAAQC,EAAKM,EAAKI,EAC1BL,EAAMqgB,GAAM,GAAMC,CAAE,EACxB,GAAI9gB,EAASlG,EACX,OAAO0G,EAIT,QADIwgB,EAAShhB,EAASA,EACb,EAAI,EAAG,GAAK,GAAI,IAOvB,GANAC,EAAS,KAAK,IAAIO,CAAG,EACrBN,EAAS,KAAK,IAAIM,CAAG,EACrBL,EAAMH,EAASC,EACfQ,EAAM,EAAIN,EAAMA,EAChBU,EAAO,GAAMJ,EAAMA,EAAMP,GAAU4gB,GAAM,EAAIE,GAAU/gB,EAASQ,EAAM,GAAMT,EAAS,KAAK,KAAK,EAAIG,IAAQ,EAAIA,EAAI,GACnHK,EAAMA,EAAMK,EACR,KAAK,IAAIA,CAAI,GAAK,KACpB,OAAOL,EAGX,OAAO,IACT,CAEO,IAAIY,GAAQ,CAAC,0BAA2B,SAAU,KAAK,EAC/C6f,GAAA,CACb,KAAMngB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,GACP,MAAO2f,EACT,ECtHO,SAASjgB,IAAO,CAIrB,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,EAEjC,KAAK,cAAgB,IAAO,KAAK,EACjC,KAAK,GAAK,CACZ,CAIO,SAASC,GAAQ1F,EAAG,CACzB,IAAI4E,EAAQC,EACRkZ,EACA8H,EACAC,EACA3L,EACAnV,EAAGa,EACHF,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAGZ,OAAA+d,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAElCf,EAAS,KAAK,IAAIgB,CAAG,EACrBf,EAAS,KAAK,IAAIe,CAAG,EAErBigB,EAAS,KAAK,IAAI9H,CAAI,EACtB5D,EAAI,KAAK,QAAUvV,EAAS,KAAK,QAAUC,EAASghB,EACpDC,EAAM,EACD3L,EAAI,GAAO,KAAK,IAAIA,CAAC,GAAK1b,GAC7BuG,EAAI,KAAK,GAAK,KAAK,EAAI8gB,EAAMjhB,EAAS,KAAK,IAAIkZ,CAAI,EAAI5D,EACvDtU,EAAI,KAAK,GAAK,KAAK,EAAIigB,GAAO,KAAK,QAAUlhB,EAAS,KAAK,QAAUC,EAASghB,GAAU1L,IAWxFnV,EAAI,KAAK,GAAK,KAAK,cAAgBH,EAAS,KAAK,IAAIkZ,CAAI,EACzDlY,EAAI,KAAK,GAAK,KAAK,eAAiB,KAAK,QAAUjB,EAAS,KAAK,QAAUC,EAASghB,IAGtF7lB,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI8d,EACAZ,EAAMC,EACNxD,EACAhU,EAAKC,EAIT,OAAA5F,EAAE,GAAKA,EAAE,EAAI,KAAK,IAAM,KAAK,EAC7BA,EAAE,GAAKA,EAAE,EAAI,KAAK,IAAM,KAAK,EAE7BA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,IAEP8d,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,IACvC2Z,EAAI,KAAK,MAAMmE,EAAI,KAAK,EAAE,EAC1BZ,EAAO,KAAK,IAAIvD,CAAC,EACjBwD,EAAO,KAAK,IAAIxD,CAAC,EAEjB/T,EAAM4f,GAAMrI,EAAO,KAAK,QAAWnd,EAAE,EAAIkd,EAAO,KAAK,QAAWY,CAAE,EAClEnY,EAAM,KAAK,MAAM3F,EAAE,EAAIkd,EAAMY,EAAK,KAAK,QAAUX,EAAOnd,EAAE,EAAI,KAAK,QAAUkd,CAAI,EACjFvX,EAAMV,EAAW,KAAK,MAAQU,CAAG,IAGjCC,EAAM,KAAK,MACXD,EAAM,GAGR3F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,MAAM,EACXggB,GAAA,CACb,KAAMtgB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECrGe,SAAAigB,GAASrhB,EAAQ2f,EAAG,CACjC,IAAIlK,EAAO,GAAK,EAAIzV,EAASA,IAAW,EAAIA,GAAU,KAAK,KAAK,EAAIA,IAAW,EAAIA,EAAO,EAC1F,GAAI,KAAK,IAAI,KAAK,IAAI2f,CAAC,EAAIlK,CAAI,EAAI,KACjC,OAAIkK,EAAI,EACE,GAAKjmB,EAGNA,EASX,QALI8G,EAAM,KAAK,KAAK,GAAMmf,CAAC,EACvB9e,EACA+T,EACAC,EACA1U,EACKvF,EAAI,EAAGA,EAAI,GAAIA,IAMtB,GALAga,EAAU,KAAK,IAAIpU,CAAG,EACtBqU,EAAU,KAAK,IAAIrU,CAAG,EACtBL,EAAMH,EAAS4U,EACf/T,EAAO,KAAK,IAAI,EAAIV,EAAMA,EAAK,CAAC,GAAK,EAAI0U,IAAY8K,GAAK,EAAI3f,EAASA,GAAU4U,GAAW,EAAIzU,EAAMA,GAAO,GAAMH,EAAS,KAAK,KAAK,EAAIG,IAAQ,EAAIA,EAAI,GAC1JK,GAAOK,EACH,KAAK,IAAIA,CAAI,GAAK,MACpB,OAAOL,EAKX,MAAO,IACT,CCpBO,SAASM,IAAO,CAEhB,KAAK,SACR,KAAK,GAAKf,EAAM,KAAK,EAAG,KAAK,IAAI,KAAK,MAAM,EAAG,KAAK,IAAI,KAAK,MAAM,CAAC,EAExE,CAIO,SAASgB,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACRgF,EAAGa,EAGHkY,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EACtC,GAAI,KAAK,OACPX,EAAI,KAAK,GAAK,KAAK,EAAI+Y,EAAO,KAAK,IAAI,KAAK,MAAM,EAClDlY,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,IAAID,CAAG,EAAI,KAAK,IAAI,KAAK,MAAM,MAExD,CACH,IAAI6f,EAAK3B,EAAM,KAAK,EAAG,KAAK,IAAIle,CAAG,CAAC,EACpCZ,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,GAAK+Y,EACjClY,EAAI,KAAK,GAAK,KAAK,EAAI4f,EAAK,GAAM,KAAK,EACxC,CAED,OAAAzlB,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ,IAAI2F,EAAKC,EAET,OAAI,KAAK,QACPD,EAAMV,EAAW,KAAK,MAASjF,EAAE,EAAI,KAAK,EAAK,KAAK,IAAI,KAAK,MAAM,CAAC,EACpE4F,EAAM,KAAK,KAAM5F,EAAE,EAAI,KAAK,EAAK,KAAK,IAAI,KAAK,MAAM,CAAC,IAGtD4F,EAAMogB,GAAO,KAAK,EAAG,EAAIhmB,EAAE,EAAI,KAAK,GAAK,KAAK,CAAC,EAC/C2F,EAAMV,EAAW,KAAK,MAAQjF,EAAE,GAAK,KAAK,EAAI,KAAK,GAAG,GAGxDA,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,KAAK,EACVkgB,GAAA,CACb,KAAMxgB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EClEO,SAASN,IAAO,CAErB,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,KAAO,KAAK,MAAQ,EACzB,KAAK,MAAQ,KAAK,OAAS,EAC3B,KAAK,OAAS,KAAK,QAAU,EAC7B,KAAK,MAAQ,KAAK,OAAS,wCAE3B,KAAK,GAAK,KAAK,IAAI,KAAK,MAAM,CAChC,CAIO,SAASC,GAAQ1F,EAAG,CAEzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAER+d,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAClCugB,EAAOnD,GAAWnd,EAAM,KAAK,IAAI,EACrC,OAAA5F,EAAE,EAAI,KAAK,GAAM,KAAK,EAAI+d,EAAO,KAAK,GACtC/d,EAAE,EAAI,KAAK,GAAM,KAAK,EAAIkmB,EACnBlmB,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CAEzB,IAAIgF,EAAIhF,EAAE,EACN6F,EAAI7F,EAAE,EAEV,OAAAA,EAAE,EAAIiF,EAAW,KAAK,OAAUD,EAAI,KAAK,KAAO,KAAK,EAAI,KAAK,GAAI,EAClEhF,EAAE,EAAI+iB,GAAW,KAAK,MAASld,EAAI,KAAK,IAAO,KAAK,CAAG,EAChD7F,CACT,CAEO,IAAI+F,GAAQ,CAAC,kBAAmB,0BAA2B,KAAK,EACxDogB,GAAA,CACb,KAAM1gB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECrCIkT,GAAW,GAER,SAASxT,IAAO,CAGrB,KAAK,KAAO,KAAK,EAAI,KAAK,EAC1B,KAAK,GAAK,EAAI,KAAK,IAAI,KAAK,KAAM,CAAC,EACnC,KAAK,EAAI,KAAK,KAAK,KAAK,EAAE,EAC1B,KAAK,GAAKid,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,IAAM,KAAK,EAAIN,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAAI,CACxE,CAIO,SAAS7c,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACRgF,EAAGa,EAAGugB,EACNrI,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAEtC,GADAygB,EAAKrI,EAAO,KAAK,IAAInY,CAAG,EACpB,KAAK,OACH,KAAK,IAAIA,CAAG,GAAKnH,GACnBuG,EAAI,KAAK,EAAI+Y,EACblY,EAAI,GAAK,KAAK,EAAI,KAAK,OAGvBb,EAAI,KAAK,EAAI,KAAK,IAAIohB,CAAE,EAAI,KAAK,IAAIxgB,CAAG,EACxCC,EAAI,KAAK,GAAKkd,GAAWnd,EAAM,KAAK,IAAI,GAAK,EAAI,KAAK,IAAIwgB,CAAE,GAAK,KAAK,IAAIxgB,CAAG,YAI3E,KAAK,IAAIA,CAAG,GAAKnH,EACnBuG,EAAI,KAAK,EAAI+Y,EACblY,EAAI,GAAK,KAAK,QAEX,CACH,IAAIqd,EAAKJ,GAAG,KAAK,EAAG,KAAK,EAAG,KAAK,IAAIld,CAAG,CAAC,EAAI,KAAK,IAAIA,CAAG,EACzDZ,EAAIke,EAAK,KAAK,IAAIkD,CAAE,EACpBvgB,EAAI,KAAK,EAAI0c,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI3c,CAAG,EAAI,KAAK,IAAMsd,GAAM,EAAI,KAAK,IAAIkD,CAAE,EAC9F,CAGH,OAAApmB,EAAE,EAAIgF,EAAI,KAAK,GACfhF,EAAE,EAAI6F,EAAI,KAAK,GACR7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI2F,EAAKC,EAAKZ,EAAGa,EAAGtG,EAChBka,EAAI4M,EACJlhB,EAAKK,EAIT,GAHAR,EAAIhF,EAAE,EAAI,KAAK,GACf6F,EAAI7F,EAAE,EAAI,KAAK,GAEX,KAAK,OACP,GAAI,KAAK,IAAI6F,EAAI,KAAK,EAAI,KAAK,IAAI,GAAKpH,EACtCkH,EAAMV,EAAWD,EAAI,KAAK,EAAI,KAAK,KAAK,EACxCY,EAAM,MAEH,CACH6T,EAAK,KAAK,KAAO5T,EAAI,KAAK,EAC1BwgB,EAAKrhB,EAAIA,EAAI,KAAK,EAAI,KAAK,EAAIyU,EAAKA,EACpCtU,EAAMsU,EACN,IAAI6M,EACJ,IAAK/mB,EAAI0Z,GAAU1Z,EAAG,EAAEA,EAItB,GAHA+mB,EAAS,KAAK,IAAInhB,CAAG,EACrBK,EAAO,IAAMiU,GAAMtU,EAAMmhB,EAAS,GAAKnhB,EAAM,IAAOA,EAAMA,EAAMkhB,GAAMC,KAAYnhB,EAAMsU,GAAM6M,EAAS,GACvGnhB,GAAOK,EACH,KAAK,IAAIA,CAAI,GAAK/G,EAAO,CAC3BmH,EAAMT,EACN,KACD,CAEHQ,EAAMV,EAAW,KAAK,MAAS,KAAK,KAAKD,EAAI,KAAK,IAAIG,CAAG,EAAI,KAAK,CAAC,EAAK,KAAK,IAAIS,CAAG,CAAC,CACtF,SAGG,KAAK,IAAIC,EAAI,KAAK,GAAG,GAAKpH,EAC5BmH,EAAM,EACND,EAAMV,EAAW,KAAK,MAAQD,EAAI,KAAK,CAAC,MAErC,CAEHyU,GAAM,KAAK,IAAM5T,GAAK,KAAK,EAC3BwgB,EAAKrhB,EAAIA,EAAI,KAAK,EAAI,KAAK,EAAIyU,EAAKA,EACpCtU,EAAMsU,EACN,IAAI4J,EAAIkD,EAAKC,EAAMC,EACf3hB,EACJ,IAAKvF,EAAI0Z,GAAU1Z,EAAG,EAAEA,EAQtB,GAPAuF,EAAM,KAAK,EAAI,KAAK,IAAIK,CAAG,EAC3Bke,EAAK,KAAK,KAAK,EAAIve,EAAMA,CAAG,EAAI,KAAK,IAAIK,CAAG,EAC5CohB,EAAM,KAAK,EAAIhE,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAIpd,CAAG,EAC3DqhB,EAAO,KAAK,GAAK,EAAI,KAAK,GAAK,KAAK,IAAI,EAAIrhB,CAAG,EAAI,EAAI,KAAK,GAAK,KAAK,IAAI,EAAIA,CAAG,EAAI,EAAI,KAAK,GAAK,KAAK,IAAI,EAAIA,CAAG,EACnHshB,EAAKF,EAAM,KAAK,EAChB/gB,GAAQiU,GAAM4J,EAAKoD,EAAK,GAAKA,EAAK,GAAMpD,GAAMoD,EAAKA,EAAKJ,KAAQ,KAAK,GAAK,KAAK,IAAI,EAAIlhB,CAAG,GAAKshB,EAAKA,EAAKJ,EAAK,EAAI5M,EAAKgN,IAAO,EAAIpD,IAAO5J,EAAKgN,IAAOpD,EAAKmD,EAAO,EAAI,KAAK,IAAI,EAAIrhB,CAAG,GAAKqhB,GAC1LrhB,GAAOK,EACH,KAAK,IAAIA,CAAI,GAAK/G,EAAO,CAC3BmH,EAAMT,EACN,KACD,CAIHke,EAAK,KAAK,KAAK,EAAI,KAAK,GAAK,KAAK,IAAI,KAAK,IAAIzd,CAAG,EAAG,CAAC,CAAC,EAAI,KAAK,IAAIA,CAAG,EACvED,EAAMV,EAAW,KAAK,MAAQ,KAAK,KAAKD,EAAIqe,EAAK,KAAK,CAAC,EAAI,KAAK,IAAIzd,CAAG,CAAC,CACzE,CAGH,OAAA5F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,YAAa,MAAM,EACxB2gB,GAAA,CACb,KAAMjhB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECpHO,SAASN,IAAO,CACrB,KAAK,EAAI,GACT,KAAK,EAAE,CAAC,EAAI,YACZ,KAAK,EAAE,CAAC,EAAI,aACZ,KAAK,EAAE,CAAC,EAAI,WACZ,KAAK,EAAE,CAAC,EAAI,WACZ,KAAK,EAAE,CAAC,EAAI,SACZ,KAAK,EAAE,CAAC,EAAI,UACZ,KAAK,EAAE,CAAC,EAAI,SACZ,KAAK,EAAE,CAAC,EAAI,SACZ,KAAK,EAAE,CAAC,EAAI,MACZ,KAAK,EAAE,EAAE,EAAI,OAEb,KAAK,KAAO,GACZ,KAAK,KAAO,GACZ,KAAK,KAAK,CAAC,EAAI,YACf,KAAK,KAAK,CAAC,EAAI,EACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,YACf,KAAK,KAAK,CAAC,EAAI,UACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,UACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,UACf,KAAK,KAAK,CAAC,EAAI,WAEf,KAAK,KAAO,GACZ,KAAK,KAAO,GACZ,KAAK,KAAK,CAAC,EAAI,aACf,KAAK,KAAK,CAAC,EAAI,EACf,KAAK,KAAK,CAAC,EAAI,YACf,KAAK,KAAK,CAAC,EAAI,YACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,YACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,UACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,WACf,KAAK,KAAK,CAAC,EAAI,UACf,KAAK,KAAK,CAAC,EAAI,UAEf,KAAK,EAAI,GACT,KAAK,EAAE,CAAC,EAAI,aACZ,KAAK,EAAE,CAAC,EAAI,YACZ,KAAK,EAAE,CAAC,EAAI,WACZ,KAAK,EAAE,CAAC,EAAI,UACZ,KAAK,EAAE,CAAC,EAAI,UACZ,KAAK,EAAE,CAAC,EAAI,QACZ,KAAK,EAAE,CAAC,EAAI,MACZ,KAAK,EAAE,CAAC,EAAI,OACZ,KAAK,EAAE,CAAC,EAAI,MACd,CAMO,SAASC,GAAQ1F,EAAG,CACzB,IAAIyG,EACAd,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAER2mB,EAAY/gB,EAAM,KAAK,KACvB0T,EAAY3T,EAAM,KAAK,MAIvBihB,EAAQD,EAAYvoB,GAAa,KACjCyoB,EAAWvN,EACXwN,EAAU,EAEVC,EAAQ,EACZ,IAAKtgB,EAAI,EAAGA,GAAK,GAAIA,IACnBqgB,EAAUA,EAAUF,EACpBG,EAAQA,EAAQ,KAAK,EAAEtgB,CAAC,EAAIqgB,EAI9B,IAAIE,EAAQD,EACRE,EAAQJ,EAGRK,EAAU,EACVC,EAAU,EACVC,EACAC,EAEAC,EAAO,EACPC,EAAO,EACX,IAAK9gB,EAAI,EAAGA,GAAK,EAAGA,IAClB2gB,EAAWF,EAAUF,EAAQG,EAAUF,EACvCI,EAAWF,EAAUH,EAAQE,EAAUD,EACvCC,EAAUE,EACVD,EAAUE,EACVC,EAAOA,EAAO,KAAK,KAAK7gB,CAAC,EAAIygB,EAAU,KAAK,KAAKzgB,CAAC,EAAI0gB,EACtDI,EAAOA,EAAO,KAAK,KAAK9gB,CAAC,EAAIygB,EAAU,KAAK,KAAKzgB,CAAC,EAAI0gB,EAIxD,OAAAnnB,EAAE,EAAKunB,EAAO,KAAK,EAAK,KAAK,GAC7BvnB,EAAE,EAAKsnB,EAAO,KAAK,EAAK,KAAK,GAEtBtnB,CACT,CAKO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAIyG,EACAzB,EAAIhF,EAAE,EACN6F,EAAI7F,EAAE,EAENwnB,EAAUxiB,EAAI,KAAK,GACnByiB,EAAU5hB,EAAI,KAAK,GAGnByhB,EAAOG,EAAU,KAAK,EACtBF,EAAOC,EAAU,KAAK,EAGtBE,EAAS,EACTC,EAAS,EACTC,EACAC,EAEAb,EAAQ,EACRC,EAAQ,EACZ,IAAKxgB,EAAI,EAAGA,GAAK,EAAGA,IAClBmhB,EAAUF,EAASJ,EAAOK,EAASJ,EACnCM,EAAUF,EAASL,EAAOI,EAASH,EACnCG,EAASE,EACTD,EAASE,EACTb,EAAQA,EAAQ,KAAK,KAAKvgB,CAAC,EAAIihB,EAAS,KAAK,KAAKjhB,CAAC,EAAIkhB,EACvDV,EAAQA,EAAQ,KAAK,KAAKxgB,CAAC,EAAIihB,EAAS,KAAK,KAAKjhB,CAAC,EAAIkhB,EAOzD,QAASpoB,EAAI,EAAGA,EAAI,KAAK,WAAYA,IAAK,CACxC,IAAI2nB,EAAUF,EACVG,EAAUF,EACVG,EACAC,EAEAS,EAASR,EACTS,EAASR,EACb,IAAK9gB,EAAI,EAAGA,GAAK,EAAGA,IAClB2gB,EAAWF,EAAUF,EAAQG,EAAUF,EACvCI,EAAWF,EAAUH,EAAQE,EAAUD,EACvCC,EAAUE,EACVD,EAAUE,EACVS,EAASA,GAAUrhB,EAAI,IAAM,KAAK,KAAKA,CAAC,EAAIygB,EAAU,KAAK,KAAKzgB,CAAC,EAAI0gB,GACrEY,EAASA,GAAUthB,EAAI,IAAM,KAAK,KAAKA,CAAC,EAAIygB,EAAU,KAAK,KAAKzgB,CAAC,EAAI0gB,GAGvED,EAAU,EACVC,EAAU,EACV,IAAIa,EAAS,KAAK,KAAK,CAAC,EACpBC,EAAS,KAAK,KAAK,CAAC,EACxB,IAAKxhB,EAAI,EAAGA,GAAK,EAAGA,IAClB2gB,EAAWF,EAAUF,EAAQG,EAAUF,EACvCI,EAAWF,EAAUH,EAAQE,EAAUD,EACvCC,EAAUE,EACVD,EAAUE,EACVW,EAASA,EAASvhB,GAAK,KAAK,KAAKA,CAAC,EAAIygB,EAAU,KAAK,KAAKzgB,CAAC,EAAI0gB,GAC/Dc,EAASA,EAASxhB,GAAK,KAAK,KAAKA,CAAC,EAAIygB,EAAU,KAAK,KAAKzgB,CAAC,EAAI0gB,GAIjE,IAAIe,EAAOF,EAASA,EAASC,EAASA,EACtCjB,GAASc,EAASE,EAASD,EAASE,GAAUC,EAC9CjB,GAASc,EAASC,EAASF,EAASG,GAAUC,CAC/C,CAGD,IAAInB,EAAQC,EACRH,EAAWI,EACXkB,GAAU,EAEVvB,GAAQ,EACZ,IAAKngB,EAAI,EAAGA,GAAK,EAAGA,IAClB0hB,GAAUA,GAAUpB,EACpBH,GAAQA,GAAQ,KAAK,EAAEngB,CAAC,EAAI0hB,GAK9B,IAAIviB,GAAM,KAAK,KAAQghB,GAAQxoB,GAAa,IACxCuH,GAAM,KAAK,MAAQkhB,EAEvB,OAAA7mB,EAAE,EAAI2F,GACN3F,EAAE,EAAI4F,GAEC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,uBAAwB,MAAM,EACnCqiB,GAAA,CACb,KAAM3iB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECtNO,SAASN,IAAO,CAEvB,CAIO,SAASC,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAGR+d,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAClCX,EAAI,KAAK,GAAK,KAAK,EAAI+Y,EACvBlY,EAAI,KAAK,GAAK,KAAK,EAAI,KAAK,IAAI,KAAK,IAAK,KAAK,GAAK,EAAMD,EAAM,GAAI,CAAC,EAAI,KAE7E,OAAA5F,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GAEZ,IAAI2F,EAAMV,EAAW,KAAK,MAAQjF,EAAE,EAAI,KAAK,CAAC,EAC1C4F,EAAM,KAAO,KAAK,KAAK,KAAK,IAAI,GAAM5F,EAAE,EAAI,KAAK,CAAC,CAAC,EAAI,KAAK,GAAK,GAErE,OAAAA,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,qBAAsB,MAAM,EACjCsiB,GAAA,CACb,KAAM5iB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EChDIkT,GAAW,GAQR,SAASxT,IAAO,CAKhB,KAAK,QAIR,KAAK,EAAI,EACT,KAAK,EAAI,EACT,KAAK,GAAK,EACV,KAAK,IAAM,KAAK,MAAM,KAAK,EAAI,GAAK,KAAK,CAAC,EAC1C,KAAK,IAAM,KAAK,KAAO,KAAK,EAAI,IAPhC,KAAK,GAAKmT,GAAQ,KAAK,EAAE,CAU7B,CAIO,SAASlT,GAAQ1F,EAAG,CACzB,IAAIgF,EAAGa,EACHF,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAKZ,GAFA2F,EAAMV,EAAWU,EAAM,KAAK,KAAK,EAE7B,KAAK,OAAQ,CACf,GAAI,CAAC,KAAK,EACRC,EAAM,KAAK,IAAM,EAAI,KAAK,KAAK,KAAK,EAAI,KAAK,IAAIA,CAAG,CAAC,EAAIA,MAIzD,SADIwT,EAAI,KAAK,EAAI,KAAK,IAAIxT,CAAG,EACpBrG,EAAI0Z,GAAU1Z,EAAG,EAAEA,EAAG,CAC7B,IAAI+S,GAAK,KAAK,EAAI1M,EAAM,KAAK,IAAIA,CAAG,EAAIwT,IAAM,KAAK,EAAI,KAAK,IAAIxT,CAAG,GAEnE,GADAA,GAAO0M,EACH,KAAK,IAAIA,CAAC,EAAI7T,EAChB,KAEH,CAEHuG,EAAI,KAAK,EAAI,KAAK,IAAMW,GAAO,KAAK,EAAI,KAAK,IAAIC,CAAG,GACpDC,EAAI,KAAK,EAAI,KAAK,IAAMD,CAEzB,KACI,CAEH,IAAIyT,EAAI,KAAK,IAAIzT,CAAG,EAChB+T,EAAI,KAAK,IAAI/T,CAAG,EACpBC,EAAI,KAAK,EAAIiT,GAAQlT,EAAKyT,EAAGM,EAAG,KAAK,EAAE,EACvC3U,EAAI,KAAK,EAAIW,EAAMgU,EAAI,KAAK,KAAK,EAAI,KAAK,GAAKN,EAAIA,CAAC,CACrD,CAED,OAAArZ,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI4F,EAAKwU,EAAMzU,EAAK0T,EAEpB,OAAArZ,EAAE,GAAK,KAAK,GACZ2F,EAAM3F,EAAE,EAAI,KAAK,EACjBA,EAAE,GAAK,KAAK,GACZ4F,EAAM5F,EAAE,EAAI,KAAK,EAEb,KAAK,QACP4F,GAAO,KAAK,IACZD,EAAMA,GAAO,KAAK,KAAO,KAAK,EAAI,KAAK,IAAIC,CAAG,IAC1C,KAAK,EACPA,EAAM4f,IAAO,KAAK,EAAI5f,EAAM,KAAK,IAAIA,CAAG,GAAK,KAAK,CAAC,EAE5C,KAAK,IAAM,IAClBA,EAAM4f,GAAM,KAAK,IAAI5f,CAAG,EAAI,KAAK,CAAC,GAEpCD,EAAMV,EAAWU,EAAM,KAAK,KAAK,EACjCC,EAAMmd,GAAWnd,CAAG,IAGpBA,EAAMsT,GAAYlZ,EAAE,EAAI,KAAK,EAAG,KAAK,GAAI,KAAK,EAAE,EAChDqZ,EAAI,KAAK,IAAIzT,CAAG,EACZyT,EAAIhb,GACNgb,EAAI,KAAK,IAAIzT,CAAG,EAChBwU,EAAO,KAAK,MAAQpa,EAAE,EAAI,KAAK,KAAK,EAAI,KAAK,GAAKqZ,EAAIA,CAAC,GAAK,KAAK,EAAI,KAAK,IAAIzT,CAAG,GAEjFD,EAAMV,EAAWmV,CAAI,GAEbf,EAAI5a,EAASJ,IACrBsH,EAAM,KAAK,QAGf3F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,aAAc,MAAM,EACzBuiB,GAAA,CACb,KAAM7iB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECjHO,SAASN,IAAO,CAAE,CAIlB,SAASC,GAAQ1F,EAAG,CAazB,QATI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAERsZ,EAAYrU,EAAWU,EAAM,KAAK,KAAK,EACvCmc,EAAQlc,EACRd,EAAM,KAAK,GAAK,KAAK,IAAIc,CAAG,IAInB,CACX,IAAI2iB,EAAc,EAAEzG,EAAQ,KAAK,IAAIA,CAAK,EAAIhd,IAAQ,EAAI,KAAK,IAAIgd,CAAK,GAExE,GADAA,GAASyG,EACL,KAAK,IAAIA,CAAW,EAAI9pB,EAC1B,KAEH,CACDqjB,GAAS,EAKL,KAAK,GAAK,EAAI,KAAK,IAAIlc,CAAG,EAAInH,IAChC6a,EAAY,GAEd,IAAItU,EAAI,cAAiB,KAAK,EAAIsU,EAAY,KAAK,IAAIwI,CAAK,EAAI,KAAK,GACjEjc,EAAI,gBAAkB,KAAK,EAAI,KAAK,IAAIic,CAAK,EAAI,KAAK,GAE1D,OAAA9hB,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI8hB,EACA3I,EAIJnZ,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZmZ,EAAMnZ,EAAE,GAAK,gBAAkB,KAAK,GAKhC,KAAK,IAAImZ,CAAG,EAAI,gBAClBA,EAAM,eAER2I,EAAQ,KAAK,KAAK3I,CAAG,EACrB,IAAIxT,EAAMV,EAAW,KAAK,MAASjF,EAAE,GAAK,cAAiB,KAAK,EAAI,KAAK,IAAI8hB,CAAK,EAAG,EACjFnc,EAAO,CAAC,KAAK,KACfA,EAAM,CAAC,KAAK,IAEVA,EAAM,KAAK,KACbA,EAAM,KAAK,IAEbwT,GAAO,EAAI2I,EAAQ,KAAK,IAAI,EAAIA,CAAK,GAAK,KAAK,GAC3C,KAAK,IAAI3I,CAAG,EAAI,IAClBA,EAAM,GAER,IAAIvT,EAAM,KAAK,KAAKuT,CAAG,EAEvB,OAAAnZ,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,YAAa,MAAM,EACxByiB,GAAA,CACb,KAAM/iB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECvEO,SAASN,IAAO,CAKjB,KAAK,IAAI,KAAK,KAAO,KAAK,IAAI,EAAIhH,IAGtC,KAAK,KAAO,KAAK,MAAQ,KAAK,KAC9B,KAAK,KAAO,KAAK,EAAI,KAAK,EAC1B,KAAK,GAAK,EAAI,KAAK,IAAI,KAAK,KAAM,CAAC,EACnC,KAAK,EAAI,KAAK,KAAK,KAAK,EAAE,EAC1B,KAAK,GAAKikB,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EACtB,KAAK,GAAKC,GAAK,KAAK,EAAE,EAEtB,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAEhC,KAAK,IAAMne,EAAM,KAAK,EAAG,KAAK,OAAQ,KAAK,MAAM,EACjD,KAAK,IAAM6d,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAAI,EAEzD,KAAK,IAAI,KAAK,KAAO,KAAK,IAAI,EAAI9jB,EACpC,KAAK,GAAK,KAAK,QAGf,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,IAAMiG,EAAM,KAAK,EAAG,KAAK,OAAQ,KAAK,MAAM,EACjD,KAAK,IAAM6d,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAAI,EAC7D,KAAK,IAAM,KAAK,IAAM,KAAK,MAAQ,KAAK,IAAM,KAAK,MAErD,KAAK,EAAI,KAAK,IAAM,KAAK,IAAM,KAAK,GACpC,KAAK,IAAMA,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAAI,EAC7D,KAAK,GAAK,KAAK,GAAK,KAAK,EAAI,KAAK,KACpC,CAIO,SAAS7c,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACR6hB,EAIJ,GAAI,KAAK,OACPA,EAAM,KAAK,GAAK,KAAK,EAAIjc,OAEtB,CACH,IAAIkU,EAAKyI,EAAK,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI3c,CAAG,EACrDic,EAAM,KAAK,GAAK,KAAK,EAAI/H,EAC1B,CACD,IAAIgI,EAAQ,KAAK,GAAK7c,EAAWU,EAAM,KAAK,KAAK,EAC7CX,EAAI,KAAK,GAAK6c,EAAM,KAAK,IAAIC,CAAK,EAClCjc,EAAI,KAAK,GAAK,KAAK,GAAKgc,EAAM,KAAK,IAAIC,CAAK,EAChD,OAAA9hB,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,EAAI,KAAK,GAAKA,EAAE,EAAI,KAAK,GAC3B,IAAI8E,EAAK+c,EAAKjc,EAAKD,EACf,KAAK,IAAM,GACbkc,EAAM,KAAK,KAAK7hB,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACrC8E,EAAM,IAGN+c,EAAM,CAAC,KAAK,KAAK7hB,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACtC8E,EAAM,IAER,IAAIgd,EAAQ,EAKZ,GAJID,IAAQ,IACVC,EAAQ,KAAK,MAAMhd,EAAM9E,EAAE,EAAG8E,EAAM9E,EAAE,CAAC,GAGrC,KAAK,OACP,OAAA2F,EAAMV,EAAW,KAAK,MAAQ6c,EAAQ,KAAK,EAAE,EAC7Clc,EAAMmd,GAAW,KAAK,EAAIlB,EAAM,KAAK,CAAC,EACtC7hB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,EAGP,IAAI8Z,EAAK,KAAK,EAAI+H,EAAM,KAAK,EAC7B,OAAAjc,EAAMod,GAAMlJ,EAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,EAAE,EAClDnU,EAAMV,EAAW,KAAK,MAAQ6c,EAAQ,KAAK,EAAE,EAC7C9hB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CAGX,CAEO,IAAI+F,GAAQ,CAAC,oBAAqB,MAAM,EAChC0iB,GAAA,CACb,KAAMhjB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EC5GO,SAASN,IAAO,CAErB,KAAK,EAAI,KAAK,CAChB,CAEO,SAASC,GAAQ1F,EAAG,CAEzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAIR+d,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAClCX,EAAGa,EAEH,KAAK,IAAID,CAAG,GAAKnH,IACnBuG,EAAI,KAAK,GAAK,KAAK,EAAI+Y,EACvBlY,EAAI,KAAK,IAEX,IAAIic,EAAQ0D,GAAM,EAAI,KAAK,IAAI5f,EAAM,KAAK,EAAE,CAAC,GACxC,KAAK,IAAImY,CAAI,GAAKtf,GAAW,KAAK,IAAI,KAAK,IAAImH,CAAG,EAAIvH,CAAO,GAAKI,KACrEuG,EAAI,KAAK,GACLY,GAAO,EACTC,EAAI,KAAK,GAAK,KAAK,GAAK,KAAK,EAAI,KAAK,IAAI,GAAMic,CAAK,EAGrDjc,EAAI,KAAK,GAAK,KAAK,GAAK,KAAK,EAAI,CAAC,KAAK,IAAI,GAAMic,CAAK,GAI1D,IAAIrI,EAAK,GAAM,KAAK,IAAK,KAAK,GAAKsE,EAASA,EAAO,KAAK,EAAG,EACvDqF,EAAM3J,EAAKA,EACXiP,EAAQ,KAAK,IAAI5G,CAAK,EACtB6G,EAAQ,KAAK,IAAI7G,CAAK,EAEtB3H,EAAIwO,GAASD,EAAQC,EAAQ,GAC7BC,EAAMzO,EAAIA,EACV0O,EAAI1O,GAAK,EAAIuO,EAAQ,GACrBI,EAAMD,EAAIA,EACV/jB,EAAM,KAAK,GAAK,KAAK,GAAK2U,GAAMU,EAAI2O,GAAO,KAAK,KAAK1F,GAAOjJ,EAAI2O,IAAQ3O,EAAI2O,IAAQA,EAAM1F,IAAQwF,EAAME,EAAI,IAAMA,EAAM1F,GACxHrF,EAAO,IACTjZ,EAAM,CAACA,GAETE,EAAI,KAAK,GAAKF,EAEd,IAAIwf,EAAIlB,EAAMjJ,EACd,OAAArV,EAAM,KAAK,GAAK,KAAK,GAAK+jB,EAAIvE,EAAI7K,EAAK,KAAK,MAAMqP,EAAM1F,IAAQA,EAAM,GAAKkB,EAAIA,CAAC,IAAMwE,EAAM1F,GACxFxd,GAAO,EAETC,EAAI,KAAK,GAAKf,EAIde,EAAI,KAAK,GAAKf,EAEhB9E,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI2F,EAAKC,EACLmjB,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,EACrBC,EACAC,EACAxkB,EACAykB,EACAvP,EAIJ,OAAAha,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ8E,EAAM,KAAK,GAAK,KAAK,EACrBikB,EAAK/oB,EAAE,EAAI8E,EACXkkB,EAAKhpB,EAAE,EAAI8E,EACXmkB,EAAMF,EAAKA,EAAKC,EAAKA,EACrBE,EAAK,CAAC,KAAK,IAAIF,CAAE,GAAK,EAAIC,GAC1BE,EAAKD,EAAK,EAAIF,EAAKA,EAAKD,EAAKA,EAC7BK,EAAK,GAAKF,EAAK,EAAI,EAAIF,EAAKA,EAAKC,EAAMA,EACvCjP,EAAIgP,EAAKA,EAAKI,GAAM,EAAID,EAAKA,EAAKA,EAAKC,EAAKA,EAAKA,EAAK,EAAIF,EAAKC,EAAKC,EAAKA,GAAM,GAC/EC,GAAMH,EAAKC,EAAKA,EAAK,EAAIC,GAAMA,EAC/BE,EAAK,EAAI,KAAK,KAAK,CAACD,EAAK,CAAC,EAC1BvkB,EAAQ,EAAIkV,EAAKqP,EAAMC,EACnB,KAAK,IAAIxkB,CAAG,EAAI,IACdA,GAAO,EACTA,EAAM,EAGNA,EAAM,IAGVykB,EAAM,KAAK,KAAKzkB,CAAG,EAAI,EACnB9E,EAAE,GAAK,EACT4F,GAAO,CAAC0jB,EAAK,KAAK,IAAIC,EAAM,KAAK,GAAK,CAAC,EAAIJ,EAAK,EAAIC,GAAM,KAAK,GAG/DxjB,EAAM,EAAE,CAAC0jB,EAAK,KAAK,IAAIC,EAAM,KAAK,GAAK,CAAC,EAAIJ,EAAK,EAAIC,GAAM,KAAK,GAG9D,KAAK,IAAIL,CAAE,EAAItqB,EACjBkH,EAAM,KAAK,MAGXA,EAAMV,EAAW,KAAK,MAAQ,KAAK,IAAMgkB,EAAM,EAAI,KAAK,KAAK,EAAI,GAAKF,EAAKA,EAAKC,EAAKA,GAAMC,EAAMA,CAAG,GAAK,EAAIF,CAAE,EAGjH/oB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,CACT,CAEO,IAAI+F,GAAQ,CAAC,oBAAqB,gBAAiB,OAAO,EAClDyjB,GAAA,CACb,KAAM/jB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EClHO,SAASN,IAAO,CACrB,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,CACnC,CAEO,SAASC,GAAQ1F,EAAG,CACzB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACR4E,EAAS,KAAK,IAAI5E,EAAE,CAAC,EACrB6E,EAAS,KAAK,IAAI7E,EAAE,CAAC,EACrB+d,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAClC6c,EAAIjO,EAAIiK,EAAIiE,EAAIgH,EAAKC,EAAIpD,EAAQqD,EAAKC,EAAIC,EAAKC,EAAIC,EAAGnK,EAAGoK,EAAIC,EAAItQ,EAAGuQ,EAAIC,EAAO9Q,EAAG+Q,EAAIC,GAAIC,GAAIC,GAClG,OAAI,KAAK,OACH,KAAK,IAAI,KAAK,QAAU,CAAC,GAAK9rB,GAEhCuB,EAAE,EAAI,KAAK,GAAK,KAAK,GAAK3B,EAAUuH,GAAO,KAAK,IAAImY,CAAI,EACxD/d,EAAE,EAAI,KAAK,GAAK,KAAK,GAAK3B,EAAUuH,GAAO,KAAK,IAAImY,CAAI,EACjD/d,GAEA,KAAK,IAAI,KAAK,QAAU,CAAC,GAAKvB,GAErCuB,EAAE,EAAI,KAAK,GAAK,KAAK,GAAK3B,EAAUuH,GAAO,KAAK,IAAImY,CAAI,EACxD/d,EAAE,EAAI,KAAK,GAAK,KAAK,GAAK3B,EAAUuH,GAAO,KAAK,IAAImY,CAAI,EACjD/d,IAIPmqB,EAAQ,KAAK,QAAUvlB,EAAS,KAAK,QAAUC,EAAS,KAAK,IAAIkZ,CAAI,EACrEpE,EAAI,KAAK,KAAKwQ,CAAK,EACnBD,EAAKvQ,EAAIA,EAAI,KAAK,IAAIA,CAAC,EAAI,EAC3B3Z,EAAE,EAAI,KAAK,GAAK,KAAK,EAAIkqB,EAAKrlB,EAAS,KAAK,IAAIkZ,CAAI,EACpD/d,EAAE,EAAI,KAAK,GAAK,KAAK,EAAIkqB,GAAM,KAAK,QAAUtlB,EAAS,KAAK,QAAUC,EAAS,KAAK,IAAIkZ,CAAI,GACrF/d,IAITwiB,EAAKE,GAAK,KAAK,EAAE,EACjBnO,EAAKoO,GAAK,KAAK,EAAE,EACjBnE,EAAKoE,GAAK,KAAK,EAAE,EACjBH,EAAKI,GAAK,KAAK,EAAE,EACb,KAAK,IAAI,KAAK,QAAU,CAAC,GAAKpkB,GAEhCgrB,EAAM,KAAK,EAAIlH,EAAKC,EAAIjO,EAAIiK,EAAIiE,EAAIpkB,CAAO,EAC3CqrB,EAAK,KAAK,EAAInH,EAAKC,EAAIjO,EAAIiK,EAAIiE,EAAI7c,CAAG,EACtC5F,EAAE,EAAI,KAAK,IAAMypB,EAAMC,GAAM,KAAK,IAAI3L,CAAI,EAC1C/d,EAAE,EAAI,KAAK,IAAMypB,EAAMC,GAAM,KAAK,IAAI3L,CAAI,EACnC/d,GAEA,KAAK,IAAI,KAAK,QAAU,CAAC,GAAKvB,GAErCgrB,EAAM,KAAK,EAAIlH,EAAKC,EAAIjO,EAAIiK,EAAIiE,EAAIpkB,CAAO,EAC3CqrB,EAAK,KAAK,EAAInH,EAAKC,EAAIjO,EAAIiK,EAAIiE,EAAI7c,CAAG,EACtC5F,EAAE,EAAI,KAAK,IAAMypB,EAAMC,GAAM,KAAK,IAAI3L,CAAI,EAC1C/d,EAAE,EAAI,KAAK,IAAMypB,EAAMC,GAAM,KAAK,IAAI3L,CAAI,EACnC/d,IAIPsmB,EAAS1hB,EAASC,EAClB8kB,EAAM7G,GAAG,KAAK,EAAG,KAAK,EAAG,KAAK,OAAO,EACrC8G,EAAK9G,GAAG,KAAK,EAAG,KAAK,EAAGle,CAAM,EAC9BilB,EAAM,KAAK,MAAM,EAAI,KAAK,IAAMvD,EAAS,KAAK,GAAKqD,EAAM,KAAK,SAAWC,EAAK/kB,EAAO,EACrFilB,EAAK,KAAK,MAAM,KAAK,IAAI/L,CAAI,EAAG,KAAK,QAAU,KAAK,IAAI8L,CAAG,EAAI,KAAK,QAAU,KAAK,IAAI9L,CAAI,CAAC,EACxF+L,IAAO,EACTzQ,EAAI,KAAK,KAAK,KAAK,QAAU,KAAK,IAAIwQ,CAAG,EAAI,KAAK,QAAU,KAAK,IAAIA,CAAG,CAAC,EAElE,KAAK,IAAI,KAAK,IAAIC,CAAE,EAAI,KAAK,EAAE,GAAKrrB,EAC3C4a,EAAI,CAAC,KAAK,KAAK,KAAK,QAAU,KAAK,IAAIwQ,CAAG,EAAI,KAAK,QAAU,KAAK,IAAIA,CAAG,CAAC,EAG1ExQ,EAAI,KAAK,KAAK,KAAK,IAAI0E,CAAI,EAAI,KAAK,IAAI8L,CAAG,EAAI,KAAK,IAAIC,CAAE,CAAC,EAE7DC,EAAI,KAAK,EAAI,KAAK,QAAU,KAAK,KAAK,EAAI,KAAK,EAAE,EACjDnK,EAAI,KAAK,EAAI,KAAK,QAAU,KAAK,IAAIkK,CAAE,EAAI,KAAK,KAAK,EAAI,KAAK,EAAE,EAChEE,EAAKD,EAAInK,EACTqK,EAAKrK,EAAIA,EACTwK,EAAK/Q,EAAIA,EACTgR,GAAKD,EAAK/Q,EACViR,GAAKD,GAAKhR,EACVkR,GAAKD,GAAKjR,EACVM,EAAIgQ,EAAMtQ,GAAK,EAAI+Q,EAAKH,GAAM,EAAIA,GAAM,EAAII,GAAK,EAAIL,GAAM,EAAI,EAAIC,GAAMK,GAAK,KAAOL,GAAM,EAAI,EAAIA,GAAM,EAAIF,EAAIA,GAAK,EAAI,EAAIE,IAAOM,GAAK,GAAKP,GAC/IhqB,EAAE,EAAI,KAAK,GAAK2Z,EAAI,KAAK,IAAImQ,CAAE,EAC/B9pB,EAAE,EAAI,KAAK,GAAK2Z,EAAI,KAAK,IAAImQ,CAAE,EACxB9pB,GAKb,CAEO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ,IAAI8d,EAAIhG,EAAG+M,EAAMD,EAAMjf,EAAKC,EAAKd,EAAK0d,EAAIjO,EAAIiK,EAAIiE,EAAIgH,EAAK7V,EAAGY,EAAIqV,EAAKC,EAAIU,EAAOhO,EAAKrK,EAAG0I,EAAGjG,EAAG6V,EAAI9K,EAAG+K,EACvG,OAAI,KAAK,QACP5M,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EAChC8d,EAAM,EAAIzf,EAAU,KAAK,EAC3B,QAEFyZ,EAAIgG,EAAK,KAAK,EAEd+G,EAAO,KAAK,IAAI/M,CAAC,EACjB8M,EAAO,KAAK,IAAI9M,CAAC,EAEjBnS,EAAM,KAAK,MACP,KAAK,IAAImY,CAAE,GAAKrf,EAClBmH,EAAM,KAAK,MAGXA,EAAM4f,GAAMZ,EAAO,KAAK,QAAW5kB,EAAE,EAAI6kB,EAAO,KAAK,QAAW/G,CAAE,EAClEhZ,EAAM,KAAK,IAAI,KAAK,IAAI,EAAIzG,EACxB,KAAK,IAAIyG,CAAG,GAAKrG,EACf,KAAK,MAAQ,EACfkH,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAG,CAAEA,EAAE,CAAC,CAAC,EAGpD2F,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAM,CAACjF,EAAE,EAAGA,EAAE,CAAC,CAAC,EAWrD2F,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAI6kB,EAAM/G,EAAK,KAAK,QAAU8G,EAAO5kB,EAAE,EAAI,KAAK,QAAU6kB,CAAI,CAAC,GAI9G7kB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,KAGPwiB,EAAKE,GAAK,KAAK,EAAE,EACjBnO,EAAKoO,GAAK,KAAK,EAAE,EACjBnE,EAAKoE,GAAK,KAAK,EAAE,EACjBH,EAAKI,GAAK,KAAK,EAAE,EACb,KAAK,IAAI,KAAK,QAAU,CAAC,GAAKpkB,GAEhCgrB,EAAM,KAAK,EAAIlH,EAAKC,EAAIjO,EAAIiK,EAAIiE,EAAIpkB,CAAO,EAC3Cyf,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACpC4T,EAAI6V,EAAM3L,EACVlY,EAAMod,GAAMpP,EAAI,KAAK,EAAG4O,EAAIjO,EAAIiK,EAAIiE,CAAE,EACtC9c,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAG,GAAMA,EAAE,CAAC,CAAC,EACxDA,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,GAEA,KAAK,IAAI,KAAK,QAAU,CAAC,GAAKvB,GAErCgrB,EAAM,KAAK,EAAIlH,EAAKC,EAAIjO,EAAIiK,EAAIiE,EAAIpkB,CAAO,EAC3Cyf,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACpC4T,EAAIkK,EAAK2L,EAET7jB,EAAMod,GAAMpP,EAAI,KAAK,EAAG4O,EAAIjO,EAAIiK,EAAIiE,CAAE,EACtC9c,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAGA,EAAE,CAAC,CAAC,EAClDA,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,IAIP8d,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACpC8pB,EAAK,KAAK,MAAM9pB,EAAE,EAAGA,EAAE,CAAC,EACxBwU,EAAKsO,GAAG,KAAK,EAAG,KAAK,EAAG,KAAK,OAAO,EACpC0H,EAAQ,KAAK,IAAIV,CAAE,EACnBtN,EAAM,KAAK,EAAI,KAAK,QAAUgO,EAC9BrY,EAAI,CAACqK,EAAMA,GAAO,EAAI,KAAK,IAC3B3B,EAAI,EAAI,KAAK,IAAM,EAAI1I,GAAK,KAAK,QAAU,KAAK,QAAUqY,GAAS,EAAI,KAAK,IAC5E5V,EAAIkJ,EAAKtJ,EACTiW,EAAK7V,EAAIzC,GAAK,EAAIA,GAAK,KAAK,IAAIyC,EAAG,CAAC,EAAI,EAAIiG,GAAK,EAAI,EAAI1I,GAAK,KAAK,IAAIyC,EAAG,CAAC,EAAI,GAC/E+K,EAAI,EAAIxN,EAAIsY,EAAKA,EAAK,EAAI7V,EAAI6V,EAAKA,EAAKA,EAAK,EAC7CZ,EAAM,KAAK,KAAK,KAAK,QAAU,KAAK,IAAIY,CAAE,EAAI,KAAK,QAAU,KAAK,IAAIA,CAAE,EAAID,CAAK,EACjF7kB,EAAMV,EAAW,KAAK,MAAQ,KAAK,KAAK,KAAK,IAAI6kB,CAAE,EAAI,KAAK,IAAIW,CAAE,EAAI,KAAK,IAAIZ,CAAG,CAAC,CAAC,EACpFa,EAAS,KAAK,IAAIb,CAAG,EACrBjkB,EAAM,KAAK,OAAO8kB,EAAS,KAAK,GAAK/K,EAAI,KAAK,SAAW,KAAK,IAAIkK,CAAG,EAAGa,GAAU,EAAI,KAAK,GAAG,EAC9F1qB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,GAIb,CAEO,IAAI+F,GAAQ,CAAC,wBAAyB,MAAM,EACpC4kB,GAAA,CACb,KAAMllB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EC3MO,SAASN,IAAO,CAKrB,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,IAAI,KAAK,IAAI,CACnC,CAIO,SAASC,GAAQ1F,EAAG,CACzB,IAAI4E,EAAQC,EACRkZ,EACA8H,EACAC,EACA3L,EAAGnV,EAAGa,EACNF,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EAGZ,OAAA+d,EAAO9Y,EAAWU,EAAM,KAAK,KAAK,EAElCf,EAAS,KAAK,IAAIgB,CAAG,EACrBf,EAAS,KAAK,IAAIe,CAAG,EAErBigB,EAAS,KAAK,IAAI9H,CAAI,EACtB5D,EAAI,KAAK,QAAUvV,EAAS,KAAK,QAAUC,EAASghB,EACpDC,EAAM,GACD3L,EAAI,GAAO,KAAK,IAAIA,CAAC,GAAK1b,KAC7BuG,EAAI,KAAK,EAAI8gB,EAAMjhB,EAAS,KAAK,IAAIkZ,CAAI,EACzClY,EAAI,KAAK,GAAK,KAAK,EAAIigB,GAAO,KAAK,QAAUlhB,EAAS,KAAK,QAAUC,EAASghB,IAEhF7lB,EAAE,EAAIgF,EACNhF,EAAE,EAAI6F,EACC7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAI8d,EACAhG,EACA+M,EAAMD,EACN9f,EACAa,EAAKC,EAYT,OATA5F,EAAE,GAAK,KAAK,GACZA,EAAE,GAAK,KAAK,GACZ8d,EAAK,KAAK,KAAK9d,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,EACpC8X,EAAI0N,GAAM1H,EAAK,KAAK,CAAC,EAErB+G,EAAO,KAAK,IAAI/M,CAAC,EACjB8M,EAAO,KAAK,IAAI9M,CAAC,EAEjBnS,EAAM,KAAK,MACP,KAAK,IAAImY,CAAE,GAAKrf,GAClBmH,EAAM,KAAK,KACX5F,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,IAET4F,EAAM4f,GAAMZ,EAAO,KAAK,QAAW5kB,EAAE,EAAI6kB,EAAO,KAAK,QAAW/G,CAAE,EAClEhZ,EAAM,KAAK,IAAI,KAAK,IAAI,EAAIzG,EACxB,KAAK,IAAIyG,CAAG,GAAKrG,GACf,KAAK,MAAQ,EACfkH,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAMjF,EAAE,EAAG,CAAEA,EAAE,CAAC,CAAC,EAGpD2F,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAM,CAACjF,EAAE,EAAGA,EAAE,CAAC,CAAC,EAErDA,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,IAET2F,EAAMV,EAAW,KAAK,MAAQ,KAAK,MAAOjF,EAAE,EAAI6kB,EAAO/G,EAAK,KAAK,QAAU8G,EAAO5kB,EAAE,EAAI,KAAK,QAAU6kB,CAAI,CAAC,EAC5G7kB,EAAE,EAAI2F,EACN3F,EAAE,EAAI4F,EACC5F,GACT,CAEO,IAAI+F,GAAQ,CAAC,OAAO,EACZ6kB,GAAA,CACb,KAAMnlB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECpFI8kB,EAAY,CACZ,MAAO,EACP,MAAO,EACP,KAAM,EACN,KAAM,EACN,IAAK,EACL,OAAQ,CACZ,EAEIC,EAAY,CACZ,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,CACZ,EAEO,SAASrlB,IAAO,CAErB,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,KAAO,KAAK,MAAQ,EACzB,KAAK,MAAQ,KAAK,OAAS,EAC3B,KAAK,OAAS,KAAK,QAAU,EAC7B,KAAK,MAAQ,KAAK,OAAS,mCAGvB,KAAK,MAAQpH,EAAUO,EAAS,EAClC,KAAK,KAAOisB,EAAU,IACb,KAAK,MAAQ,EAAExsB,EAAUO,EAAS,GAC3C,KAAK,KAAOisB,EAAU,OACb,KAAK,IAAI,KAAK,KAAK,GAAKjsB,EACjC,KAAK,KAAOisB,EAAU,MACb,KAAK,IAAI,KAAK,KAAK,GAAKxsB,EAAUO,EAC3C,KAAK,KAAO,KAAK,MAAQ,EAAMisB,EAAU,MAAQA,EAAU,KAE3D,KAAK,KAAOA,EAAU,KAKpB,KAAK,KAAO,IACd,KAAK,YAAc,GAAK,KAAK,EAAI,KAAK,GAAK,KAAK,EAChD,KAAK,oBAAsB,KAAK,YAAc,KAAK,YAEvD,CAIO,SAASnlB,GAAQ1F,EAAG,CACzB,IAAI+qB,EAAK,CAAC,EAAG,EAAG,EAAG,CAAC,EAChBnlB,EAAKD,EACLmc,EAAO3c,EACPsK,EAAGoF,EAEHmW,EAAO,CAAC,MAAO,CAAC,EAoBpB,GAjBAhrB,EAAE,GAAK,KAAK,MAKR,KAAK,KAAO,EACd4F,EAAM,KAAK,KAAK,KAAK,oBAAsB,KAAK,IAAI5F,EAAE,CAAC,CAAC,EAExD4F,EAAM5F,EAAE,EAQV2F,EAAM3F,EAAE,EACJ,KAAK,OAAS6qB,EAAU,IAC1B1lB,EAAM9G,EAAUuH,EACZD,GAAO/G,GAAU+G,GAAOtH,EAAUO,GACpCosB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQnc,EAAMtH,GACLsH,EAAMtH,EAAUO,GAAU+G,GAAO,EAAEtH,EAAUO,IACtDosB,EAAK,MAAQF,EAAU,OACvBhJ,EAASnc,EAAM,EAAMA,EAAM7G,EAAM6G,EAAM7G,GAC9B6G,EAAM,EAAEtH,EAAUO,IAAW+G,GAAO,CAAC/G,GAC9CosB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQnc,EAAMtH,IAEd2sB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQnc,WAED,KAAK,OAASklB,EAAU,OACjC1lB,EAAM9G,EAAUuH,EACZD,GAAO/G,GAAU+G,GAAOtH,EAAUO,GACpCosB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQ,CAACnc,EAAMtH,GACNsH,EAAM/G,GAAU+G,GAAO,CAAC/G,GACjCosB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQ,CAACnc,GACAA,EAAM,CAAC/G,GAAU+G,GAAO,EAAEtH,EAAUO,IAC7CosB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQ,CAACnc,EAAMtH,IAEf2sB,EAAK,MAAQF,EAAU,OACvBhJ,EAASnc,EAAM,EAAM,CAACA,EAAM7G,EAAM,CAAC6G,EAAM7G,OAEtC,CACL,IAAIwlB,EAAG1a,EAAGyP,EACNqE,EAAQC,EACRsN,EAAQpF,EAER,KAAK,OAASgF,EAAU,MAC1BllB,EAAMulB,GAAqBvlB,EAAK,CAACtH,CAAO,EAC/B,KAAK,OAASwsB,EAAU,KACjCllB,EAAMulB,GAAqBvlB,EAAK,CAAC7G,CAAG,EAC3B,KAAK,OAAS+rB,EAAU,OACjCllB,EAAMulB,GAAqBvlB,EAAK,CAACtH,CAAO,GAE1Cqf,EAAS,KAAK,IAAI9X,CAAG,EACrB+X,EAAS,KAAK,IAAI/X,CAAG,EACrBqlB,EAAS,KAAK,IAAItlB,CAAG,EACrBkgB,EAAS,KAAK,IAAIlgB,CAAG,EACrB2e,EAAI3G,EAASkI,EACbjc,EAAI+T,EAASsN,EACb5R,EAAIqE,EAEA,KAAK,OAASmN,EAAU,OAC1B1lB,EAAM,KAAK,KAAKmf,CAAC,EACjBxC,EAAQqJ,GAAyBhmB,EAAKkU,EAAGzP,EAAGohB,CAAI,GACvC,KAAK,OAASH,EAAU,OACjC1lB,EAAM,KAAK,KAAKyE,CAAC,EACjBkY,EAAQqJ,GAAyBhmB,EAAKkU,EAAG,CAACiL,EAAG0G,CAAI,GACxC,KAAK,OAASH,EAAU,MACjC1lB,EAAM,KAAK,KAAK,CAACmf,CAAC,EAClBxC,EAAQqJ,GAAyBhmB,EAAKkU,EAAG,CAACzP,EAAGohB,CAAI,GACxC,KAAK,OAASH,EAAU,MACjC1lB,EAAM,KAAK,KAAK,CAACyE,CAAC,EAClBkY,EAAQqJ,GAAyBhmB,EAAKkU,EAAGiL,EAAG0G,CAAI,IAGhD7lB,EAAM2c,EAAQ,EACdkJ,EAAK,MAAQF,EAAU,OAE1B,CAKD,OAAAjW,EAAK,KAAK,KAAM,GAAK/V,GAAQgjB,EAAQ,KAAK,KAAK,KAAK,IAAIA,CAAK,EAAI,KAAK,IAAIljB,CAAM,CAAC,EAAIP,EAAQ,EAC7FoR,EAAI,KAAK,MAAM,EAAI,KAAK,IAAItK,CAAG,IAAM,KAAK,IAAI0P,CAAE,EAAI,KAAK,IAAIA,CAAE,IAAM,EAAI,KAAK,IAAI,KAAK,KAAK,EAAI,KAAK,IAAIiN,CAAK,CAAC,CAAC,EAAE,EAG9GkJ,EAAK,QAAUF,EAAU,OAC3BjW,GAAMxW,EACG2sB,EAAK,QAAUF,EAAU,OAClCjW,GAAM/V,EACGksB,EAAK,QAAUF,EAAU,SAClCjW,GAAM,IAAM/V,GAIdisB,EAAG,EAAItb,EAAI,KAAK,IAAIoF,CAAE,EACtBkW,EAAG,EAAItb,EAAI,KAAK,IAAIoF,CAAE,EACtBkW,EAAG,EAAIA,EAAG,EAAI,KAAK,EAAI,KAAK,GAC5BA,EAAG,EAAIA,EAAG,EAAI,KAAK,EAAI,KAAK,GAE5B/qB,EAAE,EAAI+qB,EAAG,EACT/qB,EAAE,EAAI+qB,EAAG,EACF/qB,CACT,CAIO,SAAS8F,GAAQ9F,EAAG,CACzB,IAAIorB,EAAK,CAAC,IAAK,EAAG,IAAK,CAAC,EACpBvW,EAAIwW,EAAIC,EAAOC,EACfC,EAAU1J,EAAOjd,EAAQM,EACzBsK,EACAub,EAAO,CAAC,MAAO,CAAC,EA4CpB,GAzCAhrB,EAAE,GAAKA,EAAE,EAAI,KAAK,IAAM,KAAK,EAC7BA,EAAE,GAAKA,EAAE,EAAI,KAAK,IAAM,KAAK,EAI7BqrB,EAAK,KAAK,KAAK,KAAK,KAAKrrB,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,CAAC,EAC/C6U,EAAK,KAAK,MAAM7U,EAAE,EAAGA,EAAE,CAAC,EACpBA,EAAE,GAAK,GAAOA,EAAE,GAAK,KAAK,IAAIA,EAAE,CAAC,EACnCgrB,EAAK,MAAQF,EAAU,OACd9qB,EAAE,GAAK,GAAOA,EAAE,GAAK,KAAK,IAAIA,EAAE,CAAC,GAC1CgrB,EAAK,MAAQF,EAAU,OACvBjW,GAAMxW,GACG2B,EAAE,EAAI,GAAO,CAACA,EAAE,GAAK,KAAK,IAAIA,EAAE,CAAC,GAC1CgrB,EAAK,MAAQF,EAAU,OACvBjW,EAAMA,EAAK,EAAMA,EAAK/V,EAAM+V,EAAK/V,IAEjCksB,EAAK,MAAQF,EAAU,OACvBjW,GAAMxW,GAQRoR,EAAK3Q,EAAM,GAAM,KAAK,IAAI+V,CAAE,EAC5B2W,EAAW,KAAK,IAAI/b,CAAC,GAAK,KAAK,IAAIA,CAAC,EAAK,EAAI,KAAK,KAAK,CAAC,GACxDqS,EAAQ,KAAK,KAAK0J,CAAQ,EAC1BF,EAAQ,KAAK,IAAIzW,CAAE,EACnB0W,EAAQ,KAAK,IAAIF,CAAE,EACnBxmB,EAAS,EAAIymB,EAAQA,EAAQC,EAAQA,GAAS,EAAI,KAAK,IAAI,KAAK,KAAK,EAAI,KAAK,IAAIzJ,CAAK,CAAC,CAAC,GACrFjd,EAAS,GACXA,EAAS,GACAA,EAAS,IAClBA,EAAS,GAOP,KAAK,OAASgmB,EAAU,IAC1B1lB,EAAM,KAAK,KAAKN,CAAM,EACtBumB,EAAG,IAAM/sB,EAAU8G,EACf6lB,EAAK,QAAUF,EAAU,OAC3BM,EAAG,IAAMtJ,EAAQzjB,EACR2sB,EAAK,QAAUF,EAAU,OAClCM,EAAG,IAAOtJ,EAAQ,EAAMA,EAAQhjB,EAAMgjB,EAAQhjB,EACrCksB,EAAK,QAAUF,EAAU,OAClCM,EAAG,IAAMtJ,EAAQzjB,EAEjB+sB,EAAG,IAAMtJ,UAEF,KAAK,OAAS+I,EAAU,OACjC1lB,EAAM,KAAK,KAAKN,CAAM,EACtBumB,EAAG,IAAMjmB,EAAM9G,EACX2sB,EAAK,QAAUF,EAAU,OAC3BM,EAAG,IAAM,CAACtJ,EAAQzjB,EACT2sB,EAAK,QAAUF,EAAU,OAClCM,EAAG,IAAM,CAACtJ,EACDkJ,EAAK,QAAUF,EAAU,OAClCM,EAAG,IAAM,CAACtJ,EAAQzjB,EAElB+sB,EAAG,IAAOtJ,EAAQ,EAAM,CAACA,EAAQhjB,EAAM,CAACgjB,EAAQhjB,MAE7C,CAEL,IAAIwlB,EAAG1a,EAAGyP,EACViL,EAAIzf,EACJ4K,EAAI6U,EAAIA,EACJ7U,GAAK,EACP4J,EAAI,EAEJA,EAAI,KAAK,KAAK,EAAI5J,CAAC,EAAI,KAAK,IAAIqS,CAAK,EAEvCrS,GAAK4J,EAAIA,EACL5J,GAAK,EACP7F,EAAI,EAEJA,EAAI,KAAK,KAAK,EAAI6F,CAAC,EAGjBub,EAAK,QAAUF,EAAU,QAC3Brb,EAAI7F,EACJA,EAAI,CAACyP,EACLA,EAAI5J,GACKub,EAAK,QAAUF,EAAU,QAClClhB,EAAI,CAACA,EACLyP,EAAI,CAACA,GACI2R,EAAK,QAAUF,EAAU,SAClCrb,EAAI7F,EACJA,EAAIyP,EACJA,EAAI,CAAC5J,GAGH,KAAK,OAASob,EAAU,OAC1Bpb,EAAI6U,EACJA,EAAI,CAAC1a,EACLA,EAAI6F,GACK,KAAK,OAASob,EAAU,MACjCvG,EAAI,CAACA,EACL1a,EAAI,CAACA,GACI,KAAK,OAASihB,EAAU,OACjCpb,EAAI6U,EACJA,EAAI1a,EACJA,EAAI,CAAC6F,GAGP2b,EAAG,IAAM,KAAK,KAAK,CAAC/R,CAAC,EAAIhb,EACzB+sB,EAAG,IAAM,KAAK,MAAMxhB,EAAG0a,CAAC,EACpB,KAAK,OAASuG,EAAU,MAC1BO,EAAG,IAAMF,GAAqBE,EAAG,IAAK,CAAC/sB,CAAO,EACrC,KAAK,OAASwsB,EAAU,KACjCO,EAAG,IAAMF,GAAqBE,EAAG,IAAK,CAACtsB,CAAG,EACjC,KAAK,OAAS+rB,EAAU,OACjCO,EAAG,IAAMF,GAAqBE,EAAG,IAAK,CAAC/sB,CAAO,EAEjD,CAID,GAAI,KAAK,KAAO,EAAG,CACjB,IAAIotB,EACAnF,EAAQoF,EACZD,EAAeL,EAAG,IAAM,EAAI,EAAI,EAChC9E,EAAS,KAAK,IAAI8E,EAAG,GAAG,EACxBM,EAAK,KAAK,EAAI,KAAK,KAAKpF,EAASA,EAAS,KAAK,mBAAmB,EAClE8E,EAAG,IAAM,KAAK,KAAK,KAAK,KAAK,KAAK,EAAI,KAAK,EAAIM,EAAKA,CAAE,GAAK,KAAK,YAAcA,EAAG,EAC7ED,IACFL,EAAG,IAAM,CAACA,EAAG,IAEhB,CAED,OAAAA,EAAG,KAAO,KAAK,MACfprB,EAAE,EAAIorB,EAAG,IACTprB,EAAE,EAAIorB,EAAG,IACFprB,CACT,CAIA,SAASmrB,GAAyBhmB,EAAKU,EAAGb,EAAGgmB,EAAM,CACjD,IAAIlJ,EACJ,OAAI3c,EAAM1G,GACRusB,EAAK,MAAQF,EAAU,OACvBhJ,EAAQ,IAERA,EAAQ,KAAK,MAAMjc,EAAGb,CAAC,EACnB,KAAK,IAAI8c,CAAK,GAAKljB,EACrBosB,EAAK,MAAQF,EAAU,OACdhJ,EAAQljB,GAAUkjB,GAASzjB,EAAUO,GAC9CosB,EAAK,MAAQF,EAAU,OACvBhJ,GAASzjB,GACAyjB,EAAQzjB,EAAUO,GAAUkjB,GAAS,EAAEzjB,EAAUO,IAC1DosB,EAAK,MAAQF,EAAU,OACvBhJ,EAASA,GAAS,EAAMA,EAAQhjB,EAAMgjB,EAAQhjB,IAE9CksB,EAAK,MAAQF,EAAU,OACvBhJ,GAASzjB,IAGNyjB,CACT,CAGA,SAASoJ,GAAqBvlB,EAAKkE,EAAQ,CACzC,IAAI8hB,EAAOhmB,EAAMkE,EACjB,OAAI8hB,EAAO,CAAC7sB,EACV6sB,GAAQ9sB,GACC8sB,EAAO,CAAC7sB,IACjB6sB,GAAQ9sB,IAEH8sB,CACT,CAEO,IAAI5lB,GAAQ,CAAC,mCAAoC,mCAAoC,KAAK,EAClF6lB,GAAA,CACb,KAAMnmB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECvWI8lB,GAAU,CACV,CAAC,EAAQ,UAAY,YAAc,SAAU,EAC7C,CAAC,MAAQ,WAAc,UAAa,UAAW,EAC/C,CAAC,MAAQ,UAAa,YAAc,WAAY,EAChD,CAAC,IAAQ,WAAa,UAAa,SAAU,EAC7C,CAAC,MAAQ,WAAa,YAAc,WAAY,EAChD,CAAC,KAAQ,WAAa,YAAc,SAAU,EAC9C,CAAC,IAAQ,WAAa,YAAc,UAAW,EAC/C,CAAC,MAAQ,WAAa,YAAc,UAAW,EAC/C,CAAC,MAAQ,WAAa,UAAa,UAAW,EAC9C,CAAC,MAAQ,WAAa,YAAc,WAAY,EAChD,CAAC,MAAQ,WAAa,WAAc,UAAW,EAC/C,CAAC,KAAQ,WAAa,YAAc,UAAW,EAC/C,CAAC,MAAQ,WAAa,YAAc,UAAW,EAC/C,CAAC,MAAQ,WAAa,UAAa,WAAY,EAC/C,CAAC,MAAQ,WAAa,YAAc,UAAW,EAC/C,CAAC,MAAQ,WAAa,WAAc,UAAW,EAC/C,CAAC,MAAQ,SAAW,WAAa,UAAW,EAC5C,CAAC,MAAQ,WAAa,OAAU,UAAW,EAC3C,CAAC,MAAQ,WAAa,UAAa,UAAW,CAClD,EAEIC,GAAU,CACV,CAAC,YAAc,MAAQ,WAAa,WAAY,EAChD,CAAC,KAAQ,MAAQ,YAAc,UAAW,EAC1C,CAAC,KAAQ,MAAQ,WAAa,WAAY,EAC1C,CAAC,KAAQ,SAAW,YAAc,UAAW,EAC7C,CAAC,KAAQ,SAAW,WAAa,QAAS,EAC1C,CAAC,IAAQ,SAAW,YAAc,UAAW,EAC7C,CAAC,KAAQ,SAAW,WAAa,WAAY,EAC7C,CAAC,KAAQ,SAAW,YAAc,WAAY,EAC9C,CAAC,MAAQ,SAAW,YAAc,WAAY,EAC9C,CAAC,MAAQ,SAAW,YAAc,WAAY,EAC9C,CAAC,MAAQ,SAAW,YAAc,WAAY,EAC9C,CAAC,MAAQ,QAAU,YAAc,WAAY,EAC7C,CAAC,MAAQ,SAAW,YAAc,WAAY,EAC9C,CAAC,MAAQ,SAAW,YAAc,WAAY,EAC9C,CAAC,MAAQ,SAAW,UAAa,WAAY,EAC7C,CAAC,MAAQ,UAAY,UAAa,QAAU,EAC5C,CAAC,MAAQ,UAAY,WAAc,UAAW,EAC9C,CAAC,MAAQ,UAAY,QAAW,UAAW,EAC3C,CAAC,EAAQ,UAAY,WAAc,UAAW,CAClD,EAEIC,GAAM,MACNC,GAAM,OACNtX,GAAK/V,EAAI,EACTstB,GAAM,EAAEvX,GACRwX,GAAQ,GAERC,GAAY,SAASC,EAAOpnB,EAAG,CAC/B,OAAOonB,EAAM,CAAC,EAAIpnB,GAAKonB,EAAM,CAAC,EAAIpnB,GAAKonB,EAAM,CAAC,EAAIpnB,EAAIonB,EAAM,CAAC,GACjE,EAEIC,GAAY,SAASD,EAAOpnB,EAAG,CAC/B,OAAOonB,EAAM,CAAC,EAAIpnB,GAAK,EAAIonB,EAAM,CAAC,EAAIpnB,EAAI,EAAIonB,EAAM,CAAC,EACzD,EAEA,SAASE,GAAeC,EAAM5lB,EAAO6lB,EAASC,EAAO,CAEjD,QADIznB,EAAI2B,EACD8lB,EAAO,EAAEA,EAAO,CACnB,IAAIC,EAAMH,EAAKvnB,CAAC,EAEhB,GADAA,GAAK0nB,EACD,KAAK,IAAIA,CAAG,EAAIF,EAChB,KAEP,CACD,OAAOxnB,CACX,CAEO,SAASS,IAAO,CACnB,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,GAAK,KAAK,IAAM,EACrB,KAAK,MAAQ,KAAK,OAAS,EAC3B,KAAK,GAAK,EACV,KAAK,MAAQ,KAAK,OAAS,UAC/B,CAEO,SAASC,GAAQ8M,EAAI,CACxB,IAAI7M,EAAMV,EAAWuN,EAAG,EAAI,KAAK,KAAK,EAElChN,EAAO,KAAK,IAAIgN,EAAG,CAAC,EACpBjT,EAAI,KAAK,MAAMiG,EAAOkP,EAAE,EACxBnV,EAAI,EACJA,EAAI,EACGA,GAAK2sB,KACZ3sB,EAAI2sB,GAAQ,GAEhB1mB,EAAO7G,GAAO6G,EAAOymB,GAAM1sB,GAC3B,IAAIwrB,EAAK,CACL,EAAGoB,GAAUN,GAAQtsB,CAAC,EAAGiG,CAAI,EAAIG,EACjC,EAAGwmB,GAAUL,GAAQvsB,CAAC,EAAGiG,CAAI,CACrC,EACI,OAAIgN,EAAG,EAAI,IACPuY,EAAG,EAAI,CAACA,EAAG,GAGfA,EAAG,EAAIA,EAAG,EAAI,KAAK,EAAIgB,GAAM,KAAK,GAClChB,EAAG,EAAIA,EAAG,EAAI,KAAK,EAAIiB,GAAM,KAAK,GAC3BjB,CACX,CAEO,SAASjlB,GAAQilB,EAAI,CACxB,IAAIvY,EAAK,CACL,GAAIuY,EAAG,EAAI,KAAK,KAAO,KAAK,EAAIgB,IAChC,EAAG,KAAK,IAAIhB,EAAG,EAAI,KAAK,EAAE,GAAK,KAAK,EAAIiB,GAChD,EAEI,GAAIxZ,EAAG,GAAK,EACRA,EAAG,GAAKqZ,GAAQK,EAAK,EAAE,CAAC,EACxB1Z,EAAG,EAAIuY,EAAG,EAAI,EAAI,CAAC1sB,EAAUA,MAC1B,CAEH,IAAIkB,EAAI,KAAK,MAAMiT,EAAG,EAAI0Z,EAAK,EAM/B,IALI3sB,EAAI,EACJA,EAAI,EACGA,GAAK2sB,KACZ3sB,EAAI2sB,GAAQ,KAGZ,GAAIJ,GAAQvsB,CAAC,EAAE,CAAC,EAAIiT,EAAG,EACnB,EAAEjT,UACKusB,GAAQvsB,EAAE,CAAC,EAAE,CAAC,GAAKiT,EAAG,EAC7B,EAAEjT,MAEF,OAIR,IAAI6sB,EAAQN,GAAQvsB,CAAC,EACjBkQ,EAAI,GAAK+C,EAAG,EAAI4Z,EAAM,CAAC,IAAMN,GAAQvsB,EAAE,CAAC,EAAE,CAAC,EAAI6sB,EAAM,CAAC,GAE1D3c,EAAI6c,GAAe,SAAStnB,EAAG,CAC3B,OAAQmnB,GAAUC,EAAOpnB,CAAC,EAAIwN,EAAG,GAAK6Z,GAAUD,EAAOpnB,CAAC,CACpE,EAAWyK,EAAGhR,EAAO,GAAG,EAEhB+T,EAAG,GAAK2Z,GAAUN,GAAQtsB,CAAC,EAAGkQ,CAAC,EAC/B+C,EAAG,GAAK,EAAIjT,EAAIkQ,GAAK/Q,EACjBqsB,EAAG,EAAI,IACPvY,EAAG,EAAI,CAACA,EAAG,EAElB,CAED,OAAAA,EAAG,EAAIvN,EAAWuN,EAAG,EAAI,KAAK,KAAK,EAC5BA,CACX,CAEO,IAAIzM,GAAQ,CAAC,WAAY,OAAO,EACxB4mB,GAAA,CACb,KAAMlnB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,EC3JO,SAASN,IAAO,CACnB,KAAK,KAAO,SAEhB,CAEO,SAASC,GAAQ1F,EAAG,CACvB,IAAI8N,EAAQ3C,GAAqBnL,EAAG,KAAK,GAAI,KAAK,CAAC,EACnD,OAAO8N,CACX,CAEO,SAAShI,GAAQ9F,EAAG,CACvB,IAAI8N,EAAQnC,GAAqB3L,EAAG,KAAK,GAAI,KAAK,EAAG,KAAK,CAAC,EAC3D,OAAO8N,CACX,CAEO,IAAI/H,GAAQ,CAAC,aAAc,aAAc,UAAW,SAAS,EACrD6mB,GAAA,CACX,KAAMnnB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACX,ECzBI8mB,EAAO,CACT,OAAQ,EACR,OAAQ,EACR,MAAO,EACP,MAAO,CACT,EAKIxsB,GAAS,CACX,EAAO,CAAE,IAAK,IAAQ,IAAK,EAAM,EACjC,IAAO,CAAE,IAAK,EAAG,IAAK,GAAM,QAAS,EAAM,EAC3C,KAAO,CAAE,IAAK,EAAG,IAAK,GAAM,QAAS,EAAM,EAC3C,MAAO,CAAE,IAAK,EAAG,IAAK,EAAM,EAC5B,KAAO,CAAE,IAAK,EAAG,IAAK,EAAM,CAC9B,EAEO,SAASoF,IAAO,CA0BrB,GAzBA,OAAO,KAAKpF,EAAM,EAAE,SAAQ,SAAUL,EAAG,CACvC,GAAI,OAAO,KAAKA,CAAC,EAAM,IACrB,KAAKA,CAAC,EAAIK,GAAOL,CAAC,EAAE,QACf,IAAIK,GAAOL,CAAC,EAAE,KAAO,MAAM,KAAKA,CAAC,CAAC,EACvC,MAAM,IAAI,MAAM,4CAA8CA,EAAI,MAAQ,KAAKA,CAAC,CAAC,EACxEK,GAAOL,CAAC,EAAE,MACnB,KAAKA,CAAC,EAAI,WAAW,KAAKA,CAAC,CAAC,GAE1BK,GAAOL,CAAC,EAAE,UACZ,KAAKA,CAAC,EAAI,KAAKA,CAAC,EAAItB,EAE1B,GAAI,KAAK,IAAI,CAAC,EAER,KAAK,IAAK,KAAK,IAAI,KAAK,IAAI,EAAIL,CAAS,EAAGI,EAC9C,KAAK,KAAO,KAAK,KAAO,EAAIouB,EAAK,OAASA,EAAK,OACtC,KAAK,IAAI,KAAK,IAAI,EAAIpuB,EAC/B,KAAK,KAAOouB,EAAK,OAEjB,KAAK,KAAOA,EAAK,MACjB,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAChC,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,GAGlC,KAAK,IAAM,KAAK,EAAI,KAAK,EAErB,KAAK,KAAO,GAAK,KAAK,IAAM,KAC9B,MAAM,IAAI,MAAM,gBAAgB,EAGlC,KAAK,EAAI,EAAI,KAAK,IAClB,KAAK,GAAK,EAAI,KAAK,EACnB,KAAK,GAAK,EAAI,KAAK,IACnB,KAAK,OAAS,KAAK,EAAI,GAAK,KAAK,GACjC,KAAK,GAAK,EAEV,IAAIC,EAAQ,KAAK,KACb9M,EAAQ,KAAK,IACjB,KAAK,GAAK,KAAK,IAAIA,CAAK,EACxB,KAAK,GAAK,KAAK,IAAIA,CAAK,EACxB,KAAK,GAAK,KAAK,IAAI8M,CAAK,EACxB,KAAK,GAAK,KAAK,IAAIA,CAAK,CAC1B,CAEO,SAASpnB,GAAQ1F,EAAG,CACzBA,EAAE,GAAK,KAAK,MACZ,IAAI4E,EAAS,KAAK,IAAI5E,EAAE,CAAC,EACrB6E,EAAS,KAAK,IAAI7E,EAAE,CAAC,EACrBokB,EAAS,KAAK,IAAIpkB,EAAE,CAAC,EACrBgF,EAAGa,EACP,OAAQ,KAAK,KAAI,CACf,KAAKgnB,EAAK,MACRhnB,EAAI,KAAK,OAASjB,EAAS,KAAK,OAASC,EAASuf,EAClD,MACF,KAAKyI,EAAK,MACRhnB,EAAIhB,EAASuf,EACb,MACF,KAAKyI,EAAK,OACRhnB,EAAI,CAACjB,EACL,MACF,KAAKioB,EAAK,OACRhnB,EAAIjB,EACJ,KACH,CAID,OAHAiB,EAAI,KAAK,KAAO,KAAK,EAAIA,GACzBb,EAAIa,EAAIhB,EAAS,KAAK,IAAI7E,EAAE,CAAC,EAErB,KAAK,KAAI,CACf,KAAK6sB,EAAK,MACRhnB,GAAK,KAAK,OAASjB,EAAS,KAAK,OAASC,EAASuf,EACnD,MACF,KAAKyI,EAAK,MACRhnB,GAAKjB,EACL,MACF,KAAKioB,EAAK,OACRhnB,GAAK,EAAEhB,EAASuf,GAChB,MACF,KAAKyI,EAAK,OACRhnB,GAAKhB,EAASuf,EACd,KACH,CAGD,IAAI2I,EAAIC,EACR,OAAAD,EAAKlnB,EAAI,KAAK,GAAKb,EAAI,KAAK,GAC5BgoB,EAAK,GAAKD,EAAK,KAAK,GAAK,KAAK,GAAK,KAAK,IACxC/nB,GAAKA,EAAI,KAAK,GAAKa,EAAI,KAAK,IAAM,KAAK,GAAKmnB,EAC5CnnB,EAAIknB,EAAKC,EAEThtB,EAAE,EAAIgF,EAAI,KAAK,EACfhF,EAAE,EAAI6F,EAAI,KAAK,EACR7F,CACT,CAEO,SAAS8F,GAAQ9F,EAAG,CACzBA,EAAE,GAAK,KAAK,EACZA,EAAE,GAAK,KAAK,EACZ,IAAI4J,EAAI,CAAE,EAAG5J,EAAE,EAAG,EAAGA,EAAE,GAGnBitB,EAAIC,EAAIH,EACZA,EAAK,GAAK,KAAK,IAAM/sB,EAAE,EAAI,KAAK,IAChCitB,EAAK,KAAK,IAAMjtB,EAAE,EAAI+sB,EACtBG,EAAK,KAAK,IAAMltB,EAAE,EAAI,KAAK,GAAK+sB,EAChC/sB,EAAE,EAAIitB,EAAK,KAAK,GAAKC,EAAK,KAAK,GAC/BltB,EAAE,EAAIktB,EAAK,KAAK,GAAKD,EAAK,KAAK,GAE/B,IAAInP,EAAKtD,EAAMxa,EAAE,EAAGA,EAAE,CAAC,EACvB,GAAI,KAAK,IAAI8d,CAAE,EAAIrf,EACjBmL,EAAE,EAAI,EACNA,EAAE,EAAI5J,EAAE,MACH,CACL,IAAI4kB,EAAMC,EAIV,OAHAA,EAAO,EAAI/G,EAAKA,EAAK,KAAK,MAC1B+G,GAAQ,KAAK,EAAI,KAAK,KAAKA,CAAI,IAAM,KAAK,IAAM/G,EAAKA,EAAK,KAAK,KAC/D8G,EAAO,KAAK,KAAK,EAAIC,EAAOA,CAAI,EACxB,KAAK,KAAI,CACf,KAAKgI,EAAK,MACRjjB,EAAE,EAAI,KAAK,KAAKgb,EAAO,KAAK,OAAS5kB,EAAE,EAAI6kB,EAAO,KAAK,OAAS/G,CAAE,EAClE9d,EAAE,GAAK4kB,EAAO,KAAK,OAAS,KAAK,IAAIhb,EAAE,CAAC,GAAKkU,EAC7C9d,EAAE,GAAK6kB,EAAO,KAAK,OACnB,MACF,KAAKgI,EAAK,MACRjjB,EAAE,EAAI,KAAK,KAAK5J,EAAE,EAAI6kB,EAAO/G,CAAE,EAC/B9d,EAAE,EAAI4kB,EAAO9G,EACb9d,EAAE,GAAK6kB,EACP,MACF,KAAKgI,EAAK,OACRjjB,EAAE,EAAI,KAAK,KAAKgb,CAAI,EACpB5kB,EAAE,EAAI,CAACA,EAAE,EACT,MACF,KAAK6sB,EAAK,OACRjjB,EAAE,EAAI,CAAC,KAAK,KAAKgb,CAAI,EACrB,KACH,CACDhb,EAAE,EAAI,KAAK,MAAM5J,EAAE,EAAGA,EAAE,CAAC,CAC1B,CAED,OAAAA,EAAE,EAAI4J,EAAE,EAAI,KAAK,MACjB5J,EAAE,EAAI4J,EAAE,EACD5J,CACT,CAEO,IAAI+F,GAAQ,CAAC,qBAAsB,OAAO,EAClConB,GAAA,CACb,KAAM1nB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACT,ECtKO,SAASN,IAAO,CAKnB,GAJA,KAAK,UAAa,KAAK,QAAU,IAAM,EAAI,EAC3C,KAAK,EAAI,OAAO,KAAK,CAAC,EACtB,KAAK,WAAa,KAAK,EAAI,KAAK,EAE5B,KAAK,YAAc,GAAK,KAAK,WAAa,KAC1C,MAAM,IAAI,MAMd,GAHA,KAAK,SAAW,EAAM,KAAK,WAC3B,KAAK,EAAI,KAAK,SAAW,KAAK,SAAW,EAErC,KAAK,KAAO,EAAK,CACjB,IAAIib,EAAS,EAAM,KAAK,GACpB0M,EAAU,EAAI1M,EAElB,KAAK,SAAW,KAAK,KAAKA,CAAM,EAChC,KAAK,UAAYA,EACjB,KAAK,cAAgB0M,EAErB,KAAK,MAAQ,SACrB,MACQ,KAAK,SAAW,EAChB,KAAK,UAAY,EACjB,KAAK,cAAgB,EAErB,KAAK,MAAQ,SAGZ,KAAK,QACN,KAAK,MAAQ,+BAErB,CAEA,SAAS1nB,GAAQ1F,EAAG,CAChB,IAAI2F,EAAM3F,EAAE,EACR4F,EAAM5F,EAAE,EACRwc,EAAK6Q,EAAKC,EAAKC,EAGnB,GAFA5nB,EAAMA,EAAM,KAAK,MAEb,KAAK,QAAU,UAAW,CAC1BC,EAAM,KAAK,KAAK,KAAK,UAAY,KAAK,IAAIA,CAAG,CAAC,EAC9C,IAAIgE,EAAI,KAAK,SAAW4Q,EAAM,KAAK,SAAW,KAAK,IAAI5U,CAAG,EAAG,KAAK,IAAIA,CAAG,CAAC,EAM1E,GAJAynB,EAAMzjB,EAAI,KAAK,IAAIjE,CAAG,EAAI,KAAK,IAAIC,CAAG,EACtC0nB,EAAM1jB,EAAI,KAAK,IAAIjE,CAAG,EAAI,KAAK,IAAIC,CAAG,EACtC2nB,EAAM3jB,EAAI,KAAK,IAAIhE,CAAG,GAEhB,KAAK,SAAWynB,GAAOA,EAAMC,EAAMA,EAAMC,EAAMA,EAAM,KAAK,cAAiB,EAC7E,OAAAvtB,EAAE,EAAI,OAAO,IACbA,EAAE,EAAI,OAAO,IACNA,EAGXwc,EAAM,KAAK,SAAW6Q,EAClB,KAAK,WACLrtB,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKstB,EAAM9S,EAAM+S,EAAK/Q,CAAG,CAAC,EACvDxc,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKutB,EAAM/Q,CAAG,IAE3Cxc,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKstB,EAAM9Q,CAAG,EAC3Cxc,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKutB,EAAM/S,EAAM8S,EAAK9Q,CAAG,CAAC,EAEnE,MAAe,KAAK,QAAU,WACtBA,EAAM,KAAK,IAAI5W,CAAG,EAClBynB,EAAM,KAAK,IAAI1nB,CAAG,EAAI6W,EACtB8Q,EAAM,KAAK,IAAI3nB,CAAG,EAAI6W,EACtB+Q,EAAM,KAAK,IAAI3nB,CAAG,EAClB4W,EAAM,KAAK,SAAW6Q,EAElB,KAAK,WACLrtB,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKstB,EAAM9S,EAAM+S,EAAK/Q,CAAG,CAAC,EACvDxc,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKutB,EAAM/Q,CAAG,IAE3Cxc,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKstB,EAAM9Q,CAAG,EAC3Cxc,EAAE,EAAI,KAAK,WAAa,KAAK,KAAKutB,EAAM/S,EAAM8S,EAAK9Q,CAAG,CAAC,IAG/D,OAAAxc,EAAE,EAAIA,EAAE,EAAI,KAAK,EACjBA,EAAE,EAAIA,EAAE,EAAI,KAAK,EACVA,CACX,CAEA,SAAS8F,GAAQ9F,EAAG,CAChB,IAAIqtB,EAAM,GACNC,EAAM,EACNC,EAAM,EACNxtB,EAAGiH,EAAGwmB,EAAKpU,EAKf,GAHApZ,EAAE,EAAIA,EAAE,EAAI,KAAK,EACjBA,EAAE,EAAIA,EAAE,EAAI,KAAK,EAEb,KAAK,QAAU,UAAW,CACtB,KAAK,WACLutB,EAAM,KAAK,IAAIvtB,EAAE,EAAI,KAAK,UAAU,EACpCstB,EAAM,KAAK,IAAIttB,EAAE,EAAI,KAAK,UAAU,EAAIwa,EAAM,EAAK+S,CAAG,IAEtDD,EAAM,KAAK,IAAIttB,EAAE,EAAI,KAAK,UAAU,EACpCutB,EAAM,KAAK,IAAIvtB,EAAE,EAAI,KAAK,UAAU,EAAIwa,EAAM,EAAK8S,CAAG,GAG1D,IAAIG,EAAOF,EAAM,KAAK,SAKtB,GAJAxtB,EAAIutB,EAAMA,EAAMG,EAAOA,EAAOJ,EAAMA,EACpCrmB,EAAI,EAAI,KAAK,SAAWqmB,EACxBG,EAAOxmB,EAAIA,EAAK,EAAIjH,EAAI,KAAK,EAEzBytB,EAAM,EACN,OAAAxtB,EAAE,EAAI,OAAO,IACbA,EAAE,EAAI,OAAO,IACNA,EAGXoZ,GAAK,CAACpS,EAAI,KAAK,KAAKwmB,CAAG,IAAM,EAAMztB,GACnCstB,EAAM,KAAK,SAAWjU,EAAIiU,EAC1BC,GAAOlU,EACPmU,GAAOnU,EAEPpZ,EAAE,EAAI,KAAK,MAAMstB,EAAKD,CAAG,EACzBrtB,EAAE,EAAI,KAAK,KAAKutB,EAAM,KAAK,IAAIvtB,EAAE,CAAC,EAAIqtB,CAAG,EACzCrtB,EAAE,EAAI,KAAK,KAAK,KAAK,cAAgB,KAAK,IAAIA,EAAE,CAAC,CAAC,CAC1D,SAAe,KAAK,QAAU,SAAU,CAYhC,GAXI,KAAK,WACLutB,EAAM,KAAK,IAAIvtB,EAAE,EAAI,KAAK,UAAU,EACpCstB,EAAM,KAAK,IAAIttB,EAAE,EAAI,KAAK,UAAU,EAAI,KAAK,KAAK,EAAMutB,EAAMA,CAAG,IAEjED,EAAM,KAAK,IAAIttB,EAAE,EAAI,KAAK,UAAU,EACpCutB,EAAM,KAAK,IAAIvtB,EAAE,EAAI,KAAK,UAAU,EAAI,KAAK,KAAK,EAAMstB,EAAMA,CAAG,GAGrEvtB,EAAIutB,EAAMA,EAAMC,EAAMA,EAAMF,EAAMA,EAClCrmB,EAAI,EAAI,KAAK,SAAWqmB,EACxBG,EAAOxmB,EAAIA,EAAK,EAAIjH,EAAI,KAAK,EACzBytB,EAAM,EACN,OAAAxtB,EAAE,EAAI,OAAO,IACbA,EAAE,EAAI,OAAO,IACNA,EAGXoZ,GAAK,CAACpS,EAAI,KAAK,KAAKwmB,CAAG,IAAM,EAAMztB,GACnCstB,EAAM,KAAK,SAAWjU,EAAIiU,EAC1BC,GAAOlU,EACPmU,GAAOnU,EAEPpZ,EAAE,EAAI,KAAK,MAAMstB,EAAKD,CAAG,EACzBrtB,EAAE,EAAI,KAAK,KAAKutB,EAAM,KAAK,IAAIvtB,EAAE,CAAC,EAAIqtB,CAAG,CAC5C,CACD,OAAArtB,EAAE,EAAIA,EAAE,EAAI,KAAK,MACVA,CACX,CAEO,IAAI+F,GAAQ,CAAC,+BAAgC,0BAA2B,MAAM,EACtE2nB,GAAA,CACX,KAAMjoB,GACN,QAASC,GACT,QAASI,GACT,MAAOC,EACX,EChIe,SAAQ4nB,GAAChc,EAAM,CAC5BA,EAAM,KAAK,YAAY,IAAI2I,EAAK,EAChC3I,EAAM,KAAK,YAAY,IAAI8K,EAAM,EACjC9K,EAAM,KAAK,YAAY,IAAIyC,EAAG,EAC9BzC,EAAM,KAAK,YAAY,IAAI2L,EAAM,EACjC3L,EAAM,KAAK,YAAY,IAAIuM,EAAK,EAChCvM,EAAM,KAAK,YAAY,IAAI0N,EAAM,EACjC1N,EAAM,KAAK,YAAY,IAAIwP,EAAK,EAChCxP,EAAM,KAAK,YAAY,IAAIoQ,EAAG,EAC9BpQ,EAAM,KAAK,YAAY,IAAI2Q,EAAM,EACjC3Q,EAAM,KAAK,YAAY,IAAIkS,EAAI,EAC/BlS,EAAM,KAAK,YAAY,IAAI4T,EAAI,EAC/B5T,EAAM,KAAK,YAAY,IAAIiU,EAAG,EAC9BjU,EAAM,KAAK,YAAY,IAAIoU,EAAI,EAC/BpU,EAAM,KAAK,YAAY,IAAIsU,EAAG,EAC9BtU,EAAM,KAAK,YAAY,IAAIwU,EAAG,EAC9BxU,EAAM,KAAK,YAAY,IAAI+U,EAAI,EAC/B/U,EAAM,KAAK,YAAY,IAAIyW,EAAI,EAC/BzW,EAAM,KAAK,YAAY,IAAI0W,EAAI,EAC/B1W,EAAM,KAAK,YAAY,IAAI2W,EAAI,EAC/B3W,EAAM,KAAK,YAAY,IAAI6W,EAAI,EAC/B7W,EAAM,KAAK,YAAY,IAAI8W,EAAI,EAC/B9W,EAAM,KAAK,YAAY,IAAI6X,EAAK,EAChC7X,EAAM,KAAK,YAAY,IAAIgZ,EAAI,EAC/BhZ,EAAM,KAAK,YAAY,IAAIiZ,EAAK,EAChCjZ,EAAM,KAAK,YAAY,IAAIia,EAAG,EAC9Bja,EAAM,KAAK,YAAY,IAAIgb,EAAK,EAChChb,EAAM,KAAK,YAAY,IAAIib,EAAO,EAClCjb,EAAM,KAAK,YAAY,IAAIwb,EAAK,EAChCxb,EAAM,KAAK,YAAY,IAAI+b,EAAI,CACjC,CCjDA/b,EAAM,aAAe,QACrBA,EAAM,KAAOic,EACbjc,EAAM,MAAQ,IAAIA,EAAM,KAAK,OAAO,EACpCA,EAAM,MAAQkG,GACdlG,EAAM,QAAUhB,GAChBgB,EAAM,KAAOhU,EACbgU,EAAM,QAAUzJ,GAChByJ,EAAM,UAAYV,GAClBU,EAAM,KAAOY,GACbZ,EAAM,QAAU,cAChBgc,GAAoBhc,CAAK,4301KCdzB,MAAMkc,GAAU,CACd,kDAAmD,YACnD,sBAAuB,aACvB,sBAAuB,YACvB,kCAAmC,aACnC,oBAAqB,aACrB,oBAAqB,aACrB,iBAAkB,YAClB,aAAc,YAChB,EAGMC,GAAW,OAAO,QAAQC,EAAI,EAAE,IAAYC,GAAA,CAAC,QAAQA,EAAK,CAAC,CAAC,GAAIA,EAAK,CAAC,EAAE,KAAK,CAAC,EACpFrc,EAAM,KAAKmc,EAAQ,EAGnBnc,EAAM,KAAK,CACT,CAEE,YACA,yGACF,EACA,CAEE,aACA,wGACF,EACA,CAEE,aACA,mDACF,EACA,CAEE,aACA,mDACF,CACF,CAAC,EAGDA,EAAM,KAAK,MAAOA,EAAM,KAAK,YAAY,CAAC,EAC1CA,EAAM,KAAK,MAAOA,EAAM,KAAK,YAAY,CAAC,EAG1CA,EAAM,KAAK,UAAWA,EAAM,KAAK,YAAY,CAAC,EAC9CA,EAAM,KAAK,SAAUA,EAAM,KAAK,YAAY,CAAC,EAC7CA,EAAM,KAAK,eAAgBA,EAAM,KAAK,WAAW,CAAC,EAElD,SAASsc,GAASC,EAAoBluB,EAAQ,CACrC,OAAA2R,EAAMuc,EAAY,QAASluB,CAAC,CACrC,CAOA,SAASmuB,GAAgBC,EAAoB,OAC3C,MAAMC,EAAe,CAAC,QAAS,QAAS,QAAS,OAAQ,QAAS,MAAM,EAIxE,GADa,aACJ,KAAKD,EAAW,KAAA,CAAM,EAAG,OAAOA,EAAW,OAGpD,SAAW,CAAChvB,EAAK4uB,CAAI,IAAK,OAAO,QAAQH,EAAO,EAC1C,GAAAO,EAAW,QAAQhvB,CAAG,EAAI,GAAW4uB,OAAAA,EAI3C,MAAMM,EAAY,6BAClB,IAAIC,EAAU,GAMd,IAJGC,EAAAJ,EAAA,MAAME,CAAS,IAAf,MAAAE,EACC,UACD,IAAI3F,GAAM0F,GAAW1F,GAEpB0F,GACF,UAAWE,KAAQJ,EACjB,GAAIE,EAAQ,QAAQ,IAAIE,CAAI,GAAG,EAAI,GAAI,MAAO,QAAQA,CAAI,GAKvD,MAAA,EACT,CAEA,IAAAC,GAAe,CAAE,SAAAT,GAAU,gBAAAE,GAAiB,SAAAL,EAAS,ECzFrD,IAAIztB,GACA6tB,GACAS,GACJ,MAAMC,EAAgB,CAAE,MAAO,CAAI,EAAA,MAAO,CAAG,CAAA,EACvCC,GAAgD,CAAA,EAChDC,GAAoD,CAAA,EACpDC,GAAkD,CAAA,EAClDC,EAAiB,CAAC,IAAK,GAAI,KAAM,GAAG,EAG1C,UAAY,SAAU,EAAG,CACvB3uB,GAAS,EAAE,KACXsuB,GAAOtuB,GAAO,IACd6tB,GAAa7tB,GAAO,WAEhB,GAAA,CACyB4uB,KACbC,KACd,MAAMC,EAASC,KAEf,YAAYD,CAAM,QACX7nB,EAAG,CACF,QAAA,MAAM,GAAKA,CAAC,EACR,YAAA,CAAE,MAAOA,CAAAA,CAAG,CAC1B,CACF,EAIA,SAAS2nB,IAA6B,CACxB,YAAA,CAAE,OAAQ,yBAAA,CAA2B,EAEjD,MAAMI,EAAUV,GAAK,QACfW,EAAWD,EAAQ,QAAQ,MAAM,KACjCE,EAAWF,EAAQ,QAAQ,MAAM,KAEvC,UAAWG,KAAQF,EACZE,EAAA,EAAI,WAAWA,EAAK,CAAC,EACrBA,EAAA,EAAI,WAAWA,EAAK,CAAC,EACjBZ,EAAA,MAAMY,EAAK,EAAE,EAAIA,EAG5B,UAAWC,KAAQF,EACRX,EAAA,MAAMa,EAAK,EAAE,EAAIA,EAE5B,MAAO,CAAE,KAAM,CAAA,EAAI,eAAgB,CAAG,CAAA,CACxC,CAEA,SAASP,IAAgB,CACX,YAAA,CAAE,OAAQ,2BAAA,CAA6B,EAExC,UAAAQ,KAAMd,EAAS,MACxB,GAAIA,EAAS,MAAM,eAAec,CAAE,EAAG,CAC/B,MAAAF,EAAoBZ,EAAS,MAAMc,CAAE,EACrC5X,EAAI4W,GAAO,SAASR,GAAYsB,CAAI,EAC1CA,EAAK,EAAI1X,EAAE,EACX0X,EAAK,EAAI1X,EAAE,CACb,CAEF,MAAO,CAAE,KAAM,CAAA,EAAI,eAAgB,CAAG,CAAA,CACxC,CAEA,SAASsX,IAAiB,CACZ,YAAA,CAAE,OAAQ,8BAAA,CAAgC,EAExBO,KAC9B,IAAIC,EAAgB,EAEd,MAAAC,EAAelB,GAAK,WAAW,gBAAgB,YAErD,UAAWmB,KAAQD,EAAc,CAC/B,MAAME,EAAoB,CACxB,GAAID,EAAK,GACT,cAAe,CAAC,CAAA,EAGlB,GAAKA,EAAK,aAEC,WAAAE,KAASF,EAAK,aAAc,CACrC,MAAMG,EAAwBC,GAAyBJ,EAAK,GAAIE,CAAK,EACrEC,EAAQ,cAAgBL,IACnBG,EAAA,cAAc,KAAKE,CAAO,CACjC,CAGclB,GAAAgB,EAAK,EAAE,EAAIA,EAC3B,CAEO,MAAA,CACL,QAASnB,EACT,UAAWC,GACX,eAAgBC,GAChB,aAAcC,GACd,UAAWC,CAAA,CAEf,CAEA,SAASW,IAAgC,CACvC,MAAMQ,EAAiBxB,GAAK,WAAW,gBAAgB,aAAa,aAEpE,UAAWyB,KAAQD,EAAgB,CAC5BC,EAAA,EAAI,WAAWA,EAAK,CAAC,EACrBA,EAAA,EAAI,WAAWA,EAAK,CAAC,EAE1B,MAAMtY,EAAI4W,GAAO,SAASR,GAAYkC,CAAI,EAC1CA,EAAK,EAAItY,EAAE,EACXsY,EAAK,EAAItY,EAAE,EAEKgX,GAAAsB,EAAK,EAAE,EAAIA,CAC7B,CACF,CAEA,SAASF,GAAyBG,EAAgBL,EAA0B,CACpE,MAAAM,EAAgBN,EAAM,WAAW,UACzBM,EAAA,KAAK,SAAUvwB,EAAQiH,EAAQ,CAC3C,MAAMupB,EAAQxwB,EAAE,cACVywB,EAAQxpB,EAAE,cAChB,OAAIupB,EAAQC,EAAc,GACtBD,EAAQC,EAAc,EACnB,CAAA,CACR,EAED,MAAMC,EAA6B,CACjC,GAAI,GAAGJ,CAAM,KAAKL,EAAM,EAAE,IAC1B,cAAeA,EAAM,cACrB,aAAc,CAAC,EACf,MAAO,CAAC,EACR,WAAYA,EAAM,WAAW,UAAU,OACvC,eAAgBM,EAAc,CAAC,EAAE,cACjC,cAAeA,EAAcA,EAAc,OAAS,CAAC,EAAE,cACvD,QAAS,EAAA,EAGX,GAAI,MAAM,QAAQN,EAAM,aAAa,IAAI,EAC5B,UAAAI,KAAQJ,EAAM,aAAa,KACvBS,EAAA,aAAa,KAAKL,CAAI,OAG7B,QAAA,KAAK,4BAA6BJ,CAAK,EAC/CS,EAAa,aAAa,KAAKT,EAAM,aAAa,IAAI,EAG7C,UAAAP,KAAQO,EAAM,MAAM,KAChBS,EAAA,MAAM,KAAKhB,EAAK,KAAK,EAGvB,OAAAgB,EAAA,QAAUC,GAAyBD,CAAY,EACjD5B,GAAA4B,EAAa,EAAE,EAAIA,EAEvBA,CACT,CAEA,SAASC,GAAyBC,EAA4B,aAC5D,MAAMnf,EAAS,CAAA,EACf,IAAIof,EAAwB,GAEjB,UAAAC,KAAUF,EAAa,MAAO,CACjC,MAAAG,EAAclC,EAAS,MAAMiC,CAAM,EAEzC,GAAI,CAACD,EAAc,CACjB,MAAMG,GAAKvC,EAAAI,EAAS,MAAMkC,GAAA,YAAAA,EAAa,IAAI,IAAhC,YAAAtC,EAAmC,EACxCwC,GAAKC,EAAArC,EAAS,MAAMkC,GAAA,YAAAA,EAAa,IAAI,IAAhC,YAAAG,EAAmC,EAC1CF,IAAO,QAAaC,IAAO,QAAWxf,EAAO,KAAK,CAACuf,EAAIC,CAAE,CAAC,CAChE,CACA,MAAMhsB,GAAIksB,EAAAtC,EAAS,MAAMkC,GAAA,YAAAA,EAAa,EAAE,IAA9B,YAAAI,EAAiC,EACrCrrB,GAAIsrB,EAAAvC,EAAS,MAAMkC,GAAA,YAAAA,EAAa,EAAE,IAA9B,YAAAK,EAAiC,EACvCnsB,IAAM,QAAaa,IAAM,QAAW2L,EAAO,KAAK,CAACxM,EAAGa,CAAC,CAAC,EAC3C+qB,EAAA,EACjB,CAGI,OAAApf,EAAO,OAAS,IACF4f,GAAA5f,EAAO,CAAC,CAAC,EACzB4f,GAAgB5f,EAAOA,EAAO,OAAS,CAAC,CAAC,GAG3B,CACd,KAAM,UACN,SAAU,CACR,KAAM,aACN,YAAaA,CACf,EACA,WAAY,CACV,GAAImf,EAAa,GACjB,KAAMnf,EAAO,CAAC,EACd,GAAIA,EAAOA,EAAO,OAAS,CAAC,CAC9B,CAAA,CAGJ,CAEA,SAAS4f,GAAgBC,EAAkB,CAC1BrC,EAAA,CAAC,EAAI,KAAK,IAAIA,EAAe,CAAC,EAAGqC,EAAY,CAAC,CAAC,EAC/CrC,EAAA,CAAC,EAAI,KAAK,IAAIA,EAAe,CAAC,EAAGqC,EAAY,CAAC,CAAC,EAC/CrC,EAAA,CAAC,EAAI,KAAK,IAAIA,EAAe,CAAC,EAAGqC,EAAY,CAAC,CAAC,EAC/CrC,EAAA,CAAC,EAAI,KAAK,IAAIA,EAAe,CAAC,EAAGqC,EAAY,CAAC,CAAC,CAChE","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90]}