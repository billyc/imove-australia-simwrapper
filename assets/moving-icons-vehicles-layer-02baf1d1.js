import{G as g}from"./index-a3e39363.js";import{v as m,f as M,I as y}from"./icon-manager-188a634e.js";import{a as v,p as S,b as I,M as z,G as b,l as P}from"./layer-b5f603da.js";function w(){return new Worker("/assets/MATSimEventStreamer.worker-3b397460.js")}const f=[0,0,0,255],x={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!1,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},iconStill:{type:"object",value:null},getIcon:{type:"accessor",value:"vehicle"},getBOffsets:{type:"accessor",value:[0,0]},getBIconFrames:{type:"accessor",value:[128,128,128,128]},getBColorModes:{type:"accessor",value:1},getColor:{type:"accessor",value:f},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getPathStart:{type:"accessor",value:null},getPathEnd:{type:"accessor",value:null},getTimeStart:{type:"accessor",value:null},getTimeEnd:{type:"accessor",value:null},currentTime:{type:"number",value:0},pickable:{type:"boolean",value:!0},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class h extends v{getShaders(){return super.getShaders({vs:m,fs:M,modules:[S,I]})}initializeState(){this.state={iconManager:new y(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})},this.getAttributeManager().addInstanced({instanceTimestamps:{size:1,accessor:"getTimeStart"},instanceTimestampsNext:{size:1,accessor:"getTimeEnd"},instanceStartPositions:{size:2,accessor:"getPathStart"},instanceEndPositions:{size:2,accessor:"getPathEnd"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,defaultValue:[0,0],accessor:"getBOffsets"},instanceIconFrames:{size:4,defaultValue:[0,0,128,128],accessor:"getBIconFrames"},instanceColorModes:{size:1,type:g.UNSIGNED_BYTE,defaultValue:1,accessor:"getBColorModes"},instanceColors:{size:this.props.colorFormat.length,type:g.UNSIGNED_BYTE,normalized:!0,transition:!0,accessor:"getColor",defaultValue:f},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState({oldProps:t,props:e,changeFlags:s}){var c;super.updateState({props:e,oldProps:t,changeFlags:s});const n=this.getAttributeManager(),{iconAtlas:r,iconMapping:l,data:u,getIcon:p}=e,{iconManager:a}=this.state;a.setProps({loadOptions:e.loadOptions});let o=!1;if(r||this.internalState.isAsyncPropLoading("iconAtlas")?(t.iconAtlas!==e.iconAtlas&&a.setProps({iconAtlas:r,autoPacking:!1}),t.iconMapping!==e.iconMapping&&(a.setProps({iconMapping:l}),o=!0)):a.setProps({autoPacking:!0}),(s.dataChanged||s.updateTriggersChanged&&(s.updateTriggersChanged.all||s.updateTriggersChanged.getIcon))&&a.setProps({data:u,getIcon:p}),o&&(n.invalidate("instanceOffsets"),n.invalidate("instanceIconFrames"),n.invalidate("instanceColorModes")),s.extensionsChanged){const{gl:i}=this.context;(c=this.state.model)==null||c.delete(),this.state.model=this._getModel(i),n.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(){super.finalizeState(),this.state.iconManager.finalize()}draw({uniforms:t}){const{sizeScale:e,sizeMinPixels:s,sizeMaxPixels:n,sizeUnits:r,billboard:l,alphaCutoff:u,currentTime:p,iconStill:a,pickable:o}=this.props,{iconManager:d}=this.state,{viewport:c}=this.context,i=d.getTexture();i&&this.state.model.setUniforms(t).setUniforms({iconsTexture:i,iconsTextureDim:[i.width,i.height],sizeScale:e*(r==="pixels"?c.metersPerPixel:1),sizeMinPixels:s,sizeMaxPixels:n,billboard:l,alphaCutoff:u,currentTime:p,pickable:o,iconStillOffsets:this.getInstanceOffset(a),iconStillFrames:this.getInstanceIconFrame(a)}).draw()}_getModel(t){const e=[-1,-1,-1,1,1,1,1,-1];return new z(t,{...this.getShaders(),id:this.props.id,geometry:new b({drawMode:g.TRIANGLE_FAN,attributes:{positions:{size:2,value:new Float32Array(e)}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(t){const{onIconError:e}=this.getCurrentLayer().props;e?e(t):P.error(t.error)()}getInstanceOffset(t){const e=this.state.iconManager.getIconMapping(t);return[e.width/2-e.anchorX||0,e.height/2-e.anchorY||0]}getInstanceColorMode(t){return this.state.iconManager.getIconMapping(t).mask?1:0}getInstanceIconFrame(t){const e=this.state.iconManager.getIconMapping(t);return[e.x||0,e.y||0,e.width||0,e.height||0]}}h.layerName="FlatIconLayer";h.defaultProps=x;export{h as I,w as W};
//# sourceMappingURL=moving-icons-vehicles-layer-02baf1d1.js.map
