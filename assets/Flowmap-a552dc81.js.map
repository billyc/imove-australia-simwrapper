{"version":3,"file":"Flowmap-a552dc81.js","sources":["../../node_modules/seedrandom/lib/alea.js","../../node_modules/seedrandom/lib/xor128.js","../../node_modules/seedrandom/lib/xorwow.js","../../node_modules/seedrandom/lib/xorshift7.js","../../node_modules/seedrandom/lib/xor4096.js","../../node_modules/seedrandom/lib/tychei.js","../../node_modules/seedrandom/seedrandom.js","../../node_modules/seedrandom/index.js","../../node_modules/@flowmap.gl/layers/dist/AnimatedFlowLinesLayer/AnimatedFlowLinesLayerFragment.glsl.js","../../node_modules/@flowmap.gl/layers/dist/AnimatedFlowLinesLayer/AnimatedFlowLinesLayerVertex.glsl.js","../../node_modules/@flowmap.gl/layers/dist/AnimatedFlowLinesLayer/AnimatedFlowLinesLayer.js","../../node_modules/@flowmap.gl/layers/dist/FlowLinesLayer/FlowLinesLayerFragment.glsl.js","../../node_modules/@flowmap.gl/layers/dist/FlowLinesLayer/FlowLinesLayerVertex.glsl.js","../../node_modules/@flowmap.gl/layers/dist/FlowLinesLayer/FlowLinesLayer.js","../../node_modules/@flowmap.gl/layers/dist/FlowCirclesLayer/FlowCirclesLayerFragment.glsl.js","../../node_modules/@flowmap.gl/layers/dist/FlowCirclesLayer/FlowCirclesLayerVertex.glsl.js","../../node_modules/@flowmap.gl/layers/dist/FlowCirclesLayer/FlowCirclesLayer.js","../../node_modules/@flowmap.gl/data/dist/types.js","../../node_modules/@flowmap.gl/data/dist/colors.js","../../node_modules/kdbush/src/sort.js","../../node_modules/kdbush/src/range.js","../../node_modules/kdbush/src/within.js","../../node_modules/kdbush/src/index.js","../../node_modules/reselect/es/defaultMemoize.js","../../node_modules/reselect/es/index.js","../../node_modules/@flowmap.gl/data/dist/cluster/cluster.js","../../node_modules/@flowmap.gl/data/dist/cluster/ClusterIndex.js","../../node_modules/@flowmap.gl/data/dist/FlowmapAggregateAccessors.js","../../node_modules/@flowmap.gl/data/dist/selector-functions.js","../../node_modules/@flowmap.gl/data/dist/time.js","../../node_modules/@flowmap.gl/data/dist/FlowmapSelectors.js","../../node_modules/@flowmap.gl/data/node_modules/d3-geo/src/math.js","../../node_modules/@flowmap.gl/data/node_modules/d3-geo/src/noop.js","../../node_modules/@flowmap.gl/data/node_modules/d3-geo/src/stream.js","../../node_modules/@flowmap.gl/data/node_modules/d3-geo/src/area.js","../../node_modules/@flowmap.gl/data/node_modules/d3-geo/src/cartesian.js","../../node_modules/@flowmap.gl/data/node_modules/d3-geo/src/bounds.js","../../node_modules/@flowmap.gl/data/dist/getViewStateForLocations.js","../../node_modules/@flowmap.gl/data/dist/provider/FlowmapDataProvider.js","../../node_modules/@flowmap.gl/data/dist/provider/LocalFlowmapDataProvider.js","../../node_modules/@flowmap.gl/layers/dist/types.js","../../node_modules/@flowmap.gl/layers/dist/FlowmapLayer.js","../../src/layers/FlowMapLayer.tsx","../../src/plugins/flowmap/Flowmap.vue"],"sourcesContent":["// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default `\\\n#define SHADER_NAME animated-flow-lines-layer-fragment-shader\n\nprecision highp float;\n\nuniform float animationTailLength;\n\nvarying vec4 vColor;\nvarying float sourceToTarget;\nvarying vec2 uv;\n                                   \nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vec4(vColor.xyz, vColor.w * smoothstep(1.0 - animationTailLength, 1.0, fract(sourceToTarget)));\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0ZWRGbG93TGluZXNMYXllckZyYWdtZW50Lmdsc2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQW5pbWF0ZWRGbG93TGluZXNMYXllci9BbmltYXRlZEZsb3dMaW5lc0xheWVyRnJhZ21lbnQuZ2xzbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUVILGVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWtCZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIyIEZsb3dtYXBCbHVlXG4gKiBDb3B5cmlnaHQgMjAxOC0yMDIwIFRlcmFseXRpY3MsIG1vZGlmaWVkIGJ5IEZsb3dtYXBCbHVlXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGBcXFxuI2RlZmluZSBTSEFERVJfTkFNRSBhbmltYXRlZC1mbG93LWxpbmVzLWxheWVyLWZyYWdtZW50LXNoYWRlclxuXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XG5cbnVuaWZvcm0gZmxvYXQgYW5pbWF0aW9uVGFpbExlbmd0aDtcblxudmFyeWluZyB2ZWM0IHZDb2xvcjtcbnZhcnlpbmcgZmxvYXQgc291cmNlVG9UYXJnZXQ7XG52YXJ5aW5nIHZlYzIgdXY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxudm9pZCBtYWluKHZvaWQpIHtcbiAgZ2VvbWV0cnkudXYgPSB1djtcblxuICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZDb2xvci54eXosIHZDb2xvci53ICogc21vb3Roc3RlcCgxLjAgLSBhbmltYXRpb25UYWlsTGVuZ3RoLCAxLjAsIGZyYWN0KHNvdXJjZVRvVGFyZ2V0KSkpO1xuXG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XG59XG5gO1xuIl19","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default `\\\n#define SHADER_NAME animated-flow-lines-layer-vertex-shader\n#define SPEED 0.015\n#define NUM_PARTS 5.0\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instancePickable;\nattribute float instanceStaggering;\n\nuniform float opacity;\nuniform float currentTime;\nuniform float thicknessUnit;\n    \nvarying vec4 vColor;\nvarying float sourceToTarget;\nvarying vec2 uv;\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  // Position\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(instanceSourcePositions, instanceSourcePositions64Low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(instanceTargetPositions, instanceTargetPositions64Low, vec3(0.), target_commonspace);\n\n  float widthPixels = instanceWidths * thicknessUnit;\n  \n  \n  // linear interpolation of source & target to pick right coord\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  if (instancePickable > 0.5) {\n    geometry.pickingColor = instancePickingColors;\n  }\n  \n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Color\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  sourceToTarget = positions.x * length(source - target) * NUM_PARTS - currentTime * SPEED + instanceStaggering; \n}\n`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0ZWRGbG93TGluZXNMYXllclZlcnRleC5nbHNsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FuaW1hdGVkRmxvd0xpbmVzTGF5ZXIvQW5pbWF0ZWRGbG93TGluZXNMYXllclZlcnRleC5nbHNsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0gsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBd0VkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjIgRmxvd21hcEJsdWVcbiAqIENvcHlyaWdodCAyMDE4LTIwMjAgVGVyYWx5dGljcywgbW9kaWZpZWQgYnkgRmxvd21hcEJsdWVcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGBcXFxuI2RlZmluZSBTSEFERVJfTkFNRSBhbmltYXRlZC1mbG93LWxpbmVzLWxheWVyLXZlcnRleC1zaGFkZXJcbiNkZWZpbmUgU1BFRUQgMC4wMTVcbiNkZWZpbmUgTlVNX1BBUlRTIDUuMFxuXG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbnM7XG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVNvdXJjZVBvc2l0aW9ucztcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlVGFyZ2V0UG9zaXRpb25zO1xuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VTb3VyY2VQb3NpdGlvbnM2NExvdztcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlVGFyZ2V0UG9zaXRpb25zNjRMb3c7XG5hdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUNvbG9ycztcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUGlja2luZ0NvbG9ycztcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZVdpZHRocztcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZVBpY2thYmxlO1xuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlU3RhZ2dlcmluZztcblxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xudW5pZm9ybSBmbG9hdCBjdXJyZW50VGltZTtcbnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzVW5pdDtcbiAgICBcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XG52YXJ5aW5nIGZsb2F0IHNvdXJjZVRvVGFyZ2V0O1xudmFyeWluZyB2ZWMyIHV2O1xuXG4vLyBvZmZzZXQgdmVjdG9yIGJ5IHN0cm9rZVdpZHRoIHBpeGVsc1xuLy8gb2Zmc2V0X2RpcmVjdGlvbiBpcyAtMSAobGVmdCkgb3IgMSAocmlnaHQpXG52ZWMyIGdldEV4dHJ1c2lvbk9mZnNldCh2ZWMyIGxpbmVfY2xpcHNwYWNlLCBmbG9hdCBvZmZzZXRfZGlyZWN0aW9uLCBmbG9hdCB3aWR0aCkge1xuICAvLyBub3JtYWxpemVkIGRpcmVjdGlvbiBvZiB0aGUgbGluZVxuICB2ZWMyIGRpcl9zY3JlZW5zcGFjZSA9IG5vcm1hbGl6ZShsaW5lX2NsaXBzcGFjZSAqIHByb2plY3RfdVZpZXdwb3J0U2l6ZSk7XG4gIC8vIHJvdGF0ZSBieSA5MCBkZWdyZWVzXG4gIGRpcl9zY3JlZW5zcGFjZSA9IHZlYzIoLWRpcl9zY3JlZW5zcGFjZS55LCBkaXJfc2NyZWVuc3BhY2UueCk7XG5cbiAgcmV0dXJuIGRpcl9zY3JlZW5zcGFjZSAqIG9mZnNldF9kaXJlY3Rpb24gKiB3aWR0aCAvIDIuMDtcbn1cblxudm9pZCBtYWluKHZvaWQpIHtcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IGluc3RhbmNlU291cmNlUG9zaXRpb25zO1xuICBnZW9tZXRyeS53b3JsZFBvc2l0aW9uQWx0ID0gaW5zdGFuY2VUYXJnZXRQb3NpdGlvbnM7XG5cbiAgLy8gUG9zaXRpb25cbiAgdmVjNCBzb3VyY2VfY29tbW9uc3BhY2U7XG4gIHZlYzQgdGFyZ2V0X2NvbW1vbnNwYWNlO1xuICB2ZWM0IHNvdXJjZSA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlU291cmNlUG9zaXRpb25zLCBpbnN0YW5jZVNvdXJjZVBvc2l0aW9uczY0TG93LCB2ZWMzKDAuKSwgc291cmNlX2NvbW1vbnNwYWNlKTtcbiAgdmVjNCB0YXJnZXQgPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVRhcmdldFBvc2l0aW9ucywgaW5zdGFuY2VUYXJnZXRQb3NpdGlvbnM2NExvdywgdmVjMygwLiksIHRhcmdldF9jb21tb25zcGFjZSk7XG5cbiAgZmxvYXQgd2lkdGhQaXhlbHMgPSBpbnN0YW5jZVdpZHRocyAqIHRoaWNrbmVzc1VuaXQ7XG4gIFxuICBcbiAgLy8gbGluZWFyIGludGVycG9sYXRpb24gb2Ygc291cmNlICYgdGFyZ2V0IHRvIHBpY2sgcmlnaHQgY29vcmRcbiAgZmxvYXQgc2VnbWVudEluZGV4ID0gcG9zaXRpb25zLng7XG4gIHZlYzQgcCA9IG1peChzb3VyY2UsIHRhcmdldCwgc2VnbWVudEluZGV4KTtcbiAgZ2VvbWV0cnkucG9zaXRpb24gPSBtaXgoc291cmNlX2NvbW1vbnNwYWNlLCB0YXJnZXRfY29tbW9uc3BhY2UsIHNlZ21lbnRJbmRleCk7XG4gIHV2ID0gcG9zaXRpb25zLnh5O1xuICBnZW9tZXRyeS51diA9IHV2O1xuICBpZiAoaW5zdGFuY2VQaWNrYWJsZSA+IDAuNSkge1xuICAgIGdlb21ldHJ5LnBpY2tpbmdDb2xvciA9IGluc3RhbmNlUGlja2luZ0NvbG9ycztcbiAgfVxuICBcbiAgLy8gZXh0cnVkZVxuICB2ZWMzIG9mZnNldCA9IHZlYzMoXG4gICAgZ2V0RXh0cnVzaW9uT2Zmc2V0KHRhcmdldC54eSAtIHNvdXJjZS54eSwgcG9zaXRpb25zLnksIHdpZHRoUGl4ZWxzKSxcbiAgICAwLjApO1xuICBERUNLR0xfRklMVEVSX1NJWkUob2Zmc2V0LCBnZW9tZXRyeSk7XG4gIGdsX1Bvc2l0aW9uID0gcCArIHZlYzQocHJvamVjdF9waXhlbF9zaXplX3RvX2NsaXBzcGFjZShvZmZzZXQueHkpLCAwLjAsIDAuMCk7XG4gIERFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oZ2xfUG9zaXRpb24sIGdlb21ldHJ5KTtcblxuICAvLyBDb2xvclxuICB2Q29sb3IgPSB2ZWM0KGluc3RhbmNlQ29sb3JzLnJnYiwgaW5zdGFuY2VDb2xvcnMuYSAqIG9wYWNpdHkpIC8gMjU1LjtcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2Q29sb3IsIGdlb21ldHJ5KTtcblxuICBzb3VyY2VUb1RhcmdldCA9IHBvc2l0aW9ucy54ICogbGVuZ3RoKHNvdXJjZSAtIHRhcmdldCkgKiBOVU1fUEFSVFMgLSBjdXJyZW50VGltZSAqIFNQRUVEICsgaW5zdGFuY2VTdGFnZ2VyaW5nOyBcbn1cbmA7XG4iXX0=","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Layer, picking, project32 } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport { Geometry, Model } from '@luma.gl/core';\nimport FragmentShader from './AnimatedFlowLinesLayerFragment.glsl';\nimport VertexShader from './AnimatedFlowLinesLayerVertex.glsl';\nconst DEFAULT_COLOR = [0, 132, 193, 255];\nconst loopLength = 1800;\nconst animationSpeed = 20;\nconst loopTime = loopLength / animationSpeed;\nexport default class AnimatedFlowLinesLayer extends Layer {\n    constructor(props) {\n        super(props);\n    }\n    getShaders() {\n        return super.getShaders({\n            vs: VertexShader,\n            fs: FragmentShader,\n            modules: [project32, picking],\n            shaderCache: this.context.shaderCache,\n        });\n    }\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            instanceSourcePositions: {\n                size: 3,\n                type: GL.DOUBLE,\n                transition: true,\n                accessor: 'getSourcePosition',\n            },\n            instanceTargetPositions: {\n                size: 3,\n                type: GL.DOUBLE,\n                transition: true,\n                accessor: 'getTargetPosition',\n            },\n            instanceColors: {\n                size: 4,\n                type: GL.UNSIGNED_BYTE,\n                transition: true,\n                accessor: 'getColor',\n                defaultValue: [0, 0, 0, 255],\n            },\n            instanceWidths: {\n                size: 1,\n                transition: true,\n                accessor: 'getThickness',\n                defaultValue: 1,\n            },\n            instanceStaggering: {\n                accessor: 'getStaggering',\n                size: 1,\n                transition: false,\n            },\n            instancePickable: {\n                accessor: 'getPickable',\n                size: 1,\n                transition: false,\n            },\n        });\n        /* eslint-enable max-len */\n    }\n    getNeedsRedraw() {\n        return true;\n    }\n    updateState({ props, oldProps, changeFlags }) {\n        var _a;\n        super.updateState({ props, oldProps, changeFlags });\n        if (changeFlags.extensionsChanged) {\n            const { gl } = this.context;\n            (_a = this.state.model) === null || _a === void 0 ? void 0 : _a.delete();\n            this.state.model = this._getModel(gl);\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { thicknessUnit, animationTailLength } = this.props;\n        const timestamp = Date.now() / 1000;\n        const animationTime = ((timestamp % loopTime) / loopTime) * loopLength;\n        this.state.model\n            .setUniforms(Object.assign(Object.assign({}, uniforms), { thicknessUnit: thicknessUnit * 4, animationTailLength, currentTime: animationTime }))\n            .draw();\n    }\n    _getModel(gl) {\n        /*\n         *  (0, -1)-------------_(1, -1)\n         *       |          _,-\"  |\n         *       o      _,-\"      o\n         *       |  _,-\"          |\n         *   (0, 1)\"-------------(1, 1)\n         */\n        const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n        return new Model(gl, Object.assign({}, this.getShaders(), {\n            id: this.props.id,\n            geometry: new Geometry({\n                drawMode: GL.TRIANGLE_STRIP,\n                attributes: {\n                    positions: new Float32Array(positions),\n                },\n            }),\n            isInstanced: true,\n        }));\n    }\n}\nAnimatedFlowLinesLayer.defaultProps = {\n    currentTime: 0,\n    animationTailLength: 0.7,\n    getSourcePosition: { type: 'accessor', value: (d) => [0, 0] },\n    getTargetPosition: { type: 'accessor', value: (d) => [0, 0] },\n    getPickable: { type: 'accessor', value: (d) => 1.0 },\n    getStaggering: {\n        type: 'accessor',\n        value: (d, { index }) => Math.random(),\n    },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getThickness: { type: 'accessor', value: 1 },\n    thicknessUnit: 15 * 2,\n    parameters: {\n        depthTest: false,\n    },\n};\n//# sourceMappingURL=data:application/json;base64,","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default `\\\n#define SHADER_NAME flow-line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  if (vColor.a == 0.0) {\n    discard;\n  }\n\n  geometry.uv = uv;\n  gl_FragColor = vColor;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvd0xpbmVzTGF5ZXJGcmFnbWVudC5nbHNsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0Zsb3dMaW5lc0xheWVyL0Zsb3dMaW5lc0xheWVyRnJhZ21lbnQuZ2xzbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUNILGVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBaUJkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjIgRmxvd21hcEJsdWVcbiAqIENvcHlyaWdodCAyMDE4LTIwMjAgVGVyYWx5dGljcywgbW9kaWZpZWQgYnkgRmxvd21hcEJsdWVcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGBcXFxuI2RlZmluZSBTSEFERVJfTkFNRSBmbG93LWxpbmUtbGF5ZXItZnJhZ21lbnQtc2hhZGVyXG5cbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcblxudmFyeWluZyB2ZWM0IHZDb2xvcjtcbnZhcnlpbmcgdmVjMiB1djtcblxudm9pZCBtYWluKHZvaWQpIHtcbiAgaWYgKHZDb2xvci5hID09IDAuMCkge1xuICAgIGRpc2NhcmQ7XG4gIH1cblxuICBnZW9tZXRyeS51diA9IHV2O1xuICBnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XG59XG5gO1xuIl19","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default `\\\n#define SHADER_NAME flow-line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec4 instanceColors;\nattribute float instanceThickness;    // 0..0.5\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute vec2 instanceEndpointOffsets;\nattribute float instancePickable;\n\nuniform vec4 outlineColor;\nuniform float thicknessUnit;\nuniform float gap;\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n  \n  // Position\n  vec4 source_commonspace;    \n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(instanceSourcePositions, instanceSourcePositions64Low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(instanceTargetPositions, instanceTargetPositions64Low, vec3(0.), target_commonspace);\n\n  // linear interpolation of source & target to pick right coord\n  float sourceOrTarget = positions.x;\n  geometry.position = mix(source_commonspace, target_commonspace, sourceOrTarget);\n  uv = positions.xy;\n  geometry.uv = uv;\n  if (instancePickable > 0.5) {\n    geometry.pickingColor = instancePickingColors;\n  }\n  \n  // set the clamp limits in pixel size \n  float lengthCommon = length(target_commonspace - source_commonspace);    \n  vec2 offsetDistances = project_pixel_size(positions.yz) * thicknessUnit;\n  \n  vec2 limitedOffsetDistances = clamp(   \n    project_pixel_size(positions.yz) * thicknessUnit,\n    -lengthCommon*.8, lengthCommon*.8\n  );\n  float startOffsetCommon = project_pixel_size(instanceEndpointOffsets[0]);\n  float endOffsetCommon = project_pixel_size(instanceEndpointOffsets[1]);\n  float endpointOffset = mix(\n    clamp(startOffsetCommon, 0.0, lengthCommon*.2),\n    -clamp(endOffsetCommon, 0.0, lengthCommon*.2),\n    positions.x\n  );\n\n  vec2 flowlineDir = normalize(target_commonspace.xy - source_commonspace.xy);\n  vec2 perpendicularDir = vec2(-flowlineDir.y, flowlineDir.x);\n  vec2 normalsCommon = project_pixel_size(normals.xy);\n  float gapCommon = project_pixel_size(gap);\n  vec3 offsetCommon = vec3(\n    flowlineDir * (instanceThickness * limitedOffsetDistances[1] + normalsCommon.y + endpointOffset * 1.05) -\n    perpendicularDir * (instanceThickness * limitedOffsetDistances[0] + gapCommon + normalsCommon.x),\n    0.0\n  );\n  \n  DECKGL_FILTER_SIZE(offsetCommon, geometry);\n  vec4 position_commonspace = mix(source_commonspace, target_commonspace, sourceOrTarget);\n  vec4 offset_commonspace = vec4(offsetCommon, 0.0);\n  gl_Position = project_common_position_to_clipspace(position_commonspace + offset_commonspace);\n      \n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  \n  vec4 fillColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  vColor = mix(fillColor, vec4(outlineColor.xyz, outlineColor.w * fillColor.w), normals.z);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvd0xpbmVzTGF5ZXJWZXJ0ZXguZ2xzbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9GbG93TGluZXNMYXllci9GbG93TGluZXNMYXllclZlcnRleC5nbHNsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0gsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQStFZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIyIEZsb3dtYXBCbHVlXG4gKiBDb3B5cmlnaHQgMjAxOC0yMDIwIFRlcmFseXRpY3MsIG1vZGlmaWVkIGJ5IEZsb3dtYXBCbHVlXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5leHBvcnQgZGVmYXVsdCBgXFxcbiNkZWZpbmUgU0hBREVSX05BTUUgZmxvdy1saW5lLWxheWVyLXZlcnRleC1zaGFkZXJcblxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb25zO1xuYXR0cmlidXRlIHZlYzMgbm9ybWFscztcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlQ29sb3JzO1xuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlVGhpY2tuZXNzOyAgICAvLyAwLi4wLjVcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlU291cmNlUG9zaXRpb25zO1xuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VUYXJnZXRQb3NpdGlvbnM7XG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVNvdXJjZVBvc2l0aW9uczY0TG93O1xuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VUYXJnZXRQb3NpdGlvbnM2NExvdztcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUGlja2luZ0NvbG9ycztcbmF0dHJpYnV0ZSB2ZWMyIGluc3RhbmNlRW5kcG9pbnRPZmZzZXRzO1xuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlUGlja2FibGU7XG5cbnVuaWZvcm0gdmVjNCBvdXRsaW5lQ29sb3I7XG51bmlmb3JtIGZsb2F0IHRoaWNrbmVzc1VuaXQ7XG51bmlmb3JtIGZsb2F0IGdhcDtcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcblxudmFyeWluZyB2ZWM0IHZDb2xvcjtcbnZhcnlpbmcgdmVjMiB1djtcblxudm9pZCBtYWluKHZvaWQpIHtcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IGluc3RhbmNlU291cmNlUG9zaXRpb25zO1xuICBnZW9tZXRyeS53b3JsZFBvc2l0aW9uQWx0ID0gaW5zdGFuY2VUYXJnZXRQb3NpdGlvbnM7XG4gIFxuICAvLyBQb3NpdGlvblxuICB2ZWM0IHNvdXJjZV9jb21tb25zcGFjZTsgICAgXG4gIHZlYzQgdGFyZ2V0X2NvbW1vbnNwYWNlO1xuICB2ZWM0IHNvdXJjZSA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlU291cmNlUG9zaXRpb25zLCBpbnN0YW5jZVNvdXJjZVBvc2l0aW9uczY0TG93LCB2ZWMzKDAuKSwgc291cmNlX2NvbW1vbnNwYWNlKTtcbiAgdmVjNCB0YXJnZXQgPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVRhcmdldFBvc2l0aW9ucywgaW5zdGFuY2VUYXJnZXRQb3NpdGlvbnM2NExvdywgdmVjMygwLiksIHRhcmdldF9jb21tb25zcGFjZSk7XG5cbiAgLy8gbGluZWFyIGludGVycG9sYXRpb24gb2Ygc291cmNlICYgdGFyZ2V0IHRvIHBpY2sgcmlnaHQgY29vcmRcbiAgZmxvYXQgc291cmNlT3JUYXJnZXQgPSBwb3NpdGlvbnMueDtcbiAgZ2VvbWV0cnkucG9zaXRpb24gPSBtaXgoc291cmNlX2NvbW1vbnNwYWNlLCB0YXJnZXRfY29tbW9uc3BhY2UsIHNvdXJjZU9yVGFyZ2V0KTtcbiAgdXYgPSBwb3NpdGlvbnMueHk7XG4gIGdlb21ldHJ5LnV2ID0gdXY7XG4gIGlmIChpbnN0YW5jZVBpY2thYmxlID4gMC41KSB7XG4gICAgZ2VvbWV0cnkucGlja2luZ0NvbG9yID0gaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xuICB9XG4gIFxuICAvLyBzZXQgdGhlIGNsYW1wIGxpbWl0cyBpbiBwaXhlbCBzaXplIFxuICBmbG9hdCBsZW5ndGhDb21tb24gPSBsZW5ndGgodGFyZ2V0X2NvbW1vbnNwYWNlIC0gc291cmNlX2NvbW1vbnNwYWNlKTsgICAgXG4gIHZlYzIgb2Zmc2V0RGlzdGFuY2VzID0gcHJvamVjdF9waXhlbF9zaXplKHBvc2l0aW9ucy55eikgKiB0aGlja25lc3NVbml0O1xuICBcbiAgdmVjMiBsaW1pdGVkT2Zmc2V0RGlzdGFuY2VzID0gY2xhbXAoICAgXG4gICAgcHJvamVjdF9waXhlbF9zaXplKHBvc2l0aW9ucy55eikgKiB0aGlja25lc3NVbml0LFxuICAgIC1sZW5ndGhDb21tb24qLjgsIGxlbmd0aENvbW1vbiouOFxuICApO1xuICBmbG9hdCBzdGFydE9mZnNldENvbW1vbiA9IHByb2plY3RfcGl4ZWxfc2l6ZShpbnN0YW5jZUVuZHBvaW50T2Zmc2V0c1swXSk7XG4gIGZsb2F0IGVuZE9mZnNldENvbW1vbiA9IHByb2plY3RfcGl4ZWxfc2l6ZShpbnN0YW5jZUVuZHBvaW50T2Zmc2V0c1sxXSk7XG4gIGZsb2F0IGVuZHBvaW50T2Zmc2V0ID0gbWl4KFxuICAgIGNsYW1wKHN0YXJ0T2Zmc2V0Q29tbW9uLCAwLjAsIGxlbmd0aENvbW1vbiouMiksXG4gICAgLWNsYW1wKGVuZE9mZnNldENvbW1vbiwgMC4wLCBsZW5ndGhDb21tb24qLjIpLFxuICAgIHBvc2l0aW9ucy54XG4gICk7XG5cbiAgdmVjMiBmbG93bGluZURpciA9IG5vcm1hbGl6ZSh0YXJnZXRfY29tbW9uc3BhY2UueHkgLSBzb3VyY2VfY29tbW9uc3BhY2UueHkpO1xuICB2ZWMyIHBlcnBlbmRpY3VsYXJEaXIgPSB2ZWMyKC1mbG93bGluZURpci55LCBmbG93bGluZURpci54KTtcbiAgdmVjMiBub3JtYWxzQ29tbW9uID0gcHJvamVjdF9waXhlbF9zaXplKG5vcm1hbHMueHkpO1xuICBmbG9hdCBnYXBDb21tb24gPSBwcm9qZWN0X3BpeGVsX3NpemUoZ2FwKTtcbiAgdmVjMyBvZmZzZXRDb21tb24gPSB2ZWMzKFxuICAgIGZsb3dsaW5lRGlyICogKGluc3RhbmNlVGhpY2tuZXNzICogbGltaXRlZE9mZnNldERpc3RhbmNlc1sxXSArIG5vcm1hbHNDb21tb24ueSArIGVuZHBvaW50T2Zmc2V0ICogMS4wNSkgLVxuICAgIHBlcnBlbmRpY3VsYXJEaXIgKiAoaW5zdGFuY2VUaGlja25lc3MgKiBsaW1pdGVkT2Zmc2V0RGlzdGFuY2VzWzBdICsgZ2FwQ29tbW9uICsgbm9ybWFsc0NvbW1vbi54KSxcbiAgICAwLjBcbiAgKTtcbiAgXG4gIERFQ0tHTF9GSUxURVJfU0laRShvZmZzZXRDb21tb24sIGdlb21ldHJ5KTtcbiAgdmVjNCBwb3NpdGlvbl9jb21tb25zcGFjZSA9IG1peChzb3VyY2VfY29tbW9uc3BhY2UsIHRhcmdldF9jb21tb25zcGFjZSwgc291cmNlT3JUYXJnZXQpO1xuICB2ZWM0IG9mZnNldF9jb21tb25zcGFjZSA9IHZlYzQob2Zmc2V0Q29tbW9uLCAwLjApO1xuICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfY29tbW9uX3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShwb3NpdGlvbl9jb21tb25zcGFjZSArIG9mZnNldF9jb21tb25zcGFjZSk7XG4gICAgICBcbiAgREVDS0dMX0ZJTFRFUl9HTF9QT1NJVElPTihnbF9Qb3NpdGlvbiwgZ2VvbWV0cnkpO1xuICBcbiAgdmVjNCBmaWxsQ29sb3IgPSB2ZWM0KGluc3RhbmNlQ29sb3JzLnJnYiwgaW5zdGFuY2VDb2xvcnMuYSAqIG9wYWNpdHkpIC8gMjU1LjtcbiAgdkNvbG9yID0gbWl4KGZpbGxDb2xvciwgdmVjNChvdXRsaW5lQ29sb3IueHl6LCBvdXRsaW5lQ29sb3IudyAqIGZpbGxDb2xvci53KSwgbm9ybWFscy56KTtcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2Q29sb3IsIGdlb21ldHJ5KTtcbn1cbmA7XG4iXX0=","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Layer, picking, project32 } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport { Geometry, Model } from '@luma.gl/core';\nimport FragmentShader from './FlowLinesLayerFragment.glsl';\nimport VertexShader from './FlowLinesLayerVertex.glsl';\nconst DEFAULT_COLOR = [0, 132, 193, 255];\nconst INNER_SIDE_OUTLINE_THICKNESS = 1;\n// source_target_mix, perpendicular_offset_in_thickness_units, direction_of_travel_offset_in_thickness_units\n// prettier-ignore\nconst POSITIONS = [\n    1, 0, 0,\n    1, 2, -3,\n    1, 1, -3,\n    1, 0, 0,\n    1, 1, -3,\n    0, 1, 0,\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 0, // 4\n];\n/**\n                                    1\n                                    ··\n                                    · ··\n                                    ·    ··\n     3                            2 ·      ··\n      ·······························        ··\n      · ·······                       ····      ··\n      ·       ········                   ·····     ··\n      ·               ···············        ·····   ··\n      ·                             ········      ········\n      ·                                     ················\n    4 ························································  0\n\n */\nfunction getOutlinePixelOffsets(tout, tin) {\n    // perpendicular_offset_in_pixels, direction_of_travel_offset_in_pixels, fill_outline_color_mix\n    // prettier-ignore\n    return ([\n        -tin, 2 * tout, 1,\n        2 * tout, -tout, 1,\n        tout, -tout, 1,\n        -tin, 2 * tout, 1,\n        tout, -tout, 1,\n        tout, -tout, 1,\n        -tin, 2 * tout, 1,\n        tout, -tout, 1,\n        -tin, -tout, 1, // 4\n    ]);\n}\n// prettier-ignore\nconst ZEROES = [\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n    0, 0, 0,\n];\nclass FlowLinesLayer extends Layer {\n    // props!: Props;\n    constructor(props) {\n        super(props);\n    }\n    getShaders() {\n        return super.getShaders({\n            vs: VertexShader,\n            fs: FragmentShader,\n            modules: [project32, picking],\n            shaderCache: this.context.shaderCache,\n        });\n    }\n    initializeState() {\n        const { attributeManager } = this.state;\n        attributeManager.addInstanced({\n            instanceSourcePositions: {\n                accessor: 'getSourcePosition',\n                size: 3,\n                transition: false,\n                type: GL.DOUBLE,\n            },\n            instanceTargetPositions: {\n                accessor: 'getTargetPosition',\n                size: 3,\n                transition: false,\n                type: GL.DOUBLE,\n            },\n            instanceThickness: {\n                accessor: 'getThickness',\n                size: 1,\n                transition: false,\n            },\n            instanceEndpointOffsets: {\n                accessor: 'getEndpointOffsets',\n                size: 2,\n                transition: false,\n            },\n            instanceColors: {\n                accessor: 'getColor',\n                size: 4,\n                type: GL.UNSIGNED_BYTE,\n                transition: false,\n            },\n            instancePickable: {\n                accessor: 'getPickable',\n                size: 1,\n                transition: false,\n            },\n        });\n    }\n    updateState({ props, oldProps, changeFlags }) {\n        super.updateState({ props, oldProps, changeFlags });\n        if (changeFlags.extensionsChanged) {\n            const { gl } = this.context;\n            if (this.state.model) {\n                this.state.model.delete();\n            }\n            this.setState({ model: this._getModel(gl) });\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { gl } = this.context;\n        const { outlineColor, thicknessUnit } = this.props;\n        gl.lineWidth(1);\n        this.state.model\n            .setUniforms(Object.assign(Object.assign({}, uniforms), { outlineColor: outlineColor.map((x) => x / 255), \n            // outlineColor: [1, 0, 0, 1],\n            thicknessUnit: thicknessUnit * 2.0, gap: 0.5 }))\n            .draw();\n    }\n    _getModel(gl) {\n        let positions = [];\n        let pixelOffsets = [];\n        const { drawOutline, outlineThickness } = this.props;\n        if (drawOutline) {\n            // source_target_mix, perpendicular_offset_in_thickness_units, direction_of_travel_offset_in_thickness_units\n            positions = positions.concat(POSITIONS);\n            const tout = outlineThickness;\n            const tin = INNER_SIDE_OUTLINE_THICKNESS; // the outline shouldn't cover the opposite arrow\n            pixelOffsets = pixelOffsets.concat(getOutlinePixelOffsets(tout, tin));\n        }\n        positions = positions.concat(POSITIONS);\n        pixelOffsets = pixelOffsets.concat(ZEROES);\n        return new Model(gl, Object.assign(Object.assign({ id: this.props.id }, this.getShaders()), { geometry: new Geometry({\n                drawMode: GL.TRIANGLES,\n                attributes: {\n                    positions: new Float32Array(positions),\n                    normals: new Float32Array(pixelOffsets),\n                },\n            }), isInstanced: true, shaderCache: this.context.shaderCache }));\n    }\n}\nFlowLinesLayer.layerName = 'FlowLinesLayer';\nFlowLinesLayer.defaultProps = {\n    getSourcePosition: { type: 'accessor', value: (d) => [0, 0] },\n    getTargetPosition: { type: 'accessor', value: (d) => [0, 0] },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getThickness: { type: 'accessor', value: (d) => d.count },\n    getPickable: { type: 'accessor', value: (d) => 1.0 },\n    drawOutline: true,\n    thicknessUnit: 12,\n    outlineThickness: 1,\n    outlineColor: [255, 255, 255, 255],\n    parameters: {\n        depthTest: false,\n    },\n};\nexport default FlowLinesLayer;\n//# sourceMappingURL=data:application/json;base64,","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default `\\\n#define SHADER_NAME flow-circles-layer-fragment-shader\n#define SOFT_OUTLINE 0.05\n#define EPS 0.05\nprecision highp float;\n\nuniform vec4 emptyColor;\nuniform float outlineEmptyMix;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\nvarying float unitInRadius;\nvarying float unitOutRadius;\n\nfloat when_gt(float x, float y) {\n  return max(sign(x - y), 0.0);\n}\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n  float distToCenter = length(unitPosition);\n  if (distToCenter > 1.0) {\n    discard;\n  }\n\n  // See https://stackoverflow.com/questions/47285778\n  vec4 ringColor = mix(\n    emptyColor / 255., vColor,\n    when_gt(unitInRadius, unitOutRadius)\n  );\n  vec4 outlineColor = mix(\n    mix(vColor, emptyColor / 255., outlineEmptyMix),\n    vColor,\n    when_gt(unitInRadius, unitOutRadius)\n  );\n  \n  float innerR = min(unitInRadius, unitOutRadius) * (1.0 - SOFT_OUTLINE);\n  \n  // Inner circle\n  float step2 = innerR - 2.0 * EPS; \n  float step3 = innerR - EPS;\n  \n  // Ring\n  float step4 = innerR;\n  // float step5 = 1.0 - SOFT_OUTLINE - EPS;\n  // float step6 = 1.0 - SOFT_OUTLINE;\n  float step5 = 1.0 - 5.0 * EPS;\n  float step6 = 1.0;\n  \n  gl_FragColor = vColor;\n  gl_FragColor = mix(gl_FragColor, emptyColor / 255., smoothstep(step2, step3, distToCenter));\n  gl_FragColor = mix(gl_FragColor, ringColor, smoothstep(step3, step4, distToCenter));\n  gl_FragColor = mix(gl_FragColor, outlineColor, smoothstep(step5, step6, distToCenter));\n  // gl_FragColor = mix(gl_FragColor, emptyColor / 255., smoothstep(step6, 1.0, distToCenter));\n  gl_FragColor.a = vColor.a;\n  gl_FragColor.a *= smoothstep(0.0, SOFT_OUTLINE, 1.0 - distToCenter);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvd0NpcmNsZXNMYXllckZyYWdtZW50Lmdsc2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvRmxvd0NpcmNsZXNMYXllci9GbG93Q2lyY2xlc0xheWVyRnJhZ21lbnQuZ2xzbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUNILGVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0EwRGQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMiBGbG93bWFwQmx1ZVxuICogQ29weXJpZ2h0IDIwMTgtMjAyMCBUZXJhbHl0aWNzLCBtb2RpZmllZCBieSBGbG93bWFwQmx1ZVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgYFxcXG4jZGVmaW5lIFNIQURFUl9OQU1FIGZsb3ctY2lyY2xlcy1sYXllci1mcmFnbWVudC1zaGFkZXJcbiNkZWZpbmUgU09GVF9PVVRMSU5FIDAuMDVcbiNkZWZpbmUgRVBTIDAuMDVcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcblxudW5pZm9ybSB2ZWM0IGVtcHR5Q29sb3I7XG51bmlmb3JtIGZsb2F0IG91dGxpbmVFbXB0eU1peDtcblxudmFyeWluZyB2ZWM0IHZDb2xvcjtcbnZhcnlpbmcgdmVjMiB1bml0UG9zaXRpb247XG52YXJ5aW5nIGZsb2F0IHVuaXRJblJhZGl1cztcbnZhcnlpbmcgZmxvYXQgdW5pdE91dFJhZGl1cztcblxuZmxvYXQgd2hlbl9ndChmbG9hdCB4LCBmbG9hdCB5KSB7XG4gIHJldHVybiBtYXgoc2lnbih4IC0geSksIDAuMCk7XG59XG5cbnZvaWQgbWFpbih2b2lkKSB7XG4gIGdlb21ldHJ5LnV2ID0gdW5pdFBvc2l0aW9uO1xuICBmbG9hdCBkaXN0VG9DZW50ZXIgPSBsZW5ndGgodW5pdFBvc2l0aW9uKTtcbiAgaWYgKGRpc3RUb0NlbnRlciA+IDEuMCkge1xuICAgIGRpc2NhcmQ7XG4gIH1cblxuICAvLyBTZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDcyODU3NzhcbiAgdmVjNCByaW5nQ29sb3IgPSBtaXgoXG4gICAgZW1wdHlDb2xvciAvIDI1NS4sIHZDb2xvcixcbiAgICB3aGVuX2d0KHVuaXRJblJhZGl1cywgdW5pdE91dFJhZGl1cylcbiAgKTtcbiAgdmVjNCBvdXRsaW5lQ29sb3IgPSBtaXgoXG4gICAgbWl4KHZDb2xvciwgZW1wdHlDb2xvciAvIDI1NS4sIG91dGxpbmVFbXB0eU1peCksXG4gICAgdkNvbG9yLFxuICAgIHdoZW5fZ3QodW5pdEluUmFkaXVzLCB1bml0T3V0UmFkaXVzKVxuICApO1xuICBcbiAgZmxvYXQgaW5uZXJSID0gbWluKHVuaXRJblJhZGl1cywgdW5pdE91dFJhZGl1cykgKiAoMS4wIC0gU09GVF9PVVRMSU5FKTtcbiAgXG4gIC8vIElubmVyIGNpcmNsZVxuICBmbG9hdCBzdGVwMiA9IGlubmVyUiAtIDIuMCAqIEVQUzsgXG4gIGZsb2F0IHN0ZXAzID0gaW5uZXJSIC0gRVBTO1xuICBcbiAgLy8gUmluZ1xuICBmbG9hdCBzdGVwNCA9IGlubmVyUjtcbiAgLy8gZmxvYXQgc3RlcDUgPSAxLjAgLSBTT0ZUX09VVExJTkUgLSBFUFM7XG4gIC8vIGZsb2F0IHN0ZXA2ID0gMS4wIC0gU09GVF9PVVRMSU5FO1xuICBmbG9hdCBzdGVwNSA9IDEuMCAtIDUuMCAqIEVQUztcbiAgZmxvYXQgc3RlcDYgPSAxLjA7XG4gIFxuICBnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XG4gIGdsX0ZyYWdDb2xvciA9IG1peChnbF9GcmFnQ29sb3IsIGVtcHR5Q29sb3IgLyAyNTUuLCBzbW9vdGhzdGVwKHN0ZXAyLCBzdGVwMywgZGlzdFRvQ2VudGVyKSk7XG4gIGdsX0ZyYWdDb2xvciA9IG1peChnbF9GcmFnQ29sb3IsIHJpbmdDb2xvciwgc21vb3Roc3RlcChzdGVwMywgc3RlcDQsIGRpc3RUb0NlbnRlcikpO1xuICBnbF9GcmFnQ29sb3IgPSBtaXgoZ2xfRnJhZ0NvbG9yLCBvdXRsaW5lQ29sb3IsIHNtb290aHN0ZXAoc3RlcDUsIHN0ZXA2LCBkaXN0VG9DZW50ZXIpKTtcbiAgLy8gZ2xfRnJhZ0NvbG9yID0gbWl4KGdsX0ZyYWdDb2xvciwgZW1wdHlDb2xvciAvIDI1NS4sIHNtb290aHN0ZXAoc3RlcDYsIDEuMCwgZGlzdFRvQ2VudGVyKSk7XG4gIGdsX0ZyYWdDb2xvci5hID0gdkNvbG9yLmE7XG4gIGdsX0ZyYWdDb2xvci5hICo9IHNtb290aHN0ZXAoMC4wLCBTT0ZUX09VVExJTkUsIDEuMCAtIGRpc3RUb0NlbnRlcik7XG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XG59XG5gO1xuIl19","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default `\\\n#define SHADER_NAME flow-circles-layer-vertex-shader\n#define radiusScale 100\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceInRadius;\nattribute float instanceOutRadius;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform vec4 emptyColor;\nuniform float outlineEmptyMix;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\nvarying float unitInRadius;\nvarying float unitOutRadius;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  float outerRadiusPixels = max(instanceInRadius, instanceOutRadius);\n  unitInRadius = instanceInRadius / outerRadiusPixels; \n  unitOutRadius = instanceOutRadius / outerRadiusPixels; \n\n  // position on the containing square in [-1, 1] space\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n                                                                                                    \n  // Find the center of the point and add the current vertex\n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n                            \n  // Apply opacity to instance color, or return instance picking color\n  vColor = vec4(instanceColors.rgb / 255., instanceColors.a / 255. * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvd0NpcmNsZXNMYXllclZlcnRleC5nbHNsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0Zsb3dDaXJjbGVzTGF5ZXIvRmxvd0NpcmNsZXNMYXllclZlcnRleC5nbHNsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0gsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0E0Q2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMiBGbG93bWFwQmx1ZVxuICogQ29weXJpZ2h0IDIwMTgtMjAyMCBUZXJhbHl0aWNzLCBtb2RpZmllZCBieSBGbG93bWFwQmx1ZVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgYFxcXG4jZGVmaW5lIFNIQURFUl9OQU1FIGZsb3ctY2lyY2xlcy1sYXllci12ZXJ0ZXgtc2hhZGVyXG4jZGVmaW5lIHJhZGl1c1NjYWxlIDEwMFxuXG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbnM7XG5cbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zO1xuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQb3NpdGlvbnM2NExvdztcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUluUmFkaXVzO1xuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlT3V0UmFkaXVzO1xuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VDb2xvcnM7XG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XG5cbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcbnVuaWZvcm0gdmVjNCBlbXB0eUNvbG9yO1xudW5pZm9ybSBmbG9hdCBvdXRsaW5lRW1wdHlNaXg7XG5cbnZhcnlpbmcgdmVjNCB2Q29sb3I7XG52YXJ5aW5nIHZlYzIgdW5pdFBvc2l0aW9uO1xudmFyeWluZyBmbG9hdCB1bml0SW5SYWRpdXM7XG52YXJ5aW5nIGZsb2F0IHVuaXRPdXRSYWRpdXM7XG5cbnZvaWQgbWFpbih2b2lkKSB7XG4gIGdlb21ldHJ5LndvcmxkUG9zaXRpb24gPSBpbnN0YW5jZVBvc2l0aW9ucztcblxuICBmbG9hdCBvdXRlclJhZGl1c1BpeGVscyA9IG1heChpbnN0YW5jZUluUmFkaXVzLCBpbnN0YW5jZU91dFJhZGl1cyk7XG4gIHVuaXRJblJhZGl1cyA9IGluc3RhbmNlSW5SYWRpdXMgLyBvdXRlclJhZGl1c1BpeGVsczsgXG4gIHVuaXRPdXRSYWRpdXMgPSBpbnN0YW5jZU91dFJhZGl1cyAvIG91dGVyUmFkaXVzUGl4ZWxzOyBcblxuICAvLyBwb3NpdGlvbiBvbiB0aGUgY29udGFpbmluZyBzcXVhcmUgaW4gWy0xLCAxXSBzcGFjZVxuICB1bml0UG9zaXRpb24gPSBwb3NpdGlvbnMueHk7XG4gIGdlb21ldHJ5LnV2ID0gdW5pdFBvc2l0aW9uO1xuICBnZW9tZXRyeS5waWNraW5nQ29sb3IgPSBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIC8vIEZpbmQgdGhlIGNlbnRlciBvZiB0aGUgcG9pbnQgYW5kIGFkZCB0aGUgY3VycmVudCB2ZXJ0ZXhcbiAgdmVjMyBvZmZzZXQgPSBwb3NpdGlvbnMgKiBwcm9qZWN0X3BpeGVsX3NpemUob3V0ZXJSYWRpdXNQaXhlbHMpO1xuICBERUNLR0xfRklMVEVSX1NJWkUob2Zmc2V0LCBnZW9tZXRyeSk7XG4gIGdsX1Bvc2l0aW9uID0gcHJvamVjdF9wb3NpdGlvbl90b19jbGlwc3BhY2UoaW5zdGFuY2VQb3NpdGlvbnMsIGluc3RhbmNlUG9zaXRpb25zNjRMb3csIG9mZnNldCwgZ2VvbWV0cnkucG9zaXRpb24pO1xuICBERUNLR0xfRklMVEVSX0dMX1BPU0lUSU9OKGdsX1Bvc2l0aW9uLCBnZW9tZXRyeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIC8vIEFwcGx5IG9wYWNpdHkgdG8gaW5zdGFuY2UgY29sb3IsIG9yIHJldHVybiBpbnN0YW5jZSBwaWNraW5nIGNvbG9yXG4gIHZDb2xvciA9IHZlYzQoaW5zdGFuY2VDb2xvcnMucmdiIC8gMjU1LiwgaW5zdGFuY2VDb2xvcnMuYSAvIDI1NS4gKiBvcGFjaXR5KTtcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2Q29sb3IsIGdlb21ldHJ5KTtcbn1cbmA7XG4iXX0=","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Layer, picking, project32 } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport { Geometry, Model } from '@luma.gl/core';\nimport FragmentShader from './FlowCirclesLayerFragment.glsl';\nimport VertexShader from './FlowCirclesLayerVertex.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_EMPTY_COLOR = [255, 255, 255, 255];\nconst DEFAULT_OUTLINE_EMPTY_MIX = 0.4;\nclass FlowCirclesLayer extends Layer {\n    // props!: Props;\n    constructor(props) {\n        super(props);\n    }\n    getShaders() {\n        return super.getShaders({\n            vs: VertexShader,\n            fs: FragmentShader,\n            modules: [project32, picking],\n        });\n    }\n    initializeState() {\n        this.getAttributeManager().addInstanced({\n            instancePositions: {\n                size: 3,\n                type: GL.DOUBLE,\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getPosition',\n            },\n            instanceInRadius: {\n                size: 1,\n                transition: true,\n                accessor: 'getInRadius',\n                defaultValue: 1,\n            },\n            instanceOutRadius: {\n                size: 1,\n                transition: true,\n                accessor: 'getOutRadius',\n                defaultValue: 1,\n            },\n            instanceColors: {\n                size: 4,\n                transition: true,\n                type: GL.UNSIGNED_BYTE,\n                accessor: 'getColor',\n                defaultValue: DEFAULT_COLOR,\n            },\n        });\n    }\n    updateState({ props, oldProps, changeFlags }) {\n        super.updateState({ props, oldProps, changeFlags });\n        if (changeFlags.extensionsChanged) {\n            const { gl } = this.context;\n            if (this.state.model) {\n                this.state.model.delete();\n            }\n            this.setState({ model: this._getModel(gl) });\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { emptyColor, outlineEmptyMix } = this.props;\n        this.state.model\n            .setUniforms(Object.assign(Object.assign({}, uniforms), { emptyColor,\n            outlineEmptyMix }))\n            .draw();\n    }\n    _getModel(gl) {\n        // a square that minimally cover the unit circle\n        const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n        return new Model(gl, Object.assign(this.getShaders(), {\n            id: this.props.id,\n            geometry: new Geometry({\n                drawMode: GL.TRIANGLE_FAN,\n                vertexCount: 4,\n                attributes: {\n                    positions: { size: 3, value: new Float32Array(positions) },\n                },\n            }),\n            isInstanced: true,\n        }));\n    }\n}\nFlowCirclesLayer.layerName = 'FlowCirclesLayer';\nFlowCirclesLayer.defaultProps = {\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    emptyColor: { type: 'accessor', value: DEFAULT_EMPTY_COLOR },\n    outlineEmptyMix: { type: 'accessor', value: DEFAULT_OUTLINE_EMPTY_MIX },\n    getPosition: { type: 'accessor', value: (d) => d.position },\n    getInRadius: { type: 'accessor', value: 1 },\n    getOutRadius: { type: 'accessor', value: 1 },\n    parameters: {\n        depthTest: false,\n    },\n};\nexport default FlowCirclesLayer;\n//# sourceMappingURL=data:application/json;base64,","export function isCluster(c) {\n    const { children } = c;\n    return children && children.length > 0;\n}\nexport function isLocationClusterNode(l) {\n    const { zoom } = l;\n    return zoom !== undefined;\n}\nexport function isAggregateFlow(flow) {\n    return (flow &&\n        // flow.origin !== undefined &&\n        // flow.dest !== undefined &&\n        // flow.count !== undefined &&\n        (flow.aggregate ? true : false));\n}\nexport var LocationFilterMode;\n(function (LocationFilterMode) {\n    LocationFilterMode[\"ALL\"] = \"ALL\";\n    LocationFilterMode[\"INCOMING\"] = \"INCOMING\";\n    LocationFilterMode[\"OUTGOING\"] = \"OUTGOING\";\n    LocationFilterMode[\"BETWEEN\"] = \"BETWEEN\";\n})(LocationFilterMode || (LocationFilterMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0dBLE1BQU0sVUFBVSxTQUFTLENBQUMsQ0FBYztJQUN0QyxNQUFNLEVBQUMsUUFBUSxFQUFDLEdBQUcsQ0FBWSxDQUFDO0lBQ2hDLE9BQU8sUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFFRCxNQUFNLFVBQVUscUJBQXFCLENBQUksQ0FBa0I7SUFDekQsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLENBQWdCLENBQUM7SUFDaEMsT0FBTyxJQUFJLEtBQUssU0FBUyxDQUFDO0FBQzVCLENBQUM7QUFTRCxNQUFNLFVBQVUsZUFBZSxDQUM3QixJQUF5QjtJQUV6QixPQUFPLENBQ0wsSUFBSTtRQUNKLCtCQUErQjtRQUMvQiw2QkFBNkI7UUFDN0IsOEJBQThCO1FBQzlCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FDaEMsQ0FBQztBQUNKLENBQUM7QUFPRCxNQUFNLENBQU4sSUFBWSxrQkFLWDtBQUxELFdBQVksa0JBQWtCO0lBQzVCLGlDQUFXLENBQUE7SUFDWCwyQ0FBcUIsQ0FBQTtJQUNyQiwyQ0FBcUIsQ0FBQTtJQUNyQix5Q0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBTFcsa0JBQWtCLEtBQWxCLGtCQUFrQixRQUs3QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIEZsb3dtYXBEYXRhPEwsIEY+ID0ge1xuICBsb2NhdGlvbnM6IEl0ZXJhYmxlPEw+IHwgdW5kZWZpbmVkO1xuICBmbG93czogSXRlcmFibGU8Rj4gfCB1bmRlZmluZWQ7XG4gIGNsdXN0ZXJMZXZlbHM/OiBDbHVzdGVyTGV2ZWxzO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBWaWV3U3RhdGUge1xuICBsYXRpdHVkZTogbnVtYmVyO1xuICBsb25naXR1ZGU6IG51bWJlcjtcbiAgem9vbTogbnVtYmVyO1xuICBiZWFyaW5nPzogbnVtYmVyO1xuICBwaXRjaD86IG51bWJlcjtcbiAgYWx0aXR1ZGU/OiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIEZsb3dBY2Nlc3NvcjxGLCBUPiA9IChmbG93OiBGKSA9PiBUOyAvLyBvYmplY3RJbmZvPzogQWNjZXNzb3JPYmplY3RJbmZvLFxuZXhwb3J0IHR5cGUgTG9jYXRpb25BY2Nlc3NvcjxMLCBUPiA9IChsb2NhdGlvbjogTCkgPT4gVDtcblxuZXhwb3J0IGludGVyZmFjZSBGbG93QWNjZXNzb3JzPEY+IHtcbiAgZ2V0Rmxvd09yaWdpbklkOiBGbG93QWNjZXNzb3I8Riwgc3RyaW5nIHwgbnVtYmVyPjtcbiAgZ2V0Rmxvd0Rlc3RJZDogRmxvd0FjY2Vzc29yPEYsIHN0cmluZyB8IG51bWJlcj47XG4gIGdldEZsb3dNYWduaXR1ZGU6IEZsb3dBY2Nlc3NvcjxGLCBudW1iZXI+O1xuICBnZXRGbG93VGltZT86IEZsb3dBY2Nlc3NvcjxGLCBEYXRlPjsgLy8gVE9ETzogdXNlIG51bWJlciBpbnN0ZWFkIG9mIERhdGVcbiAgLy8gZ2V0Rmxvd0NvbG9yPzogRmxvd0FjY2Vzc29yPHN0cmluZyB8IHVuZGVmaW5lZD47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9jYXRpb25BY2Nlc3NvcnM8TD4ge1xuICBnZXRMb2NhdGlvbklkOiBMb2NhdGlvbkFjY2Vzc29yPEwsIHN0cmluZyB8IG51bWJlcj47XG4gIGdldExvY2F0aW9uTmFtZT86IExvY2F0aW9uQWNjZXNzb3I8TCwgc3RyaW5nPjtcbiAgZ2V0TG9jYXRpb25MYXQ6IExvY2F0aW9uQWNjZXNzb3I8TCwgbnVtYmVyPjtcbiAgZ2V0TG9jYXRpb25Mb246IExvY2F0aW9uQWNjZXNzb3I8TCwgbnVtYmVyPjtcbiAgZ2V0TG9jYXRpb25DbHVzdGVyTmFtZT86IChsb2NhdGlvbklkczogKHN0cmluZyB8IG51bWJlcilbXSkgPT4gc3RyaW5nO1xuICAvLyBnZXRMb2NhdGlvblRvdGFsSW4/OiBMb2NhdGlvbkFjY2Vzc29yPG51bWJlcj47XG4gIC8vIGdldExvY2F0aW9uVG90YWxPdXQ/OiBMb2NhdGlvbkFjY2Vzc29yPG51bWJlcj47XG4gIC8vIGdldExvY2F0aW9uVG90YWxJbnRlcm5hbD86IExvY2F0aW9uQWNjZXNzb3I8bnVtYmVyPjtcbn1cblxuZXhwb3J0IHR5cGUgRmxvd21hcERhdGFBY2Nlc3NvcnM8TCwgRj4gPSBMb2NhdGlvbkFjY2Vzc29yczxMPiAmXG4gIEZsb3dBY2Nlc3NvcnM8Rj47XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9jYXRpb25Ub3RhbHMge1xuICBpbmNvbWluZ0NvdW50OiBudW1iZXI7XG4gIG91dGdvaW5nQ291bnQ6IG51bWJlcjtcbiAgaW50ZXJuYWxDb3VudDogbnVtYmVyO1xufVxuXG4vLyBleHBvcnQgaW50ZXJmYWNlIExvY2F0aW9uc1RvdGFscyB7XG4vLyAgIGluY29taW5nOiB7W2lkOiBzdHJpbmddOiBudW1iZXJ9O1xuLy8gICBvdXRnb2luZzoge1tpZDogc3RyaW5nXTogbnVtYmVyfTtcbi8vICAgaW50ZXJuYWw6IHtbaWQ6IHN0cmluZ106IG51bWJlcn07XG4vLyB9XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ291bnRCeVRpbWUge1xuICB0aW1lOiBEYXRlO1xuICBjb3VudDogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFZpZXdwb3J0UHJvcHMge1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgbGF0aXR1ZGU6IG51bWJlcjtcbiAgbG9uZ2l0dWRlOiBudW1iZXI7XG4gIHpvb20/OiBudW1iZXI7XG4gIGJlYXJpbmc/OiBudW1iZXI7XG4gIHBpdGNoPzogbnVtYmVyO1xuICBhbHRpdHVkZT86IG51bWJlcjtcbiAgbWF4Wm9vbT86IG51bWJlcjtcbiAgbWluWm9vbT86IG51bWJlcjtcbiAgbWF4UGl0Y2g/OiBudW1iZXI7XG4gIG1pblBpdGNoPzogbnVtYmVyO1xuICB0cmFuc2l0aW9uRHVyYXRpb24/OiBudW1iZXIgfCAnYXV0byc7XG4gIHRyYW5zaXRpb25JbnRlcnBvbGF0b3I/OiBhbnk7XG4gIHRyYW5zaXRpb25JbnRlcnJ1cHRpb24/OiBhbnk7XG4gIHRyYW5zaXRpb25FYXNpbmc/OiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2x1c3Rlck5vZGUge1xuICBpZDogc3RyaW5nIHwgbnVtYmVyO1xuICB6b29tOiBudW1iZXI7XG4gIGxhdDogbnVtYmVyO1xuICBsb246IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDbHVzdGVyTGV2ZWwge1xuICB6b29tOiBudW1iZXI7XG4gIG5vZGVzOiBDbHVzdGVyTm9kZVtdO1xufVxuXG5leHBvcnQgdHlwZSBDbHVzdGVyTGV2ZWxzID0gQ2x1c3RlckxldmVsW107XG5cbi8vIG5vbi1sZWFmIGNsdXN0ZXIgbm9kZVxuZXhwb3J0IGludGVyZmFjZSBDbHVzdGVyIGV4dGVuZHMgQ2x1c3Rlck5vZGUge1xuICBuYW1lPzogc3RyaW5nO1xuICBjaGlsZHJlbjogc3RyaW5nW107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NsdXN0ZXIoYzogQ2x1c3Rlck5vZGUpOiBjIGlzIENsdXN0ZXIge1xuICBjb25zdCB7Y2hpbGRyZW59ID0gYyBhcyBDbHVzdGVyO1xuICByZXR1cm4gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9jYXRpb25DbHVzdGVyTm9kZTxMPihsOiBMIHwgQ2x1c3Rlck5vZGUpOiBsIGlzIENsdXN0ZXJOb2RlIHtcbiAgY29uc3Qge3pvb219ID0gbCBhcyBDbHVzdGVyTm9kZTtcbiAgcmV0dXJuIHpvb20gIT09IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBZ2dyZWdhdGVGbG93IHtcbiAgb3JpZ2luOiBzdHJpbmcgfCBudW1iZXI7XG4gIGRlc3Q6IHN0cmluZyB8IG51bWJlcjtcbiAgY291bnQ6IG51bWJlcjtcbiAgYWdncmVnYXRlOiB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNBZ2dyZWdhdGVGbG93KFxuICBmbG93OiBSZWNvcmQ8c3RyaW5nLCBhbnk+LFxuKTogZmxvdyBpcyBBZ2dyZWdhdGVGbG93IHtcbiAgcmV0dXJuIChcbiAgICBmbG93ICYmXG4gICAgLy8gZmxvdy5vcmlnaW4gIT09IHVuZGVmaW5lZCAmJlxuICAgIC8vIGZsb3cuZGVzdCAhPT0gdW5kZWZpbmVkICYmXG4gICAgLy8gZmxvdy5jb3VudCAhPT0gdW5kZWZpbmVkICYmXG4gICAgKGZsb3cuYWdncmVnYXRlID8gdHJ1ZSA6IGZhbHNlKVxuICApO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZsb3dDb3VudHNNYXBSZWR1Y2U8RiwgVCA9IGFueT4ge1xuICBtYXA6IChmbG93OiBGKSA9PiBUO1xuICByZWR1Y2U6IChhY2N1bXVsYXRlZDogVCwgdmFsOiBUKSA9PiBUO1xufVxuXG5leHBvcnQgZW51bSBMb2NhdGlvbkZpbHRlck1vZGUge1xuICBBTEwgPSAnQUxMJyxcbiAgSU5DT01JTkcgPSAnSU5DT01JTkcnLFxuICBPVVRHT0lORyA9ICdPVVRHT0lORycsXG4gIEJFVFdFRU4gPSAnQkVUV0VFTicsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmxvd0NpcmNsZXNMYXllckF0dHJpYnV0ZXMge1xuICBsZW5ndGg6IG51bWJlcjtcbiAgYXR0cmlidXRlczoge1xuICAgIGdldFBvc2l0aW9uOiBMYXllcnNEYXRhQXR0clZhbHVlczxGbG9hdDMyQXJyYXk+O1xuICAgIGdldENvbG9yOiBMYXllcnNEYXRhQXR0clZhbHVlczxVaW50OEFycmF5PjtcbiAgICBnZXRJblJhZGl1czogTGF5ZXJzRGF0YUF0dHJWYWx1ZXM8RmxvYXQzMkFycmF5PjtcbiAgICBnZXRPdXRSYWRpdXM6IExheWVyc0RhdGFBdHRyVmFsdWVzPEZsb2F0MzJBcnJheT47XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmxvd0xpbmVzTGF5ZXJBdHRyaWJ1dGVzIHtcbiAgbGVuZ3RoOiBudW1iZXI7XG4gIGF0dHJpYnV0ZXM6IHtcbiAgICBnZXRTb3VyY2VQb3NpdGlvbjogTGF5ZXJzRGF0YUF0dHJWYWx1ZXM8RmxvYXQzMkFycmF5PjtcbiAgICBnZXRUYXJnZXRQb3NpdGlvbjogTGF5ZXJzRGF0YUF0dHJWYWx1ZXM8RmxvYXQzMkFycmF5PjtcbiAgICBnZXRUaGlja25lc3M6IExheWVyc0RhdGFBdHRyVmFsdWVzPEZsb2F0MzJBcnJheT47XG4gICAgZ2V0Q29sb3I6IExheWVyc0RhdGFBdHRyVmFsdWVzPFVpbnQ4QXJyYXk+O1xuICAgIGdldEVuZHBvaW50T2Zmc2V0czogTGF5ZXJzRGF0YUF0dHJWYWx1ZXM8RmxvYXQzMkFycmF5PjtcbiAgICBnZXRTdGFnZ2VyaW5nPzogTGF5ZXJzRGF0YUF0dHJWYWx1ZXM8RmxvYXQzMkFycmF5PjtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMYXllcnNEYXRhIHtcbiAgY2lyY2xlQXR0cmlidXRlczogRmxvd0NpcmNsZXNMYXllckF0dHJpYnV0ZXM7XG4gIGxpbmVBdHRyaWJ1dGVzOiBGbG93TGluZXNMYXllckF0dHJpYnV0ZXM7XG4gIGxvY2F0aW9uTGFiZWxzPzogc3RyaW5nW107XG59XG5cbmV4cG9ydCB0eXBlIExheWVyc0RhdGFBdHRyVmFsdWVzPFQ+ID0ge3ZhbHVlOiBUOyBzaXplOiBudW1iZXJ9O1xuIl19","import { interpolateCool, interpolateInferno, interpolateMagma, interpolatePlasma, interpolateViridis, interpolateWarm, schemeBlues, schemeBuGn, schemeBuPu, schemeGnBu, schemeGreens, schemeGreys, schemeOranges, schemeOrRd, schemePuBu, schemePuBuGn, schemePuRd, schemePurples, schemeRdPu, schemeReds, schemeYlGn, schemeYlGnBu, schemeYlOrBr, schemeYlOrRd, } from 'd3-scale-chromatic';\nimport { range } from 'd3-array';\nimport { scalePow, scaleSequential, scaleSequentialPow } from 'd3-scale';\nimport { interpolateBasis, interpolateRgbBasis } from 'd3-interpolate';\nimport { color as d3color, hcl, rgb as colorRgb } from 'd3-color';\nconst DEFAULT_OUTLINE_COLOR = '#fff';\nconst DEFAULT_DIMMED_OPACITY = 0.4;\nconst DEFAULT_FLOW_MIN_COLOR = 'rgba(240,240,240,0.5)';\nconst DEFAULT_FLOW_COLOR_SCHEME = [DEFAULT_FLOW_MIN_COLOR, '#137CBD'];\nconst DEFAULT_LOCATION_AREA_COLOR = 'rgba(220,220,220,0.5)';\nconst DEFAULT_FLOW_COLOR_SCHEME_POSITIVE = [DEFAULT_FLOW_MIN_COLOR, '#f6654e'];\nconst DEFAULT_FLOW_COLOR_SCHEME_NEGATIVE = [DEFAULT_FLOW_MIN_COLOR, '#00a9cc'];\nconst FALLBACK_COLOR_RGBA = [255, 255, 255, 255];\nexport function opacityFloatToInteger(opacity) {\n    return Math.round(opacity * 255);\n}\nexport function opacifyHex(hexCode, opacity) {\n    const c = d3color(hexCode);\n    if (!c) {\n        console.warn('Invalid color: ', hexCode);\n        return `rgba(255, 255, 255, ${opacity})`;\n    }\n    const col = c.rgb();\n    return `rgba(${col.r}, ${col.g}, ${col.b}, ${opacity})`;\n}\nexport function colorAsRgba(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    const col = d3color(color);\n    if (!col) {\n        console.warn('Invalid color: ', color);\n        return FALLBACK_COLOR_RGBA;\n    }\n    const rgbColor = col.rgb();\n    return [\n        Math.floor(rgbColor.r),\n        Math.floor(rgbColor.g),\n        Math.floor(rgbColor.b),\n        opacityFloatToInteger(col.opacity),\n    ];\n}\nfunction colorAsRgbaOr(color, defaultColor) {\n    if (color) {\n        return colorAsRgba(color);\n    }\n    if (typeof defaultColor === 'string') {\n        return colorAsRgba(defaultColor);\n    }\n    return defaultColor;\n}\nconst asScheme = (scheme) => scheme[scheme.length - 1];\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"primary\"] = \"#162d3c\";\n})(ColorScheme || (ColorScheme = {}));\nconst SCALE_NUM_STEPS = 20;\nconst getColorSteps = (interpolate) => range(0, SCALE_NUM_STEPS + 1)\n    .map((i) => interpolate(i / SCALE_NUM_STEPS))\n    .reverse();\nconst FLOW_MIN_COLOR = 'rgba(240,240,240,0.5)';\nexport const GRAYISH = [FLOW_MIN_COLOR, ColorScheme.primary];\nconst schemeBluYl = [\n    '#f7feae',\n    '#b7e6a5',\n    '#7ccba2',\n    '#46aea0',\n    '#089099',\n    '#00718b',\n    '#045275',\n];\nconst schemeEmrld = [\n    '#d3f2a3',\n    '#97e196',\n    '#6cc08b',\n    '#4c9b82',\n    '#217a79',\n    '#105965',\n    '#074050',\n];\nexport const schemeTeal = [\n    '#d1eeea',\n    '#a8dbd9',\n    '#85c4c9',\n    '#68abb8',\n    '#4f90a6',\n    '#3b738f',\n    '#2a5674',\n];\nexport const DEFAULT_COLOR_SCHEME = schemeTeal;\nexport const COLOR_SCHEMES = {\n    Blues: asScheme(schemeBlues),\n    BluGrn: [\n        '#c4e6c3',\n        '#96d2a4',\n        '#6dbc90',\n        '#4da284',\n        '#36877a',\n        '#266b6e',\n        '#1d4f60',\n    ],\n    BluYl: schemeBluYl,\n    BrwnYl: [\n        '#ede5cf',\n        '#e0c2a2',\n        '#d39c83',\n        '#c1766f',\n        '#a65461',\n        '#813753',\n        '#541f3f',\n    ],\n    BuGn: asScheme(schemeBuGn),\n    BuPu: asScheme(schemeBuPu),\n    Burg: [\n        '#ffc6c4',\n        '#f4a3a8',\n        '#e38191',\n        '#cc607d',\n        '#ad466c',\n        '#8b3058',\n        '#672044',\n    ],\n    BurgYl: [\n        '#fbe6c5',\n        '#f5ba98',\n        '#ee8a82',\n        '#dc7176',\n        '#c8586c',\n        '#9c3f5d',\n        '#70284a',\n    ],\n    Cool: getColorSteps(interpolateCool),\n    DarkMint: [\n        '#d2fbd4',\n        '#a5dbc2',\n        '#7bbcb0',\n        '#559c9e',\n        '#3a7c89',\n        '#235d72',\n        '#123f5a',\n    ],\n    Emrld: schemeEmrld,\n    GnBu: asScheme(schemeGnBu),\n    Grayish: GRAYISH,\n    Greens: asScheme(schemeGreens),\n    Greys: asScheme(schemeGreys),\n    Inferno: getColorSteps(interpolateInferno),\n    Magenta: [\n        '#f3cbd3',\n        '#eaa9bd',\n        '#dd88ac',\n        '#ca699d',\n        '#b14d8e',\n        '#91357d',\n        '#6c2167',\n    ],\n    Magma: getColorSteps(interpolateMagma),\n    Mint: [\n        '#e4f1e1',\n        '#b4d9cc',\n        '#89c0b6',\n        '#63a6a0',\n        '#448c8a',\n        '#287274',\n        '#0d585f',\n    ],\n    Oranges: asScheme(schemeOranges),\n    OrRd: asScheme(schemeOrRd),\n    OrYel: [\n        '#ecda9a',\n        '#efc47e',\n        '#f3ad6a',\n        '#f7945d',\n        '#f97b57',\n        '#f66356',\n        '#ee4d5a',\n    ],\n    Peach: [\n        '#fde0c5',\n        '#facba6',\n        '#f8b58b',\n        '#f59e72',\n        '#f2855d',\n        '#ef6a4c',\n        '#eb4a40',\n    ],\n    Plasma: getColorSteps(interpolatePlasma),\n    PinkYl: [\n        '#fef6b5',\n        '#ffdd9a',\n        '#ffc285',\n        '#ffa679',\n        '#fa8a76',\n        '#f16d7a',\n        '#e15383',\n    ],\n    PuBu: asScheme(schemePuBu),\n    PuBuGn: asScheme(schemePuBuGn),\n    PuRd: asScheme(schemePuRd),\n    Purp: [\n        '#f3e0f7',\n        '#e4c7f1',\n        '#d1afe8',\n        '#b998dd',\n        '#9f82ce',\n        '#826dba',\n        '#63589f',\n    ],\n    Purples: asScheme(schemePurples),\n    PurpOr: [\n        '#f9ddda',\n        '#f2b9c4',\n        '#e597b9',\n        '#ce78b3',\n        '#ad5fad',\n        '#834ba0',\n        '#573b88',\n    ],\n    RdPu: asScheme(schemeRdPu),\n    RedOr: [\n        '#f6d2a9',\n        '#f5b78e',\n        '#f19c7c',\n        '#ea8171',\n        '#dd686c',\n        '#ca5268',\n        '#b13f64',\n    ],\n    Reds: asScheme(schemeReds),\n    Sunset: [\n        '#f3e79b',\n        '#fac484',\n        '#f8a07e',\n        '#eb7f86',\n        '#ce6693',\n        '#a059a0',\n        '#5c53a5',\n    ],\n    SunsetDark: [\n        '#fcde9c',\n        '#faa476',\n        '#f0746e',\n        '#e34f6f',\n        '#dc3977',\n        '#b9257a',\n        '#7c1d6f',\n    ],\n    Teal: schemeTeal,\n    TealGrn: [\n        '#b0f2bc',\n        '#89e8ac',\n        '#67dba5',\n        '#4cc8a3',\n        '#38b2a3',\n        '#2c98a0',\n        '#257d98',\n    ],\n    Viridis: getColorSteps(interpolateViridis),\n    Warm: getColorSteps(interpolateWarm),\n    YlGn: asScheme(schemeYlGn),\n    YlGnBu: asScheme(schemeYlGnBu),\n    YlOrBr: asScheme(schemeYlOrBr),\n    YlOrRd: asScheme(schemeYlOrRd),\n};\nexport const COLOR_SCHEME_KEYS = Object.keys(COLOR_SCHEMES);\nconst complementary = '#f52020';\nconst baseDiffColor = '#17a5be';\nconst diffColors = {\n    negative: {\n        flows: {\n            scheme: [FLOW_MIN_COLOR, baseDiffColor],\n        },\n    },\n    positive: {\n        flows: {\n            scheme: [FLOW_MIN_COLOR, complementary],\n        },\n    },\n    locationAreas: {\n        outline: 'rgba(92,112,128,0.5)',\n        normal: 'rgba(220,220,220,0.5)',\n    },\n    outlineColor: 'rgb(230,233,237)',\n};\nexport function getFlowmapColors(settings) {\n    return getColors(false, // TODO: diffMode\n    settings.colorScheme, settings.darkMode, settings.fadeEnabled, settings.fadeOpacityEnabled, settings.fadeAmount, settings.animationEnabled);\n}\nexport function getColors(diffMode, colorScheme, darkMode, fadeEnabled, fadeOpacityEnabled, fadeAmount, animate) {\n    if (diffMode) {\n        return diffColors;\n    }\n    let scheme;\n    if (Array.isArray(colorScheme)) {\n        scheme = colorScheme;\n    }\n    else {\n        scheme =\n            (colorScheme && COLOR_SCHEMES[colorScheme]) || DEFAULT_COLOR_SCHEME;\n        if (darkMode) {\n            scheme = scheme.slice().reverse();\n        }\n    }\n    // if (animate)\n    // if (fadeAmount > 0)\n    {\n        const indices = range(0, Math.max(10, scheme.length));\n        const N = indices.length - 1;\n        const colorScale = scaleSequential(interpolateRgbBasis(scheme)).domain([\n            0,\n            N,\n        ]);\n        if (!fadeEnabled || fadeAmount === 0) {\n            scheme = indices.map((c, i) => colorScale(i));\n        }\n        else {\n            const amount = scalePow()\n                // .exponent(animate ? 1 : 1/2.5)\n                // .exponent(animate ? 100 : 50)\n                // .exponent(animate ? 20 : 5)\n                // .exponent(1/2.5)\n                .exponent(1.5)\n                .domain([N, 0])\n                // .range([fadeAmount/100*(animate?2:1), 0])\n                // .range([0, fadeAmount/100*(animate?2:1)])\n                // .range(darkMode ? [1-fadeAmount/100, 1] : [1, 1 - fadeAmount/100])\n                // .range(darkMode ? [1 - fadeAmount/100, 1] : [fadeAmount/100, 0])\n                // .range([1 - fadeAmount/100, 1])\n                .range([0, (2 * fadeAmount) / 100]);\n            scheme = indices.map((c, i) => {\n                const color = colorScale(i);\n                const a = amount(i);\n                if (color == null || a == null)\n                    return '#000';\n                const col = hcl(color);\n                col.l = darkMode ? col.l - col.l * a : col.l + (100 - col.l) * a;\n                col.c = col.c - col.c * (a / 4);\n                if (fadeOpacityEnabled) {\n                    col.opacity = col.opacity * (1.0 - a);\n                }\n                return col.toString();\n            });\n        }\n    }\n    return {\n        darkMode,\n        flows: {\n            scheme,\n        },\n        locationCircles: {\n            outgoing: darkMode ? '#000' : '#fff',\n        },\n        outlineColor: darkMode ? '#000' : 'rgba(255, 255, 255, 0.5)',\n    };\n}\nfunction interpolateRgbaBasis(colors) {\n    const spline = interpolateBasis;\n    const n = colors.length;\n    let r = new Array(n), g = new Array(n), b = new Array(n), opacity = new Array(n), i, color;\n    for (i = 0; i < n; ++i) {\n        color = colorRgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n        opacity[i] = color.opacity || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    opacity = spline(opacity);\n    // color.opacity = 1;\n    return function (t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        color.opacity = opacity(t);\n        return color + '';\n    };\n}\nexport function createFlowColorScale(domain, scheme, animate) {\n    const scale = scaleSequentialPow(interpolateRgbaBasis(scheme))\n        // @ts-ignore\n        .exponent(animate ? 1 / 2 : 1 / 3)\n        .domain(domain);\n    return (value) => colorAsRgba(scale(value));\n}\nexport function getFlowColorScale(colors, magnitudeExtent, animate) {\n    const minMagnitude = magnitudeExtent ? magnitudeExtent[0] : 0;\n    const maxMagnitude = magnitudeExtent ? magnitudeExtent[1] : 0;\n    if (isDiffColorsRGBA(colors)) {\n        const posScale = createFlowColorScale([0, maxMagnitude], colors.positive.flows.scheme, animate);\n        const negScale = createFlowColorScale([0, minMagnitude], colors.negative.flows.scheme, animate);\n        return (magnitude) => magnitude >= 0 ? posScale(magnitude) : negScale(magnitude);\n    }\n    const scale = createFlowColorScale([0, maxMagnitude || 0], colors.flows.scheme, animate);\n    return (magnitude) => scale(magnitude);\n}\nexport function isDiffColors(colors) {\n    return colors.positive !== undefined;\n}\nexport function isDiffColorsRGBA(colors) {\n    return colors.positive !== undefined;\n}\nfunction getLocationAreaColorsRGBA(colors, darkMode) {\n    const normalColor = (colors && colors.normal) || DEFAULT_LOCATION_AREA_COLOR;\n    const normalColorHcl = hcl(normalColor);\n    const locationAreasNormal = colorAsRgba(normalColor);\n    return {\n        normal: locationAreasNormal,\n        connected: colorAsRgbaOr(colors && colors.connected, locationAreasNormal),\n        highlighted: colorAsRgbaOr(colors && colors.highlighted, opacifyHex(normalColorHcl[darkMode ? 'brighter' : 'darker'](1).toString(), 0.5)),\n        selected: colorAsRgbaOr(colors && colors.selected, opacifyHex(normalColorHcl[darkMode ? 'brighter' : 'darker'](2).toString(), 0.8)),\n        outline: colorAsRgbaOr(colors && colors.outline, colorAsRgba(normalColorHcl[darkMode ? 'brighter' : 'darker'](4).toString())),\n    };\n}\nfunction getFlowAndCircleColors(inputColors, defaultFlowColorScheme, darkMode) {\n    var _a, _b, _c;\n    const flowColorScheme = (inputColors && inputColors.flows && inputColors.flows.scheme) ||\n        defaultFlowColorScheme;\n    const maxFlowColorHcl = hcl(flowColorScheme[flowColorScheme.length - 1]);\n    const flowColorHighlighted = colorAsRgbaOr(inputColors && inputColors.flows && inputColors.flows.highlighted, colorAsRgba(maxFlowColorHcl[darkMode ? 'brighter' : 'darker'](0.7).toString()));\n    const emptyColor = colorAsRgbaOr((_a = inputColors === null || inputColors === void 0 ? void 0 : inputColors.locationCircles) === null || _a === void 0 ? void 0 : _a.empty, darkMode ? '#000' : '#fff');\n    const innerColor = colorAsRgbaOr(inputColors &&\n        inputColors.locationCircles &&\n        inputColors.locationCircles.inner, maxFlowColorHcl.toString());\n    return {\n        flows: {\n            scheme: flowColorScheme,\n            highlighted: flowColorHighlighted,\n        },\n        locationCircles: {\n            inner: innerColor,\n            outgoing: colorAsRgbaOr(inputColors &&\n                inputColors.locationCircles &&\n                inputColors.locationCircles.outgoing, darkMode ? '#000' : '#fff'),\n            incoming: colorAsRgbaOr(inputColors &&\n                inputColors.locationCircles &&\n                inputColors.locationCircles.incoming, maxFlowColorHcl[darkMode ? 'brighter' : 'darker'](1.25).toString()),\n            highlighted: colorAsRgbaOr(inputColors &&\n                inputColors.locationCircles &&\n                inputColors.locationCircles.highlighted, flowColorHighlighted),\n            empty: emptyColor,\n            outlineEmptyMix: (_c = (_b = inputColors === null || inputColors === void 0 ? void 0 : inputColors.locationCircles) === null || _b === void 0 ? void 0 : _b.outlineEmptyMix) !== null && _c !== void 0 ? _c : 0.4,\n        },\n    };\n}\nfunction getBaseColorsRGBA(colors) {\n    const darkMode = colors && colors.darkMode ? true : false;\n    return {\n        darkMode,\n        locationAreas: getLocationAreaColorsRGBA(colors && colors.locationAreas, darkMode),\n        outlineColor: colorAsRgba((colors && colors.outlineColor) || DEFAULT_OUTLINE_COLOR),\n        dimmedOpacity: colors && colors.dimmedOpacity != null\n            ? colors.dimmedOpacity\n            : DEFAULT_DIMMED_OPACITY,\n    };\n}\nexport function getColorsRGBA(colors) {\n    const baseColorsRGBA = getBaseColorsRGBA(colors);\n    return Object.assign(Object.assign({}, baseColorsRGBA), getFlowAndCircleColors(colors, DEFAULT_FLOW_COLOR_SCHEME, baseColorsRGBA.darkMode));\n}\nexport function getDiffColorsRGBA(colors) {\n    const baseColorsRGBA = getBaseColorsRGBA(colors);\n    return Object.assign(Object.assign({}, baseColorsRGBA), { positive: getFlowAndCircleColors(colors && colors.positive, DEFAULT_FLOW_COLOR_SCHEME_POSITIVE, baseColorsRGBA.darkMode), negative: getFlowAndCircleColors(colors && colors.negative, DEFAULT_FLOW_COLOR_SCHEME_NEGATIVE, baseColorsRGBA.darkMode) });\n}\nexport function rgbaAsString(color) {\n    return `rgba(${color.join(',')})`;\n}\nexport function midpoint(a, b, zeroToOne) {\n    return a + (b - a) * zeroToOne;\n}\nexport function mixColorsRGBA(color1, color2, zeroToOne) {\n    return color1.map((v, i) => midpoint(v, color2[i], zeroToOne));\n}\nexport default getColors;\n//# sourceMappingURL=data:application/json;base64,","\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        const t = coords[2 * k + inc];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    const r2 = r * r;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\n\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n\n    range(minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    }\n\n    within(x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n}\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n/**\n * The code in this file is a based on https://github.com/mapbox/supercluster\n */\n// ISC License\n//\n// Copyright (c) 2016, Mapbox\n//\n// Permission to use, copy, modify, and/or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n// INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\nimport { min, rollup } from 'd3-array';\nimport KDBush from 'kdbush';\nconst defaultOptions = {\n    minZoom: 0,\n    maxZoom: 16,\n    radius: 40,\n    extent: 512,\n    nodeSize: 64,\n    makeClusterName: (id, numPoints) => undefined,\n    makeClusterId: (id) => `{[${id}]}`,\n};\nexport function isLeafPoint(p) {\n    const { index } = p;\n    return index != null;\n}\nexport function isClusterPoint(p) {\n    const { id } = p;\n    return id != null;\n}\nexport function clusterLocations(locations, locationAccessors, getLocationWeight, options) {\n    const { getLocationLon, getLocationLat, getLocationId } = locationAccessors;\n    const opts = Object.assign(Object.assign({}, defaultOptions), options);\n    const { minZoom, maxZoom, nodeSize, makeClusterName, makeClusterId } = opts;\n    const trees = new Array(maxZoom + 1);\n    // generate a cluster object for each point and index input points into a KD-tree\n    let clusters = new Array();\n    let locationsCount = 0;\n    for (const location of locations) {\n        const x = getLocationLon(location);\n        const y = getLocationLat(location);\n        clusters.push({\n            x: lngX(x),\n            y: latY(y),\n            weight: getLocationWeight(getLocationId(location)),\n            zoom: Infinity,\n            index: locationsCount,\n            parentId: -1,\n            location,\n        });\n        locationsCount++;\n    }\n    // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n    // results in a cluster hierarchy across zoom levels\n    trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n    let prevZoom = maxZoom + 1;\n    for (let z = maxZoom; z >= minZoom; z--) {\n        // create a new set of clusters for the zoom and index them with a KD-tree\n        const _clusters = cluster(clusters, z, trees[prevZoom], opts);\n        if (_clusters.length === clusters.length) {\n            // same number of clusters => move the higher level clusters up\n            // no need to keep the same data on multiple levels\n            trees[z] = trees[prevZoom];\n            trees[prevZoom] = undefined;\n            prevZoom = z;\n            clusters = _clusters;\n        }\n        else {\n            prevZoom = z;\n            clusters = _clusters;\n            trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n        }\n    }\n    if (trees.length === 0) {\n        return [];\n    }\n    const numbersOfClusters = trees.map((d) => d === null || d === void 0 ? void 0 : d.points.length);\n    const minClusters = min(numbersOfClusters.filter((d) => d > 0));\n    const maxClusters = getMaxNumberOfClusters(locations, locationAccessors);\n    let maxAvailZoom = numbersOfClusters.indexOf(maxClusters);\n    if (maxClusters < locationsCount) {\n        maxAvailZoom++;\n        if (maxAvailZoom < maxZoom + 1) {\n            trees[maxAvailZoom] = trees[maxZoom + 1];\n            trees[maxZoom + 1] = undefined;\n        }\n    }\n    const minAvailZoom = Math.min(maxAvailZoom, numbersOfClusters.lastIndexOf(minClusters));\n    const clusterLevels = new Array();\n    prevZoom = NaN;\n    for (let zoom = maxAvailZoom; zoom >= minAvailZoom; zoom--) {\n        let childrenByParent;\n        const tree = trees[zoom];\n        if (!tree)\n            continue;\n        if (zoom < maxAvailZoom) {\n            childrenByParent = rollup(trees[prevZoom].points, (points) => points.map((p) => p.id ? makeClusterId(p.id) : getLocationId(p.location)), (point) => point.parentId);\n        }\n        const nodes = [];\n        for (const point of tree.points) {\n            const { x, y, numPoints, location } = point;\n            if (isLeafPoint(point)) {\n                nodes.push({\n                    id: getLocationId(location),\n                    zoom,\n                    lat: getLocationLat(location),\n                    lon: getLocationLon(location),\n                });\n            }\n            else if (isClusterPoint(point)) {\n                const { id } = point;\n                const children = childrenByParent && childrenByParent.get(id);\n                if (!children) {\n                    throw new Error(`Cluster ${id} doesn't have children`);\n                }\n                nodes.push({\n                    id: makeClusterId(id),\n                    name: makeClusterName(id, numPoints),\n                    zoom,\n                    lat: yLat(y),\n                    lon: xLng(x),\n                    children,\n                });\n            }\n        }\n        clusterLevels.push({\n            zoom,\n            nodes,\n        });\n        prevZoom = zoom;\n    }\n    return clusterLevels;\n}\nfunction createCluster(x, y, id, numPoints, weight) {\n    return {\n        x,\n        y,\n        zoom: Infinity,\n        id,\n        parentId: -1,\n        numPoints,\n        weight,\n    };\n}\nfunction cluster(points, zoom, tree, options) {\n    const clusters = [];\n    const { radius, extent } = options;\n    const r = radius / (extent * Math.pow(2, zoom));\n    // loop through each point\n    for (let i = 0; i < points.length; i++) {\n        const p = points[i];\n        // if we've already visited the point at this zoom level, skip it\n        if (p.zoom <= zoom) {\n            continue;\n        }\n        p.zoom = zoom;\n        // find all nearby points\n        const neighborIds = tree.within(p.x, p.y, r);\n        let weight = p.weight || 1;\n        let numPoints = isClusterPoint(p) ? p.numPoints : 1;\n        let wx = p.x * weight;\n        let wy = p.y * weight;\n        // encode both zoom and point index on which the cluster originated\n        const id = (i << 5) + (zoom + 1);\n        for (const neighborId of neighborIds) {\n            const b = tree.points[neighborId];\n            // filter out neighbors that are already processed\n            if (b.zoom <= zoom) {\n                continue;\n            }\n            b.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n            const weight2 = b.weight || 1;\n            const numPoints2 = b.numPoints || 1;\n            wx += b.x * weight2; // accumulate coordinates for calculating weighted center\n            wy += b.y * weight2;\n            weight += weight2;\n            numPoints += numPoints2;\n            b.parentId = id;\n        }\n        if (numPoints === 1) {\n            clusters.push(p);\n        }\n        else {\n            p.parentId = id;\n            clusters.push(createCluster(wx / weight, wy / weight, id, numPoints, weight));\n        }\n    }\n    return clusters;\n}\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = ((180 - y * 360) * Math.PI) / 180;\n    return (360 * Math.atan(Math.exp(y2))) / Math.PI - 90;\n}\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin((lat * Math.PI) / 180);\n    const y = 0.5 - (0.25 * Math.log((1 + sin) / (1 - sin))) / Math.PI;\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\nfunction getX(p) {\n    return p.x;\n}\nfunction getY(p) {\n    return p.y;\n}\n/**\n * Finds groups of locations which share the same positions.\n * They will always be clustered together at any zoom level\n * which can lead to having too many zooms.\n */\nfunction getMaxNumberOfClusters(locations, locationAccessors) {\n    const { getLocationLon, getLocationLat } = locationAccessors;\n    const countByLatLon = new Map();\n    let numLocations = 0;\n    for (const loc of locations) {\n        const lon = getLocationLon(loc);\n        const lat = getLocationLat(loc);\n        const key = `${lon},${lat}`;\n        const prev = countByLatLon.get(key);\n        countByLatLon.set(key, prev ? prev + 1 : 1);\n        numLocations++;\n    }\n    let numSame = 0;\n    for (const [key, count] of countByLatLon) {\n        if (count > 1) {\n            numSame++;\n        }\n    }\n    return numLocations - numSame;\n}\n//# sourceMappingURL=data:application/json;base64,","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { isCluster, } from './../types';\nimport { ascending, bisectLeft, extent } from 'd3-array';\n/**\n * Build ClusterIndex from the given cluster hierarchy\n */\nexport function buildIndex(clusterLevels) {\n    const nodesByZoom = new Map();\n    const clustersById = new Map();\n    const minZoomByLocationId = new Map();\n    for (const { zoom, nodes } of clusterLevels) {\n        nodesByZoom.set(zoom, nodes);\n        for (const node of nodes) {\n            if (isCluster(node)) {\n                clustersById.set(node.id, node);\n            }\n            else {\n                const { id } = node;\n                const mz = minZoomByLocationId.get(id);\n                if (mz == null || mz > zoom) {\n                    minZoomByLocationId.set(id, zoom);\n                }\n            }\n        }\n    }\n    const [minZoom, maxZoom] = extent(clusterLevels, (cl) => cl.zoom);\n    if (minZoom == null || maxZoom == null) {\n        throw new Error('Could not determine minZoom or maxZoom');\n    }\n    const leavesToClustersByZoom = new Map();\n    for (const cluster of clustersById.values()) {\n        const { zoom } = cluster;\n        let leavesToClusters = leavesToClustersByZoom.get(zoom);\n        if (!leavesToClusters) {\n            leavesToClusters = new Map();\n            leavesToClustersByZoom.set(zoom, leavesToClusters);\n        }\n        visitClusterLeaves(cluster, (leafId) => {\n            leavesToClusters === null || leavesToClusters === void 0 ? void 0 : leavesToClusters.set(leafId, cluster);\n        });\n    }\n    function visitClusterLeaves(cluster, visit) {\n        for (const childId of cluster.children) {\n            const child = clustersById.get(childId);\n            if (child) {\n                visitClusterLeaves(child, visit);\n            }\n            else {\n                visit(childId);\n            }\n        }\n    }\n    const expandCluster = (cluster, targetZoom = maxZoom) => {\n        const ids = [];\n        const visit = (c, expandedIds) => {\n            if (targetZoom > c.zoom) {\n                for (const childId of c.children) {\n                    const child = clustersById.get(childId);\n                    if (child) {\n                        visit(child, expandedIds);\n                    }\n                    else {\n                        expandedIds.push(childId);\n                    }\n                }\n            }\n            else {\n                expandedIds.push(c.id);\n            }\n        };\n        visit(cluster, ids);\n        return ids;\n    };\n    function findClusterFor(locationId, zoom) {\n        const leavesToClusters = leavesToClustersByZoom.get(zoom);\n        if (!leavesToClusters) {\n            return undefined;\n        }\n        const cluster = leavesToClusters.get(locationId);\n        return cluster ? cluster.id : undefined;\n    }\n    const availableZoomLevels = clusterLevels\n        .map((cl) => +cl.zoom)\n        .sort((a, b) => ascending(a, b));\n    return {\n        availableZoomLevels,\n        getClusterNodesFor: (zoom) => {\n            if (zoom === undefined) {\n                return undefined;\n            }\n            return nodesByZoom.get(zoom);\n        },\n        getClusterById: (clusterId) => clustersById.get(clusterId),\n        getMinZoomForLocation: (locationId) => minZoomByLocationId.get(locationId) || minZoom,\n        expandCluster,\n        findClusterFor,\n        aggregateFlows: (flows, zoom, { getFlowOriginId, getFlowDestId, getFlowMagnitude }, options = {}) => {\n            if (zoom > maxZoom) {\n                return flows;\n            }\n            const result = [];\n            const aggFlowsByKey = new Map();\n            const makeKey = (origin, dest) => `${origin}:${dest}`;\n            const { flowCountsMapReduce = {\n                map: getFlowMagnitude,\n                reduce: (acc, count) => (acc || 0) + count,\n            }, } = options;\n            for (const flow of flows) {\n                const origin = getFlowOriginId(flow);\n                const dest = getFlowDestId(flow);\n                const originCluster = findClusterFor(origin, zoom) || origin;\n                const destCluster = findClusterFor(dest, zoom) || dest;\n                const key = makeKey(originCluster, destCluster);\n                if (originCluster === origin && destCluster === dest) {\n                    result.push(flow);\n                }\n                else {\n                    let aggregateFlow = aggFlowsByKey.get(key);\n                    if (!aggregateFlow) {\n                        aggregateFlow = {\n                            origin: originCluster,\n                            dest: destCluster,\n                            count: flowCountsMapReduce.map(flow),\n                            aggregate: true,\n                        };\n                        result.push(aggregateFlow);\n                        aggFlowsByKey.set(key, aggregateFlow);\n                    }\n                    else {\n                        aggregateFlow.count = flowCountsMapReduce.reduce(aggregateFlow.count, flowCountsMapReduce.map(flow));\n                    }\n                }\n            }\n            return result;\n        },\n    };\n}\nexport function makeLocationWeightGetter(flows, { getFlowOriginId, getFlowDestId, getFlowMagnitude }) {\n    const locationTotals = {\n        incoming: new Map(),\n        outgoing: new Map(),\n    };\n    for (const flow of flows) {\n        const origin = getFlowOriginId(flow);\n        const dest = getFlowDestId(flow);\n        const count = getFlowMagnitude(flow);\n        locationTotals.incoming.set(dest, (locationTotals.incoming.get(dest) || 0) + count);\n        locationTotals.outgoing.set(origin, (locationTotals.outgoing.get(origin) || 0) + count);\n    }\n    return (id) => Math.max(Math.abs(locationTotals.incoming.get(id) || 0), Math.abs(locationTotals.outgoing.get(id) || 0));\n}\n/**\n * @param availableZoomLevels Must be sorted in ascending order\n * @param targetZoom\n */\nexport function findAppropriateZoomLevel(availableZoomLevels, targetZoom) {\n    if (!availableZoomLevels.length) {\n        throw new Error('No available zoom levels');\n    }\n    return availableZoomLevels[Math.min(bisectLeft(availableZoomLevels, Math.floor(targetZoom)), availableZoomLevels.length - 1)];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2x1c3RlckluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsdXN0ZXIvQ2x1c3RlckluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBRUgsT0FBTyxFQU9MLFNBQVMsR0FDVixNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUMsTUFBTSxVQUFVLENBQUM7QUEwQ3ZEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBSSxhQUE0QjtJQUN4RCxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBeUIsQ0FBQztJQUNyRCxNQUFNLFlBQVksR0FBRyxJQUFJLEdBQUcsRUFBNEIsQ0FBQztJQUN6RCxNQUFNLG1CQUFtQixHQUFHLElBQUksR0FBRyxFQUEyQixDQUFDO0lBQy9ELEtBQUssTUFBTSxFQUFDLElBQUksRUFBRSxLQUFLLEVBQUMsSUFBSSxhQUFhLEVBQUU7UUFDekMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDN0IsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUU7WUFDeEIsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ25CLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUNqQztpQkFBTTtnQkFDTCxNQUFNLEVBQUMsRUFBRSxFQUFDLEdBQUcsSUFBSSxDQUFDO2dCQUNsQixNQUFNLEVBQUUsR0FBRyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ3ZDLElBQUksRUFBRSxJQUFJLElBQUksSUFBSSxFQUFFLEdBQUcsSUFBSSxFQUFFO29CQUMzQixtQkFBbUIsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUNuQzthQUNGO1NBQ0Y7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LENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQy9DLENBQUM7QUFDTixDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLHdCQUF3QixDQUN0QyxtQkFBNkIsRUFDN0IsVUFBa0I7SUFFbEIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRTtRQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7S0FDN0M7SUFDRCxPQUFPLG1CQUFtQixDQUN4QixJQUFJLENBQUMsR0FBRyxDQUNOLFVBQVUsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQ3ZELG1CQUFtQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQy9CLENBQ0YsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjIgRmxvd21hcEJsdWVcbiAqIENvcHlyaWdodCAyMDE4LTIwMjAgVGVyYWx5dGljcywgbW9kaWZpZWQgYnkgRmxvd21hcEJsdWVcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKi9cblxuaW1wb3J0IHtcbiAgQWdncmVnYXRlRmxvdyxcbiAgQ2x1c3RlcixcbiAgQ2x1c3RlckxldmVscyxcbiAgQ2x1c3Rlck5vZGUsXG4gIEZsb3dBY2Nlc3NvcnMsXG4gIEZsb3dDb3VudHNNYXBSZWR1Y2UsXG4gIGlzQ2x1c3Rlcixcbn0gZnJvbSAnLi8uLi90eXBlcyc7XG5pbXBvcnQge2FzY2VuZGluZywgYmlzZWN0TGVmdCwgZXh0ZW50fSBmcm9tICdkMy1hcnJheSc7XG5cbmV4cG9ydCB0eXBlIExvY2F0aW9uV2VpZ2h0R2V0dGVyID0gKGlkOiBzdHJpbmcgfCBudW1iZXIpID0+IG51bWJlcjtcblxuLyoqXG4gKiBBIGRhdGEgc3RydWN0dXJlIHJlcHJlc2VudGluZyB0aGUgY2x1c3RlciBsZXZlbHMgZm9yIGVmZmljaWVudCBmbG93IGFnZ3JlZ2F0aW9uLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENsdXN0ZXJJbmRleDxGPiB7XG4gIGF2YWlsYWJsZVpvb21MZXZlbHM6IG51bWJlcltdO1xuICBnZXRDbHVzdGVyQnlJZDogKGNsdXN0ZXJJZDogc3RyaW5nIHwgbnVtYmVyKSA9PiBDbHVzdGVyIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogTGlzdCB0aGUgbm9kZXMgb24gdGhlIGdpdmVuIHpvb20gbGV2ZWwuXG4gICAqL1xuICBnZXRDbHVzdGVyTm9kZXNGb3I6ICh6b29tOiBudW1iZXIgfCB1bmRlZmluZWQpID0+IENsdXN0ZXJOb2RlW10gfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBHZXQgdGhlIG1pbiB6b29tIGxldmVsIG9uIHdoaWNoIHRoZSBsb2NhdGlvbiBpcyBub3QgY2x1c3RlcmVkLlxuICAgKi9cbiAgZ2V0TWluWm9vbUZvckxvY2F0aW9uOiAobG9jYXRpb25JZDogc3RyaW5nIHwgbnVtYmVyKSA9PiBudW1iZXI7XG4gIC8qKlxuICAgKiBMaXN0IHRoZSBJRHMgb2YgYWxsIGxvY2F0aW9ucyBpbiB0aGUgY2x1c3RlciAobGVhdmVzIG9mIHRoZSBzdWJ0cmVlIHN0YXJ0aW5nIGluIHRoZSBjbHVzdGVyKS5cbiAgICovXG4gIGV4cGFuZENsdXN0ZXI6IChjbHVzdGVyOiBDbHVzdGVyLCB0YXJnZXRab29tPzogbnVtYmVyKSA9PiBzdHJpbmdbXTtcbiAgLyoqXG4gICAqIEZpbmQgdGhlIGNsdXN0ZXIgdGhlIGdpdmVuIGxvY2F0aW9uIGlzIHJlc2lkaW5nIGluIG9uIHRoZSBzcGVjaWZpZWQgem9vbSBsZXZlbC5cbiAgICovXG4gIGZpbmRDbHVzdGVyRm9yOiAoXG4gICAgbG9jYXRpb25JZDogc3RyaW5nIHwgbnVtYmVyLFxuICAgIHpvb206IG51bWJlcixcbiAgKSA9PiBzdHJpbmcgfCBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBBZ2dyZWdhdGUgZmxvd3MgZm9yIHRoZSBzcGVjaWZpZWQgem9vbSBsZXZlbC5cbiAgICovXG4gIGFnZ3JlZ2F0ZUZsb3dzOiAoXG4gICAgZmxvd3M6IEZbXSxcbiAgICB6b29tOiBudW1iZXIsXG4gICAge2dldEZsb3dPcmlnaW5JZCwgZ2V0Rmxvd0Rlc3RJZCwgZ2V0Rmxvd01hZ25pdHVkZX06IEZsb3dBY2Nlc3NvcnM8Rj4sXG4gICAgb3B0aW9ucz86IHtcbiAgICAgIGZsb3dDb3VudHNNYXBSZWR1Y2U/OiBGbG93Q291bnRzTWFwUmVkdWNlPEY+O1xuICAgIH0sXG4gICkgPT4gKEYgfCBBZ2dyZWdhdGVGbG93KVtdO1xufVxuXG4vKipcbiAqIEJ1aWxkIENsdXN0ZXJJbmRleCBmcm9tIHRoZSBnaXZlbiBjbHVzdGVyIGhpZXJhcmNoeVxuICovXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRJbmRleDxGPihjbHVzdGVyTGV2ZWxzOiBDbHVzdGVyTGV2ZWxzKTogQ2x1c3RlckluZGV4PEY+IHtcbiAgY29uc3Qgbm9kZXNCeVpvb20gPSBuZXcgTWFwPG51bWJlciwgQ2x1c3Rlck5vZGVbXT4oKTtcbiAgY29uc3QgY2x1c3RlcnNCeUlkID0gbmV3IE1hcDxzdHJpbmcgfCBudW1iZXIsIENsdXN0ZXI+KCk7XG4gIGNvbnN0IG1pblpvb21CeUxvY2F0aW9uSWQgPSBuZXcgTWFwPHN0cmluZyB8IG51bWJlciwgbnVtYmVyPigpO1xuICBmb3IgKGNvbnN0IHt6b29tLCBub2Rlc30gb2YgY2x1c3RlckxldmVscykge1xuICAgIG5vZGVzQnlab29tLnNldCh6b29tLCBub2Rlcyk7XG4gICAgZm9yIChjb25zdCBub2RlIG9mIG5vZGVzKSB7XG4gICAgICBpZiAoaXNDbHVzdGVyKG5vZGUpKSB7XG4gICAgICAgIGNsdXN0ZXJzQnlJZC5zZXQobm9kZS5pZCwgbm9kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCB7aWR9ID0gbm9kZTtcbiAgICAgICAgY29uc3QgbXogPSBtaW5ab29tQnlMb2NhdGlvbklkLmdldChpZCk7XG4gICAgICAgIGlmIChteiA9PSBudWxsIHx8IG16ID4gem9vbSkge1xuICAgICAgICAgIG1pblpvb21CeUxvY2F0aW9uSWQuc2V0KGlkLCB6b29tKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IFttaW5ab29tLCBtYXhab29tXSA9IGV4dGVudChjbHVzdGVyTGV2ZWxzLCAoY2wpID0+IGNsLnpvb20pO1xuICBpZiAobWluWm9vbSA9PSBudWxsIHx8IG1heFpvb20gPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGRldGVybWluZSBtaW5ab29tIG9yIG1heFpvb20nKTtcbiAgfVxuXG4gIGNvbnN0IGxlYXZlc1RvQ2x1c3RlcnNCeVpvb20gPSBuZXcgTWFwPFxuICAgIG51bWJlcixcbiAgICBNYXA8c3RyaW5nIHwgbnVtYmVyLCBDbHVzdGVyPlxuICA+KCk7XG5cbiAgZm9yIChjb25zdCBjbHVzdGVyIG9mIGNsdXN0ZXJzQnlJZC52YWx1ZXMoKSkge1xuICAgIGNvbnN0IHt6b29tfSA9IGNsdXN0ZXI7XG4gICAgbGV0IGxlYXZlc1RvQ2x1c3RlcnMgPSBsZWF2ZXNUb0NsdXN0ZXJzQnlab29tLmdldCh6b29tKTtcbiAgICBpZiAoIWxlYXZlc1RvQ2x1c3RlcnMpIHtcbiAgICAgIGxlYXZlc1RvQ2x1c3RlcnMgPSBuZXcgTWFwPHN0cmluZywgQ2x1c3Rlcj4oKTtcbiAgICAgIGxlYXZlc1RvQ2x1c3RlcnNCeVpvb20uc2V0KHpvb20sIGxlYXZlc1RvQ2x1c3RlcnMpO1xuICAgIH1cbiAgICB2aXNpdENsdXN0ZXJMZWF2ZXMoY2x1c3RlciwgKGxlYWZJZCkgPT4ge1xuICAgICAgbGVhdmVzVG9DbHVzdGVycz8uc2V0KGxlYWZJZCwgY2x1c3Rlcik7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdENsdXN0ZXJMZWF2ZXMoY2x1c3RlcjogQ2x1c3RlciwgdmlzaXQ6IChpZDogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgZm9yIChjb25zdCBjaGlsZElkIG9mIGNsdXN0ZXIuY2hpbGRyZW4pIHtcbiAgICAgIGNvbnN0IGNoaWxkID0gY2x1c3RlcnNCeUlkLmdldChjaGlsZElkKTtcbiAgICAgIGlmIChjaGlsZCkge1xuICAgICAgICB2aXNpdENsdXN0ZXJMZWF2ZXMoY2hpbGQsIHZpc2l0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZpc2l0KGNoaWxkSWQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGV4cGFuZENsdXN0ZXIgPSAoY2x1c3RlcjogQ2x1c3RlciwgdGFyZ2V0Wm9vbTogbnVtYmVyID0gbWF4Wm9vbSkgPT4ge1xuICAgIGNvbnN0IGlkczogc3RyaW5nW10gPSBbXTtcbiAgICBjb25zdCB2aXNpdCA9IChjOiBDbHVzdGVyLCBleHBhbmRlZElkczogKHN0cmluZyB8IG51bWJlcilbXSkgPT4ge1xuICAgICAgaWYgKHRhcmdldFpvb20gPiBjLnpvb20pIHtcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZElkIG9mIGMuY2hpbGRyZW4pIHtcbiAgICAgICAgICBjb25zdCBjaGlsZCA9IGNsdXN0ZXJzQnlJZC5nZXQoY2hpbGRJZCk7XG4gICAgICAgICAgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICB2aXNpdChjaGlsZCwgZXhwYW5kZWRJZHMpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBleHBhbmRlZElkcy5wdXNoKGNoaWxkSWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXhwYW5kZWRJZHMucHVzaChjLmlkKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZpc2l0KGNsdXN0ZXIsIGlkcyk7XG4gICAgcmV0dXJuIGlkcztcbiAgfTtcblxuICBmdW5jdGlvbiBmaW5kQ2x1c3RlckZvcihsb2NhdGlvbklkOiBzdHJpbmcgfCBudW1iZXIsIHpvb206IG51bWJlcikge1xuICAgIGNvbnN0IGxlYXZlc1RvQ2x1c3RlcnMgPSBsZWF2ZXNUb0NsdXN0ZXJzQnlab29tLmdldCh6b29tKTtcbiAgICBpZiAoIWxlYXZlc1RvQ2x1c3RlcnMpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGNsdXN0ZXIgPSBsZWF2ZXNUb0NsdXN0ZXJzLmdldChsb2NhdGlvbklkKTtcbiAgICByZXR1cm4gY2x1c3RlciA/IGNsdXN0ZXIuaWQgOiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBhdmFpbGFibGVab29tTGV2ZWxzID0gY2x1c3RlckxldmVsc1xuICAgIC5tYXAoKGNsKSA9PiArY2wuem9vbSlcbiAgICAuc29ydCgoYSwgYikgPT4gYXNjZW5kaW5nKGEsIGIpKTtcblxuICByZXR1cm4ge1xuICAgIGF2YWlsYWJsZVpvb21MZXZlbHMsXG5cbiAgICBnZXRDbHVzdGVyTm9kZXNGb3I6ICh6b29tKSA9PiB7XG4gICAgICBpZiAoem9vbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gbm9kZXNCeVpvb20uZ2V0KHpvb20pO1xuICAgIH0sXG5cbiAgICBnZXRDbHVzdGVyQnlJZDogKGNsdXN0ZXJJZCkgPT4gY2x1c3RlcnNCeUlkLmdldChjbHVzdGVySWQpLFxuXG4gICAgZ2V0TWluWm9vbUZvckxvY2F0aW9uOiAobG9jYXRpb25JZCkgPT5cbiAgICAgIG1pblpvb21CeUxvY2F0aW9uSWQuZ2V0KGxvY2F0aW9uSWQpIHx8IG1pblpvb20sXG5cbiAgICBleHBhbmRDbHVzdGVyLFxuXG4gICAgZmluZENsdXN0ZXJGb3IsXG5cbiAgICBhZ2dyZWdhdGVGbG93czogKFxuICAgICAgZmxvd3MsXG4gICAgICB6b29tLFxuICAgICAge2dldEZsb3dPcmlnaW5JZCwgZ2V0Rmxvd0Rlc3RJZCwgZ2V0Rmxvd01hZ25pdHVkZX0sXG4gICAgICBvcHRpb25zID0ge30sXG4gICAgKSA9PiB7XG4gICAgICBpZiAoem9vbSA+IG1heFpvb20pIHtcbiAgICAgICAgcmV0dXJuIGZsb3dzO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVzdWx0OiAoRiB8IEFnZ3JlZ2F0ZUZsb3cpW10gPSBbXTtcbiAgICAgIGNvbnN0IGFnZ0Zsb3dzQnlLZXkgPSBuZXcgTWFwPHN0cmluZywgQWdncmVnYXRlRmxvdz4oKTtcbiAgICAgIGNvbnN0IG1ha2VLZXkgPSAob3JpZ2luOiBzdHJpbmcgfCBudW1iZXIsIGRlc3Q6IHN0cmluZyB8IG51bWJlcikgPT5cbiAgICAgICAgYCR7b3JpZ2lufToke2Rlc3R9YDtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZmxvd0NvdW50c01hcFJlZHVjZSA9IHtcbiAgICAgICAgICBtYXA6IGdldEZsb3dNYWduaXR1ZGUsXG4gICAgICAgICAgcmVkdWNlOiAoYWNjOiBhbnksIGNvdW50OiBudW1iZXIpID0+IChhY2MgfHwgMCkgKyBjb3VudCxcbiAgICAgICAgfSxcbiAgICAgIH0gPSBvcHRpb25zO1xuICAgICAgZm9yIChjb25zdCBmbG93IG9mIGZsb3dzKSB7XG4gICAgICAgIGNvbnN0IG9yaWdpbiA9IGdldEZsb3dPcmlnaW5JZChmbG93KTtcbiAgICAgICAgY29uc3QgZGVzdCA9IGdldEZsb3dEZXN0SWQoZmxvdyk7XG4gICAgICAgIGNvbnN0IG9yaWdpbkNsdXN0ZXIgPSBmaW5kQ2x1c3RlckZvcihvcmlnaW4sIHpvb20pIHx8IG9yaWdpbjtcbiAgICAgICAgY29uc3QgZGVzdENsdXN0ZXIgPSBmaW5kQ2x1c3RlckZvcihkZXN0LCB6b29tKSB8fCBkZXN0O1xuICAgICAgICBjb25zdCBrZXkgPSBtYWtlS2V5KG9yaWdpbkNsdXN0ZXIsIGRlc3RDbHVzdGVyKTtcbiAgICAgICAgaWYgKG9yaWdpbkNsdXN0ZXIgPT09IG9yaWdpbiAmJiBkZXN0Q2x1c3RlciA9PT0gZGVzdCkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKGZsb3cpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxldCBhZ2dyZWdhdGVGbG93ID0gYWdnRmxvd3NCeUtleS5nZXQoa2V5KTtcbiAgICAgICAgICBpZiAoIWFnZ3JlZ2F0ZUZsb3cpIHtcbiAgICAgICAgICAgIGFnZ3JlZ2F0ZUZsb3cgPSB7XG4gICAgICAgICAgICAgIG9yaWdpbjogb3JpZ2luQ2x1c3RlcixcbiAgICAgICAgICAgICAgZGVzdDogZGVzdENsdXN0ZXIsXG4gICAgICAgICAgICAgIGNvdW50OiBmbG93Q291bnRzTWFwUmVkdWNlLm1hcChmbG93KSxcbiAgICAgICAgICAgICAgYWdncmVnYXRlOiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGFnZ3JlZ2F0ZUZsb3cpO1xuICAgICAgICAgICAgYWdnRmxvd3NCeUtleS5zZXQoa2V5LCBhZ2dyZWdhdGVGbG93KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWdncmVnYXRlRmxvdy5jb3VudCA9IGZsb3dDb3VudHNNYXBSZWR1Y2UucmVkdWNlKFxuICAgICAgICAgICAgICBhZ2dyZWdhdGVGbG93LmNvdW50LFxuICAgICAgICAgICAgICBmbG93Q291bnRzTWFwUmVkdWNlLm1hcChmbG93KSxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlTG9jYXRpb25XZWlnaHRHZXR0ZXI8Rj4oXG4gIGZsb3dzOiBGW10sXG4gIHtnZXRGbG93T3JpZ2luSWQsIGdldEZsb3dEZXN0SWQsIGdldEZsb3dNYWduaXR1ZGV9OiBGbG93QWNjZXNzb3JzPEY+LFxuKTogTG9jYXRpb25XZWlnaHRHZXR0ZXIge1xuICBjb25zdCBsb2NhdGlvblRvdGFscyA9IHtcbiAgICBpbmNvbWluZzogbmV3IE1hcDxzdHJpbmcgfCBudW1iZXIsIG51bWJlcj4oKSxcbiAgICBvdXRnb2luZzogbmV3IE1hcDxzdHJpbmcgfCBudW1iZXIsIG51bWJlcj4oKSxcbiAgfTtcbiAgZm9yIChjb25zdCBmbG93IG9mIGZsb3dzKSB7XG4gICAgY29uc3Qgb3JpZ2luID0gZ2V0Rmxvd09yaWdpbklkKGZsb3cpO1xuICAgIGNvbnN0IGRlc3QgPSBnZXRGbG93RGVzdElkKGZsb3cpO1xuICAgIGNvbnN0IGNvdW50ID0gZ2V0Rmxvd01hZ25pdHVkZShmbG93KTtcbiAgICBsb2NhdGlvblRvdGFscy5pbmNvbWluZy5zZXQoXG4gICAgICBkZXN0LFxuICAgICAgKGxvY2F0aW9uVG90YWxzLmluY29taW5nLmdldChkZXN0KSB8fCAwKSArIGNvdW50LFxuICAgICk7XG4gICAgbG9jYXRpb25Ub3RhbHMub3V0Z29pbmcuc2V0KFxuICAgICAgb3JpZ2luLFxuICAgICAgKGxvY2F0aW9uVG90YWxzLm91dGdvaW5nLmdldChvcmlnaW4pIHx8IDApICsgY291bnQsXG4gICAgKTtcbiAgfVxuICByZXR1cm4gKGlkOiBzdHJpbmcgfCBudW1iZXIpID0+XG4gICAgTWF0aC5tYXgoXG4gICAgICBNYXRoLmFicyhsb2NhdGlvblRvdGFscy5pbmNvbWluZy5nZXQoaWQpIHx8IDApLFxuICAgICAgTWF0aC5hYnMobG9jYXRpb25Ub3RhbHMub3V0Z29pbmcuZ2V0KGlkKSB8fCAwKSxcbiAgICApO1xufVxuXG4vKipcbiAqIEBwYXJhbSBhdmFpbGFibGVab29tTGV2ZWxzIE11c3QgYmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlclxuICogQHBhcmFtIHRhcmdldFpvb21cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRBcHByb3ByaWF0ZVpvb21MZXZlbChcbiAgYXZhaWxhYmxlWm9vbUxldmVsczogbnVtYmVyW10sXG4gIHRhcmdldFpvb206IG51bWJlcixcbikge1xuICBpZiAoIWF2YWlsYWJsZVpvb21MZXZlbHMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdmFpbGFibGUgem9vbSBsZXZlbHMnKTtcbiAgfVxuICByZXR1cm4gYXZhaWxhYmxlWm9vbUxldmVsc1tcbiAgICBNYXRoLm1pbihcbiAgICAgIGJpc2VjdExlZnQoYXZhaWxhYmxlWm9vbUxldmVscywgTWF0aC5mbG9vcih0YXJnZXRab29tKSksXG4gICAgICBhdmFpbGFibGVab29tTGV2ZWxzLmxlbmd0aCAtIDEsXG4gICAgKVxuICBdO1xufVxuIl19","import { isAggregateFlow, isCluster, isLocationClusterNode, } from './types';\nexport default class FlowmapAggregateAccessors {\n    constructor(accessors) {\n        this.getLocationId = (location) => isLocationClusterNode(location)\n            ? location.id\n            : this.accessors.getLocationId(location);\n        this.getLocationName = (location) => {\n            let name;\n            if (isLocationClusterNode(location) && isCluster(location)) {\n                name = location.name;\n            }\n            else if (this.accessors.getLocationName) {\n                name = this.accessors.getLocationName(location);\n            }\n            if (!name)\n                name = `${this.getLocationId(location)}`;\n            return name;\n        };\n        this.getLocationLat = (location) => isLocationClusterNode(location)\n            ? location.lat\n            : this.accessors.getLocationLat(location);\n        this.getLocationLon = (location) => isLocationClusterNode(location)\n            ? location.lon\n            : this.accessors.getLocationLon(location);\n        this.getFlowOriginId = (f) => {\n            return isAggregateFlow(f) ? f.origin : this.accessors.getFlowOriginId(f);\n        };\n        this.getFlowDestId = (f) => {\n            return isAggregateFlow(f) ? f.dest : this.accessors.getFlowDestId(f);\n        };\n        this.getFlowMagnitude = (f) => {\n            return isAggregateFlow(f) ? f.count : this.accessors.getFlowMagnitude(f);\n        };\n        // Note: Aggregate flows have no time\n        this.getFlowTime = (f) => {\n            const { getFlowTime } = this.accessors;\n            return getFlowTime ? getFlowTime(f) : undefined;\n        };\n        this.accessors = accessors;\n    }\n    setAccessors(accessors) {\n        this.accessors = accessors;\n    }\n    getFlowmapDataAccessors() {\n        return this.accessors;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvd21hcEFnZ3JlZ2F0ZUFjY2Vzc29ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9GbG93bWFwQWdncmVnYXRlQWNjZXNzb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFJTCxlQUFlLEVBQ2YsU0FBUyxFQUNULHFCQUFxQixHQUN0QixNQUFNLFNBQVMsQ0FBQztBQUVqQixNQUFNLENBQUMsT0FBTyxPQUFPLHlCQUF5QjtJQUU1QyxZQUFZLFNBQXFDO1FBWWpELGtCQUFhLEdBQUcsQ0FBQyxRQUF5QixFQUFtQixFQUFFLENBQzdELHFCQUFxQixDQUFDLFFBQVEsQ0FBQztZQUM3QixDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDYixDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFN0Msb0JBQWUsR0FBRyxDQUFDLFFBQXlCLEVBQVUsRUFBRTtZQUN0RCxJQUFJLElBQUksQ0FBQztZQUNULElBQUkscUJBQXFCLENBQUMsUUFBUSxDQUFDLElBQUksU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFO2dCQUMxRCxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQzthQUN0QjtpQkFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFO2dCQUN6QyxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsUUFBYSxDQUFDLENBQUM7YUFDdEQ7WUFDRCxJQUFJLENBQUMsSUFBSTtnQkFBRSxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7WUFDcEQsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUM7UUFFRixtQkFBYyxHQUFHLENBQUMsUUFBeUIsRUFBVSxFQUFFLENBQ3JELHFCQUFxQixDQUFDLFFBQVEsQ0FBQztZQUM3QixDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUc7WUFDZCxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFOUMsbUJBQWMsR0FBRyxDQUFDLFFBQXlCLEVBQVUsRUFBRSxDQUNyRCxxQkFBcUIsQ0FBQyxRQUFRLENBQUM7WUFDN0IsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHO1lBQ2QsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRTlDLG9CQUFlLEdBQUcsQ0FBQyxDQUFvQixFQUFFLEVBQUU7WUFDekMsT0FBTyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNFLENBQUMsQ0FBQztRQUVGLGtCQUFhLEdBQUcsQ0FBQyxDQUFvQixFQUFFLEVBQUU7WUFDdkMsT0FBTyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLENBQUMsQ0FBQztRQUVGLHFCQUFnQixHQUFHLENBQUMsQ0FBb0IsRUFBRSxFQUFFO1lBQzFDLE9BQU8sZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNFLENBQUMsQ0FBQztRQUVGLHFDQUFxQztRQUNyQyxnQkFBVyxHQUFHLENBQUMsQ0FBSSxFQUFFLEVBQUU7WUFDckIsTUFBTSxFQUFDLFdBQVcsRUFBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDckMsT0FBTyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ2xELENBQUMsQ0FBQztRQXJEQSxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUM3QixDQUFDO0lBRUQsWUFBWSxDQUFDLFNBQXFDO1FBQ2hELElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFRCx1QkFBdUI7UUFDckIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7Q0E2Q0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZ2dyZWdhdGVGbG93LFxuICBDbHVzdGVyTm9kZSxcbiAgRmxvd21hcERhdGFBY2Nlc3NvcnMsXG4gIGlzQWdncmVnYXRlRmxvdyxcbiAgaXNDbHVzdGVyLFxuICBpc0xvY2F0aW9uQ2x1c3Rlck5vZGUsXG59IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGbG93bWFwQWdncmVnYXRlQWNjZXNzb3JzPEwsIEY+IHtcbiAgcHJpdmF0ZSBhY2Nlc3NvcnM6IEZsb3dtYXBEYXRhQWNjZXNzb3JzPEwsIEY+O1xuICBjb25zdHJ1Y3RvcihhY2Nlc3NvcnM6IEZsb3dtYXBEYXRhQWNjZXNzb3JzPEwsIEY+KSB7XG4gICAgdGhpcy5hY2Nlc3NvcnMgPSBhY2Nlc3NvcnM7XG4gIH1cblxuICBzZXRBY2Nlc3NvcnMoYWNjZXNzb3JzOiBGbG93bWFwRGF0YUFjY2Vzc29yczxMLCBGPikge1xuICAgIHRoaXMuYWNjZXNzb3JzID0gYWNjZXNzb3JzO1xuICB9XG5cbiAgZ2V0Rmxvd21hcERhdGFBY2Nlc3NvcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWNjZXNzb3JzO1xuICB9XG5cbiAgZ2V0TG9jYXRpb25JZCA9IChsb2NhdGlvbjogTCB8IENsdXN0ZXJOb2RlKTogc3RyaW5nIHwgbnVtYmVyID0+XG4gICAgaXNMb2NhdGlvbkNsdXN0ZXJOb2RlKGxvY2F0aW9uKVxuICAgICAgPyBsb2NhdGlvbi5pZFxuICAgICAgOiB0aGlzLmFjY2Vzc29ycy5nZXRMb2NhdGlvbklkKGxvY2F0aW9uKTtcblxuICBnZXRMb2NhdGlvbk5hbWUgPSAobG9jYXRpb246IEwgfCBDbHVzdGVyTm9kZSk6IHN0cmluZyA9PiB7XG4gICAgbGV0IG5hbWU7XG4gICAgaWYgKGlzTG9jYXRpb25DbHVzdGVyTm9kZShsb2NhdGlvbikgJiYgaXNDbHVzdGVyKGxvY2F0aW9uKSkge1xuICAgICAgbmFtZSA9IGxvY2F0aW9uLm5hbWU7XG4gICAgfSBlbHNlIGlmICh0aGlzLmFjY2Vzc29ycy5nZXRMb2NhdGlvbk5hbWUpIHtcbiAgICAgIG5hbWUgPSB0aGlzLmFjY2Vzc29ycy5nZXRMb2NhdGlvbk5hbWUobG9jYXRpb24gYXMgTCk7XG4gICAgfVxuICAgIGlmICghbmFtZSkgbmFtZSA9IGAke3RoaXMuZ2V0TG9jYXRpb25JZChsb2NhdGlvbil9YDtcbiAgICByZXR1cm4gbmFtZTtcbiAgfTtcblxuICBnZXRMb2NhdGlvbkxhdCA9IChsb2NhdGlvbjogTCB8IENsdXN0ZXJOb2RlKTogbnVtYmVyID0+XG4gICAgaXNMb2NhdGlvbkNsdXN0ZXJOb2RlKGxvY2F0aW9uKVxuICAgICAgPyBsb2NhdGlvbi5sYXRcbiAgICAgIDogdGhpcy5hY2Nlc3NvcnMuZ2V0TG9jYXRpb25MYXQobG9jYXRpb24pO1xuXG4gIGdldExvY2F0aW9uTG9uID0gKGxvY2F0aW9uOiBMIHwgQ2x1c3Rlck5vZGUpOiBudW1iZXIgPT5cbiAgICBpc0xvY2F0aW9uQ2x1c3Rlck5vZGUobG9jYXRpb24pXG4gICAgICA/IGxvY2F0aW9uLmxvblxuICAgICAgOiB0aGlzLmFjY2Vzc29ycy5nZXRMb2NhdGlvbkxvbihsb2NhdGlvbik7XG5cbiAgZ2V0Rmxvd09yaWdpbklkID0gKGY6IEYgfCBBZ2dyZWdhdGVGbG93KSA9PiB7XG4gICAgcmV0dXJuIGlzQWdncmVnYXRlRmxvdyhmKSA/IGYub3JpZ2luIDogdGhpcy5hY2Nlc3NvcnMuZ2V0Rmxvd09yaWdpbklkKGYpO1xuICB9O1xuXG4gIGdldEZsb3dEZXN0SWQgPSAoZjogRiB8IEFnZ3JlZ2F0ZUZsb3cpID0+IHtcbiAgICByZXR1cm4gaXNBZ2dyZWdhdGVGbG93KGYpID8gZi5kZXN0IDogdGhpcy5hY2Nlc3NvcnMuZ2V0Rmxvd0Rlc3RJZChmKTtcbiAgfTtcblxuICBnZXRGbG93TWFnbml0dWRlID0gKGY6IEYgfCBBZ2dyZWdhdGVGbG93KSA9PiB7XG4gICAgcmV0dXJuIGlzQWdncmVnYXRlRmxvdyhmKSA/IGYuY291bnQgOiB0aGlzLmFjY2Vzc29ycy5nZXRGbG93TWFnbml0dWRlKGYpO1xuICB9O1xuXG4gIC8vIE5vdGU6IEFnZ3JlZ2F0ZSBmbG93cyBoYXZlIG5vIHRpbWVcbiAgZ2V0Rmxvd1RpbWUgPSAoZjogRikgPT4ge1xuICAgIGNvbnN0IHtnZXRGbG93VGltZX0gPSB0aGlzLmFjY2Vzc29ycztcbiAgICByZXR1cm4gZ2V0Rmxvd1RpbWUgPyBnZXRGbG93VGltZShmKSA6IHVuZGVmaW5lZDtcbiAgfTtcbn1cbiJdfQ==","import { WebMercatorViewport } from '@math.gl/web-mercator';\nimport { isCluster, } from './types';\nimport { scaleLinear } from 'd3-scale';\nimport { descending } from 'd3-array';\n// TODO: use re-reselect\nexport const getViewportBoundingBox = (viewport, maxLocationCircleSize = 0) => {\n    const pad = maxLocationCircleSize;\n    const bounds = new WebMercatorViewport(Object.assign(Object.assign({}, viewport), { width: viewport.width + pad * 2, height: viewport.height + pad * 2 })).getBounds();\n    return [bounds[0][0], bounds[0][1], bounds[1][0], bounds[1][1]];\n};\nexport const getFlowThicknessScale = (magnitudeExtent) => {\n    if (!magnitudeExtent)\n        return undefined;\n    return scaleLinear()\n        .range([0.025, 0.5])\n        .domain([\n        0,\n        // should support diff mode too\n        Math.max.apply(null, magnitudeExtent.map((x) => Math.abs(x || 0))),\n    ]);\n};\n/**\n * Adding meaningful cluster names.\n * NOTE: this will mutate the nodes in clusterIndex\n */\nexport function addClusterNames(clusterIndex, clusterLevels, locationsById, locationAccessors, getLocationWeight) {\n    const { getLocationId, getLocationName, getLocationClusterName } = locationAccessors;\n    const getName = (id) => {\n        const loc = locationsById.get(id);\n        if (loc) {\n            return getLocationName ? getLocationName(loc) : getLocationId(loc) || id;\n        }\n        return `\"${id}\"`;\n    };\n    for (const level of clusterLevels) {\n        for (const node of level.nodes) {\n            // Here mutating the nodes (adding names)\n            if (isCluster(node)) {\n                const leaves = clusterIndex.expandCluster(node);\n                leaves.sort((a, b) => descending(getLocationWeight(a), getLocationWeight(b)));\n                if (getLocationClusterName) {\n                    node.name = getLocationClusterName(leaves);\n                }\n                else {\n                    const topId = leaves[0];\n                    const otherId = leaves.length === 2 ? leaves[1] : undefined;\n                    node.name = `\"${getName(topId)}\" and ${otherId ? `\"${getName(otherId)}\"` : `${leaves.length - 1} others`}`;\n                }\n            }\n            else {\n                node.name = getName(node.id);\n            }\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0b3ItZnVuY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3NlbGVjdG9yLWZ1bmN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBRUwsU0FBUyxHQUdWLE1BQU0sU0FBUyxDQUFDO0FBQ2pCLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFckMsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUVwQyx3QkFBd0I7QUFFeEIsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FDcEMsUUFBdUIsRUFDdkIscUJBQXFCLEdBQUcsQ0FBQyxFQUNTLEVBQUU7SUFDcEMsTUFBTSxHQUFHLEdBQUcscUJBQXFCLENBQUM7SUFDbEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxtQkFBbUIsaUNBQ2pDLFFBQVEsS0FDWCxLQUFLLEVBQUUsUUFBUSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsQ0FBQyxFQUMvQixNQUFNLEVBQUUsUUFBUSxDQUFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxJQUNqQyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2YsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xFLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBQ25DLGVBQTZDLEVBQzdDLEVBQUU7SUFDRixJQUFJLENBQUMsZUFBZTtRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQ3ZDLE9BQU8sV0FBVyxFQUFFO1NBQ2pCLEtBQUssQ0FBQyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztTQUNuQixNQUFNLENBQUM7UUFDTixDQUFDO1FBQ0QsK0JBQStCO1FBQy9CLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUNaLElBQUksRUFDSixlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBcUIsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDakU7S0FDRixDQUFDLENBQUM7QUFDUCxDQUFDLENBQUM7QUFFRjs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUM3QixZQUE2QixFQUM3QixhQUE2QixFQUM3QixhQUFzQyxFQUN0QyxpQkFBdUMsRUFDdkMsaUJBQXVDO0lBRXZDLE1BQU0sRUFBQyxhQUFhLEVBQUUsZUFBZSxFQUFFLHNCQUFzQixFQUFDLEdBQzVELGlCQUFpQixDQUFDO0lBQ3BCLE1BQU0sT0FBTyxHQUFHLENBQUMsRUFBbUIsRUFBRSxFQUFFO1FBQ3RDLE1BQU0sR0FBRyxHQUFHLGFBQWEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbEMsSUFBSSxHQUFHLEVBQUU7WUFDUCxPQUFPLGVBQWUsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQzFFO1FBQ0QsT0FBTyxJQUFJLEVBQUUsR0FBRyxDQUFDO0lBQ25CLENBQUMsQ0FBQztJQUNGLEtBQUssTUFBTSxLQUFLLElBQUksYUFBYSxFQUFFO1FBQ2pDLEtBQUssTUFBTSxJQUFJLElBQUksS0FBSyxDQUFDLEtBQUssRUFBRTtZQUM5Qix5Q0FBeUM7WUFDekMsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ25CLE1BQU0sTUFBTSxHQUFHLFlBQVksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBRWhELE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDbkIsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQ3ZELENBQUM7Z0JBRUYsSUFBSSxzQkFBc0IsRUFBRTtvQkFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztpQkFDNUM7cUJBQU07b0JBQ0wsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN4QixNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7b0JBQzVELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLFNBQzVCLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsU0FDMUQsRUFBRSxDQUFDO2lCQUNKO2FBQ0Y7aUJBQU07Z0JBQ0osSUFBWSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ3ZDO1NBQ0Y7S0FDRjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1dlYk1lcmNhdG9yVmlld3BvcnR9IGZyb20gJ0BtYXRoLmdsL3dlYi1tZXJjYXRvcic7XG5pbXBvcnQge1xuICBDbHVzdGVyTGV2ZWwsXG4gIGlzQ2x1c3RlcixcbiAgTG9jYXRpb25BY2Nlc3NvcnMsXG4gIFZpZXdwb3J0UHJvcHMsXG59IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHtzY2FsZUxpbmVhcn0gZnJvbSAnZDMtc2NhbGUnO1xuaW1wb3J0IHtDbHVzdGVySW5kZXgsIExvY2F0aW9uV2VpZ2h0R2V0dGVyfSBmcm9tICcuL2NsdXN0ZXIvQ2x1c3RlckluZGV4JztcbmltcG9ydCB7ZGVzY2VuZGluZ30gZnJvbSAnZDMtYXJyYXknO1xuXG4vLyBUT0RPOiB1c2UgcmUtcmVzZWxlY3RcblxuZXhwb3J0IGNvbnN0IGdldFZpZXdwb3J0Qm91bmRpbmdCb3ggPSAoXG4gIHZpZXdwb3J0OiBWaWV3cG9ydFByb3BzLFxuICBtYXhMb2NhdGlvbkNpcmNsZVNpemUgPSAwLFxuKTogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPT4ge1xuICBjb25zdCBwYWQgPSBtYXhMb2NhdGlvbkNpcmNsZVNpemU7XG4gIGNvbnN0IGJvdW5kcyA9IG5ldyBXZWJNZXJjYXRvclZpZXdwb3J0KHtcbiAgICAuLi52aWV3cG9ydCxcbiAgICB3aWR0aDogdmlld3BvcnQud2lkdGggKyBwYWQgKiAyLFxuICAgIGhlaWdodDogdmlld3BvcnQuaGVpZ2h0ICsgcGFkICogMixcbiAgfSkuZ2V0Qm91bmRzKCk7XG4gIHJldHVybiBbYm91bmRzWzBdWzBdLCBib3VuZHNbMF1bMV0sIGJvdW5kc1sxXVswXSwgYm91bmRzWzFdWzFdXTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRGbG93VGhpY2tuZXNzU2NhbGUgPSAoXG4gIG1hZ25pdHVkZUV4dGVudDogW251bWJlciwgbnVtYmVyXSB8IHVuZGVmaW5lZCxcbikgPT4ge1xuICBpZiAoIW1hZ25pdHVkZUV4dGVudCkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgcmV0dXJuIHNjYWxlTGluZWFyKClcbiAgICAucmFuZ2UoWzAuMDI1LCAwLjVdKVxuICAgIC5kb21haW4oW1xuICAgICAgMCxcbiAgICAgIC8vIHNob3VsZCBzdXBwb3J0IGRpZmYgbW9kZSB0b29cbiAgICAgIE1hdGgubWF4LmFwcGx5KFxuICAgICAgICBudWxsLFxuICAgICAgICBtYWduaXR1ZGVFeHRlbnQubWFwKCh4OiBudW1iZXIgfCB1bmRlZmluZWQpID0+IE1hdGguYWJzKHggfHwgMCkpLFxuICAgICAgKSxcbiAgICBdKTtcbn07XG5cbi8qKlxuICogQWRkaW5nIG1lYW5pbmdmdWwgY2x1c3RlciBuYW1lcy5cbiAqIE5PVEU6IHRoaXMgd2lsbCBtdXRhdGUgdGhlIG5vZGVzIGluIGNsdXN0ZXJJbmRleFxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkQ2x1c3Rlck5hbWVzPEwsIEY+KFxuICBjbHVzdGVySW5kZXg6IENsdXN0ZXJJbmRleDxGPixcbiAgY2x1c3RlckxldmVsczogQ2x1c3RlckxldmVsW10sXG4gIGxvY2F0aW9uc0J5SWQ6IE1hcDxzdHJpbmcgfCBudW1iZXIsIEw+LFxuICBsb2NhdGlvbkFjY2Vzc29yczogTG9jYXRpb25BY2Nlc3NvcnM8TD4sXG4gIGdldExvY2F0aW9uV2VpZ2h0OiBMb2NhdGlvbldlaWdodEdldHRlcixcbik6IHZvaWQge1xuICBjb25zdCB7Z2V0TG9jYXRpb25JZCwgZ2V0TG9jYXRpb25OYW1lLCBnZXRMb2NhdGlvbkNsdXN0ZXJOYW1lfSA9XG4gICAgbG9jYXRpb25BY2Nlc3NvcnM7XG4gIGNvbnN0IGdldE5hbWUgPSAoaWQ6IHN0cmluZyB8IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IGxvYyA9IGxvY2F0aW9uc0J5SWQuZ2V0KGlkKTtcbiAgICBpZiAobG9jKSB7XG4gICAgICByZXR1cm4gZ2V0TG9jYXRpb25OYW1lID8gZ2V0TG9jYXRpb25OYW1lKGxvYykgOiBnZXRMb2NhdGlvbklkKGxvYykgfHwgaWQ7XG4gICAgfVxuICAgIHJldHVybiBgXCIke2lkfVwiYDtcbiAgfTtcbiAgZm9yIChjb25zdCBsZXZlbCBvZiBjbHVzdGVyTGV2ZWxzKSB7XG4gICAgZm9yIChjb25zdCBub2RlIG9mIGxldmVsLm5vZGVzKSB7XG4gICAgICAvLyBIZXJlIG11dGF0aW5nIHRoZSBub2RlcyAoYWRkaW5nIG5hbWVzKVxuICAgICAgaWYgKGlzQ2x1c3Rlcihub2RlKSkge1xuICAgICAgICBjb25zdCBsZWF2ZXMgPSBjbHVzdGVySW5kZXguZXhwYW5kQ2x1c3Rlcihub2RlKTtcblxuICAgICAgICBsZWF2ZXMuc29ydCgoYSwgYikgPT5cbiAgICAgICAgICBkZXNjZW5kaW5nKGdldExvY2F0aW9uV2VpZ2h0KGEpLCBnZXRMb2NhdGlvbldlaWdodChiKSksXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKGdldExvY2F0aW9uQ2x1c3Rlck5hbWUpIHtcbiAgICAgICAgICBub2RlLm5hbWUgPSBnZXRMb2NhdGlvbkNsdXN0ZXJOYW1lKGxlYXZlcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc3QgdG9wSWQgPSBsZWF2ZXNbMF07XG4gICAgICAgICAgY29uc3Qgb3RoZXJJZCA9IGxlYXZlcy5sZW5ndGggPT09IDIgPyBsZWF2ZXNbMV0gOiB1bmRlZmluZWQ7XG4gICAgICAgICAgbm9kZS5uYW1lID0gYFwiJHtnZXROYW1lKHRvcElkKX1cIiBhbmQgJHtcbiAgICAgICAgICAgIG90aGVySWQgPyBgXCIke2dldE5hbWUob3RoZXJJZCl9XCJgIDogYCR7bGVhdmVzLmxlbmd0aCAtIDF9IG90aGVyc2BcbiAgICAgICAgICB9YDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgKG5vZGUgYXMgYW55KS5uYW1lID0gZ2V0TmFtZShub2RlLmlkKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==","import { timeFormat, timeParse } from 'd3-time-format';\nimport { timeDay, timeHour, timeMinute, timeMonth, timeSecond, timeWeek, timeYear, } from 'd3-time';\nconst dateParsers = [\n    timeParse('%Y-%m-%d'),\n    timeParse('%Y-%m-%d %H:%M'),\n    timeParse('%Y-%m-%d %H:%M:%S'),\n    timeParse('%Y'),\n    timeParse('%Y-%m'),\n];\nexport function parseTime(input) {\n    if (input != null) {\n        if (input instanceof Date) {\n            return input;\n        }\n        for (const parse of dateParsers) {\n            const date = parse(input);\n            if (date) {\n                return date;\n            }\n        }\n    }\n    return undefined;\n}\nexport var TimeGranularityKey;\n(function (TimeGranularityKey) {\n    TimeGranularityKey[\"SECOND\"] = \"SECOND\";\n    TimeGranularityKey[\"MINUTE\"] = \"MINUTE\";\n    TimeGranularityKey[\"HOUR\"] = \"HOUR\";\n    TimeGranularityKey[\"DAY\"] = \"DAY\";\n    TimeGranularityKey[\"MONTH\"] = \"MONTH\";\n    TimeGranularityKey[\"YEAR\"] = \"YEAR\";\n})(TimeGranularityKey || (TimeGranularityKey = {}));\n// const preferredLocale = navigator.languages ? navigator.languages[0] : 'en';\nconst formatMillisecond = timeFormat('.%L'), formatSecond = timeFormat(':%S'), formatMinute = timeFormat('%I:%M'), \n// formatHour = (d: Date) => d.toLocaleString(preferredLocale, { hour: 'numeric' }),\nformatHour = timeFormat('%I %p'), formatDay = timeFormat('%a %d'), formatWeek = timeFormat('%b %d'), formatMonth = timeFormat('%b'), formatYear = timeFormat('%Y');\nexport function tickMultiFormat(date) {\n    return (timeSecond(date) < date\n        ? formatMillisecond\n        : timeMinute(date) < date\n            ? formatSecond\n            : timeHour(date) < date\n                ? formatMinute\n                : timeDay(date) < date\n                    ? formatHour\n                    : timeMonth(date) < date\n                        ? timeWeek(date) < date\n                            ? formatDay\n                            : formatWeek\n                        : timeYear(date) < date\n                            ? formatMonth\n                            : formatYear)(date);\n}\nexport const TIME_GRANULARITIES = [\n    {\n        order: 0,\n        key: TimeGranularityKey.SECOND,\n        interval: timeSecond,\n        format: formatSecond,\n        formatFull: timeFormat('%Y-%m-%d %H:%M:%S'),\n    },\n    {\n        order: 1,\n        key: TimeGranularityKey.MINUTE,\n        interval: timeMinute,\n        format: formatMinute,\n        formatFull: timeFormat('%Y-%m-%d %H:%M'),\n    },\n    {\n        order: 2,\n        key: TimeGranularityKey.HOUR,\n        interval: timeHour,\n        // format: (d: Date) => d.toLocaleString(preferredLocale, { hour: 'numeric', minute: '2-digit' }),\n        format: formatHour,\n        formatFull: timeFormat('%a %d %b %Y, %I %p'),\n    },\n    {\n        order: 3,\n        key: TimeGranularityKey.DAY,\n        interval: timeDay,\n        format: formatDay,\n        formatFull: timeFormat('%a %d %b %Y'),\n    },\n    {\n        order: 4,\n        key: TimeGranularityKey.MONTH,\n        interval: timeMonth,\n        format: formatMonth,\n        formatFull: timeFormat('%b %Y'),\n    },\n    {\n        order: 5,\n        key: TimeGranularityKey.YEAR,\n        interval: timeYear,\n        format: formatYear,\n        formatFull: timeFormat('%Y'),\n    },\n];\nexport function getTimeGranularityByKey(key) {\n    return TIME_GRANULARITIES.find((s) => s.key === key);\n}\nexport function getTimeGranularityByOrder(order) {\n    return TIME_GRANULARITIES.find((s) => s.order === order);\n}\nexport function getTimeGranularityForDate(date) {\n    let prev = undefined;\n    for (const current of TIME_GRANULARITIES) {\n        const { interval } = current;\n        const floored = interval(date);\n        if (floored < date) {\n            if (!prev)\n                return current;\n            return prev;\n        }\n        prev = current;\n    }\n    return TIME_GRANULARITIES[TIME_GRANULARITIES.length - 1];\n}\nexport function areRangesEqual(a, b) {\n    if (!a && !b)\n        return true;\n    if (!a || !b)\n        return false;\n    return a[0] === b[0] && a[1] === b[1];\n}\n//# sourceMappingURL=data:application/json;base64,","/*\n * Copyright 2022 FlowmapBlue\n * Copyright 2018-2020 Teralytics, modified by FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { ascending, descending, extent, min, rollup } from 'd3-array';\nimport { scaleSqrt } from 'd3-scale';\nimport KDBush from 'kdbush';\nimport { createSelector, createSelectorCreator, defaultMemoize, } from 'reselect';\nimport { alea } from 'seedrandom';\nimport { clusterLocations } from './cluster/cluster';\nimport { buildIndex, findAppropriateZoomLevel, makeLocationWeightGetter, } from './cluster/ClusterIndex';\nimport getColors, { getColorsRGBA, getDiffColorsRGBA, getFlowColorScale, isDiffColors, isDiffColorsRGBA, } from './colors';\nimport FlowmapAggregateAccessors from './FlowmapAggregateAccessors';\nimport { addClusterNames, getFlowThicknessScale, getViewportBoundingBox, } from './selector-functions';\nimport { getTimeGranularityByKey, getTimeGranularityByOrder, getTimeGranularityForDate, } from './time';\nimport { isLocationClusterNode, LocationFilterMode, } from './types';\nconst MAX_CLUSTER_ZOOM_LEVEL = 20;\nexport default class FlowmapSelectors {\n    constructor(accessors) {\n        this.getFlowsFromProps = (state, props) => props.flows;\n        this.getLocationsFromProps = (state, props) => props.locations;\n        this.getClusterLevelsFromProps = (state, props) => {\n            return props.clusterLevels;\n        };\n        this.getMaxTopFlowsDisplayNum = (state, props) => state.settings.maxTopFlowsDisplayNum;\n        this.getSelectedLocations = (state, props) => { var _a; return (_a = state.filter) === null || _a === void 0 ? void 0 : _a.selectedLocations; };\n        this.getLocationFilterMode = (state, props) => { var _a; return (_a = state.filter) === null || _a === void 0 ? void 0 : _a.locationFilterMode; };\n        this.getClusteringEnabled = (state, props) => state.settings.clusteringEnabled;\n        this.getLocationTotalsEnabled = (state, props) => state.settings.locationTotalsEnabled;\n        this.getLocationLabelsEnabled = (state, props) => state.settings.locationLabelsEnabled;\n        this.getZoom = (state, props) => state.viewport.zoom;\n        this.getViewport = (state, props) => state.viewport;\n        this.getSelectedTimeRange = (state, props) => { var _a; return (_a = state.filter) === null || _a === void 0 ? void 0 : _a.selectedTimeRange; };\n        this.getColorScheme = (state, props) => state.settings.colorScheme;\n        this.getDarkMode = (state, props) => state.settings.darkMode;\n        this.getFadeEnabled = (state, props) => state.settings.fadeEnabled;\n        this.getFadeOpacityEnabled = (state, props) => state.settings.fadeOpacityEnabled;\n        this.getFadeAmount = (state, props) => state.settings.fadeAmount;\n        this.getAnimate = (state, props) => state.settings.animationEnabled;\n        this.getInvalidLocationIds = createSelector(this.getLocationsFromProps, (locations) => {\n            if (!locations)\n                return undefined;\n            const invalid = [];\n            for (const location of locations) {\n                const id = this.accessors.getLocationId(location);\n                const lon = this.accessors.getLocationLon(location);\n                const lat = this.accessors.getLocationLat(location);\n                if (!(-90 <= lat && lat <= 90) || !(-180 <= lon && lon <= 180)) {\n                    invalid.push(id);\n                }\n            }\n            return invalid.length > 0 ? invalid : undefined;\n        });\n        this.getLocations = createSelector(this.getLocationsFromProps, this.getInvalidLocationIds, (locations, invalidIds) => {\n            if (!locations)\n                return undefined;\n            if (!invalidIds || invalidIds.length === 0)\n                return locations;\n            const invalid = new Set(invalidIds);\n            const filtered = [];\n            for (const location of locations) {\n                const id = this.accessors.getLocationId(location);\n                if (!invalid.has(id)) {\n                    filtered.push(location);\n                }\n            }\n            return filtered;\n        });\n        this.getLocationIds = createSelector(this.getLocations, (locations) => {\n            if (!locations)\n                return undefined;\n            const ids = new Set();\n            for (const id of locations) {\n                ids.add(this.accessors.getLocationId(id));\n            }\n            return ids;\n        });\n        this.getSelectedLocationsSet = createSelector(this.getSelectedLocations, (ids) => ids && ids.length > 0 ? new Set(ids) : undefined);\n        this.getSortedFlowsForKnownLocations = createSelector(this.getFlowsFromProps, this.getLocationIds, (flows, ids) => {\n            if (!ids || !flows)\n                return undefined;\n            const filtered = [];\n            for (const flow of flows) {\n                const srcId = this.accessors.getFlowOriginId(flow);\n                const dstId = this.accessors.getFlowDestId(flow);\n                if (ids.has(srcId) && ids.has(dstId)) {\n                    filtered.push(flow);\n                }\n            }\n            return filtered.sort((a, b) => descending(Math.abs(this.accessors.getFlowMagnitude(a)), Math.abs(this.accessors.getFlowMagnitude(b))));\n        });\n        this.getActualTimeExtent = createSelector(this.getSortedFlowsForKnownLocations, (flows) => {\n            if (!flows)\n                return undefined;\n            let start = null;\n            let end = null;\n            for (const flow of flows) {\n                const time = this.accessors.getFlowTime(flow);\n                if (time) {\n                    if (start == null || start > time)\n                        start = time;\n                    if (end == null || end < time)\n                        end = time;\n                }\n            }\n            if (!start || !end)\n                return undefined;\n            return [start, end];\n        });\n        this.getTimeGranularityKey = createSelector(this.getSortedFlowsForKnownLocations, this.getActualTimeExtent, (flows, timeExtent) => {\n            if (!flows || !timeExtent)\n                return undefined;\n            const minOrder = min(flows, (d) => {\n                const t = this.accessors.getFlowTime(d);\n                return t ? getTimeGranularityForDate(t).order : null;\n            });\n            if (minOrder == null)\n                return undefined;\n            const timeGranularity = getTimeGranularityByOrder(minOrder);\n            return timeGranularity ? timeGranularity.key : undefined;\n        });\n        this.getTimeExtent = createSelector(this.getActualTimeExtent, this.getTimeGranularityKey, (timeExtent, timeGranularityKey) => {\n            const timeGranularity = timeGranularityKey\n                ? getTimeGranularityByKey(timeGranularityKey)\n                : undefined;\n            if (!timeExtent || !(timeGranularity === null || timeGranularity === void 0 ? void 0 : timeGranularity.interval))\n                return undefined;\n            const { interval } = timeGranularity;\n            return [timeExtent[0], interval.offset(interval.floor(timeExtent[1]), 1)];\n        });\n        this.getSortedFlowsForKnownLocationsFilteredByTime = createSelector(this.getSortedFlowsForKnownLocations, this.getTimeExtent, this.getSelectedTimeRange, (flows, timeExtent, timeRange) => {\n            if (!flows)\n                return undefined;\n            if (!timeExtent ||\n                !timeRange ||\n                (timeExtent[0] === timeRange[0] && timeExtent[1] === timeRange[1])) {\n                return flows;\n            }\n            return flows.filter((flow) => {\n                const time = this.accessors.getFlowTime(flow);\n                return time && timeRange[0] <= time && time < timeRange[1];\n            });\n        });\n        this.getLocationsHavingFlows = createSelector(this.getSortedFlowsForKnownLocations, this.getLocations, (flows, locations) => {\n            if (!locations || !flows)\n                return locations;\n            const withFlows = new Set();\n            for (const flow of flows) {\n                withFlows.add(this.accessors.getFlowOriginId(flow));\n                withFlows.add(this.accessors.getFlowDestId(flow));\n            }\n            const filtered = [];\n            for (const location of locations) {\n                if (withFlows.has(this.accessors.getLocationId(location))) {\n                    filtered.push(location);\n                }\n            }\n            return filtered;\n        });\n        this.getLocationsById = createSelector(this.getLocationsHavingFlows, (locations) => {\n            if (!locations)\n                return undefined;\n            const locationsById = new Map();\n            for (const location of locations) {\n                locationsById.set(this.accessors.getLocationId(location), location);\n            }\n            return locationsById;\n        });\n        this.getLocationWeightGetter = createSelector(this.getSortedFlowsForKnownLocations, (flows) => {\n            if (!flows)\n                return undefined;\n            const getLocationWeight = makeLocationWeightGetter(flows, this.accessors.getFlowmapDataAccessors());\n            return getLocationWeight;\n        });\n        this.getClusterLevels = createSelector(this.getClusterLevelsFromProps, this.getLocationsHavingFlows, this.getLocationWeightGetter, (clusterLevelsFromProps, locations, getLocationWeight) => {\n            if (clusterLevelsFromProps)\n                return clusterLevelsFromProps;\n            if (!locations || !getLocationWeight)\n                return undefined;\n            const clusterLevels = clusterLocations(locations, this.accessors.getFlowmapDataAccessors(), getLocationWeight, {\n                maxZoom: MAX_CLUSTER_ZOOM_LEVEL,\n            });\n            return clusterLevels;\n        });\n        this.getClusterIndex = createSelector(this.getLocationsById, this.getLocationWeightGetter, this.getClusterLevels, (locationsById, getLocationWeight, clusterLevels) => {\n            if (!locationsById || !getLocationWeight || !clusterLevels)\n                return undefined;\n            const clusterIndex = buildIndex(clusterLevels);\n            // Adding meaningful names\n            addClusterNames(clusterIndex, clusterLevels, locationsById, this.accessors.getFlowmapDataAccessors(), getLocationWeight);\n            return clusterIndex;\n        });\n        this.getAvailableClusterZoomLevels = createSelector(this.getClusterIndex, this.getSelectedLocations, (clusterIndex, selectedLocations) => {\n            if (!clusterIndex) {\n                return undefined;\n            }\n            let maxZoom = Number.POSITIVE_INFINITY;\n            let minZoom = Number.NEGATIVE_INFINITY;\n            const adjust = (zoneId) => {\n                const cluster = clusterIndex.getClusterById(zoneId);\n                if (cluster) {\n                    minZoom = Math.max(minZoom, cluster.zoom);\n                    maxZoom = Math.min(maxZoom, cluster.zoom);\n                }\n                else {\n                    const zoom = clusterIndex.getMinZoomForLocation(zoneId);\n                    minZoom = Math.max(minZoom, zoom);\n                }\n            };\n            if (selectedLocations) {\n                for (const id of selectedLocations) {\n                    adjust(id);\n                }\n            }\n            return clusterIndex.availableZoomLevels.filter((level) => minZoom <= level && level <= maxZoom);\n        });\n        this._getClusterZoom = createSelector(this.getClusterIndex, this.getZoom, this.getAvailableClusterZoomLevels, (clusterIndex, mapZoom, availableClusterZoomLevels) => {\n            if (!clusterIndex)\n                return undefined;\n            if (!availableClusterZoomLevels || mapZoom == null) {\n                return undefined;\n            }\n            const clusterZoom = findAppropriateZoomLevel(availableClusterZoomLevels, mapZoom);\n            return clusterZoom;\n        });\n        this.getClusterZoom = (state, props) => {\n            const { settings } = state;\n            if (!settings.clusteringEnabled)\n                return undefined;\n            if (settings.clusteringAuto || settings.clusteringLevel == null) {\n                return this._getClusterZoom(state, props);\n            }\n            return settings.clusteringLevel;\n        };\n        this.getLocationsForSearchBox = createSelector(this.getClusteringEnabled, this.getLocationsHavingFlows, this.getSelectedLocations, this.getClusterZoom, this.getClusterIndex, (clusteringEnabled, locations, selectedLocations, clusterZoom, clusterIndex) => {\n            if (!locations)\n                return undefined;\n            let result = Array.from(locations);\n            // if (clusteringEnabled) {\n            //   if (clusterIndex) {\n            //     const zoomItems = clusterIndex.getClusterNodesFor(clusterZoom);\n            //     if (zoomItems) {\n            //       result = result.concat(zoomItems.filter(isCluster));\n            //     }\n            //   }\n            // }\n            if (clusterIndex && selectedLocations) {\n                const toAppend = [];\n                for (const id of selectedLocations) {\n                    const cluster = clusterIndex.getClusterById(id);\n                    if (cluster &&\n                        !result.find((d) => (isLocationClusterNode(d)\n                            ? d.id\n                            : this.accessors.getLocationId(d)) === id)) {\n                        toAppend.push(cluster);\n                    }\n                }\n                if (toAppend.length > 0) {\n                    result = result.concat(toAppend);\n                }\n            }\n            return result;\n        });\n        this.getDiffMode = createSelector(this.getFlowsFromProps, (flows) => {\n            if (flows) {\n                for (const f of flows) {\n                    if (this.accessors.getFlowMagnitude(f) < 0) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        });\n        this._getFlowmapColors = createSelector(this.getDiffMode, this.getColorScheme, this.getDarkMode, this.getFadeEnabled, this.getFadeOpacityEnabled, this.getFadeAmount, this.getAnimate, getColors);\n        this.getFlowmapColorsRGBA = createSelector(this._getFlowmapColors, (flowmapColors) => {\n            return isDiffColors(flowmapColors)\n                ? getDiffColorsRGBA(flowmapColors)\n                : getColorsRGBA(flowmapColors);\n        });\n        this.getUnknownLocations = createSelector(this.getLocationIds, this.getFlowsFromProps, this.getSortedFlowsForKnownLocations, (ids, flows, flowsForKnownLocations) => {\n            if (!ids || !flows)\n                return undefined;\n            if (flowsForKnownLocations\n            // && flows.length === flowsForKnownLocations.length\n            )\n                return undefined;\n            const missing = new Set();\n            for (const flow of flows) {\n                if (!ids.has(this.accessors.getFlowOriginId(flow)))\n                    missing.add(this.accessors.getFlowOriginId(flow));\n                if (!ids.has(this.accessors.getFlowDestId(flow)))\n                    missing.add(this.accessors.getFlowDestId(flow));\n            }\n            return missing;\n        });\n        this.getSortedAggregatedFilteredFlows = createSelector(this.getClusterIndex, this.getClusteringEnabled, this.getSortedFlowsForKnownLocationsFilteredByTime, this.getClusterZoom, this.getTimeExtent, (clusterTree, isClusteringEnabled, flows, clusterZoom, timeExtent) => {\n            if (!flows)\n                return undefined;\n            let aggregated;\n            if (isClusteringEnabled && clusterTree && clusterZoom != null) {\n                aggregated = clusterTree.aggregateFlows(\n                // TODO: aggregate across time\n                // timeExtent != null\n                //   ? aggregateFlows(flows) // clusterTree.aggregateFlows won't aggregate unclustered across time\n                //   : flows,\n                flows, clusterZoom, this.accessors.getFlowmapDataAccessors());\n            }\n            else {\n                aggregated = aggregateFlows(flows, this.accessors.getFlowmapDataAccessors());\n            }\n            aggregated.sort((a, b) => descending(Math.abs(this.accessors.getFlowMagnitude(a)), Math.abs(this.accessors.getFlowMagnitude(b))));\n            return aggregated;\n        });\n        this.getExpandedSelectedLocationsSet = createSelector(this.getClusteringEnabled, this.getSelectedLocationsSet, this.getClusterIndex, (clusteringEnabled, selectedLocations, clusterIndex) => {\n            if (!selectedLocations || !clusterIndex) {\n                return selectedLocations;\n            }\n            const result = new Set();\n            for (const locationId of selectedLocations) {\n                const cluster = clusterIndex.getClusterById(locationId);\n                if (cluster) {\n                    const expanded = clusterIndex.expandCluster(cluster);\n                    for (const id of expanded) {\n                        result.add(id);\n                    }\n                }\n                else {\n                    result.add(locationId);\n                }\n            }\n            return result;\n        });\n        this.getTotalCountsByTime = createSelector(this.getSortedFlowsForKnownLocations, this.getTimeGranularityKey, this.getTimeExtent, this.getExpandedSelectedLocationsSet, this.getLocationFilterMode, (flows, timeGranularityKey, timeExtent, selectedLocationSet, locationFilterMode) => {\n            const timeGranularity = timeGranularityKey\n                ? getTimeGranularityByKey(timeGranularityKey)\n                : undefined;\n            if (!flows || !timeGranularity || !timeExtent)\n                return undefined;\n            const byTime = flows.reduce((m, flow) => {\n                var _a;\n                if (this.isFlowInSelection(flow, selectedLocationSet, locationFilterMode)) {\n                    const key = timeGranularity\n                        .interval(this.accessors.getFlowTime(flow))\n                        .getTime();\n                    m.set(key, ((_a = m.get(key)) !== null && _a !== void 0 ? _a : 0) + this.accessors.getFlowMagnitude(flow));\n                }\n                return m;\n            }, new Map());\n            return Array.from(byTime.entries()).map(([millis, count]) => ({\n                time: new Date(millis),\n                count,\n            }));\n        });\n        this.getMaxLocationCircleSize = createSelector(this.getLocationTotalsEnabled, (locationTotalsEnabled) => (locationTotalsEnabled ? 17 : 1));\n        this.getViewportBoundingBox = createSelector(this.getViewport, this.getMaxLocationCircleSize, getViewportBoundingBox);\n        this.getLocationsForZoom = createSelector(this.getClusteringEnabled, this.getLocationsHavingFlows, this.getClusterIndex, this.getClusterZoom, (clusteringEnabled, locationsHavingFlows, clusterIndex, clusterZoom) => {\n            if (clusteringEnabled && clusterIndex) {\n                return clusterIndex.getClusterNodesFor(clusterZoom);\n            }\n            else {\n                return locationsHavingFlows;\n            }\n        });\n        this.getLocationTotals = createSelector(this.getLocationsForZoom, this.getSortedAggregatedFilteredFlows, this.getSelectedLocationsSet, this.getLocationFilterMode, (locations, flows, selectedLocationsSet, locationFilterMode) => {\n            if (!flows)\n                return undefined;\n            const totals = new Map();\n            const add = (id, d) => {\n                var _a;\n                const rv = (_a = totals.get(id)) !== null && _a !== void 0 ? _a : {\n                    incomingCount: 0,\n                    outgoingCount: 0,\n                    internalCount: 0,\n                };\n                if (d.incomingCount != null)\n                    rv.incomingCount += d.incomingCount;\n                if (d.outgoingCount != null)\n                    rv.outgoingCount += d.outgoingCount;\n                if (d.internalCount != null)\n                    rv.internalCount += d.internalCount;\n                return rv;\n            };\n            for (const f of flows) {\n                if (this.isFlowInSelection(f, selectedLocationsSet, locationFilterMode)) {\n                    const originId = this.accessors.getFlowOriginId(f);\n                    const destId = this.accessors.getFlowDestId(f);\n                    const count = this.accessors.getFlowMagnitude(f);\n                    if (originId === destId) {\n                        totals.set(originId, add(originId, { internalCount: count }));\n                    }\n                    else {\n                        totals.set(originId, add(originId, { outgoingCount: count }));\n                        totals.set(destId, add(destId, { incomingCount: count }));\n                    }\n                }\n            }\n            return totals;\n        });\n        this.getLocationsTree = createSelector(this.getLocationsForZoom, (locations) => {\n            if (!locations) {\n                return undefined;\n            }\n            return new KDBush(\n            // @ts-ignore\n            locations, (location) => lngX(this.accessors.getLocationLon(location)), (location) => latY(this.accessors.getLocationLat(location)));\n        });\n        this._getLocationIdsInViewport = createSelector(this.getLocationsTree, this.getViewportBoundingBox, (tree, bbox) => {\n            const ids = this._getLocationsInBboxIndices(tree, bbox);\n            if (ids) {\n                return new Set(ids.map((idx) => tree.points[idx].id));\n            }\n            return undefined;\n        });\n        this.getLocationIdsInViewport = createSelectorCreator(defaultMemoize, \n        // @ts-ignore\n        (s1, s2, index) => {\n            if (s1 === s2)\n                return true;\n            if (s1 == null || s2 == null)\n                return false;\n            if (s1.size !== s2.size)\n                return false;\n            for (const item of s1)\n                if (!s2.has(item))\n                    return false;\n            return true;\n        })(this._getLocationIdsInViewport, (locationIds) => {\n            if (!locationIds)\n                return undefined;\n            return locationIds;\n        });\n        this.getTotalUnfilteredCount = createSelector(this.getSortedFlowsForKnownLocations, (flows) => {\n            if (!flows)\n                return undefined;\n            return flows.reduce((m, flow) => m + this.accessors.getFlowMagnitude(flow), 0);\n        });\n        this.getTotalFilteredCount = createSelector(this.getSortedAggregatedFilteredFlows, this.getSelectedLocationsSet, this.getLocationFilterMode, (flows, selectedLocationSet, locationFilterMode) => {\n            if (!flows)\n                return undefined;\n            const count = flows.reduce((m, flow) => {\n                if (this.isFlowInSelection(flow, selectedLocationSet, locationFilterMode)) {\n                    return m + this.accessors.getFlowMagnitude(flow);\n                }\n                return m;\n            }, 0);\n            return count;\n        });\n        this._getLocationTotalsExtent = createSelector(this.getLocationTotals, (locationTotals) => calcLocationTotalsExtent(locationTotals, undefined));\n        this._getLocationTotalsForViewportExtent = createSelector(this.getLocationTotals, this.getLocationIdsInViewport, (locationTotals, locationsInViewport) => calcLocationTotalsExtent(locationTotals, locationsInViewport));\n        this.getLocationTotalsExtent = (state, props) => {\n            if (state.settings.adaptiveScalesEnabled) {\n                return this._getLocationTotalsForViewportExtent(state, props);\n            }\n            else {\n                return this._getLocationTotalsExtent(state, props);\n            }\n        };\n        this.getFlowsForFlowmapLayer = createSelector(this.getSortedAggregatedFilteredFlows, this.getLocationIdsInViewport, this.getSelectedLocationsSet, this.getLocationFilterMode, this.getMaxTopFlowsDisplayNum, (flows, locationIdsInViewport, selectedLocationsSet, locationFilterMode, maxTopFlowsDisplayNum) => {\n            if (!flows || !locationIdsInViewport)\n                return undefined;\n            const picked = [];\n            let pickedCount = 0;\n            for (const flow of flows) {\n                const origin = this.accessors.getFlowOriginId(flow);\n                const dest = this.accessors.getFlowDestId(flow);\n                if (locationIdsInViewport.has(origin) ||\n                    locationIdsInViewport.has(dest)) {\n                    if (this.isFlowInSelection(flow, selectedLocationsSet, locationFilterMode)) {\n                        if (origin !== dest) {\n                            // exclude self-loops\n                            picked.push(flow);\n                            pickedCount++;\n                        }\n                    }\n                }\n                // Only keep top\n                if (pickedCount > maxTopFlowsDisplayNum)\n                    break;\n            }\n            // assuming they are sorted in descending order,\n            // we need ascending for rendering\n            return picked.reverse();\n        });\n        this._getFlowMagnitudeExtent = createSelector(this.getSortedAggregatedFilteredFlows, this.getSelectedLocationsSet, this.getLocationFilterMode, (flows, selectedLocationsSet, locationFilterMode) => {\n            if (!flows)\n                return undefined;\n            let rv = undefined;\n            for (const f of flows) {\n                if (this.accessors.getFlowOriginId(f) !==\n                    this.accessors.getFlowDestId(f) &&\n                    this.isFlowInSelection(f, selectedLocationsSet, locationFilterMode)) {\n                    const count = this.accessors.getFlowMagnitude(f);\n                    if (rv == null) {\n                        rv = [count, count];\n                    }\n                    else {\n                        if (count < rv[0])\n                            rv[0] = count;\n                        if (count > rv[1])\n                            rv[1] = count;\n                    }\n                }\n            }\n            return rv;\n        });\n        this._getAdaptiveFlowMagnitudeExtent = createSelector(this.getFlowsForFlowmapLayer, (flows) => {\n            if (!flows)\n                return undefined;\n            const rv = extent(flows, this.accessors.getFlowMagnitude);\n            return rv[0] !== undefined && rv[1] !== undefined ? rv : undefined;\n        });\n        this.getFlowMagnitudeExtent = (state, props) => {\n            if (state.settings.adaptiveScalesEnabled) {\n                return this._getAdaptiveFlowMagnitudeExtent(state, props);\n            }\n            else {\n                return this._getFlowMagnitudeExtent(state, props);\n            }\n        };\n        this.getLocationMaxAbsTotalGetter = createSelector(this.getLocationTotals, (locationTotals) => {\n            return (locationId) => {\n                const total = locationTotals === null || locationTotals === void 0 ? void 0 : locationTotals.get(locationId);\n                if (!total)\n                    return undefined;\n                return Math.max(Math.abs(total.incomingCount + total.internalCount), Math.abs(total.outgoingCount + total.internalCount));\n            };\n        });\n        this.getFlowThicknessScale = createSelector(this.getFlowMagnitudeExtent, getFlowThicknessScale);\n        this.getCircleSizeScale = createSelector(this.getMaxLocationCircleSize, this.getLocationTotalsEnabled, this.getLocationTotalsExtent, (maxLocationCircleSize, locationTotalsEnabled, locationTotalsExtent) => {\n            if (!locationTotalsEnabled) {\n                return () => maxLocationCircleSize;\n            }\n            if (!locationTotalsExtent)\n                return undefined;\n            return scaleSqrt()\n                .range([0, maxLocationCircleSize])\n                .domain([\n                0,\n                // should support diff mode too\n                Math.max.apply(null, locationTotalsExtent.map((x) => Math.abs(x || 0))),\n            ]);\n        });\n        this.getInCircleSizeGetter = createSelector(this.getCircleSizeScale, this.getLocationTotals, (circleSizeScale, locationTotals) => {\n            return (locationId) => {\n                const total = locationTotals === null || locationTotals === void 0 ? void 0 : locationTotals.get(locationId);\n                if (total && circleSizeScale) {\n                    return (circleSizeScale(Math.abs(total.incomingCount + total.internalCount)) || 0);\n                }\n                return 0;\n            };\n        });\n        this.getOutCircleSizeGetter = createSelector(this.getCircleSizeScale, this.getLocationTotals, (circleSizeScale, locationTotals) => {\n            return (locationId) => {\n                const total = locationTotals === null || locationTotals === void 0 ? void 0 : locationTotals.get(locationId);\n                if (total && circleSizeScale) {\n                    return (circleSizeScale(Math.abs(total.outgoingCount + total.internalCount)) || 0);\n                }\n                return 0;\n            };\n        });\n        this.getSortedLocationsForZoom = createSelector(this.getLocationsForZoom, this.getInCircleSizeGetter, this.getOutCircleSizeGetter, (locations, getInCircleSize, getOutCircleSize) => {\n            if (!locations)\n                return undefined;\n            const nextLocations = [...locations];\n            return nextLocations.sort((a, b) => {\n                const idA = this.accessors.getLocationId(a);\n                const idB = this.accessors.getLocationId(b);\n                return ascending(Math.max(getInCircleSize(idA), getOutCircleSize(idA)), Math.max(getInCircleSize(idB), getOutCircleSize(idB)));\n            });\n        });\n        this.getLocationsForFlowmapLayer = createSelector(this.getSortedLocationsForZoom, \n        // this.getLocationIdsInViewport,\n        (locations) => {\n            // if (!locations) return undefined;\n            // if (!locationIdsInViewport) return locations;\n            // if (locationIdsInViewport.size === locations.length) return locations;\n            // const filtered = [];\n            // for (const loc of locations) {\n            //   if (locationIdsInViewport.has(loc.id)) {\n            //     filtered.push(loc);\n            //   }\n            // }\n            // return filtered;\n            // @ts-ignore\n            // return locations.filter(\n            //   (loc: L | ClusterNode) => locationIdsInViewport!.has(loc.id)\n            // );\n            // TODO: return location in viewport + \"connected\" ones\n            return locations;\n        });\n        this.getLocationsForFlowmapLayerById = createSelector(this.getLocationsForFlowmapLayer, (locations) => {\n            if (!locations)\n                return undefined;\n            return locations.reduce((m, d) => (m.set(this.accessors.getLocationId(d), d), m), new Map());\n        });\n        this.getLocationOrClusterByIdGetter = createSelector(this.getClusterIndex, this.getLocationsById, (clusterIndex, locationsById) => {\n            return (id) => { var _a; return (_a = clusterIndex === null || clusterIndex === void 0 ? void 0 : clusterIndex.getClusterById(id)) !== null && _a !== void 0 ? _a : locationsById === null || locationsById === void 0 ? void 0 : locationsById.get(id); };\n        });\n        this.getLayersData = createSelector(this.getLocationsForFlowmapLayer, this.getFlowsForFlowmapLayer, this.getFlowmapColorsRGBA, this.getLocationsForFlowmapLayerById, this.getLocationIdsInViewport, this.getInCircleSizeGetter, this.getOutCircleSizeGetter, this.getFlowThicknessScale, this.getAnimate, this.getLocationLabelsEnabled, (locations, flows, flowmapColors, locationsById, locationIdsInViewport, getInCircleSize, getOutCircleSize, flowThicknessScale, animationEnabled, locationLabelsEnabled) => {\n            return this._prepareLayersData(locations, flows, flowmapColors, locationsById, locationIdsInViewport, getInCircleSize, getOutCircleSize, flowThicknessScale, animationEnabled, locationLabelsEnabled);\n        });\n        this.accessors = new FlowmapAggregateAccessors(accessors);\n        this.setAccessors(accessors);\n    }\n    setAccessors(accessors) {\n        this.accessors = new FlowmapAggregateAccessors(accessors);\n    }\n    getAggregateAccessors() {\n        return this.accessors;\n    }\n    prepareLayersData(state, props) {\n        const locations = this.getLocationsForFlowmapLayer(state, props) || [];\n        const flows = this.getFlowsForFlowmapLayer(state, props) || [];\n        const flowmapColors = this.getFlowmapColorsRGBA(state, props);\n        const locationsById = this.getLocationsForFlowmapLayerById(state, props);\n        const locationIdsInViewport = this.getLocationIdsInViewport(state, props);\n        const getInCircleSize = this.getInCircleSizeGetter(state, props);\n        const getOutCircleSize = this.getOutCircleSizeGetter(state, props);\n        const flowThicknessScale = this.getFlowThicknessScale(state, props);\n        const locationLabelsEnabled = this.getLocationLabelsEnabled(state, props);\n        return this._prepareLayersData(locations, flows, flowmapColors, locationsById, locationIdsInViewport, getInCircleSize, getOutCircleSize, flowThicknessScale, state.settings.animationEnabled, locationLabelsEnabled);\n    }\n    _prepareLayersData(locations, flows, flowmapColors, locationsById, locationIdsInViewport, getInCircleSize, getOutCircleSize, flowThicknessScale, animationEnabled, locationLabelsEnabled) {\n        if (!locations)\n            locations = [];\n        if (!flows)\n            flows = [];\n        const { getFlowOriginId, getFlowDestId, getFlowMagnitude, getLocationId, getLocationLon, getLocationLat, getLocationName, } = this.accessors;\n        const flowMagnitudeExtent = extent(flows, (f) => getFlowMagnitude(f));\n        const flowColorScale = getFlowColorScale(flowmapColors, flowMagnitudeExtent, false);\n        // Using a generator here helps to avoid creating intermediary arrays\n        const circlePositions = Float32Array.from((function* () {\n            for (const location of locations) {\n                yield getLocationLon(location);\n                yield getLocationLat(location);\n            }\n        })());\n        // TODO: diff mode\n        const circleColor = isDiffColorsRGBA(flowmapColors)\n            ? flowmapColors.positive.locationCircles.inner\n            : flowmapColors.locationCircles.inner;\n        const circleColors = Uint8Array.from((function* () {\n            for (const location of locations) {\n                yield* circleColor;\n            }\n        })());\n        const inCircleRadii = Float32Array.from((function* () {\n            for (const location of locations) {\n                const id = getLocationId(location);\n                yield (locationIdsInViewport === null || locationIdsInViewport === void 0 ? void 0 : locationIdsInViewport.has(id)) ? getInCircleSize(id) : 1.0;\n            }\n        })());\n        const outCircleRadii = Float32Array.from((function* () {\n            for (const location of locations) {\n                const id = getLocationId(location);\n                yield (locationIdsInViewport === null || locationIdsInViewport === void 0 ? void 0 : locationIdsInViewport.has(id)) ? getOutCircleSize(id) : 1.0;\n            }\n        })());\n        const sourcePositions = Float32Array.from((function* () {\n            for (const flow of flows) {\n                const loc = locationsById === null || locationsById === void 0 ? void 0 : locationsById.get(getFlowOriginId(flow));\n                yield loc ? getLocationLon(loc) : 0;\n                yield loc ? getLocationLat(loc) : 0;\n            }\n        })());\n        const targetPositions = Float32Array.from((function* () {\n            for (const flow of flows) {\n                const loc = locationsById === null || locationsById === void 0 ? void 0 : locationsById.get(getFlowDestId(flow));\n                yield loc ? getLocationLon(loc) : 0;\n                yield loc ? getLocationLat(loc) : 0;\n            }\n        })());\n        const thicknesses = Float32Array.from((function* () {\n            for (const flow of flows) {\n                yield flowThicknessScale\n                    ? flowThicknessScale(getFlowMagnitude(flow)) || 0\n                    : 0;\n            }\n        })());\n        const endpointOffsets = Float32Array.from((function* () {\n            for (const flow of flows) {\n                const originId = getFlowOriginId(flow);\n                const destId = getFlowDestId(flow);\n                yield Math.max(getInCircleSize(originId), getOutCircleSize(originId));\n                yield Math.max(getInCircleSize(destId), getOutCircleSize(destId));\n            }\n        })());\n        const flowLineColors = Uint8Array.from((function* () {\n            for (const flow of flows) {\n                yield* flowColorScale(getFlowMagnitude(flow));\n            }\n        })());\n        const staggeringValues = animationEnabled\n            ? Float32Array.from((function* () {\n                for (const f of flows) {\n                    // @ts-ignore\n                    yield new alea(`${getFlowOriginId(f)}-${getFlowDestId(f)}`)();\n                }\n            })())\n            : undefined;\n        return Object.assign({ circleAttributes: {\n                length: locations.length,\n                attributes: {\n                    getPosition: { value: circlePositions, size: 2 },\n                    getColor: { value: circleColors, size: 4 },\n                    getInRadius: { value: inCircleRadii, size: 1 },\n                    getOutRadius: { value: outCircleRadii, size: 1 },\n                },\n            }, lineAttributes: {\n                length: flows.length,\n                attributes: Object.assign({ getSourcePosition: { value: sourcePositions, size: 2 }, getTargetPosition: { value: targetPositions, size: 2 }, getThickness: { value: thicknesses, size: 1 }, getColor: { value: flowLineColors, size: 4 }, getEndpointOffsets: { value: endpointOffsets, size: 2 } }, (staggeringValues\n                    ? { getStaggering: { value: staggeringValues, size: 1 } }\n                    : {})),\n            } }, (locationLabelsEnabled\n            ? { locationLabels: locations.map(getLocationName) }\n            : undefined));\n    }\n    getLocationsInBbox(tree, bbox) {\n        if (!tree)\n            return undefined;\n        return this._getLocationsInBboxIndices(tree, bbox).map((idx) => tree.points[idx]);\n    }\n    _getLocationsInBboxIndices(tree, bbox) {\n        if (!tree)\n            return undefined;\n        const [lon1, lat1, lon2, lat2] = bbox;\n        const [x1, y1, x2, y2] = [lngX(lon1), latY(lat1), lngX(lon2), latY(lat2)];\n        return tree.range(Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2));\n    }\n    isFlowInSelection(flow, selectedLocationsSet, locationFilterMode) {\n        const origin = this.accessors.getFlowOriginId(flow);\n        const dest = this.accessors.getFlowDestId(flow);\n        if (selectedLocationsSet) {\n            switch (locationFilterMode) {\n                case LocationFilterMode.ALL:\n                    return (selectedLocationsSet.has(origin) || selectedLocationsSet.has(dest));\n                case LocationFilterMode.BETWEEN:\n                    return (selectedLocationsSet.has(origin) && selectedLocationsSet.has(dest));\n                case LocationFilterMode.INCOMING:\n                    return selectedLocationsSet.has(dest);\n                case LocationFilterMode.OUTGOING:\n                    return selectedLocationsSet.has(origin);\n            }\n        }\n        return true;\n    }\n}\nfunction calcLocationTotalsExtent(locationTotals, locationIdsInViewport) {\n    if (!locationTotals)\n        return undefined;\n    let rv = undefined;\n    for (const [id, { incomingCount, outgoingCount, internalCount },] of locationTotals.entries()) {\n        if (locationIdsInViewport == null || locationIdsInViewport.has(id)) {\n            const lo = Math.min(incomingCount + internalCount, outgoingCount + internalCount, internalCount);\n            const hi = Math.max(incomingCount + internalCount, outgoingCount + internalCount, internalCount);\n            if (!rv) {\n                rv = [lo, hi];\n            }\n            else {\n                if (lo < rv[0])\n                    rv[0] = lo;\n                if (hi > rv[1])\n                    rv[1] = hi;\n            }\n        }\n    }\n    return rv;\n}\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin((lat * Math.PI) / 180);\n    const y = 0.5 - (0.25 * Math.log((1 + sin) / (1 - sin))) / Math.PI;\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\nfunction aggregateFlows(flows, flowAccessors) {\n    // Sum up flows with same origin, dest\n    const byOriginDest = rollup(flows, (ff) => {\n        const origin = flowAccessors.getFlowOriginId(ff[0]);\n        const dest = flowAccessors.getFlowDestId(ff[0]);\n        // const color = ff[0].color;\n        const rv = {\n            aggregate: true,\n            origin,\n            dest,\n            count: ff.reduce((m, f) => {\n                const count = flowAccessors.getFlowMagnitude(f);\n                if (count) {\n                    if (!isNaN(count) && isFinite(count))\n                        return m + count;\n                }\n                return m;\n            }, 0),\n            // time: undefined,\n        };\n        // if (color) rv.color = color;\n        return rv;\n    }, flowAccessors.getFlowOriginId, flowAccessors.getFlowDestId);\n    const rv = [];\n    for (const values of byOriginDest.values()) {\n        for (const value of values.values()) {\n            rv.push(value);\n        }\n    }\n    return rv;\n}\n/**\n * This is used to augment hover picking info so that we can displace location tooltip\n * @param circleAttributes\n * @param index\n */\nexport function getOuterCircleRadiusByIndex(circleAttributes, index) {\n    const { getInRadius, getOutRadius } = circleAttributes.attributes;\n    return Math.max(getInRadius.value[index], getOutRadius.value[index]);\n}\nexport function getLocationCoordsByIndex(circleAttributes, index) {\n    const { getPosition } = circleAttributes.attributes;\n    return [getPosition.value[index * 2], getPosition.value[index * 2 + 1]];\n}\nexport function getFlowLineAttributesByIndex(lineAttributes, index) {\n    const { getColor, getEndpointOffsets, getSourcePosition, getTargetPosition, getThickness, getStaggering, } = lineAttributes.attributes;\n    return {\n        length: 1,\n        attributes: Object.assign({ getColor: {\n                value: getColor.value.subarray(index * 4, (index + 1) * 4),\n                size: 4,\n            }, getEndpointOffsets: {\n                value: getEndpointOffsets.value.subarray(index * 2, (index + 1) * 2),\n                size: 2,\n            }, getSourcePosition: {\n                value: getSourcePosition.value.subarray(index * 2, (index + 1) * 2),\n                size: 2,\n            }, getTargetPosition: {\n                value: getTargetPosition.value.subarray(index * 2, (index + 1) * 2),\n                size: 2,\n            }, getThickness: {\n                value: getThickness.value.subarray(index, index + 1),\n                size: 1,\n            } }, (getStaggering\n            ? {\n                getStaggering: {\n                    value: getStaggering.value.subarray(index, index + 1),\n                    size: 1,\n                },\n            }\n            : undefined)),\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import { geoBounds } from 'd3-geo';\nimport { fitBounds } from '@math.gl/web-mercator';\nexport function getViewStateForFeatures(featureCollection, size, opts) {\n    const { pad = 0.05, maxZoom = 100 } = opts || {};\n    const bounds = geoBounds(featureCollection);\n    const [[x1, y1], [x2, y2]] = bounds;\n    const paddedBounds = pad\n        ? [\n            [x1 - pad * (x2 - x1), y1 - pad * (y2 - y1)],\n            [x2 + pad * (x2 - x1), y2 + pad * (y2 - y1)],\n        ]\n        : bounds;\n    const [width, height] = size;\n    return Object.assign(Object.assign({}, fitBounds({\n        width,\n        height,\n        bounds: paddedBounds,\n        padding: opts === null || opts === void 0 ? void 0 : opts.padding,\n        // minZoom,\n        maxZoom,\n    })), { width,\n        height, bearing: 0, pitch: 0 });\n}\nexport function getViewStateForLocations(locations, getLocationCoords, size, opts) {\n    const asGeometry = (location) => ({\n        type: 'Point',\n        coordinates: getLocationCoords(location),\n    });\n    let geometries;\n    if (Array.isArray(locations)) {\n        geometries = locations.map(asGeometry);\n    }\n    else {\n        geometries = [];\n        for (const location of locations) {\n            geometries.push(asGeometry(location));\n        }\n    }\n    return getViewStateForFeatures({\n        type: 'GeometryCollection',\n        geometries,\n    }, size, opts);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Vmlld1N0YXRlRm9yTG9jYXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2dldFZpZXdTdGF0ZUZvckxvY2F0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQWtCaEQsTUFBTSxVQUFVLHVCQUF1QixDQUNyQyxpQkFFc0IsRUFDdEIsSUFBc0IsRUFDdEIsSUFBMEI7SUFFMUIsTUFBTSxFQUFDLEdBQUcsR0FBRyxJQUFJLEVBQUUsT0FBTyxHQUFHLEdBQUcsRUFBQyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7SUFDL0MsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLGlCQUF3QixDQUFDLENBQUM7SUFDbkQsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3BDLE1BQU0sWUFBWSxHQUF5QyxHQUFHO1FBQzVELENBQUMsQ0FBQztZQUNFLENBQUMsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQzVDLENBQUMsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1NBQzdDO1FBQ0gsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNYLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQzdCLHVDQUNLLFNBQVMsQ0FBQztRQUNYLEtBQUs7UUFDTCxNQUFNO1FBQ04sTUFBTSxFQUFFLFlBQVk7UUFDcEIsT0FBTyxFQUFFLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxPQUFPO1FBQ3RCLFdBQVc7UUFDWCxPQUFPO0tBQ1IsQ0FBQyxLQUNGLEtBQUs7UUFDTCxNQUFNLEVBQ04sT0FBTyxFQUFFLENBQUMsRUFDVixLQUFLLEVBQUUsQ0FBQyxJQUNSO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSx3QkFBd0IsQ0FDdEMsU0FBc0IsRUFDdEIsaUJBQW9ELEVBQ3BELElBQXNCLEVBQ3RCLElBQTBCO0lBRTFCLE1BQU0sVUFBVSxHQUFHLENBQUMsUUFBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLElBQUksRUFBRSxPQUFPO1FBQ2IsV0FBVyxFQUFFLGlCQUFpQixDQUFDLFFBQVEsQ0FBQztLQUN6QyxDQUFDLENBQUM7SUFDSCxJQUFJLFVBQVUsQ0FBQztJQUNmLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUM1QixVQUFVLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUN4QztTQUFNO1FBQ0wsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNoQixLQUFLLE1BQU0sUUFBUSxJQUFJLFNBQVMsRUFBRTtZQUNoQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQ3ZDO0tBQ0Y7SUFDRCxPQUFPLHVCQUF1QixDQUM1QjtRQUNFLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsVUFBVTtLQUNKLEVBQ1IsSUFBSSxFQUNKLElBQUksQ0FDTCxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2VvQm91bmRzfSBmcm9tICdkMy1nZW8nO1xuaW1wb3J0IHtmaXRCb3VuZHN9IGZyb20gJ0BtYXRoLmdsL3dlYi1tZXJjYXRvcic7XG5pbXBvcnQgdHlwZSB7XG4gIEZlYXR1cmVDb2xsZWN0aW9uLFxuICBHZW9tZXRyeUNvbGxlY3Rpb24sXG4gIEdlb21ldHJ5T2JqZWN0LFxufSBmcm9tICdnZW9qc29uJztcbmltcG9ydCB0eXBlIHtWaWV3U3RhdGV9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgdHlwZSBMb2NhdGlvblByb3BlcnRpZXMgPSBhbnk7XG5cbmV4cG9ydCB0eXBlIEdldFZpZXdTdGF0ZU9wdGlvbnMgPSB7XG4gIHBhZD86IG51bWJlcjsgLy8gc2l6ZSByYXRpb1xuICBwYWRkaW5nPzoge3RvcDogbnVtYmVyOyBib3R0b206IG51bWJlcjsgbGVmdDogbnVtYmVyOyByaWdodDogbnVtYmVyfTtcbiAgdGlsZVNpemU/OiBudW1iZXI7XG4gIC8vIG1pblpvb20/OiBudW1iZXI7ICAvLyBub3Qgc3VwcG9ydGVkIGJ5IGZpdEJvdW5kc1xuICBtYXhab29tPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFZpZXdTdGF0ZUZvckZlYXR1cmVzKFxuICBmZWF0dXJlQ29sbGVjdGlvbjpcbiAgICB8IEZlYXR1cmVDb2xsZWN0aW9uPEdlb21ldHJ5T2JqZWN0LCBMb2NhdGlvblByb3BlcnRpZXM+XG4gICAgfCBHZW9tZXRyeUNvbGxlY3Rpb24sXG4gIHNpemU6IFtudW1iZXIsIG51bWJlcl0sXG4gIG9wdHM/OiBHZXRWaWV3U3RhdGVPcHRpb25zLFxuKTogVmlld1N0YXRlICYge3dpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyfSB7XG4gIGNvbnN0IHtwYWQgPSAwLjA1LCBtYXhab29tID0gMTAwfSA9IG9wdHMgfHwge307XG4gIGNvbnN0IGJvdW5kcyA9IGdlb0JvdW5kcyhmZWF0dXJlQ29sbGVjdGlvbiBhcyBhbnkpO1xuICBjb25zdCBbW3gxLCB5MV0sIFt4MiwgeTJdXSA9IGJvdW5kcztcbiAgY29uc3QgcGFkZGVkQm91bmRzOiBbW251bWJlciwgbnVtYmVyXSwgW251bWJlciwgbnVtYmVyXV0gPSBwYWRcbiAgICA/IFtcbiAgICAgICAgW3gxIC0gcGFkICogKHgyIC0geDEpLCB5MSAtIHBhZCAqICh5MiAtIHkxKV0sXG4gICAgICAgIFt4MiArIHBhZCAqICh4MiAtIHgxKSwgeTIgKyBwYWQgKiAoeTIgLSB5MSldLFxuICAgICAgXVxuICAgIDogYm91bmRzO1xuICBjb25zdCBbd2lkdGgsIGhlaWdodF0gPSBzaXplO1xuICByZXR1cm4ge1xuICAgIC4uLmZpdEJvdW5kcyh7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIGJvdW5kczogcGFkZGVkQm91bmRzLFxuICAgICAgcGFkZGluZzogb3B0cz8ucGFkZGluZyxcbiAgICAgIC8vIG1pblpvb20sXG4gICAgICBtYXhab29tLFxuICAgIH0pLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBiZWFyaW5nOiAwLFxuICAgIHBpdGNoOiAwLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Vmlld1N0YXRlRm9yTG9jYXRpb25zPEw+KFxuICBsb2NhdGlvbnM6IEl0ZXJhYmxlPEw+LFxuICBnZXRMb2NhdGlvbkNvb3JkczogKGxvY2F0aW9uOiBMKSA9PiBbbnVtYmVyLCBudW1iZXJdLFxuICBzaXplOiBbbnVtYmVyLCBudW1iZXJdLFxuICBvcHRzPzogR2V0Vmlld1N0YXRlT3B0aW9ucyxcbik6IFZpZXdTdGF0ZSAmIHt3aWR0aDogbnVtYmVyOyBoZWlnaHQ6IG51bWJlcn0ge1xuICBjb25zdCBhc0dlb21ldHJ5ID0gKGxvY2F0aW9uOiBMKSA9PiAoe1xuICAgIHR5cGU6ICdQb2ludCcsXG4gICAgY29vcmRpbmF0ZXM6IGdldExvY2F0aW9uQ29vcmRzKGxvY2F0aW9uKSxcbiAgfSk7XG4gIGxldCBnZW9tZXRyaWVzO1xuICBpZiAoQXJyYXkuaXNBcnJheShsb2NhdGlvbnMpKSB7XG4gICAgZ2VvbWV0cmllcyA9IGxvY2F0aW9ucy5tYXAoYXNHZW9tZXRyeSk7XG4gIH0gZWxzZSB7XG4gICAgZ2VvbWV0cmllcyA9IFtdO1xuICAgIGZvciAoY29uc3QgbG9jYXRpb24gb2YgbG9jYXRpb25zKSB7XG4gICAgICBnZW9tZXRyaWVzLnB1c2goYXNHZW9tZXRyeShsb2NhdGlvbikpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZ2V0Vmlld1N0YXRlRm9yRmVhdHVyZXMoXG4gICAge1xuICAgICAgdHlwZTogJ0dlb21ldHJ5Q29sbGVjdGlvbicsXG4gICAgICBnZW9tZXRyaWVzLFxuICAgIH0gYXMgYW55LFxuICAgIHNpemUsXG4gICAgb3B0cyxcbiAgKTtcbn1cbiJdfQ==","export function isFlowmapData(data) {\n    return (data && data.locations && data.flows\n    // TODO: test that they are iterable\n    // Array.isArray(data.locations) &&\n    // Array.isArray(data.flows)\n    );\n}\nexport function isFlowmapDataProvider(dataProvider) {\n    return (dataProvider &&\n        typeof dataProvider.setFlowmapState === 'function' &&\n        typeof dataProvider.getViewportForLocations === 'function' &&\n        typeof dataProvider.getFlowByIndex === 'function' &&\n        typeof dataProvider.getLocationById === 'function' &&\n        typeof dataProvider.getLocationByIndex === 'function' &&\n        typeof dataProvider.getLayersData === 'function');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvd21hcERhdGFQcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm92aWRlci9GbG93bWFwRGF0YVByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1EQSxNQUFNLFVBQVUsYUFBYSxDQUMzQixJQUF5QjtJQUV6QixPQUFPLENBQ0wsSUFBSSxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUs7SUFDcEMsb0NBQW9DO0lBQ3BDLG1DQUFtQztJQUNuQyw0QkFBNEI7S0FDN0IsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLFVBQVUscUJBQXFCLENBQ25DLFlBQWlDO0lBRWpDLE9BQU8sQ0FDTCxZQUFZO1FBQ1osT0FBTyxZQUFZLENBQUMsZUFBZSxLQUFLLFVBQVU7UUFDbEQsT0FBTyxZQUFZLENBQUMsdUJBQXVCLEtBQUssVUFBVTtRQUMxRCxPQUFPLFlBQVksQ0FBQyxjQUFjLEtBQUssVUFBVTtRQUNqRCxPQUFPLFlBQVksQ0FBQyxlQUFlLEtBQUssVUFBVTtRQUNsRCxPQUFPLFlBQVksQ0FBQyxrQkFBa0IsS0FBSyxVQUFVO1FBQ3JELE9BQU8sWUFBWSxDQUFDLGFBQWEsS0FBSyxVQUFVLENBQ2pELENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZ2dyZWdhdGVGbG93LCBDbHVzdGVyLCBMb2NhdGlvbkFjY2Vzc29ycywgTG9jYXRpb25Ub3RhbHN9IGZyb20gJy4uJztcbmltcG9ydCB7Rmxvd21hcFN0YXRlfSBmcm9tICcuLi9GbG93bWFwU3RhdGUnO1xuaW1wb3J0IHtcbiAgQ2x1c3Rlck5vZGUsXG4gIEZsb3dtYXBEYXRhLFxuICBGbG93bWFwRGF0YUFjY2Vzc29ycyxcbiAgTGF5ZXJzRGF0YSxcbiAgVmlld3BvcnRQcm9wcyxcbn0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBpbnRlcmZhY2UgRmxvd21hcERhdGFQcm92aWRlcjxMLCBGPiB7XG4gIHNldEFjY2Vzc29ycyhhY2Nlc3NvcnM6IEZsb3dtYXBEYXRhQWNjZXNzb3JzPEwsIEY+KTogdm9pZDtcblxuICBzZXRGbG93bWFwU3RhdGUoZmxvd21hcFN0YXRlOiBGbG93bWFwU3RhdGUpOiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8vIGNsZWFyRGF0YSgpOiB2b2lkO1xuXG4gIGdldFZpZXdwb3J0Rm9yTG9jYXRpb25zKFxuICAgIGRpbXM6IFtudW1iZXIsIG51bWJlcl0sXG4gICk6IFByb21pc2U8Vmlld3BvcnRQcm9wcyB8IHVuZGVmaW5lZD47XG5cbiAgLy8gZ2V0Rmxvd1RvdGFscygpOiBQcm9taXNlPEZsb3dUb3RhbHM+O1xuXG4gIGdldEZsb3dCeUluZGV4KGluZGV4OiBudW1iZXIpOiBQcm9taXNlPEYgfCBBZ2dyZWdhdGVGbG93IHwgdW5kZWZpbmVkPjtcblxuICBnZXRMb2NhdGlvbkJ5SWQoaWQ6IHN0cmluZyB8IG51bWJlcik6IFByb21pc2U8TCB8IENsdXN0ZXIgfCB1bmRlZmluZWQ+O1xuXG4gIGdldExvY2F0aW9uQnlJbmRleChpZHg6IG51bWJlcik6IFByb21pc2U8TCB8IENsdXN0ZXJOb2RlIHwgdW5kZWZpbmVkPjtcblxuICBnZXRUb3RhbHNGb3JMb2NhdGlvbihcbiAgICBpZDogc3RyaW5nIHwgbnVtYmVyLFxuICApOiBQcm9taXNlPExvY2F0aW9uVG90YWxzIHwgdW5kZWZpbmVkPjtcblxuICAvLyBnZXRMb2NhdGlvbnNJbkJib3goXG4gIC8vICAgYmJveDogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sXG4gIC8vICk6IFByb21pc2U8QXJyYXk8Rmxvd0xvY2F0aW9uIHwgQ2x1c3Rlck5vZGU+IHwgdW5kZWZpbmVkPjtcblxuICAvLyBnZXRMb2NhdGlvbnNGb3JTZWFyY2hCb3goKTogUHJvbWlzZTwoRmxvd0xvY2F0aW9uIHwgQ2x1c3Rlck5vZGUpW10gfCB1bmRlZmluZWQ+O1xuXG4gIGdldExheWVyc0RhdGEoKTogUHJvbWlzZTxMYXllcnNEYXRhIHwgdW5kZWZpbmVkPjtcblxuICAvKipcbiAgICogVGhpcyBpcyB0byBnaXZlIHRoZSBkYXRhIHByb3ZpZGVyIGNvbnRyb2wgb3ZlciB3aGVuL2hvdyBvZnRlbiBsYXllcnNEYXRhXG4gICAqIGlzIHVwZGF0ZWQgd2hpY2ggbGVhZHMgdG8gdGhlIGZsb3dtYXAgYmVpbmcgcmVkcmF3bi5cbiAgICovXG4gIHVwZGF0ZUxheWVyc0RhdGEoXG4gICAgc2V0TGF5ZXJzRGF0YTogKGxheWVyc0RhdGE6IExheWVyc0RhdGEgfCB1bmRlZmluZWQpID0+IHZvaWQsXG4gICAgY2hhbmdlRmxhZ3M6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+LFxuICApOiBQcm9taXNlPHZvaWQ+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNGbG93bWFwRGF0YTxMLCBGPihcbiAgZGF0YTogUmVjb3JkPHN0cmluZywgYW55Pixcbik6IGRhdGEgaXMgRmxvd21hcERhdGE8TCwgRj4ge1xuICByZXR1cm4gKFxuICAgIGRhdGEgJiYgZGF0YS5sb2NhdGlvbnMgJiYgZGF0YS5mbG93c1xuICAgIC8vIFRPRE86IHRlc3QgdGhhdCB0aGV5IGFyZSBpdGVyYWJsZVxuICAgIC8vIEFycmF5LmlzQXJyYXkoZGF0YS5sb2NhdGlvbnMpICYmXG4gICAgLy8gQXJyYXkuaXNBcnJheShkYXRhLmZsb3dzKVxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNGbG93bWFwRGF0YVByb3ZpZGVyPEwsIEY+KFxuICBkYXRhUHJvdmlkZXI6IFJlY29yZDxzdHJpbmcsIGFueT4sXG4pOiBkYXRhUHJvdmlkZXIgaXMgRmxvd21hcERhdGFQcm92aWRlcjxMLCBGPiB7XG4gIHJldHVybiAoXG4gICAgZGF0YVByb3ZpZGVyICYmXG4gICAgdHlwZW9mIGRhdGFQcm92aWRlci5zZXRGbG93bWFwU3RhdGUgPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgZGF0YVByb3ZpZGVyLmdldFZpZXdwb3J0Rm9yTG9jYXRpb25zID09PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mIGRhdGFQcm92aWRlci5nZXRGbG93QnlJbmRleCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIHR5cGVvZiBkYXRhUHJvdmlkZXIuZ2V0TG9jYXRpb25CeUlkID09PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mIGRhdGFQcm92aWRlci5nZXRMb2NhdGlvbkJ5SW5kZXggPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgZGF0YVByb3ZpZGVyLmdldExheWVyc0RhdGEgPT09ICdmdW5jdGlvbidcbiAgKTtcbn1cbiJdfQ==","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport FlowmapSelectors from '../FlowmapSelectors';\nimport { getViewStateForLocations, } from '../getViewStateForLocations';\nexport default class LocalFlowmapDataProvider {\n    constructor(accessors) {\n        // scope selectors to the concrete instance of FlowmapDataProvider\n        this.selectors = new FlowmapSelectors(accessors);\n        this.flowmapData = undefined;\n        this.flowmapState = undefined;\n    }\n    setAccessors(accessors) {\n        this.selectors.setAccessors(accessors);\n    }\n    setFlowmapData(flowmapData) {\n        this.flowmapData = flowmapData;\n    }\n    getSelectors() {\n        return this.selectors;\n    }\n    getFlowmapData() {\n        return this.flowmapData;\n    }\n    setFlowmapState(flowmapState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.flowmapState = flowmapState;\n        });\n    }\n    getFlowmapState() {\n        return this.flowmapState;\n    }\n    getFlowByIndex(idx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.flowmapState || !this.flowmapData) {\n                return undefined;\n            }\n            const flows = this.selectors.getFlowsForFlowmapLayer(this.flowmapState, this.flowmapData);\n            return flows === null || flows === void 0 ? void 0 : flows[idx];\n        });\n    }\n    // TODO: this is unreliable, should replace by unqiue ID\n    getLocationByIndex(idx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.flowmapState || !this.flowmapData) {\n                return undefined;\n            }\n            const locations = this.selectors.getLocationsForFlowmapLayer(this.flowmapState, this.flowmapData);\n            return locations === null || locations === void 0 ? void 0 : locations[idx];\n        });\n    }\n    getLayersData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.flowmapState || !this.flowmapData) {\n                return undefined;\n            }\n            return this.selectors.getLayersData(this.flowmapState, this.flowmapData);\n        });\n    }\n    getLocationById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.flowmapState || !this.flowmapData) {\n                return undefined;\n            }\n            const clusterIndex = this.selectors.getClusterIndex(this.flowmapState, this.flowmapData);\n            if (clusterIndex) {\n                const cluster = clusterIndex.getClusterById(id);\n                if (cluster) {\n                    return cluster;\n                }\n            }\n            const locationsById = this.selectors.getLocationsById(this.flowmapState, this.flowmapData);\n            return locationsById === null || locationsById === void 0 ? void 0 : locationsById.get(id);\n        });\n    }\n    getTotalsForLocation(id) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.flowmapState || !this.flowmapData) {\n                return undefined;\n            }\n            return (_a = this.selectors\n                .getLocationTotals(this.flowmapState, this.flowmapData)) === null || _a === void 0 ? void 0 : _a.get(id);\n        });\n    }\n    getViewportForLocations(dims, opts) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!((_a = this.flowmapData) === null || _a === void 0 ? void 0 : _a.locations)) {\n                return undefined;\n            }\n            // @ts-ignore\n            return getViewStateForLocations(this.flowmapData.locations, (loc) => [\n                this.selectors.accessors.getLocationLon(loc),\n                this.selectors.accessors.getLocationLat(loc),\n            ], dims, opts);\n        });\n    }\n    updateLayersData(setLayersData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            setLayersData(yield this.getLayersData());\n        });\n    }\n    getClusterZoom() {\n        return this.flowmapState && this.flowmapData\n            ? this.selectors.getClusterZoom(this.flowmapState, this.flowmapData)\n            : undefined;\n    }\n    getClusterIndex() {\n        return this.flowmapState && this.flowmapData\n            ? this.selectors.getClusterIndex(this.flowmapState, this.flowmapData)\n            : undefined;\n    }\n    getLocationsById() {\n        return this.flowmapState && this.flowmapData\n            ? this.selectors.getLocationsById(this.flowmapState, this.flowmapData)\n            : undefined;\n    }\n    getLocationTotals() {\n        return this.flowmapState && this.flowmapData\n            ? this.selectors.getLocationTotals(this.flowmapState, this.flowmapData)\n            : undefined;\n    }\n    getFlowsForFlowmapLayer() {\n        return this.flowmapState && this.flowmapData\n            ? this.selectors.getFlowsForFlowmapLayer(this.flowmapState, this.flowmapData)\n            : undefined;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","export var PickingType;\n(function (PickingType) {\n    PickingType[\"LOCATION\"] = \"location\";\n    PickingType[\"FLOW\"] = \"flow\";\n    // LOCATION_AREA = 'location-area',\n})(PickingType || (PickingType = {}));\n// import {FeatureCollection, GeometryObject} from 'geojson';\n// export type LocationProperties = Record<string, unknown>;\n// export type Locations =\n//   | FeatureCollection<GeometryObject, LocationProperties>\n//   | FlowLocation[];\n// export function isFeatureCollection(\n//   locations: Locations,\n// ): locations is FeatureCollection<GeometryObject, LocationProperties> {\n//   return (\n//     (locations as FeatureCollection<GeometryObject, LocationProperties>)\n//       .type === 'FeatureCollection'\n//   );\n// }\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0EsTUFBTSxDQUFOLElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUNyQixvQ0FBcUIsQ0FBQTtJQUNyQiw0QkFBYSxDQUFBO0lBQ2IsbUNBQW1DO0FBQ3JDLENBQUMsRUFKVyxXQUFXLEtBQVgsV0FBVyxRQUl0QjtBQThDRCw2REFBNkQ7QUFDN0QsNERBQTREO0FBRTVELDBCQUEwQjtBQUMxQiw0REFBNEQ7QUFDNUQsc0JBQXNCO0FBRXRCLHVDQUF1QztBQUN2QywwQkFBMEI7QUFDMUIsMEVBQTBFO0FBQzFFLGFBQWE7QUFDYiwyRUFBMkU7QUFDM0Usc0NBQXNDO0FBQ3RDLE9BQU87QUFDUCxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWdncmVnYXRlRmxvdyxcbiAgQ2x1c3RlcixcbiAgQ2x1c3Rlck5vZGUsXG4gIExvY2F0aW9uVG90YWxzLFxufSBmcm9tICdAZmxvd21hcC5nbC9kYXRhJztcblxuZXhwb3J0IHR5cGUgTGF5ZXJQcm9wcyA9IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xuXG5leHBvcnQgZW51bSBQaWNraW5nVHlwZSB7XG4gIExPQ0FUSU9OID0gJ2xvY2F0aW9uJyxcbiAgRkxPVyA9ICdmbG93JyxcbiAgLy8gTE9DQVRJT05fQVJFQSA9ICdsb2NhdGlvbi1hcmVhJyxcbn1cblxuZXhwb3J0IHR5cGUgRGVja0dMTGF5ZXIgPSBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFBpY2tpbmdJbmZvPFQ+IHtcbiAgbGF5ZXI6IERlY2tHTExheWVyO1xuICBpbmRleDogbnVtYmVyO1xuICBwaWNrZWQ6IGJvb2xlYW47XG4gIG9iamVjdDogVCB8IHVuZGVmaW5lZDtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIGNvb3JkaW5hdGU6IFtudW1iZXIsIG51bWJlcl07XG4gIGV2ZW50OiBNb3VzZUV2ZW50IHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExvY2F0aW9uUGlja2luZ0luZm9PYmplY3Q8TD4ge1xuICBpZDogc3RyaW5nIHwgbnVtYmVyO1xuICB0eXBlOiBQaWNraW5nVHlwZS5MT0NBVElPTjtcbiAgbG9jYXRpb246IEwgfCBDbHVzdGVyTm9kZTtcbiAgbmFtZTogc3RyaW5nO1xuICB0b3RhbHM6IExvY2F0aW9uVG90YWxzO1xuICBjaXJjbGVSYWRpdXM6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgTG9jYXRpb25QaWNraW5nSW5mbzxMPiA9IFBpY2tpbmdJbmZvPExvY2F0aW9uUGlja2luZ0luZm9PYmplY3Q8TD4+O1xuXG5leHBvcnQgaW50ZXJmYWNlIEZsb3dQaWNraW5nSW5mb09iamVjdDxMLCBGPiB7XG4gIHR5cGU6IFBpY2tpbmdUeXBlLkZMT1c7XG4gIGZsb3c6IEYgfCBBZ2dyZWdhdGVGbG93O1xuICBvcmlnaW46IEwgfCBDbHVzdGVyTm9kZTtcbiAgZGVzdDogTCB8IENsdXN0ZXJOb2RlO1xuICBjb3VudDogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBGbG93UGlja2luZ0luZm88TCwgRj4gPSBQaWNraW5nSW5mbzxGbG93UGlja2luZ0luZm9PYmplY3Q8TCwgRj4+O1xuXG4vLyBleHBvcnQgaW50ZXJmYWNlIExvY2F0aW9uQXJlYVBpY2tpbmdJbmZvIGV4dGVuZHMgUGlja2luZ0luZm88UGlja2luZ0luZm9EYXRhPiB7XG4vLyAgIHR5cGU6IFBpY2tpbmdUeXBlLkxPQ0FUSU9OX0FSRUE7XG4vLyAgIG9iamVjdDogRmxvd0xvY2F0aW9uO1xuLy8gfVxuXG5leHBvcnQgdHlwZSBGbG93bWFwTGF5ZXJQaWNraW5nSW5mbzxMLCBGPiA9XG4gIHwgTG9jYXRpb25QaWNraW5nSW5mbzxMPlxuICAvLyB8IExvY2F0aW9uQXJlYVBpY2tpbmdJbmZvXG4gIHwgRmxvd1BpY2tpbmdJbmZvPEwsIEY+O1xuXG4vLyBpbXBvcnQge0ZlYXR1cmVDb2xsZWN0aW9uLCBHZW9tZXRyeU9iamVjdH0gZnJvbSAnZ2VvanNvbic7XG4vLyBleHBvcnQgdHlwZSBMb2NhdGlvblByb3BlcnRpZXMgPSBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcblxuLy8gZXhwb3J0IHR5cGUgTG9jYXRpb25zID1cbi8vICAgfCBGZWF0dXJlQ29sbGVjdGlvbjxHZW9tZXRyeU9iamVjdCwgTG9jYXRpb25Qcm9wZXJ0aWVzPlxuLy8gICB8IEZsb3dMb2NhdGlvbltdO1xuXG4vLyBleHBvcnQgZnVuY3Rpb24gaXNGZWF0dXJlQ29sbGVjdGlvbihcbi8vICAgbG9jYXRpb25zOiBMb2NhdGlvbnMsXG4vLyApOiBsb2NhdGlvbnMgaXMgRmVhdHVyZUNvbGxlY3Rpb248R2VvbWV0cnlPYmplY3QsIExvY2F0aW9uUHJvcGVydGllcz4ge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIChsb2NhdGlvbnMgYXMgRmVhdHVyZUNvbGxlY3Rpb248R2VvbWV0cnlPYmplY3QsIExvY2F0aW9uUHJvcGVydGllcz4pXG4vLyAgICAgICAudHlwZSA9PT0gJ0ZlYXR1cmVDb2xsZWN0aW9uJ1xuLy8gICApO1xuLy8gfVxuIl19","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\n * Copyright 2022 FlowmapBlue\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { CompositeLayer } from '@deck.gl/core';\nimport { ScatterplotLayer, TextLayer } from '@deck.gl/layers';\nimport { colorAsRgba, FlowmapAggregateAccessors, getFlowLineAttributesByIndex, getFlowmapColors, getLocationCoordsByIndex, getOuterCircleRadiusByIndex, isFlowmapData, isFlowmapDataProvider, LocalFlowmapDataProvider, } from '@flowmap.gl/data';\nimport AnimatedFlowLinesLayer from './AnimatedFlowLinesLayer';\nimport FlowCirclesLayer from './FlowCirclesLayer';\nimport FlowLinesLayer from './FlowLinesLayer';\nimport { PickingType, } from './types';\nconst PROPS_TO_CAUSE_LAYER_DATA_UPDATE = [\n    'filter',\n    'locationTotalsEnabled',\n    'locationLabelsEnabled',\n    'adaptiveScalesEnabled',\n    'animationEnabled',\n    'clusteringEnabled',\n    'clusteringLevel',\n    'fadeEnabled',\n    'fadeOpacityEnabled',\n    'clusteringAuto',\n    'darkMode',\n    'fadeAmount',\n    'colorScheme',\n    'highlightColor',\n    'maxTopFlowsDisplayNum',\n];\nvar HighlightType;\n(function (HighlightType) {\n    HighlightType[\"LOCATION\"] = \"location\";\n    HighlightType[\"FLOW\"] = \"flow\";\n})(HighlightType || (HighlightType = {}));\nexport default class FlowmapLayer extends CompositeLayer {\n    constructor(props) {\n        super(Object.assign(Object.assign({}, props), { onHover: (info, event) => {\n                const startTime = Date.now();\n                this.setState({\n                    highlightedObject: this._getHighlightedObject(info),\n                    lastHoverTime: startTime,\n                });\n                const { onHover } = props;\n                if (onHover) {\n                    this._getFlowmapLayerPickingInfo(info).then((info) => {\n                        var _a, _b;\n                        if (((_b = (_a = this.state) === null || _a === void 0 ? void 0 : _a.lastHoverTime) !== null && _b !== void 0 ? _b : 0) <= startTime) {\n                            this.setState({ pickingInfo: info });\n                            onHover(info, event);\n                        }\n                        else {\n                            // Skipping, because this is not the latest hover event\n                        }\n                    });\n                }\n            }, onClick: (info, event) => {\n                const { onClick } = props;\n                const startTime = Date.now();\n                this.setState({\n                    lastClickTime: startTime,\n                });\n                if (onClick) {\n                    this._getFlowmapLayerPickingInfo(info).then((info) => {\n                        var _a, _b;\n                        if (((_b = (_a = this.state) === null || _a === void 0 ? void 0 : _a.lastClickTime) !== null && _b !== void 0 ? _b : 0) <= startTime) {\n                            this.setState({ pickingInfo: info });\n                            if (info) {\n                                onClick(info, event);\n                            }\n                        }\n                        else {\n                            // Skipping, because this is not the latest hover event\n                        }\n                    });\n                }\n            } }));\n    }\n    initializeState() {\n        this.state = {\n            accessors: new FlowmapAggregateAccessors(this.props),\n            dataProvider: this._getOrMakeDataProvider(),\n            layersData: undefined,\n            highlightedObject: undefined,\n            pickingInfo: undefined,\n            lastHoverTime: undefined,\n            lastClickTime: undefined,\n        };\n    }\n    getPickingInfo({ info }) {\n        var _a, _b;\n        // This is for onHover event handlers set on the <DeckGL> component\n        if (!info.object) {\n            const object = (_b = (_a = this.state) === null || _a === void 0 ? void 0 : _a.pickingInfo) === null || _b === void 0 ? void 0 : _b.object;\n            if (object) {\n                return Object.assign(Object.assign({}, info), { object, picked: true });\n            }\n        }\n        return info;\n    }\n    // private _updateAccessors() {\n    //   this.state?.dataProvider?.setAccessors(this.props);\n    //   this.setState({accessors: new FlowmapAggregateAccessors(this.props)});\n    // }\n    _getOrMakeDataProvider() {\n        const { data, dataProvider } = this.props;\n        if (isFlowmapDataProvider(dataProvider)) {\n            return dataProvider;\n        }\n        else if (isFlowmapData(data)) {\n            const dataProvider = new LocalFlowmapDataProvider(this.props);\n            dataProvider.setFlowmapData(data);\n            return dataProvider;\n        }\n        throw new Error('FlowmapLayer: data must be a FlowmapDataProvider or FlowmapData');\n    }\n    _updateDataProvider() {\n        this.setState({ dataProvider: this._getOrMakeDataProvider() });\n    }\n    shouldUpdateState(params) {\n        const { changeFlags } = params;\n        // if (this._viewportChanged()) {\n        //   return true;\n        // }\n        if (changeFlags.viewportChanged) {\n            return true;\n        }\n        return super.shouldUpdateState(params);\n        // TODO: be smarter on when to update\n        // (e.g. ignore viewport changes when adaptiveScalesEnabled and clustering are false)\n    }\n    updateState({ oldProps, props, changeFlags }) {\n        if (changeFlags.propsChanged) {\n            // this._updateAccessors();\n        }\n        if (changeFlags.dataChanged) {\n            this._updateDataProvider();\n        }\n        if (changeFlags.viewportChanged || changeFlags.dataChanged) {\n            this.setState({ highlightedObject: undefined });\n        }\n        if (changeFlags.viewportChanged ||\n            changeFlags.dataChanged ||\n            (changeFlags.propsChanged &&\n                PROPS_TO_CAUSE_LAYER_DATA_UPDATE.some((prop) => oldProps[prop] !== props[prop]))) {\n            const { dataProvider } = this.state || {};\n            if (dataProvider) {\n                dataProvider.setFlowmapState(this._getFlowmapState());\n                dataProvider.updateLayersData((layersData) => {\n                    this.setState({ layersData, highlightedObject: undefined });\n                }, changeFlags);\n            }\n        }\n    }\n    _getSettingsState() {\n        const { locationTotalsEnabled, locationLabelsEnabled, adaptiveScalesEnabled, animationEnabled, clusteringEnabled, clusteringLevel, fadeEnabled, fadeOpacityEnabled, clusteringAuto, darkMode, fadeAmount, colorScheme, highlightColor, maxTopFlowsDisplayNum, } = this.props;\n        return {\n            locationTotalsEnabled,\n            locationLabelsEnabled,\n            adaptiveScalesEnabled,\n            animationEnabled,\n            clusteringEnabled,\n            clusteringLevel,\n            fadeEnabled,\n            fadeOpacityEnabled,\n            clusteringAuto,\n            darkMode,\n            fadeAmount,\n            colorScheme,\n            highlightColor,\n            maxTopFlowsDisplayNum,\n        };\n    }\n    _getFlowmapState() {\n        return {\n            viewport: pickViewportProps(this.context.viewport),\n            filter: this.props.filter,\n            settings: this._getSettingsState(),\n        };\n    }\n    _getFlowmapLayerPickingInfo(info) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { index, sourceLayer } = info;\n            const { dataProvider, accessors } = this.state || {};\n            if (!dataProvider || !accessors) {\n                return undefined;\n            }\n            const commonInfo = Object.assign(Object.assign({}, info), { picked: info.picked, layer: info.layer, index: info.index, x: info.x, y: info.y, coordinate: info.coordinate, event: info.event });\n            if (sourceLayer instanceof FlowLinesLayer ||\n                sourceLayer instanceof AnimatedFlowLinesLayer) {\n                const flow = index === -1 ? undefined : yield dataProvider.getFlowByIndex(index);\n                if (flow) {\n                    const origin = yield dataProvider.getLocationById(accessors.getFlowOriginId(flow));\n                    const dest = yield dataProvider.getLocationById(accessors.getFlowDestId(flow));\n                    if (origin && dest) {\n                        return Object.assign(Object.assign({}, commonInfo), { object: {\n                                type: PickingType.FLOW,\n                                flow,\n                                origin: origin,\n                                dest: dest,\n                                count: accessors.getFlowMagnitude(flow),\n                            } });\n                    }\n                }\n            }\n            else if (sourceLayer instanceof FlowCirclesLayer) {\n                const location = index === -1 ? undefined : yield dataProvider.getLocationByIndex(index);\n                if (location) {\n                    const id = accessors.getLocationId(location);\n                    const name = accessors.getLocationName(location);\n                    const totals = yield dataProvider.getTotalsForLocation(id);\n                    const { circleAttributes } = ((_a = this.state) === null || _a === void 0 ? void 0 : _a.layersData) || {};\n                    if (totals && circleAttributes) {\n                        const circleRadius = getOuterCircleRadiusByIndex(circleAttributes, info.index);\n                        return Object.assign(Object.assign({}, commonInfo), { object: {\n                                type: PickingType.LOCATION,\n                                location,\n                                id,\n                                name,\n                                totals,\n                                circleRadius: circleRadius,\n                            } });\n                    }\n                }\n            }\n            return undefined;\n        });\n    }\n    _getHighlightedObject(info) {\n        var _a, _b;\n        const { index, sourceLayer } = info;\n        if (index < 0)\n            return undefined;\n        if (sourceLayer instanceof FlowLinesLayer ||\n            sourceLayer instanceof AnimatedFlowLinesLayer) {\n            const { lineAttributes } = ((_a = this.state) === null || _a === void 0 ? void 0 : _a.layersData) || {};\n            if (lineAttributes) {\n                let attrs = getFlowLineAttributesByIndex(lineAttributes, index);\n                if (this.props.fadeOpacityEnabled) {\n                    attrs = Object.assign(Object.assign({}, attrs), { attributes: Object.assign(Object.assign({}, attrs.attributes), { getColor: Object.assign(Object.assign({}, attrs.attributes.getColor), { value: new Uint8Array([\n                                    ...attrs.attributes.getColor.value.slice(0, 3),\n                                    255, // the highlight color should be always opaque\n                                ]) }) }) });\n                }\n                return {\n                    type: HighlightType.FLOW,\n                    lineAttributes: attrs,\n                };\n            }\n        }\n        else if (sourceLayer instanceof FlowCirclesLayer) {\n            const { circleAttributes } = ((_b = this.state) === null || _b === void 0 ? void 0 : _b.layersData) || {};\n            if (circleAttributes) {\n                return {\n                    type: HighlightType.LOCATION,\n                    coords: getLocationCoordsByIndex(circleAttributes, index),\n                    radius: getOuterCircleRadiusByIndex(circleAttributes, index),\n                };\n            }\n        }\n        return undefined;\n    }\n    renderLayers() {\n        var _a;\n        const layers = [];\n        if ((_a = this.state) === null || _a === void 0 ? void 0 : _a.layersData) {\n            const { layersData, highlightedObject } = this.state;\n            const { circleAttributes, lineAttributes, locationLabels } = layersData || {};\n            if (circleAttributes && lineAttributes) {\n                const flowmapColors = getFlowmapColors(this._getSettingsState());\n                const outlineColor = colorAsRgba(flowmapColors.outlineColor || (this.props.darkMode ? '#000' : '#fff'));\n                const commonLineLayerProps = {\n                    data: lineAttributes,\n                    parameters: Object.assign(Object.assign({}, this.props.parameters), { \n                        // prevent z-fighting at non-zero bearing/pitch\n                        depthTest: false }),\n                };\n                if (this.props.animationEnabled) {\n                    layers.push(\n                    // @ts-ignore\n                    new AnimatedFlowLinesLayer(Object.assign({}, this.getSubLayerProps(Object.assign(Object.assign({}, commonLineLayerProps), { id: 'animated-flow-lines', drawOutline: false, thicknessUnit: 20 })))));\n                }\n                else {\n                    layers.push(new FlowLinesLayer(Object.assign({}, this.getSubLayerProps(Object.assign(Object.assign({}, commonLineLayerProps), { id: 'flow-lines', drawOutline: true, outlineColor: outlineColor })))));\n                }\n                layers.push(new FlowCirclesLayer(this.getSubLayerProps({\n                    id: 'circles',\n                    data: circleAttributes,\n                    emptyColor: this.props.darkMode\n                        ? [0, 0, 0, 255]\n                        : [255, 255, 255, 255],\n                    outlineEmptyMix: 0.4,\n                })));\n                if (highlightedObject) {\n                    switch (highlightedObject.type) {\n                        case HighlightType.LOCATION:\n                            layers.push(new ScatterplotLayer(Object.assign({}, this.getSubLayerProps({\n                                id: 'location-highlight',\n                                data: [highlightedObject],\n                                pickable: false,\n                                antialiasing: true,\n                                stroked: true,\n                                filled: false,\n                                lineWidthUnits: 'pixels',\n                                getLineWidth: 2,\n                                radiusUnits: 'pixels',\n                                getRadius: (d) => d.radius,\n                                getLineColor: colorAsRgba(this.props.highlightColor),\n                                getPosition: (d) => d.coords,\n                            }))));\n                            break;\n                        case HighlightType.FLOW:\n                            layers.push(new FlowLinesLayer(Object.assign({}, this.getSubLayerProps({\n                                id: 'flow-highlight',\n                                data: highlightedObject.lineAttributes,\n                                drawOutline: true,\n                                pickable: false,\n                                outlineColor: colorAsRgba(this.props.highlightColor),\n                                outlineThickness: 1,\n                                parameters: {\n                                    depthTest: false,\n                                },\n                            }))));\n                            break;\n                    }\n                }\n            }\n            if (locationLabels) {\n                layers.push(new TextLayer(this.getSubLayerProps({\n                    id: 'location-labels',\n                    data: locationLabels,\n                    maxWidth: 1000,\n                    pickable: false,\n                    fontFamily: 'Helvetica',\n                    getPixelOffset: (d, { index }) => {\n                        const r = getOuterCircleRadiusByIndex(circleAttributes, index);\n                        return [0, r + 5];\n                    },\n                    getPosition: (d, { index }) => {\n                        const pos = getLocationCoordsByIndex(circleAttributes, index);\n                        return pos;\n                    },\n                    getText: (d) => d,\n                    getSize: 10,\n                    getColor: [255, 255, 255, 255],\n                    getAngle: 0,\n                    getTextAnchor: 'middle',\n                    getAlignmentBaseline: 'top',\n                })));\n            }\n        }\n        return layers;\n    }\n}\nFlowmapLayer.defaultProps = {\n    darkMode: true,\n    fadeAmount: 50,\n    locationTotalsEnabled: true,\n    locationLabelsEnabled: false,\n    animationEnabled: false,\n    clusteringEnabled: true,\n    fadeEnabled: true,\n    fadeOpacityEnabled: false,\n    clusteringAuto: true,\n    clusteringLevel: undefined,\n    adaptiveScalesEnabled: true,\n    colorScheme: 'Teal',\n    highlightColor: 'orange',\n    maxTopFlowsDisplayNum: 5000,\n};\nfunction pickViewportProps(viewport) {\n    const { width, height, longitude, latitude, zoom, pitch, bearing } = viewport;\n    return {\n        width,\n        height,\n        longitude,\n        latitude,\n        zoom,\n        pitch,\n        bearing,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","import React, { useEffect, useState } from 'react'\nimport DeckGL from '@deck.gl/react'\nimport { StaticMap } from 'react-map-gl'\nimport { FlowmapLayer, FlowmapLayerPickingInfo, PickingType } from '@flowmap.gl/layers'\nimport { FlowmapData, getViewStateForLocations } from '@flowmap.gl/data'\n\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\nimport globalStore from '@/store'\n\nexport default function Layer({\n  props = {} as any,\n  viewId = 0, // viewId: this must be unique;\n}) {\n  const { locations, flows, dark, elapsed, vizDetails } = props\n\n  const [viewState, setViewState] = useState(globalStore.state.viewState)\n  const [hoverInfo, setHoverInfo] = useState({})\n  // const [data, setData] = useState<FlowmapData<LocationDatum, FlowDatum>>()\n\n  // register setViewState in global view updater so we can respond to map motion\n  REACT_VIEW_HANDLES[viewId] = () => {\n    setViewState(globalStore.state.viewState)\n  }\n\n  function handleClick() {\n    console.log('click!')\n  }\n\n  function handleHover(hover: any) {\n    console.log(hover)\n    setHoverInfo(hover)\n  }\n\n  function handleViewState(view: any) {\n    setViewState(view)\n    view.center = [view.longitude, view.latitude]\n    globalStore.commit('setMapCamera', view)\n  }\n\n  const layer = new FlowmapLayer({\n    data: props,\n    id: 'my-flowmap-' + viewId,\n    getLocationId: (location: any) => location.id,\n    getLocationLat: (location: any) => location.lat,\n    getLocationLon: (location: any) => location.lon,\n    getLocationName: (location: any) => location.id,\n    getFlowOriginId: (flow: any) => flow.o,\n    getFlowDestId: (flow: any) => flow.d,\n    getFlowMagnitude: (flow: any) => flow.v || null,\n    adaptiveScalesEnabled: true,\n    animationEnabled: vizDetails.animationEnabled,\n    clusteringEnabled: vizDetails.clustering,\n    clusteringAuto: vizDetails.clustering,\n    clusteringLevel: vizDetails.clusteringLevel,\n    colorScheme: vizDetails.colorScheme,\n    darkMode: dark,\n    drawOutline: false,\n    fadeEnabled: true,\n    fadeAmount: 20,\n    fadeOpacityEnabled: true,\n    locationLabelsEnabled: vizDetails.locationLabelsEnabled,\n    locationTotalsEnabled: vizDetails.locationTotalsEnabled,\n    onHover: handleHover,\n    opacity: 1.0, // vizDetails.opacity,\n    outlineThickness: vizDetails.outlineThickness,\n    pickable: true,\n    // highlightColor: [1, 0.9, 0],\n    // showOnlyTopFlows: vizDetails.showOnlyTopFlows,\n    // labelsEnabled: vizDetails.labelsEnabled,\n    // maxFlowThickness: 15,\n    // maxTopFlowsDisplayNum: vizDetails.maxTopFlowsDisplayNum,\n    // maxLocationCircleSize: 20,\n  })\n\n  return (\n    /*\n    //@ts-ignore */\n    <DeckGL\n      layers={[layer]}\n      controller={true}\n      viewState={viewState}\n      pickingRadius={4}\n      getCursor={() => 'pointer'}\n      onClick={handleClick}\n      onViewStateChange={(e: any) => handleViewState(e.viewState)}\n    >\n      {\n        /*\n      // @ts-ignore */\n        <StaticMap mapStyle={globalStore.getters.mapStyle} mapboxApiAccessToken={MAPBOX_TOKEN} />\n      }\n    </DeckGL>\n  )\n}\n","<template lang=\"pug\">\n.flowmap(:class=\"{'hide-thumbnail': !thumbnail}\"\n        :style='{\"background\": urlThumbnail}'\n        oncontextmenu=\"return false\")\n\n    .map-layout\n       flow-map-layer.map-layer(v-if=\"centroids.length\"\n        :viewId=\"viewId\"\n        :props=\"mapProps\"\n        )\n\n\n    .title-panel(v-if=\"vizDetails.title && !thumbnail && !configFromDashboard\")\n      h3 {{ vizDetails.title }}\n      p {{ vizDetails.description }}\n\n    zoom-buttons(v-if=\"!thumbnail\")\n\n    .bottom-panel(v-if=\"!thumbnail\")\n\n        b-checkbox.hello(\n              v-model=\"vizDetails.animationEnabled\"\n            )\n        p Animation\n\n        b-checkbox.hello(\n              v-model=\"vizDetails.locationLabelsEnabled\"\n            )\n        p Labels\n\n        b-checkbox.hello(\n              v-model=\"vizDetails.clustering\"\n            )\n        p Clustering\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport * as turf from '@turf/turf'\nimport VizConfigurator from '@/components/viz-configurator/VizConfigurator.vue'\nimport ZoomButtons from '@/components/ZoomButtons.vue'\n\nimport { FileSystemConfig, REACT_VIEW_HANDLES, VisualizationPlugin } from '@/Globals'\nimport FlowMapLayer from '@/layers/FlowMapLayer'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\nimport DashboardDataManager from '@/js/DashboardDataManager'\nimport globalStore from '@/store'\nimport YAML from 'yaml'\nimport util from '@/js/util'\n\nconst MyComponent = defineComponent({\n  name: 'FlowMap',\n  components: { FlowMapLayer, VizConfigurator, ZoomButtons },\n  // i18n,\n  props: {\n    config: Object,\n    datamanager: { type: Object as PropType<DashboardDataManager> },\n    fileSystemConfig: { type: Object as PropType<FileSystemConfig>, required: true },\n    files: { type: Array, required: true },\n    root: { type: String, required: true },\n    subfolder: { type: String, required: true },\n    thumbnail: Boolean,\n    yamlConfig: String,\n    configFromDashboard: Object,\n  },\n  computed: {\n    fileApi(): HTTPFileSystem {\n      return new HTTPFileSystem(this.fileSystem, globalStore)\n    },\n\n    fileSystem(): FileSystemConfig {\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\n        (a: FileSystemConfig) => a.slug === this.root\n      )\n      if (svnProject.length === 0) {\n        console.log('no such project')\n        throw Error\n      }\n      return svnProject[0]\n    },\n\n    mapProps(): any {\n      return {\n        locations: this.centroids,\n        flows: this.flows,\n        dark: this.$store.state.isDarkMode,\n        elapsed: this.elapsed,\n        vizDetails: this.vizDetails,\n      }\n    },\n\n    urlThumbnail() {\n      return this.thumbnailUrl\n    },\n  },\n\n  watch: {\n    '$store.state.viewState'() {\n      if (!REACT_VIEW_HANDLES[this.viewId]) return\n      REACT_VIEW_HANDLES[this.viewId]()\n    },\n  },\n\n  data() {\n    return {\n      boundaries: [] as any[],\n      centroids: [] as any[],\n      flows: [] as any[],\n      viewId: Math.floor(1e12 * Math.random()),\n      statusText: 'Loading...',\n      needsInitialMapExtent: true,\n      myDataManager: this.datamanager || new DashboardDataManager(this.root, this.subfolder),\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\n\n      startTime: Date.now(),\n      elapsed: 0,\n      animator: null as any,\n\n      myState: {\n        statusMessage: '',\n        fileApi: undefined as HTTPFileSystem | undefined,\n        fileSystem: undefined as FileSystemConfig | undefined,\n        subfolder: '',\n        thumbnail: false,\n      },\n\n      vizDetails: {\n        title: '',\n        description: '',\n        thumbnail: '',\n        zoom: 9,\n        center: null as any | null,\n        pitch: 0,\n        bearing: 0,\n        boundaries: '',\n        boundariesJoinCol: '',\n        boundariesLabels: '',\n        boundariesLabel: '',\n        dataset: '',\n        origin: '',\n        destination: '',\n        flow: '',\n        colorScheme: 'Teal',\n        highlightColor: 'orange',\n        fadeEnabled: true,\n        fadeAmount: 50,\n        animationEnabled: true,\n        clustering: true,\n        clusteringLevel: null as number | null,\n        locationLabelsEnabled: true,\n        locationTotalsEnabled: true,\n        pickable: true,\n        opacity: null as number | null,\n        fadeOpacityEnabled: true,\n        outlineThickness: 0 as number | null,\n        showOnlyTopFlows: null as number | null,\n        maxTopFlowsDisplayNum: null as number | null,\n      },\n    }\n  },\n\n  async mounted() {\n    try {\n      this.$store.commit('setFullScreen', !this.thumbnail)\n\n      this.myState.thumbnail = this.thumbnail\n\n      // DataManager might be passed in from the dashboard; or we might be\n      // in single-view mode, in which case we need to create one for ourselves\n      this.myDataManager = this.datamanager || new DashboardDataManager(this.root, this.subfolder)\n\n      await this.getVizDetails()\n\n      if (this.thumbnail) {\n        this.buildThumbnail()\n        return\n      }\n\n      if (this.needsInitialMapExtent && (this.vizDetails.center || this.vizDetails.zoom)) {\n        this.$store.commit('setMapCamera', {\n          center: this.vizDetails.center,\n          zoom: this.vizDetails.zoom || 9,\n          bearing: this.vizDetails.bearing || 0,\n          pitch: this.vizDetails.pitch || 0,\n          longitude: this.vizDetails.center ? this.vizDetails.center[0] : 0,\n          latitude: this.vizDetails.center ? this.vizDetails.center[1] : 0,\n        })\n        this.needsInitialMapExtent = false\n      }\n\n      // load the boundaries and the dataset, use promises so we can clear\n      // the spinner when things are finished.  MUST be in this order\n      // or the flowmap gets sad if dataset loads faster than boundaries do.\n      await this.loadBoundaries()\n      await this.loadDataset()\n\n      this.$emit('isLoaded')\n\n      this.vizDetails = Object.assign({}, this.vizDetails)\n      this.statusText = ''\n    } catch (e) {\n      this.$emit('error', 'Flowmap' + e)\n    }\n  },\n\n  beforeDestroy() {\n    if (this.animator) window.cancelAnimationFrame(this.animator)\n\n    // MUST delete the React view handle to prevent gigantic memory leak!\n    delete REACT_VIEW_HANDLES[this.viewId]\n  },\n\n  methods: {\n    async getVizDetails() {\n      // Config was passed in from dashboard:\n      if (this.configFromDashboard) {\n        console.log('we have a dashboard')\n        this.validateYAML()\n        this.vizDetails = Object.assign({}, this.configFromDashboard) as any\n        return\n      }\n\n      // Config is in a YAML file which we can parse\n      const hasYaml = new RegExp('.*(yml|yaml)$').test(this.yamlConfig ?? '')\n      if (hasYaml) {\n        console.log('has yaml')\n        await this.loadStandaloneYAMLConfig()\n      }\n      // No config at all; use the default\n    },\n\n    async buildThumbnail() {\n      if (!this.myState.fileApi) return\n      if (this.thumbnail && this.vizDetails.thumbnail) {\n        try {\n          const blob = await this.myState.fileApi.getFileBlob(\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\n          )\n          const buffer = await blob.arrayBuffer()\n          const base64 = util.arrayBufferToBase64(buffer)\n          if (base64)\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    },\n\n    async validateYAML() {},\n\n    async loadStandaloneYAMLConfig() {\n      if (!this.fileApi) return {}\n\n      const config = this.yamlConfig ?? ''\n      const filename = config.indexOf('/') > -1 ? config : this.subfolder + '/' + this.yamlConfig\n\n      // 1. First try loading the file directly\n      try {\n        const text = await this.fileApi.getFileText(filename)\n        this.vizDetails = Object.assign({}, YAML.parse(text))\n        return\n      } catch (err) {\n        const message = '' + err\n        if (message.startsWith('YAMLSemantic')) {\n          this.$emit('error', `${filename}: ${message}`)\n        }\n        console.log(`${filename} not found, trying config folders`)\n      }\n\n      // 2. Try loading from a config folder instead\n      const { vizes } = await this.fileApi.findAllYamlConfigs(this.subfolder)\n      if (vizes[config]) {\n        try {\n          const text = await this.fileApi.getFileText(vizes[config])\n          this.vizDetails = Object.assign({}, YAML.parse(text))\n        } catch (err) {\n          console.error(`Also failed to load ${vizes[config]}`)\n        }\n      }\n    },\n\n    async loadBoundaries() {\n      try {\n        if (this.vizDetails.boundaries.startsWith('http')) {\n          console.log('in http')\n          const boundaries = await fetch(this.vizDetails.boundaries).then(async r => await r.json())\n          this.boundaries = boundaries.features\n        } else {\n          const filepath = `${this.subfolder}/${this.vizDetails.boundaries}`\n          const boundaries = await this.fileApi.getFileJson(\n            `${this.subfolder}/${this.vizDetails.boundaries}`\n          )\n\n          this.boundaries = boundaries.features\n        }\n      } catch (e) {\n        console.error(e)\n        return\n      }\n      this.calculateCentroids()\n      this.setMapCenter()\n    },\n\n    calculateCentroids() {\n      const boundaryLabelField = this.vizDetails.boundariesLabels || this.vizDetails.boundariesLabel\n      for (const feature of this.boundaries) {\n        const centroid: any = turf.centerOfMass(feature as any)\n\n        if (feature.properties[boundaryLabelField]) {\n          centroid.properties.label = feature.properties[boundaryLabelField]\n        }\n        centroid.properties.id = '' + feature.properties[this.vizDetails.boundariesJoinCol]\n\n        this.centroids.push({\n          id: `${centroid.properties.id}`,\n          lon: centroid.geometry.coordinates[0],\n          lat: centroid.geometry.coordinates[1],\n        })\n      }\n      console.log({ centroids: this.centroids })\n      // for (const c of this.centroids) console.log(`${c.id},${c.lon},${c.lat}`)\n    },\n\n    async setMapCenter() {\n      // If user gave us the center, use it\n      if (this.vizDetails.center) {\n        if (typeof this.vizDetails.center == 'string') {\n          this.vizDetails.center = this.vizDetails.center.split(',').map(Number)\n        }\n\n        this.$store.commit('setMapCamera', {\n          longitude: this.vizDetails.center[0],\n          latitude: this.vizDetails.center[1],\n          bearing: 0,\n          pitch: 0,\n          zoom: this.vizDetails.zoom || 10, // use 10 default if we don't have a zoom\n          jump: false,\n        })\n        return\n      }\n\n      // user didn't give us the center, so calculate it\n      if (!this.centroids.length) return\n\n      let samples = 0\n      let longitude = 0\n      let latitude = 0\n\n      const numCentroids = this.centroids.length\n\n      const gap = 256\n      for (let i = 0; i < numCentroids; i += gap) {\n        longitude += this.centroids[i].lon\n        latitude += this.centroids[i].lat\n        samples++\n      }\n\n      longitude = longitude / samples\n      latitude = latitude / samples\n\n      const currentView = this.$store.state.viewState\n\n      if (longitude && latitude) {\n        this.$store.commit('setMapCamera', {\n          longitude,\n          latitude,\n          bearing: currentView.bearing,\n          pitch: currentView.pitch,\n          zoom: this.vizDetails.zoom || currentView.zoom,\n          jump: false,\n        })\n      }\n    },\n\n    async loadDataset() {\n      try {\n        const dataset = await this.myDataManager.getDataset(this.vizDetails)\n        // this.datamanager.addFilterListener(this.config, this.handleFilterChanged)\n        console.log('dataset:', dataset)\n\n        const data = dataset.allRows || ({} as any)\n        console.log('data:', data)\n\n        // assumes flow data has \"origin,destination,count\" columns\n        const origin = data.origin.values\n        const destination = data.destination.values\n        const count = data.count.values\n\n        console.log('in loadDataset')\n\n        const flows = [] as any[]\n        for (let i = 0; i < origin.length; i++) {\n          flows.push({\n            o: `${origin[i]}`,\n            d: `${destination[i]}`,\n            v: count[i],\n          })\n        }\n        this.flows = flows\n      } catch (e) {\n        const message = '' + e\n        console.log(message)\n        this.flows = []\n      }\n      console.log({ flows: this.flows })\n    },\n  },\n})\n\nexport default MyComponent\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.flowmap {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: $thumbnailHeight;\n  background: url('assets/thumbnail.jpg') center / cover no-repeat;\n  z-index: -1;\n}\n\n.flowmap.hide-thumbnail {\n  background: none;\n  z-index: 0;\n}\n\n.map-layout {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n}\n\n.title-panel {\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 0 1rem 0.25rem 2rem;\n  background-color: var(--bgPanel);\n  filter: $filterShadow;\n  z-index: 2;\n}\n\n.bottom-panel {\n  grid-column: 1 / 3;\n  grid-row: 2 / 3;\n  display: flex;\n  flex-direction: row;\n  font-size: 0.8rem;\n  pointer-events: auto;\n  margin: auto auto 0rem 0rem;\n  padding: 0.25rem;\n  filter: drop-shadow(0px 2px 4px #22222233);\n  background-color: var(--bgPanel);\n  p {\n    margin-right: 1rem;\n  }\n}\n\n.panel-items {\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem 0.5rem;\n  margin-bottom: 5px;\n  width: 16rem;\n  background-color: var(--bgPanel);\n  border-radius: 3px;\n  overflow: visible;\n  // overflow-x: hidden;\n}\n\n.panel-item {\n  h3 {\n    line-height: 1.7rem;\n  }\n\n  p {\n    font-size: 0.9rem;\n  }\n}\n\n.map-layer {\n  flex: 1;\n}\n\n.hello {\n  margin-left: 0;\n  margin-right: 0;\n  padding: 0;\n}\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n"],"names":["global","module","define","Alea","seed","me","mash","Mash","t","copy","f","impl","opts","xg","state","prng","n","data","i","h","this","XorGen","strseed","k","top","bot","result","X","v","init","j","w","limit","b","c","d","a","pool","math","width","chunks","digits","rngname","startdenom","significance","overflow","mask","nodecrypto","seedrandom","options","callback","key","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","x","is_math_call","keylen","s","count","r","obj","depth","typ","prop","stringseed","smear","out","browser","plugins","require$$0","alea","xor128","require$$1","xorwow","require$$2","xorshift7","require$$3","xor4096","require$$4","tychei","require$$5","sr","require$$6","FragmentShader$2","VertexShader$2","DEFAULT_COLOR","loopLength","animationSpeed","loopTime","AnimatedFlowLinesLayer","Layer","props","VertexShader","FragmentShader","project32","picking","GL","oldProps","changeFlags","_a","gl","uniforms","thicknessUnit","animationTailLength","animationTime","positions","Model","Geometry","index","FragmentShader$1","VertexShader$1","INNER_SIDE_OUTLINE_THICKNESS","POSITIONS","getOutlinePixelOffsets","tout","tin","ZEROES","FlowLinesLayer","attributeManager","outlineColor","pixelOffsets","drawOutline","outlineThickness","DEFAULT_EMPTY_COLOR","DEFAULT_OUTLINE_EMPTY_MIX","FlowCirclesLayer","emptyColor","outlineEmptyMix","isCluster","children","isLocationClusterNode","l","zoom","isAggregateFlow","flow","LocationFilterMode","DEFAULT_OUTLINE_COLOR","DEFAULT_DIMMED_OPACITY","DEFAULT_FLOW_MIN_COLOR","DEFAULT_FLOW_COLOR_SCHEME","DEFAULT_LOCATION_AREA_COLOR","DEFAULT_FLOW_COLOR_SCHEME_POSITIVE","DEFAULT_FLOW_COLOR_SCHEME_NEGATIVE","FALLBACK_COLOR_RGBA","opacityFloatToInteger","opacity","opacifyHex","hexCode","d3color","col","colorAsRgba","color","rgbColor","colorAsRgbaOr","defaultColor","asScheme","scheme","ColorScheme","SCALE_NUM_STEPS","getColorSteps","interpolate","range","FLOW_MIN_COLOR","GRAYISH","schemeBluYl","schemeEmrld","schemeTeal","DEFAULT_COLOR_SCHEME","COLOR_SCHEMES","schemeBlues","schemeBuGn","schemeBuPu","interpolateCool","schemeGnBu","schemeGreens","schemeGreys","interpolateInferno","interpolateMagma","schemeOranges","schemeOrRd","interpolatePlasma","schemePuBu","schemePuBuGn","schemePuRd","schemePurples","schemeRdPu","schemeReds","interpolateViridis","interpolateWarm","schemeYlGn","schemeYlGnBu","schemeYlOrBr","schemeYlOrRd","complementary","baseDiffColor","diffColors","getFlowmapColors","settings","getColors","diffMode","colorScheme","darkMode","fadeEnabled","fadeOpacityEnabled","fadeAmount","animate","indices","N","colorScale","scaleSequential","interpolateRgbBasis","amount","scalePow","hcl","interpolateRgbaBasis","colors","spline","interpolateBasis","g","colorRgb","createFlowColorScale","domain","scale","scaleSequentialPow","value","getFlowColorScale","magnitudeExtent","minMagnitude","maxMagnitude","isDiffColorsRGBA","posScale","negScale","magnitude","isDiffColors","getLocationAreaColorsRGBA","normalColor","normalColorHcl","locationAreasNormal","getFlowAndCircleColors","inputColors","defaultFlowColorScheme","_b","_c","flowColorScheme","maxFlowColorHcl","flowColorHighlighted","innerColor","getBaseColorsRGBA","getColorsRGBA","baseColorsRGBA","getDiffColorsRGBA","sortKD","ids","coords","nodeSize","left","right","m","select","inc","z","sd","newLeft","newRight","swapItem","swap","arr","tmp","minX","minY","maxX","maxY","stack","y","axis","nextAxis","within","qx","qy","r2","sqDist","ax","ay","bx","by","dx","dy","defaultGetX","p","defaultGetY","KDBush","points","getX","getY","ArrayType","IndexArrayType","sort","NOT_FOUND","createSingletonCache","equals","entry","createLruCache","maxSize","entries","get","cacheIndex","put","getEntries","clear","defaultEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","length","defaultMemoize","func","equalityCheckOrOptions","providedOptions","_providedOptions$equa","_providedOptions$maxS","resultEqualityCheck","comparator","cache","memoized","matchingEntry","getDependencies","funcs","dependencies","dep","dependencyTypes","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_recomputations","_lastResult","directlyPassedOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","memoizeOptions","finalMemoizeOptions","memoizedResultFunc","selector","params","defaultOptions","id","numPoints","isLeafPoint","isClusterPoint","clusterLocations","locations","locationAccessors","getLocationWeight","getLocationLon","getLocationLat","getLocationId","minZoom","maxZoom","makeClusterName","makeClusterId","trees","clusters","locationsCount","location","lngX","latY","prevZoom","_clusters","cluster","numbersOfClusters","minClusters","min","maxClusters","getMaxNumberOfClusters","maxAvailZoom","minAvailZoom","clusterLevels","childrenByParent","tree","rollup","point","nodes","yLat","xLng","createCluster","weight","radius","extent","neighborIds","wx","wy","neighborId","weight2","numPoints2","y2","lng","lat","sin","countByLatLon","numLocations","loc","lon","numSame","buildIndex","nodesByZoom","clustersById","minZoomByLocationId","node","mz","cl","leavesToClustersByZoom","leavesToClusters","visitClusterLeaves","leafId","visit","childId","child","expandCluster","targetZoom","expandedIds","findClusterFor","locationId","ascending","clusterId","flows","getFlowOriginId","getFlowDestId","getFlowMagnitude","aggFlowsByKey","makeKey","origin","dest","flowCountsMapReduce","acc","originCluster","destCluster","aggregateFlow","makeLocationWeightGetter","locationTotals","findAppropriateZoomLevel","availableZoomLevels","bisectLeft","FlowmapAggregateAccessors","accessors","name","getFlowTime","getViewportBoundingBox","viewport","maxLocationCircleSize","pad","bounds","WebMercatorViewport","getFlowThicknessScale","scaleLinear","addClusterNames","clusterIndex","locationsById","getLocationName","getLocationClusterName","getName","level","leaves","descending","topId","otherId","timeParse","TimeGranularityKey","timeFormat","formatSecond","formatMinute","formatHour","formatDay","formatMonth","formatYear","TIME_GRANULARITIES","timeSecond","timeMinute","timeHour","timeDay","timeMonth","timeYear","getTimeGranularityByKey","getTimeGranularityByOrder","order","getTimeGranularityForDate","date","current","interval","MAX_CLUSTER_ZOOM_LEVEL","FlowmapSelectors","invalid","invalidIds","filtered","srcId","dstId","start","end","time","timeExtent","minOrder","timeGranularity","timeGranularityKey","timeRange","withFlows","clusterLevelsFromProps","selectedLocations","adjust","zoneId","mapZoom","availableClusterZoomLevels","clusteringEnabled","clusterZoom","toAppend","flowmapColors","flowsForKnownLocations","missing","clusterTree","isClusteringEnabled","aggregated","aggregateFlows","expanded","selectedLocationSet","locationFilterMode","byTime","millis","locationTotalsEnabled","locationsHavingFlows","selectedLocationsSet","totals","add","rv","originId","destId","bbox","idx","s1","s2","item","locationIds","calcLocationTotalsExtent","locationsInViewport","locationIdsInViewport","maxTopFlowsDisplayNum","picked","pickedCount","total","locationTotalsExtent","scaleSqrt","circleSizeScale","getInCircleSize","getOutCircleSize","idA","idB","flowThicknessScale","animationEnabled","locationLabelsEnabled","flowMagnitudeExtent","flowColorScale","circlePositions","circleColor","circleColors","inCircleRadii","outCircleRadii","sourcePositions","targetPositions","thicknesses","endpointOffsets","flowLineColors","staggeringValues","lon1","lat1","lon2","lat2","x1","y1","x2","incomingCount","outgoingCount","internalCount","lo","hi","flowAccessors","byOriginDest","ff","values","getOuterCircleRadiusByIndex","circleAttributes","getInRadius","getOutRadius","getLocationCoordsByIndex","getPosition","getFlowLineAttributesByIndex","lineAttributes","getColor","getEndpointOffsets","getSourcePosition","getTargetPosition","getThickness","getStaggering","epsilon","pi","halfPi","quarterPi","tau","degrees","radians","abs","atan2","cos","sqrt","asin","noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","object","features","coordinates","streamLine","streamPolygon","geometries","closed","coordinate","geoStream","areaRingSum","Adder","areaSum","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","spherical","cartesian","cartesianCross","cartesianNormalizeInPlace","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","equatorial","inflection","delta","sign","lambdai","phii","antimeridian","angle","rangeCompare","rangeContains","geoBounds","feature","merged","deltaMax","getViewStateForFeatures","featureCollection","size","paddedBounds","height","fitBounds","getViewStateForLocations","getLocationCoords","asGeometry","isFlowmapData","isFlowmapDataProvider","dataProvider","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","reject","fulfilled","step","e","rejected","LocalFlowmapDataProvider","flowmapData","flowmapState","dims","setLayersData","PickingType","PROPS_TO_CAUSE_LAYER_DATA_UPDATE","HighlightType","FlowmapLayer","CompositeLayer","info","event","startTime","onHover","onClick","layersData","adaptiveScalesEnabled","clusteringLevel","clusteringAuto","highlightColor","pickViewportProps","sourceLayer","commonInfo","circleRadius","attrs","layers","highlightedObject","locationLabels","commonLineLayerProps","ScatterplotLayer","TextLayer","longitude","latitude","pitch","bearing","viewId","dark","elapsed","vizDetails","viewState","setViewState","useState","globalStore","hoverInfo","setHoverInfo","REACT_VIEW_HANDLES","handleClick","handleHover","hover","handleViewState","view","layer","React","DeckGL","StaticMap","MAPBOX_TOKEN","MyComponent","defineComponent","FlowMapLayer","VizConfigurator","ZoomButtons","HTTPFileSystem","svnProject","DashboardDataManager","buffer","base64","util","config","filename","text","YAML","err","message","vizes","boundaries","filepath","boundaryLabelField","centroid","turf.centerOfMass","samples","numCentroids","gap","currentView","dataset","destination"],"mappings":"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B,EACzC,QAAS,CACL,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,MAAOjB,EAAckB,EAAgB,EACrC,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,QAAStB,EAASuB,EAAa,EAC/B,KAAMvB,EAASwB,EAAU,EACzB,MAAO,CACH,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,MAAO,CACH,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,OAAQpB,EAAcqB,EAAiB,EACvC,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,KAAMzB,EAAS0B,EAAU,EACzB,OAAQ1B,EAAS2B,EAAY,EAC7B,KAAM3B,EAAS4B,EAAU,EACzB,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,QAAS5B,EAAS6B,EAAa,EAC/B,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,KAAM7B,EAAS8B,EAAU,EACzB,MAAO,CACH,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,KAAM9B,EAAS+B,EAAU,EACzB,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,WAAY,CACR,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,KAAMpB,GACN,QAAS,CACL,UACA,UACA,UACA,UACA,UACA,UACA,SACH,EACD,QAASP,EAAc4B,EAAkB,EACzC,KAAM5B,EAAc6B,EAAe,EACnC,KAAMjC,EAASkC,EAAU,EACzB,OAAQlC,EAASmC,EAAY,EAC7B,OAAQnC,EAASoC,EAAY,EAC7B,OAAQpC,EAASqC,EAAY,CACjC,EAEMC,GAAgB,UAChBC,GAAgB,UAChBC,GAAa,CACf,SAAU,CACN,MAAO,CACH,OAAQ,CAACjC,GAAgBgC,EAAa,CACzC,CACJ,EACD,SAAU,CACN,MAAO,CACH,OAAQ,CAAChC,GAAgB+B,EAAa,CACzC,CACJ,EACD,cAAe,CACX,QAAS,uBACT,OAAQ,uBACX,EACD,aAAc,kBAClB,EACO,SAASG,GAAi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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}