{"version":3,"file":"group-f6e6d4c5.js","sources":["../../node_modules/d3-array/src/identity.js","../../node_modules/d3-array/src/group.js"],"sourcesContent":["export default function identity(x) {\n  return x;\n}\n","import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\n\nexport function flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\n\nexport function flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n"],"names":["identity","x","group","values","keys","nest","groups","flatten","i","n","g","key","value","flatGroup","flatRollup","reduce","rollups","rollup","index","unique","indexes","map","regroup","InternMap","keyof"],"mappings":"wCAAe,SAASA,EAASC,EAAG,CAClC,OAAOA,CACT,CCCe,SAASC,EAAMC,KAAWC,EAAM,CAC7C,OAAOC,EAAKF,EAAQH,EAAUA,EAAUI,CAAI,CAC9C,CAEO,SAASE,EAAOH,KAAWC,EAAM,CACtC,OAAOC,EAAKF,EAAQ,MAAM,KAAMH,EAAUI,CAAI,CAChD,CAEA,SAASG,EAAQD,EAAQF,EAAM,CAC7B,QAASI,EAAI,EAAGC,EAAIL,EAAK,OAAQI,EAAIC,EAAG,EAAED,EACxCF,EAASA,EAAO,QAAQI,GAAKA,EAAE,IAAK,EAAC,IAAI,CAAC,CAACC,EAAKC,CAAK,IAAM,CAAC,GAAGF,EAAGC,EAAKC,CAAK,CAAC,CAAC,EAEhF,OAAON,CACT,CAEO,SAASO,EAAUV,KAAWC,EAAM,CACzC,OAAOG,EAAQD,EAAOH,EAAQ,GAAGC,CAAI,EAAGA,CAAI,CAC9C,CAEO,SAASU,EAAWX,EAAQY,KAAWX,EAAM,CAClD,OAAOG,EAAQS,EAAQb,EAAQY,EAAQ,GAAGX,CAAI,EAAGA,CAAI,CACvD,CAEO,SAASa,EAAOd,EAAQY,KAAWX,EAAM,CAC9C,OAAOC,EAAKF,EAAQH,EAAUe,EAAQX,CAAI,CAC5C,CAEO,SAASY,EAAQb,EAAQY,KAAWX,EAAM,CAC/C,OAAOC,EAAKF,EAAQ,MAAM,KAAMY,EAAQX,CAAI,CAC9C,CAEO,SAASc,EAAMf,KAAWC,EAAM,CACrC,OAAOC,EAAKF,EAAQH,EAAUmB,EAAQf,CAAI,CAC5C,CAEO,SAASgB,EAAQjB,KAAWC,EAAM,CACvC,OAAOC,EAAKF,EAAQ,MAAM,KAAMgB,EAAQf,CAAI,CAC9C,CAEA,SAASe,EAAOhB,EAAQ,CACtB,GAAIA,EAAO,SAAW,EAAG,MAAM,IAAI,MAAM,eAAe,EACxD,OAAOA,EAAO,CAAC,CACjB,CAEA,SAASE,EAAKF,EAAQkB,EAAKN,EAAQX,EAAM,CACvC,OAAQ,SAASkB,EAAQnB,EAAQK,EAAG,CAClC,GAAIA,GAAKJ,EAAK,OAAQ,OAAOW,EAAOZ,CAAM,EAC1C,MAAMG,EAAS,IAAIiB,EACbC,EAAQpB,EAAKI,GAAG,EACtB,IAAIU,EAAQ,GACZ,UAAWN,KAAST,EAAQ,CAC1B,MAAMQ,EAAMa,EAAMZ,EAAO,EAAEM,EAAOf,CAAM,EAClCD,EAAQI,EAAO,IAAIK,CAAG,EACxBT,EAAOA,EAAM,KAAKU,CAAK,EACtBN,EAAO,IAAIK,EAAK,CAACC,CAAK,CAAC,CAC7B,CACD,SAAW,CAACD,EAAKR,CAAM,IAAKG,EAC1BA,EAAO,IAAIK,EAAKW,EAAQnB,EAAQK,CAAC,CAAC,EAEpC,OAAOa,EAAIf,CAAM,CACrB,EAAKH,EAAQ,CAAC,CACd","x_google_ignoreList":[0,1]}