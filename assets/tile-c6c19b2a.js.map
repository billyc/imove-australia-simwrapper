{"version":3,"file":"tile-c6c19b2a.js","sources":["../../src/dash-panels/tile.vue"],"sourcesContent":["<template lang=\"pug\">\n.content\n    .tiles-container(v-if=\"imagesAreLoaded\")\n      .tile(v-for=\"(value, index) in this.dataSet.data\" v-bind:style=\"{ 'background-color': colors[index % colors.length]}\" @click=\"\")\n        a(:href=\"value[urlIndex]\" target=\"_blank\" :class=\"{ 'is-not-clickable': !value[urlIndex] }\")\n          p.tile-title {{ value[tileNameIndex] }}\n          p.tile-value {{ value[tileValueIndex] }}\n          .tile-image(v-if=\"value[tileImageIndex] != undefined && checkIfItIsACustomIcon(value[tileImageIndex])\" :style=\"{'background': base64Images[index], 'background-size': 'contain'}\")\n          img.tile-image(v-else-if=\"value[tileImageIndex] != undefined && checkIfIconIsInAssetsFolder(value[tileImageIndex])\" v-bind:src=\"'/src/assets/tile-icons/' + value[tileImageIndex].trim() + '.svg'\" :style=\"{'background': ''}\")\n          font-awesome-icon.tile-image(v-else-if=\"value[tileImageIndex] != undefined\" :icon=\"value[tileImageIndex].trim()\" size=\"2xl\" :style=\"{'background': '', 'color': 'black'}\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\nimport readBlob from 'read-blob'\nimport Papa from '@simwrapper/papaparse'\n\nimport DashboardDataManager from '@/js/DashboardDataManager'\nimport { FileSystemConfig, Status } from '@/Globals'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\nimport globalStore from '@/store'\nimport { arrayBufferToBase64 } from '@/js/util'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nexport default defineComponent({\n  name: 'Tile',\n  components: { FontAwesomeIcon },\n  props: {\n    fileSystemConfig: { type: Object as PropType<FileSystemConfig>, required: true },\n    subfolder: { type: String, required: true },\n    files: { type: Array, required: true },\n    config: { type: Object as any, required: true },\n    cardTitle: { type: String, required: false },\n    cardId: String,\n    datamanager: { type: Object as PropType<DashboardDataManager>, required: true },\n  },\n  data: () => {\n    return {\n      globalState: globalStore.state,\n      id: ('tiles-' + Math.floor(1e12 * Math.random())) as any,\n      // dataSet is either x,y or allRows[]\n      dataSet: {} as { data?: any; x?: any[]; y?: any[]; allRows?: any },\n      YAMLrequirementsOverview: { dataset: '' },\n      colors: [\n        '#F08080', // Light coral pink\n        '#FFB6C1', // Pale pink\n        '#FFDAB9', // peach\n        '#FFECB3', // cream yellow\n        '#B0E0E6', // light blue\n        '#98FB98', // light green\n        '#FFD700', // golden yellow\n        '#FFA07A', // salmon pink\n        '#E0FFFF', // light turquoise\n        '#FFDAB9', // pink\n        '#FFC0CB', // pink\n        '#FFA500', // orange\n        '#FF8C00', // dark orange\n        '#FF7F50', // coral red\n        '#FFE4B5', // papaya\n        '#ADD8E6', // light blue\n        '#90EE90', // light green\n        '#FFD700', // golden yellow\n        '#FFC0CB', // pink\n        '#FFA500', // Orange\n      ],\n      colorsD3: [\n        '#1F77B4',\n        '#FF7F0E',\n        '#2CA02C',\n        '#D62728',\n        '#9467BD',\n        '#8C564B',\n        '#E377C2',\n        '#7F7F7F',\n        '#BCBD22',\n        '#17BECF',\n      ],\n\n      localTileIcons: [\n        'departure_board',\n        'directions_car',\n        'emoji_transportation',\n        'local_taxi',\n        'subway',\n        'directions_bike',\n        'directions_subway',\n        'ev_station',\n        'local_gas_station',\n        'motorcycle',\n        'train',\n        'directions_boat',\n        'electric_car',\n        'group',\n        'local_parking',\n        'person',\n        'transportation',\n        'directions_bus',\n        'electric_rickshaw',\n        'groups',\n        'local_shipping',\n        'route',\n        'two_wheeler',\n      ],\n      testImage: '',\n      base64Images: [] as any[],\n      imagesAreLoaded: false,\n      tileNameIndex: 0,\n      tileValueIndex: 1,\n      tileImageIndex: 2,\n      urlIndex: 3,\n    }\n  },\n  computed: {\n    fileApi(): HTTPFileSystem {\n      return new HTTPFileSystem(this.fileSystemConfig, globalStore)\n    },\n  },\n  async mounted() {\n    this.dataSet = await this.loadFile()\n    this.validateDataSet()\n    await this.loadImages()\n    this.$emit('isLoaded')\n    console.log(this.dataSet)\n    console.log(globalStore)\n  },\n  methods: {\n    forceRerender() {\n      // Removing my-component from the DOM\n      this.imagesAreLoaded = false\n\n      this.$nextTick(() => {\n        // Adding the component back in\n        this.imagesAreLoaded = true\n      })\n    },\n    async loadImages() {\n      this.imagesAreLoaded = false\n\n      for (let i = 0; i < this.dataSet.data.length; i++) {\n        const value = this.dataSet.data[i] as any\n        if (this.checkIfItIsACustomIcon(value[this.tileImageIndex])) {\n          try {\n            const blob = await this.fileApi.getFileBlob(\n              this.subfolder +\n                '/' +\n                this.config.dataset +\n                '/../' +\n                value[this.tileImageIndex].trim()\n            )\n            const buffer = await readBlob.arraybuffer(blob)\n            const base64 = arrayBufferToBase64(buffer)\n            if (base64)\n              this.base64Images[i] = `center / cover no-repeat url(data:image/png;base64,${base64})`\n          } catch (e) {\n            if (e instanceof Response) {\n              this.$emit('error', {\n                type: Status.WARNING,\n                msg: e.statusText,\n                desc: `The file ${value[this.tileImageIndex]} was not found in this path ${\n                  this.subfolder + '/' + this.config.dataset + '/../' + value[this.tileImageIndex]\n                }.`,\n              })\n            }\n          }\n        }\n        this.forceRerender()\n      }\n\n      this.imagesAreLoaded = true\n    },\n\n    async loadFile() {\n      const rawText = await this.fileApi.getFileText(this.subfolder + '/' + this.config.dataset)\n      const csv = Papa.parse(rawText, {\n        comments: '#',\n        delimitersToGuess: [';', '\\t', ',', ' '],\n        dynamicTyping: true,\n        header: false,\n        skipEmptyLines: true,\n      })\n\n      return csv\n    },\n\n    validateYAML() {\n      for (const key in this.YAMLrequirementsOverview) {\n        if (key in this.config === false) {\n          this.$emit('error', {\n            type: Status.ERROR,\n            msg: `YAML file missing required key: ${key}`,\n            desc: 'Check this.YAMLrequirementsXY for required keys',\n          })\n        }\n      }\n    },\n\n    validateDataSet() {\n      // TODO: Update validation for new format\n    },\n\n    checkIfIconIsInAssetsFolder(name: string) {\n      return this.localTileIcons.includes(name.trim())\n    },\n\n    checkIfItIsACustomIcon(name: string) {\n      if (name == undefined) return\n      if (\n        name.includes('.png') ||\n        name.includes('.jpg') ||\n        name.includes('.svg') ||\n        name.includes('.jpeg')\n      ) {\n        return true\n      }\n      return false\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.content {\n  display: flex;\n  width: 100%;\n  font-family: $fancyFont;\n  flex-direction: row;\n}\n\n.elements {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  text-align: center;\n  color: var(--text);\n  font-weight: 700;\n  font-size: 25px;\n}\n\n.line {\n  border-top: 1px solid black;\n}\n\n.text {\n  margin-bottom: 0 !important;\n}\n\n.tiles-container {\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  position: relative;\n}\n\n.tile {\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  background-color: #845ec2;\n  margin: 10px;\n  padding: 20px;\n  min-width: 250px;\n  font-family: $fancyFont;\n}\n\n.tile .tile-value {\n  font-size: 2rem;\n  font-weight: bold;\n  width: 100%;\n  color: #363636; // var(--text) but always the color from the light mode.\n  grid-column-start: 2;\n  grid-column-end: 4;\n  text-align: center;\n  grid-row: 2;\n}\n\n.tile .tile-title {\n  width: 100%;\n  font-size: 1.4rem;\n  height: 5rem;\n  margin-bottom: 0;\n  color: #363636; // var(--text) but always the color from the light mode.\n  text-align: center;\n  grid-column-start: 1;\n  grid-column-end: 5;\n  grid-row: 1;\n}\n\n.tile .tile-image {\n  height: 4rem;\n  grid-row: 2;\n  align-items: baseline;\n}\n\n.is-not-clickable {\n  cursor: default;\n}\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n"],"names":["_sfc_main","defineComponent","FontAwesomeIcon","globalStore","HTTPFileSystem","i","value","blob","buffer","readBlob","base64","arrayBufferToBase64","e","Status","rawText","Papa","key","name"],"mappings":"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"}