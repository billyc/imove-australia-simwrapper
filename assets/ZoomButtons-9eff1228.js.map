{"version":3,"file":"ZoomButtons-9eff1228.js","sources":["../../src/components/MapScale.vue","../../src/components/ZoomButtons.vue","../../src/assets/images/sw_plus_dm.jpg","../../src/assets/images/sw_plus.jpg","../../src/assets/images/sw_minus_dm.jpg","../../src/assets/images/sw_minus.jpg","../../src/assets/images/sw_north_arrow_dm.png","../../src/assets/images/sw_north_arrow.png"],"sourcesContent":["<template lang=\"pug\">\n.map-scale(v-show=\"showScale\")\n\n  .feet(\n    :style=\"{width: `${miles.pixels}px`}\"\n    :class=\"{leftside: corner == 'top-left'}\"\n  )\n    p {{miles.length}}&nbsp;{{miles.label}}\n\n  .meters(\n    :style=\"{width: `${metric.pixels}px`}\"\n    :class=\"{leftside: corner == 'top-left'}\"\n  )\n    p {{metric.length}}&nbsp;{{metric.label}}\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport globalStore from '@/store'\n\nconst breakpointsMetric = [\n  { pixels: 10000, factor: 0.01, length: 10, label: 'm' },\n  { pixels: 5000, factor: 0.02, length: 20, label: 'm' },\n  { pixels: 2000, factor: 0.05, length: 50, label: 'm' },\n  { pixels: 1000, factor: 0.1, length: 100, label: 'm' },\n  { pixels: 500, factor: 0.2, length: 200, label: 'm' },\n  { pixels: 250, factor: 0.5, length: 500, label: 'm' },\n  { pixels: 100, factor: 1, length: 1, label: 'km' },\n  { pixels: 50, factor: 2, length: 2, label: 'km' },\n  { pixels: 20, factor: 5, length: 5, label: 'km' },\n  { pixels: 8, factor: 10, length: 10, label: 'km' },\n  { pixels: 4, factor: 20, length: 20, label: 'km' },\n  { pixels: 2, factor: 50, length: 50, label: 'km' },\n  { pixels: 1, factor: 100, length: 100, label: 'km' },\n]\n\nconst breakpointsMiles = [\n  { pixels: 20000, factor: 0.003787878, length: 20, label: 'ft' },\n  { pixels: 10000, factor: 0.00946969696, length: 50, label: 'ft' },\n  { pixels: 5000, factor: 0.0189393939, length: 100, label: 'ft' },\n  { pixels: 2500, factor: 0.04734848, length: 250, label: 'ft' },\n  { pixels: 1000, factor: 0.09469696, length: 500, label: 'ft' },\n  { pixels: 500, factor: 0.18939393, length: 1000, label: 'ft' },\n  { pixels: 300, factor: 0.25, length: 0.25, label: 'mi' },\n  { pixels: 180, factor: 0.5, length: 0.5, label: 'mi' },\n  { pixels: 80, factor: 1, length: 1, label: 'mi' },\n  { pixels: 40, factor: 2, length: 2, label: 'mi' },\n  { pixels: 20, factor: 5, length: 5, label: 'mi' },\n  { pixels: 8, factor: 10, length: 10, label: 'mi' },\n  { pixels: 4, factor: 25, length: 25, label: 'mi' },\n  { pixels: 1.5, factor: 50, length: 50, label: 'mi' },\n]\n\nexport default defineComponent({\n  name: 'MapScale',\n  props: {\n    corner: { type: String, required: false },\n  },\n  data: () => {\n    return {\n      globalState: globalStore.state,\n      showScale: false,\n      metric: { pixels: 100, length: 1000, label: 'm' },\n      miles: { pixels: 100, length: 1000, label: 'mi' },\n    }\n  },\n  mounted() {\n    this.zoomChanged()\n  },\n  watch: {\n    'globalState.viewState.zoom'() {\n      this.zoomChanged()\n    },\n    'globalState.viewState.pitch'() {\n      this.zoomChanged()\n    },\n    'globalState.viewState.latitude'() {\n      this.zoomChanged()\n    },\n  },\n  methods: {\n    zoomChanged() {\n      // hide scale if map is pitched forward\n      if (this.globalState.viewState.pitch > 15 || this.globalState.viewState.zoom < 5) {\n        this.showScale = false\n        return\n      }\n\n      this.showScale = true\n\n      // window.devicePixelRatio depends on the page zoom level (user-chosen) and also\n      // whether screen is \"retina\" or not. we'll guess that >1.5 is retina.\n      // Actually none of this makes any sense, but let's optimize for retina for now\n      const pixelDPI = 2 // window.devicePixelRatio < 1.5 ? 1.0 : 2.0\n      // console.log(window.devicePixelRatio, pixelDPI)\n\n      // generate scale based on latitude and zoom\n      // https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Resolution_and_Scale\n      const metersPerPixelAtEquator = 156543.03\n      const latitude = (Math.PI / 180.0) * this.globalState.viewState.latitude\n      const zoomLevel = this.globalState.viewState.zoom\n      const metersPerPixel = (metersPerPixelAtEquator * Math.cos(latitude)) / 2.0 ** zoomLevel\n\n      const pixelsForOneKM = (pixelDPI * 1000) / metersPerPixel\n      this.calculateBestMeasurements(pixelsForOneKM)\n    },\n    calculateBestMeasurements(pixelsForOneKM: number) {\n      // Metric: use either km or meters\n      let scaleMetric = { pixels: pixelsForOneKM / 200, length: 5, label: 'm' }\n\n      for (let i = 0; i < breakpointsMetric.length; i++) {\n        const breakpoint = breakpointsMetric[i]\n        if (pixelsForOneKM > breakpoint.pixels) break\n        scaleMetric = {\n          pixels: pixelsForOneKM * breakpoint.factor,\n          length: breakpoint.length,\n          label: breakpoint.label,\n        }\n      }\n\n      // U.S.: use either feet or miles\n      const pixelsForOneMile = pixelsForOneKM * 1.609344\n      let scaleMiles = { pixels: (10 * pixelsForOneMile) / 5280, length: 10, label: 'ft' }\n\n      for (let i = 0; i < breakpointsMiles.length; i++) {\n        const breakpoint = breakpointsMiles[i]\n        if (pixelsForOneMile > breakpoint.pixels) break\n        scaleMiles = {\n          pixels: pixelsForOneMile * breakpoint.factor,\n          length: breakpoint.length,\n          label: breakpoint.label,\n        }\n      }\n\n      this.metric = scaleMetric\n      this.miles = scaleMiles\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.map-scale {\n  display: flex;\n  flex-direction: column;\n  overflow-x: hidden;\n  pointer-events: none;\n  margin-bottom: 2px;\n}\n\np {\n  margin: 0px 0px;\n  padding: 1px 4px;\n  font-size: 0.8rem;\n  color: var(--textBold);\n  text-align: right;\n}\n\n.feet {\n  margin-left: auto;\n  background-color: var(--scaleBg);\n  border-left: var(--scaleBorder);\n  border-right: var(--scaleBorder);\n  border-bottom: var(--scaleBorder);\n}\n\n.meters {\n  margin-left: auto;\n  margin-top: -1px;\n  background-color: var(--scaleBg);\n  border-left: var(--scaleBorder);\n  border-right: var(--scaleBorder);\n  border-top: var(--scaleBorder);\n}\n\n.leftside {\n  margin-left: 10px;\n}\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n","<template lang=\"pug\">\n.map-complications(:style=\"cornerSettings\")\n\n  map-scale.map-scale(:corner=\"corner\")\n\n  .zoom-buttons\n    .button-single.button-top\n      img.img-button(v-if=\"globalState.isDarkMode\"\n          :title=\"$t('in')\"\n          @click=\"zoomIn()\"\n          src=\"@/assets/images/sw_plus_dm.jpg\")\n      img.img-button(v-else\n          :title=\"$t('in')\"\n          @click=\"zoomIn()\"\n          src=\"@/assets/images/sw_plus.jpg\")\n\n    .button-single\n      img.img-button(v-if=\"globalState.isDarkMode\" @click=\"zoomOut()\"\n          :title=\"$t('out')\"\n          src=\"@/assets/images/sw_minus_dm.jpg\")\n      img.img-button(v-else @click=\"zoomOut()\"\n          :title=\"$t('out')\"\n          src=\"@/assets/images/sw_minus.jpg\")\n\n    .button-single.button-bottom(v-if=\"globalState.isDarkMode\" :style=\"{ background: `rgb(43,60,78)`, border: '1px solid rgb(119,119,119)'}\")\n      img.img-button(v-if=\"globalState.isDarkMode\" @click=\"setNorth()\"\n          :title=\"$t('center')\"\n          src=\"@/assets/images/sw_north_arrow_dm.png\"\n          :style=\"{transform: `rotate(${arrowRotation}deg)`, background: `rgb(43,60,78)`, height: '21px'}\"\n      )\n    .button-single.button-bottom(v-if=\"!globalState.isDarkMode\" :style=\"{border: '1px solid rgb(224,224,224)'}\")\n      img.img-button(@click=\"setNorth()\"\n          :title=\"$t('center')\"\n          src=\"@/assets/images/sw_north_arrow.png\"\n          :style=\"{transform: `rotate(${arrowRotation}deg)`, height: '21px'}\"\n      )\n\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: { in: 'Zoom in', out: 'Zoom out', center: 'North' },\n    de: { in: 'Einzoomen', out: 'Auszoomen', center: 'Norden' },\n  },\n}\n\nimport { defineComponent } from 'vue'\nimport globalStore from '@/store'\nimport MapScale from '@/components/MapScale.vue'\n\nexport enum Corner {\n  TOP,\n  TOPLEFT,\n  BOTTOM,\n}\n\nexport default defineComponent({\n  name: 'ZoomButtons',\n  i18n,\n  components: { MapScale },\n  props: {\n    corner: String,\n  },\n  data: () => {\n    return {\n      globalState: globalStore.state,\n      zoomInFactor: 0.5,\n      zoomOutFactor: 0.5,\n      maxZoomIn: 20,\n      maxZoomOut: 0,\n      arrowRotation: 0,\n      location: Corner.TOP,\n      smooth: [\n        0.0125, 0.025, 0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 0.975,\n        0.9875, 1.0,\n      ],\n    }\n  },\n  mounted() {\n    // default zoom buttons are in bottom-right\n    if (this.corner && this.corner.startsWith('top')) this.location = Corner.TOP\n    if (this.corner === 'top-left') this.location = Corner.TOPLEFT\n    if (this.corner && this.corner.startsWith('bottom')) this.location = Corner.BOTTOM\n  },\n  watch: {\n    'globalState.viewState.bearing'() {\n      this.updateNorthArrow()\n    },\n  },\n  computed: {\n    cornerSettings(): any {\n      let style = {\n        display: 'flex',\n        right: '7px',\n      }\n\n      if (this.location == Corner.TOP) {\n        style = Object.assign(style, {\n          flexDirection: 'row',\n          top: '5px',\n        })\n      }\n\n      if (this.location == Corner.TOPLEFT) {\n        style = Object.assign(style, {\n          flexDirection: 'row-reverse',\n          top: '5px',\n          left: 0,\n          paddingLeft: 0,\n          right: 'unset',\n        })\n      }\n\n      if (this.location == Corner.BOTTOM) {\n        style = Object.assign(style, {\n          flexDirection: 'column-reverse',\n          bottom: '32px',\n        })\n      }\n\n      return style\n    },\n  },\n  methods: {\n    setNorth() {\n      const currentMapDirection = globalStore.state.viewState\n      for (let i = 0; i < this.smooth.length; i++) {\n        setTimeout(() => {\n          const mergedMap = Object.assign({}, currentMapDirection, {\n            bearing: currentMapDirection.bearing - this.smooth[i] * currentMapDirection.bearing,\n            pitch: currentMapDirection.pitch - this.smooth[i] * currentMapDirection.pitch,\n          })\n          globalStore.commit('setMapCamera', mergedMap)\n        }, 24 * i)\n      }\n    },\n\n    zoomIn() {\n      let currentZoom = globalStore.state.viewState.zoom\n      if (currentZoom + this.zoomInFactor <= this.maxZoomIn) {\n        for (let i = 0; i < this.smooth.length; i++) {\n          setTimeout(() => {\n            const newDirection = { zoom: currentZoom + this.smooth[i] * this.zoomInFactor }\n            const currentMapDirection = globalStore.state.viewState\n            const mergedMap = Object.assign({}, currentMapDirection, newDirection)\n            globalStore.commit('setMapCamera', mergedMap)\n          }, 16.67 * i)\n        }\n      }\n    },\n\n    zoomOut() {\n      var currentZoom = globalStore.state.viewState.zoom\n      if (currentZoom - this.zoomOutFactor >= this.maxZoomOut) {\n        for (let i = 0; i < this.smooth.length; i++) {\n          setTimeout(() => {\n            const newDirection = { zoom: currentZoom - this.smooth[i] * this.zoomInFactor }\n            const currentMapDirection = globalStore.state.viewState\n            const mergedMap = Object.assign({}, currentMapDirection, newDirection)\n            globalStore.commit('setMapCamera', mergedMap)\n          }, 16.67 * i)\n        }\n      }\n    },\n\n    updateNorthArrow() {\n      this.arrowRotation = -1 * this.globalState.viewState.bearing\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.map-complications {\n  position: absolute;\n  pointer-events: none;\n  cursor: pointer;\n  zoom: -5;\n  display: flex;\n}\n\n.zoom-buttons {\n  padding-left: 7px;\n  pointer-events: auto;\n  z-index: 2;\n  margin-bottom: 8px;\n}\n\n.button-single:last-child {\n  margin-bottom: 0;\n}\n\n.button-single {\n  width: 24px;\n  height: 24px;\n  text-align: center;\n  border: var(--borderZoomButtons);\n  background-color: var(--bgBold);\n  overflow: hidden;\n}\n\n.img-button {\n  height: 22px;\n}\n\n.button-top {\n  border-bottom-width: 0px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  margin-bottom: -1px;\n}\n\n.button-bottom {\n  border-top-width: 0px;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  height: 23px;\n  margin-top: -1px;\n}\n\n.map-scale {\n  margin-top: 1px;\n}\n\n.map-scale.scale-left {\n  margin-left: 7px;\n}\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n","export default \"__VITE_ASSET__870bb8e5__\"","export default \"__VITE_ASSET__6de1ce4c__\"","export default \"__VITE_ASSET__d8b43748__\"","export default \"__VITE_ASSET__b8e953d4__\"","export default \"__VITE_ASSET__96e9254e__\"","export default \"__VITE_ASSET__d05cb773__\""],"names":["breakpointsMetric","breakpointsMiles","_sfc_main$1","defineComponent","globalStore","pixelDPI","metersPerPixelAtEquator","latitude","zoomLevel","metersPerPixel","pixelsForOneKM","scaleMetric","i","breakpoint","pixelsForOneMile","scaleMiles","i18n","_sfc_main","MapScale","style","currentMapDirection","mergedMap","currentZoom","newDirection","__$_require_a2416114__","__$_require_6bd38440__","__$_require_3aca8e02__","__$_require_37cb2a58__","__$_require_63be0559__","__$_require_e76e9566__"],"mappings":"sDAqBA,MAAAA,EAAA,CACA,CAAA,OAAA,IAAA,OAAA,IAAA,OAAA,GAAA,MAAA,GAAA,EACA,CAAA,OAAA,IAAA,OAAA,IAAA,OAAA,GAAA,MAAA,GAAA,EACA,CAAA,OAAA,IAAA,OAAA,IAAA,OAAA,GAAA,MAAA,GAAA,EACA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,EACA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,EACA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,EACA,CAAA,OAAA,IAAA,OAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EACA,CAAA,OAAA,GAAA,OAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EACA,CAAA,OAAA,GAAA,OAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EACA,CAAA,OAAA,EAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,EAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,EAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,EAAA,OAAA,IAAA,OAAA,IAAA,MAAA,IAAA,CACA,EAEAC,EAAA,CACA,CAAA,OAAA,IAAA,OAAA,WAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,aAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,YAAA,OAAA,IAAA,MAAA,IAAA,EACA,CAAA,OAAA,KAAA,OAAA,UAAA,OAAA,IAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,UAAA,OAAA,IAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,UAAA,OAAA,IAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,IAAA,OAAA,IAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,GAAA,OAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EACA,CAAA,OAAA,GAAA,OAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EACA,CAAA,OAAA,GAAA,OAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EACA,CAAA,OAAA,EAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,EAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,EACA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,GAAA,MAAA,IAAA,CACA,EAEAC,EAAAC,EAAA,CACA,KAAA,WACA,MAAA,CACA,OAAA,CAAA,KAAA,OAAA,SAAA,EAAA,CACA,EACA,KAAA,KACA,CACA,YAAAC,EAAA,MACA,UAAA,GACA,OAAA,CAAA,OAAA,IAAA,OAAA,IAAA,MAAA,GAAA,EACA,MAAA,CAAA,OAAA,IAAA,OAAA,IAAA,MAAA,IAAA,CAAA,GAGA,SAAA,CACA,KAAA,YAAA,CACA,EACA,MAAA,CACA,8BAAA,CACA,KAAA,YAAA,CACA,EACA,+BAAA,CACA,KAAA,YAAA,CACA,EACA,kCAAA,CACA,KAAA,YAAA,CACA,CACA,EACA,QAAA,CACA,aAAA,CAEA,GAAA,KAAA,YAAA,UAAA,MAAA,IAAA,KAAA,YAAA,UAAA,KAAA,EAAA,CACA,KAAA,UAAA,GACA,MACA,CAEA,KAAA,UAAA,GAKA,MAAAC,EAAA,EAKAC,EAAA,UACAC,EAAA,KAAA,GAAA,IAAA,KAAA,YAAA,UAAA,SACAC,EAAA,KAAA,YAAA,UAAA,KACAC,EAAAH,EAAA,KAAA,IAAAC,CAAA,EAAA,GAAAC,EAEAE,EAAAL,EAAA,IAAAI,EACA,KAAA,0BAAAC,CAAA,CACA,EACA,0BAAAA,EAAA,CAEA,IAAAC,EAAA,CAAA,OAAAD,EAAA,IAAA,OAAA,EAAA,MAAA,KAEA,QAAAE,EAAA,EAAAA,EAAAZ,EAAA,OAAAY,IAAA,CACA,MAAAC,EAAAb,EAAAY,CAAA,EACA,GAAAF,EAAAG,EAAA,OAAA,MACAF,EAAA,CACA,OAAAD,EAAAG,EAAA,OACA,OAAAA,EAAA,OACA,MAAAA,EAAA,KAAA,CAEA,CAGA,MAAAC,EAAAJ,EAAA,SACA,IAAAK,EAAA,CAAA,OAAA,GAAAD,EAAA,KAAA,OAAA,GAAA,MAAA,MAEA,QAAAF,EAAA,EAAAA,EAAAX,EAAA,OAAAW,IAAA,CACA,MAAAC,EAAAZ,EAAAW,CAAA,EACA,GAAAE,EAAAD,EAAA,OAAA,MACAE,EAAA,CACA,OAAAD,EAAAD,EAAA,OACA,OAAAA,EAAA,OACA,MAAAA,EAAA,KAAA,CAEA,CAEA,KAAA,OAAAF,EACA,KAAA,MAAAI,CACA,CACA,CACA,CAAA,qlBClGAC,EAAA,CACA,SAAA,CACA,GAAA,CAAA,GAAA,UAAA,IAAA,WAAA,OAAA,OAAA,EACA,GAAA,CAAA,GAAA,YAAA,IAAA,YAAA,OAAA,QAAA,CACA,CACA,EAYAC,EAAAd,EAAA,CACA,KAAA,cACA,KAAAa,EACA,WAAA,CAAA,SAAAE,CAAA,EACA,MAAA,CACA,OAAA,MACA,EACA,KAAA,KACA,CACA,YAAAd,EAAA,MACA,aAAA,GACA,cAAA,GACA,UAAA,GACA,WAAA,EACA,cAAA,EACA,SAAA,EACA,OAAA,CACA,MAAA,KAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,KACA,MAAA,CACA,CAAA,GAGA,SAAA,CAEA,KAAA,QAAA,KAAA,OAAA,WAAA,KAAA,IAAA,KAAA,SAAA,GACA,KAAA,SAAA,aAAA,KAAA,SAAA,GACA,KAAA,QAAA,KAAA,OAAA,WAAA,QAAA,IAAA,KAAA,SAAA,EACA,EACA,MAAA,CACA,iCAAA,CACA,KAAA,iBAAA,CACA,CACA,EACA,SAAA,CACA,gBAAA,CACA,IAAAe,EAAA,CACA,QAAA,OACA,MAAA,KAAA,EAGA,OAAA,KAAA,UAAA,IACAA,EAAA,OAAA,OAAAA,EAAA,CACA,cAAA,MACA,IAAA,KAAA,CACA,GAGA,KAAA,UAAA,IACAA,EAAA,OAAA,OAAAA,EAAA,CACA,cAAA,cACA,IAAA,MACA,KAAA,EACA,YAAA,EACA,MAAA,OAAA,CACA,GAGA,KAAA,UAAA,IACAA,EAAA,OAAA,OAAAA,EAAA,CACA,cAAA,iBACA,OAAA,MAAA,CACA,GAGAA,CACA,CACA,EACA,QAAA,CACA,UAAA,CACA,MAAAC,EAAAhB,EAAA,MAAA,UACA,QAAAQ,EAAA,EAAAA,EAAA,KAAA,OAAA,OAAAA,IACA,WAAA,IAAA,CACA,MAAAS,EAAA,OAAA,OAAA,CAAA,EAAAD,EAAA,CACA,QAAAA,EAAA,QAAA,KAAA,OAAAR,CAAA,EAAAQ,EAAA,QACA,MAAAA,EAAA,MAAA,KAAA,OAAAR,CAAA,EAAAQ,EAAA,KAAA,CACA,EACAhB,EAAA,OAAA,eAAAiB,CAAA,CAAA,EACA,GAAAT,CAAA,CAEA,EAEA,QAAA,CACA,IAAAU,EAAAlB,EAAA,MAAA,UAAA,KACA,GAAAkB,EAAA,KAAA,cAAA,KAAA,UACA,QAAAV,EAAA,EAAAA,EAAA,KAAA,OAAA,OAAAA,IACA,WAAA,IAAA,CACA,MAAAW,EAAA,CAAA,KAAAD,EAAA,KAAA,OAAAV,CAAA,EAAA,KAAA,cACAQ,EAAAhB,EAAA,MAAA,UACAiB,EAAA,OAAA,OAAA,CAAA,EAAAD,EAAAG,CAAA,EACAnB,EAAA,OAAA,eAAAiB,CAAA,CAAA,EACA,MAAAT,CAAA,CAGA,EAEA,SAAA,CACA,IAAAU,EAAAlB,EAAA,MAAA,UAAA,KACA,GAAAkB,EAAA,KAAA,eAAA,KAAA,WACA,QAAAV,EAAA,EAAAA,EAAA,KAAA,OAAA,OAAAA,IACA,WAAA,IAAA,CACA,MAAAW,EAAA,CAAA,KAAAD,EAAA,KAAA,OAAAV,CAAA,EAAA,KAAA,cACAQ,EAAAhB,EAAA,MAAA,UACAiB,EAAA,OAAA,OAAA,CAAA,EAAAD,EAAAG,CAAA,EACAnB,EAAA,OAAA,eAAAiB,CAAA,CAAA,EACA,MAAAT,CAAA,CAGA,EAEA,kBAAA,CACA,KAAA,cAAA,GAAA,KAAA,YAAA,UAAA,OACA,CACA,CACA,CAAA,EC3KeY,EAAA,kCCAAC,EAAA,+BCAAC,EAAA,mCCAAC,EAAA,gCCAAC,EAAA,yCCAAC,EAAA"}