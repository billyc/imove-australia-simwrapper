{"version":3,"file":"data-filter-4b0d5277.js","sources":["../../node_modules/@deck.gl/extensions/dist/esm/data-filter/shader-module.js","../../node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js","../../node_modules/@deck.gl/extensions/dist/esm/data-filter/data-filter.js"],"sourcesContent":["const vs = \"\\nuniform DATAFILTER_TYPE filter_min;\\nuniform DATAFILTER_TYPE filter_softMin;\\nuniform DATAFILTER_TYPE filter_softMax;\\nuniform DATAFILTER_TYPE filter_max;\\nuniform bool filter_useSoftMargin;\\nuniform bool filter_enabled;\\nuniform bool filter_transformSize;\\n\\n#ifdef NON_INSTANCED_MODEL\\n  #define DATAFILTER_ATTRIB filterValues\\n  #define DATAFILTER_ATTRIB_64LOW filterValues64Low\\n#else\\n  #define DATAFILTER_ATTRIB instanceFilterValues\\n  #define DATAFILTER_ATTRIB_64LOW instanceFilterValues64Low\\n#endif\\n\\nattribute DATAFILTER_TYPE DATAFILTER_ATTRIB;\\n#ifdef DATAFILTER_DOUBLE\\n  attribute DATAFILTER_TYPE DATAFILTER_ATTRIB_64LOW;\\n\\n  uniform DATAFILTER_TYPE filter_min64High;\\n  uniform DATAFILTER_TYPE filter_max64High;\\n#endif\\n\\nvarying float dataFilter_value;\\n\\nfloat dataFilter_reduceValue(float value) {\\n  return value;\\n}\\nfloat dataFilter_reduceValue(vec2 value) {\\n  return min(value.x, value.y);\\n}\\nfloat dataFilter_reduceValue(vec3 value) {\\n  return min(min(value.x, value.y), value.z);\\n}\\nfloat dataFilter_reduceValue(vec4 value) {\\n  return min(min(value.x, value.y), min(value.z, value.w));\\n}\\nvoid dataFilter_setValue(DATAFILTER_TYPE valueFromMin, DATAFILTER_TYPE valueFromMax) {\\n  if (filter_enabled) {\\n    if (filter_useSoftMargin) {\\n      dataFilter_value = dataFilter_reduceValue(\\n        smoothstep(filter_min, filter_softMin, valueFromMin) *\\n        (1.0 - smoothstep(filter_softMax, filter_max, valueFromMax))\\n      );\\n    } else {\\n      dataFilter_value = dataFilter_reduceValue(\\n        step(filter_min, valueFromMin) * step(valueFromMax, filter_max)\\n      );\\n    }\\n  } else {\\n    dataFilter_value = 1.0;\\n  }\\n}\\n\";\nconst fs = \"\\nuniform bool filter_transformColor;\\nvarying float dataFilter_value;\\n\";\n\nfunction getUniforms(opts) {\n  if (!opts || !('extensions' in opts)) {\n    return {};\n  }\n\n  const {\n    filterRange = [-1, 1],\n    filterEnabled = true,\n    filterTransformSize = true,\n    filterTransformColor = true\n  } = opts;\n  const filterSoftRange = opts.filterSoftRange || filterRange;\n  return { ...(Number.isFinite(filterRange[0]) ? {\n      filter_min: filterRange[0],\n      filter_softMin: filterSoftRange[0],\n      filter_softMax: filterSoftRange[1],\n      filter_max: filterRange[1]\n    } : {\n      filter_min: filterRange.map(r => r[0]),\n      filter_softMin: filterSoftRange.map(r => r[0]),\n      filter_softMax: filterSoftRange.map(r => r[1]),\n      filter_max: filterRange.map(r => r[1])\n    }),\n    filter_enabled: filterEnabled,\n    filter_useSoftMargin: Boolean(opts.filterSoftRange),\n    filter_transformSize: filterEnabled && filterTransformSize,\n    filter_transformColor: filterEnabled && filterTransformColor\n  };\n}\n\nfunction getUniforms64(opts) {\n  if (!opts || !('extensions' in opts)) {\n    return {};\n  }\n\n  const uniforms = getUniforms(opts);\n\n  if (Number.isFinite(uniforms.filter_min)) {\n    const min64High = Math.fround(uniforms.filter_min);\n    uniforms.filter_min -= min64High;\n    uniforms.filter_softMin -= min64High;\n    uniforms.filter_min64High = min64High;\n    const max64High = Math.fround(uniforms.filter_max);\n    uniforms.filter_max -= max64High;\n    uniforms.filter_softMax -= max64High;\n    uniforms.filter_max64High = max64High;\n  } else {\n    const min64High = uniforms.filter_min.map(Math.fround);\n    uniforms.filter_min = uniforms.filter_min.map((x, i) => x - min64High[i]);\n    uniforms.filter_softMin = uniforms.filter_softMin.map((x, i) => x - min64High[i]);\n    uniforms.filter_min64High = min64High;\n    const max64High = uniforms.filter_max.map(Math.fround);\n    uniforms.filter_max = uniforms.filter_max.map((x, i) => x - max64High[i]);\n    uniforms.filter_softMax = uniforms.filter_softMax.map((x, i) => x - max64High[i]);\n    uniforms.filter_max64High = max64High;\n  }\n\n  return uniforms;\n}\n\nconst inject = {\n  'vs:#main-start': \"\\n    #ifdef DATAFILTER_DOUBLE\\n      dataFilter_setValue(\\n        DATAFILTER_ATTRIB - filter_min64High + DATAFILTER_ATTRIB_64LOW,\\n        DATAFILTER_ATTRIB - filter_max64High + DATAFILTER_ATTRIB_64LOW\\n      );\\n    #else\\n      dataFilter_setValue(DATAFILTER_ATTRIB, DATAFILTER_ATTRIB);\\n    #endif\\n  \",\n  'vs:#main-end': \"\\n    if (dataFilter_value == 0.0) {\\n      gl_Position = vec4(0.);\\n    }\\n  \",\n  'vs:DECKGL_FILTER_SIZE': \"\\n    if (filter_transformSize) {\\n      size = size * dataFilter_value;\\n    }\\n  \",\n  'fs:DECKGL_FILTER_COLOR': \"\\n    if (dataFilter_value == 0.0) discard;\\n    if (filter_transformColor) {\\n      color.a *= dataFilter_value;\\n    }\\n  \"\n};\nexport const shaderModule = {\n  name: 'data-filter',\n  vs,\n  fs,\n  inject,\n  getUniforms\n};\nexport const shaderModule64 = {\n  name: 'data-filter-fp64',\n  vs,\n  fs,\n  inject,\n  getUniforms: getUniforms64\n};\n//# sourceMappingURL=shader-module.js.map","import { Model, Texture2D, Framebuffer, isWebGL2 } from '@luma.gl/core';\nconst AGGREGATE_VS = \"#define SHADER_NAME data-filter-vertex-shader\\n\\n#ifdef FLOAT_TARGET\\n  attribute float filterIndices;\\n  attribute float filterPrevIndices;\\n#else\\n  attribute vec2 filterIndices;\\n  attribute vec2 filterPrevIndices;\\n#endif\\n\\nvarying vec4 vColor;\\nconst float component = 1.0 / 255.0;\\n\\nvoid main() {\\n  #ifdef FLOAT_TARGET\\n    dataFilter_value *= float(filterIndices != filterPrevIndices);\\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\\n    vColor = vec4(0.0, 0.0, 0.0, 1.0);\\n  #else\\n    // Float texture is not supported: pack result into 4 channels x 256 px x 64px\\n    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);\\n    float col = filterIndices.x;\\n    float row = filterIndices.y * 4.0;\\n    float channel = floor(row);\\n    row = fract(row);\\n    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));\\n    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);\\n  #endif\\n  gl_PointSize = 1.0;\\n}\\n\";\nconst AGGREGATE_FS = \"#define SHADER_NAME data-filter-fragment-shader\\nprecision highp float;\\n\\nvarying vec4 vColor;\\n\\nvoid main() {\\n  if (dataFilter_value < 0.5) {\\n    discard;\\n  }\\n  gl_FragColor = vColor;\\n}\\n\";\nexport function supportsFloatTarget(gl) {\n  return Boolean(gl.getExtension('EXT_float_blend') && (gl.getExtension('EXT_color_buffer_float') || gl.getExtension('WEBGL_color_buffer_float')));\n}\nexport function getFramebuffer(gl, useFloatTarget) {\n  if (useFloatTarget) {\n    return new Framebuffer(gl, {\n      width: 1,\n      height: 1,\n      attachments: {\n        [36064]: new Texture2D(gl, {\n          format: isWebGL2(gl) ? 34836 : 6408,\n          type: 5126,\n          mipmaps: false\n        })\n      }\n    });\n  }\n\n  return new Framebuffer(gl, {\n    width: 256,\n    height: 64,\n    depth: false\n  });\n}\nexport function getModel(gl, shaderOptions, useFloatTarget) {\n  shaderOptions.defines.NON_INSTANCED_MODEL = 1;\n\n  if (useFloatTarget) {\n    shaderOptions.defines.FLOAT_TARGET = 1;\n  }\n\n  return new Model(gl, {\n    id: 'data-filter-aggregation-model',\n    vertexCount: 1,\n    isInstanced: false,\n    drawMode: 0,\n    vs: AGGREGATE_VS,\n    fs: AGGREGATE_FS,\n    ...shaderOptions\n  });\n}\nexport const parameters = {\n  blend: true,\n  blendFunc: [1, 1, 1, 1],\n  blendEquation: [32774, 32774],\n  depthTest: false\n};\n//# sourceMappingURL=aggregator.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { LayerExtension } from '@deck.gl/core';\nimport { shaderModule, shaderModule64 } from './shader-module';\nimport * as aggregator from './aggregator';\nimport { readPixelsToArray, clear } from '@luma.gl/core';\nconst defaultProps = {\n  getFilterValue: {\n    type: 'accessor',\n    value: 0\n  },\n  onFilteredItemsChange: {\n    type: 'function',\n    value: null,\n    compare: false\n  },\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\nexport default class DataFilterExtension extends LayerExtension {\n  constructor({\n    filterSize = 1,\n    fp64 = false,\n    countItems = false\n  } = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({\n      filterSize,\n      fp64,\n      countItems\n    });\n  }\n\n  getShaders(extension) {\n    const {\n      filterSize,\n      fp64\n    } = extension.opts;\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? 5130 : 5126,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    const {\n      gl\n    } = this.context;\n\n    if (attributeManager && extension.opts.countItems) {\n      const useFloatTarget = aggregator.supportsFloatTarget(gl);\n      attributeManager.add({\n        filterIndices: {\n          size: useFloatTarget ? 1 : 2,\n          vertexOffset: 1,\n          type: 5121,\n          normalized: true,\n          accessor: (object, {\n            index\n          }) => {\n            const i = object && object.__source ? object.__source.index : index;\n            return useFloatTarget ? (i + 1) % 255 : [(i + 1) % 255, Math.floor(i / 255) % 255];\n          },\n          shaderAttributes: {\n            filterPrevIndices: {\n              vertexOffset: 0\n            },\n            filterIndices: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n      const filterFBO = aggregator.getFramebuffer(gl, useFloatTarget);\n      const filterModel = aggregator.getModel(gl, extension.getShaders.call(this, extension), useFloatTarget);\n      this.setState({\n        filterFBO,\n        filterModel\n      });\n    }\n  }\n\n  updateState({\n    props,\n    oldProps\n  }) {\n    if (this.state.filterModel) {\n      const attributeManager = this.getAttributeManager();\n      const filterNeedsUpdate = attributeManager.attributes.filterValues.needsUpdate() || props.filterEnabled !== oldProps.filterEnabled || props.filterRange !== oldProps.filterRange || props.filterSoftRange !== oldProps.filterSoftRange;\n\n      if (filterNeedsUpdate) {\n        this.setState({\n          filterNeedsUpdate\n        });\n      }\n    }\n  }\n\n  draw(params, extension) {\n    const {\n      filterFBO,\n      filterModel,\n      filterNeedsUpdate\n    } = this.state;\n    const {\n      onFilteredItemsChange\n    } = this.props;\n\n    if (filterNeedsUpdate && onFilteredItemsChange && filterModel) {\n      const {\n        attributes: {\n          filterValues,\n          filterIndices\n        }\n      } = this.getAttributeManager();\n      filterModel.setVertexCount(this.getNumInstances());\n      const {\n        gl\n      } = this.context;\n      clear(gl, {\n        framebuffer: filterFBO,\n        color: [0, 0, 0, 0]\n      });\n      filterModel.updateModuleSettings(params.moduleParameters).setAttributes({ ...filterValues.getShaderAttributes(),\n        ...(filterIndices && filterIndices.getShaderAttributes())\n      }).draw({\n        framebuffer: filterFBO,\n        parameters: { ...aggregator.parameters,\n          viewport: [0, 0, filterFBO.width, filterFBO.height]\n        }\n      });\n      const color = readPixelsToArray(filterFBO);\n      let count = 0;\n\n      for (let i = 0; i < color.length; i++) {\n        count += color[i];\n      }\n\n      onFilteredItemsChange({\n        id: this.id,\n        count\n      });\n      this.state.filterNeedsUpdate = false;\n    }\n  }\n\n  finalizeState() {\n    const {\n      filterFBO,\n      filterModel\n    } = this.state;\n\n    if (filterFBO) {\n      filterFBO.color.delete();\n      filterFBO.delete();\n      filterModel.delete();\n    }\n  }\n\n}\n\n_defineProperty(DataFilterExtension, \"defaultProps\", defaultProps);\n\n_defineProperty(DataFilterExtension, \"extensionName\", 'DataFilterExtension');\n//# sourceMappingURL=data-filter.js.map"],"names":["vs","fs","getUniforms","opts","filterRange","filterEnabled","filterTransformSize","filterTransformColor","filterSoftRange","r","getUniforms64","uniforms","min64High","max64High","x","i","inject","shaderModule","shaderModule64","AGGREGATE_VS","AGGREGATE_FS","supportsFloatTarget","gl","getFramebuffer","useFloatTarget","Framebuffer","Texture2D","isWebGL2","getModel","shaderOptions","Model","parameters","defaultProps","DATA_TYPE_FROM_SIZE","DataFilterExtension","LayerExtension","filterSize","fp64","countItems","extension","context","attributeManager","aggregator.supportsFloatTarget","object","index","filterFBO","aggregator.getFramebuffer","filterModel","aggregator.getModel","props","oldProps","filterNeedsUpdate","params","onFilteredItemsChange","filterValues","filterIndices","clear","aggregator.parameters","color","readPixelsToArray","count","_defineProperty"],"mappings":"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","x_google_ignoreList":[0,1,2]}