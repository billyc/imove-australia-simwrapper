import{d as u,n as p,k as x,g as h,C as D,m as C}from"./index-6ca30cbc.js";import{l as M,p as k,b as P}from"./turf.es-748c95cf.js";import{c as R}from"./index-734cd08e.js";import{c as T}from"./index-4018348e.js";import{P as $}from"./papaparse.min-393e1677.js";import{y as A}from"./index-650b7cb7.js";import{C as F}from"./CollapsiblePanel-9f3bfd9c.js";import{H as O}from"./HTTPFileSystem-a263b5e7.js";import{W as S}from"./NewXmlFetcher.worker-99a2f879.js";import{D as j}from"./DrawingTool-5015ea4d.js";import{Z as E}from"./ZoomButtons-88e704ed.js";import{W as z}from"./GzipFetcher.worker-a0a6e364.js";import"./layer-312e45a6.js";import"./text-layer-9c1ec202.js";import"./path-layer-5677aaba.js";const I=u({name:"LeftDataPanel",props:{title:String},data:()=>({isHidden:!1,isLeaving:!1}),methods:{toggleHidePanel(){this.isHidden?this.isHidden=!this.isHidden:(this.isLeaving=!0,setTimeout(()=>{this.isHidden=!0,this.isLeaving=!1},300))}}});var H=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{attrs:{id:"datapanel"}},[s("div",{staticClass:"content-area",class:{"is-hidden":t.isHidden,bye:t.isLeaving}},[t.title?s("div",{staticClass:"info-header"},[s("h3",{staticStyle:{padding:"0.5rem 3rem","font-size":"1rem","font-weight":"normal",color:"white"}},[t._v(t._s(t.title))])]):t._e(),s("div",{staticClass:"top-area"},[t._t("default")],2)]),s("div",{staticClass:"restore-button",class:{"add-margin":!t.isHidden}},[s("button",{staticClass:"button is-small hide-button",on:{click:t.toggleHidePanel}},[t.isHidden?t._e():s("i",{staticClass:"fa fa-arrow-left"}),t.isHidden?s("i",{staticClass:"fa fa-arrow-right"}):t._e()])])])},N=[];var W=p(I,H,N,!1,null,"51117d95",null,null);const B=W.exports;function w(){return new Worker("/assets/TransitSupplyHelper.worker-08dcaf1a.js")}const X=u({name:"LegendBox",props:{rows:{type:Array,required:!0}}});var V=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"legend-container"},[s("p",{staticClass:"control-label"},[t._v("Legend")]),t._l(t.rows,function(i){return s("div",{key:i[0],staticClass:"legend-item"},[s("div",{staticClass:"legend-col-1",style:{"background-color":i[0]}}),s("span",{staticClass:"legend-col-2"},[t._v(t._s(i[1]))])])})],2)},Y=[];var G=p(X,V,Y,!1,null,"77e2a85f",null,null);const q=G.exports,J={messages:{en:{metrics:"Metrics",viewer:"Transit Network"},de:{metrics:"Metrics",viewer:"Ã–V Netzwerk"}}},K="EPSG:31468",b=10,U=u({name:"TransitViewer",i18n:J,components:{CollapsiblePanel:F,LeftDataPanel:B,LegendBox:q,DrawingTool:j,ZoomButtons:E},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:{type:Object},thumbnail:Boolean},data:()=>{const e=[{field:"departures",name_en:"Departures",name_de:"Abfahrten"}];return{mapPopup:new x.Popup({closeButton:!1,closeOnClick:!1}),buttonColors:["#5E8AAE","#BF7230","#269367","#9C439C"],metrics:e,activeMetric:e[0].field,vizDetails:{transitSchedule:"",network:"",demand:"",projection:"",title:"",description:""},myState:{subfolder:"",yamlConfig:"",thumbnail:!0},isDarkMode:h.state.isDarkMode,isMapMoving:!1,loadingText:"MATSim Transit Inspector",mymap:null,mapID:`map-id-${Math.floor(1e12*Math.random())}`,projection:K,routesOnLink:[],selectedRoute:{},stopMarkers:[],_attachedRouteLayers:[],_departures:{},_linkData:null,_mapExtentXYXY:null,_maximum:-1/0,_network:{},_routeData:{},_stopFacilities:{},_transitLines:{},_roadFetcher:{},_transitFetcher:{},_transitHelper:{},_transitLinks:null,_geoTransitLinks:null,resolvers:{},resolverId:0,xmlWorker:null,cfDemand:null,cfDemandLink:null,hoverWait:!1}},computed:{fileApi(){return new O(this.fileSystem,h)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},legendRows(){return[["#a03919","Rail"],["#448","Bus"]]}},watch:{"$store.state.resizeEvents"(){this.mymap&&this.mymap.resize()},"$store.state.viewState"({bearing:e,longitude:t,latitude:s,zoom:i,pitch:a}){if(!this.mymap||this.isMapMoving){this.isMapMoving=!1;return}i&&(this.mymap.off("move",this.handleMapMotion),this.mymap.jumpTo({bearing:e,zoom:i,center:[t,s],pitch:a}),this.mymap.on("move",this.handleMapMotion),this.stopMarkers.length>0&&this.showTransitStops())},"$store.state.colorScheme"(){this.isDarkMode=this.$store.state.colorScheme===D.DarkMode,this.mymap&&(this.removeAttachedRoutes(),this.mymap.setStyle(h.getters.mapStyle),this.mymap.on("style.load",()=>{this._geoTransitLinks&&this.addTransitToMap(this._geoTransitLinks),this.highlightAllAttachedRoutes(),this.selectedRoute&&this.showTransitRoute(this.selectedRoute.id)}))}},methods:{async getVizDetails(){var t,s;if(this.config)return this.vizDetails=Object.assign({},this.config),!0;if((t=this.myState.yamlConfig)!=null&&t.endsWith("yaml")||(s=this.myState.yamlConfig)!=null&&s.endsWith("yml"))return this.loadYamlConfig();const e=this.myState.yamlConfig.substring(0,15+this.myState.yamlConfig.indexOf("transitSchedule"));return this.vizDetails={transitSchedule:this.myState.yamlConfig,network:"",title:e,description:"",demand:"",projection:""},this.$emit("title",e),!0},async prepareView(){const{files:e}=await this.fileApi.getDirectory(this.myState.subfolder);let t=this.vizDetails.network??this.myState.yamlConfig.replaceAll("transitSchedule","network");if(e.indexOf(t)==-1){const i=e.filter(a=>a.endsWith("network.xml.gz"));i.length?t=i[0]:(this.loadingText="No road network found.",t="")}let s=[];this.myState.yamlConfig.indexOf("output_transitSchedule")>-1&&(s=e.filter(i=>i.endsWith("pt_stop2stop_departures.csv.gz"))),this.vizDetails.network=t,s.length&&(this.vizDetails.demand=s[0])},async guessProjection(e){var n,l,c,f,y,g,_,v;if(this.vizDetails.projection)return this.vizDetails.projection;if((n=this.config)!=null&&n.projection)return this.config.projection;if(((y=(f=(c=(l=e==null?void 0:e.roadXML)==null?void 0:l.network)==null?void 0:c.attributes)==null?void 0:f.attribute)==null?void 0:y.name)==="coordinateReferenceSystem")return(v=(_=(g=e==null?void 0:e.roadXML)==null?void 0:g.network)==null?void 0:_.attributes)==null?void 0:v.attribute["#text"];const t=`${this.root}/${this.subfolder}`,s=/EPSG:.\d/,{files:i}=await this.fileApi.getDirectory(this.myState.subfolder),a=i.filter(d=>d.indexOf(".output_config.xml")>-1||d.indexOf(".output_config_reduced.xml")>-1);if(a.length&&this.fileSystem)for(const d of a)try{return(await this.fetchXML({worker:null,slug:this.fileSystem.slug,filePath:this.myState.subfolder+"/"+d})).config.module.filter(m=>m.$name==="global")[0].param.filter(m=>m.$name==="coordinateSystem")[0].$value}catch{console.warn("Failed parsing",d)}let r=prompt("Need coordinate EPSG number:","")||"";if(!r)return"";if(isNaN(parseInt(r,10))&&!s.test(r))return this.guessProjection(e);r.startsWith("EPSG:")||(r="EPSG:"+r);const o=r;return localStorage.setItem(t,JSON.stringify({networkProjection:o})),o},async loadYamlConfig(){const e=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig;try{const s=await this.fileApi.getFileText(e);this.vizDetails=A.parse(s)}catch(s){const i=s;if(this.fileSystem&&this.fileSystem.needPassword&&i.status===401)this.$store.commit("requestLogin",this.fileSystem.slug);else{const a="Could not load "+e;this.$emit("error",a),this.loadingText=a}return!1}const t=this.vizDetails.title?this.vizDetails.title:"Transit Ridership";return this.$emit("title",t),this.projection=this.vizDetails.projection,!0},isMobile(){const e=window,t=document,s=t.documentElement,i=t.getElementsByTagName("body")[0],a=e.innerWidth||s.clientWidth||i.clientWidth;return e.innerHeight||s.clientHeight||i.clientHeight,a<640},setupMap(){try{this.mymap=new C.Map({bearing:0,container:this.mapID,logoPosition:"bottom-left",style:h.getters.mapStyle,pitch:0});const e=localStorage.getItem(this.$route.fullPath+"-bounds");if(e)try{const t=JSON.parse(e),s=this.isMobile()?0:1,i={top:50*s,bottom:50*s,right:50*s,left:50*s};this.mymap.fitBounds(t,{animate:!1,padding:i})}catch{}this.mymap.on("load",this.mapIsReady),this.mymap.on("move",this.handleMapMotion),this.mymap.on("click",this.handleEmptyClick),this.mymap.keyboard.disable()}catch(e){console.error(""+e)}},handleClickedMetric(e){console.log("transit metric:",e.field),this.activeMetric=e.field;let t=3;switch(e.field){case"departures":t=["max",2,["*",.03,["get","departures"]]];break;case"pax":t=["max",2,["*",.003,["get","pax"]]];break;case"loadfac":t=["max",2,["*",200,["get","loadfac"]]];break}this.mymap.setPaintProperty("transit-link","line-width",t)},handleMapMotion(){const e={longitude:this.mymap.getCenter().lng,latitude:this.mymap.getCenter().lat,bearing:this.mymap.getBearing(),zoom:this.mymap.getZoom(),pitch:this.mymap.getPitch()};this.isMapMoving||this.$store.commit("setMapCamera",e),this.isMapMoving=!0,this.stopMarkers.length>0&&this.showTransitStops()},handleEmptyClick(e){this.removeStopMarkers(),this.removeSelectedRoute(),this.removeAttachedRoutes(),this.routesOnLink=[]},showRouteDetails(e){!e&&!this.selectedRoute||(console.log({routeID:e}),e?this.showTransitRoute(e):this.showTransitRoute(this.selectedRoute.id),this.showTransitStops())},async mapIsReady(){const e=await this.loadNetworks(),t=await this.guessProjection(e);this.vizDetails.projection=t,this.projection=this.vizDetails.projection,console.log(t),e&&this.processInputs(e)},setupKeyListeners(){window.addEventListener("keyup",e=>{e.keyCode===27&&this.pressedEscape()}),window.addEventListener("keydown",e=>{e.keyCode===38&&this.pressedArrowKey(-1),e.keyCode===40&&this.pressedArrowKey(1)})},fetchXML(e){let t=e.worker;t.onmessage=a=>{const{resolve:r,reject:o}=this.resolvers[a.data.id];t.terminate(),a.data.error&&o(a.data.error),r(a.data.xml)};const s=this.resolverId++;return t.postMessage({id:s,fileSystem:this.fileSystem,filePath:e.filePath,options:e.options}),new Promise((a,r)=>{this.resolvers[s]={resolve:a,reject:r}})},async loadNetworks(){try{if(!this.fileSystem||!this.vizDetails.network||!this.vizDetails.transitSchedule)return;this.loadingText="Loading networks...";const e=this.fetchXML({worker:this._roadFetcher,slug:this.fileSystem.slug,filePath:this.myState.subfolder+"/"+this.vizDetails.network,options:{attributeNamePrefix:""}}),t=this.fetchXML({worker:this._transitFetcher,slug:this.fileSystem.slug,filePath:this.myState.subfolder+"/"+this.vizDetails.transitSchedule,options:{attributeNamePrefix:"",alwaysArray:["transitSchedule.transitLine.transitRoute","transitSchedule.transitLine.transitRoute.departures.departure"]}}),s=await Promise.all([e,t]);return{roadXML:s[0],transitXML:s[1],ridership:[]}}catch(e){return console.error("TRANSIT:",e),this.loadingText=""+e,h.commit("error","Transit: "+e),null}},loadDemandData(e){return new Promise((s,i)=>{e||s([]),this.loadingText="Loading demand...";const a=new z;a.onmessage=r=>{this.loadingText="Processing demand...";const o=new TextDecoder("utf-8").decode(r.data);a.terminate(),$.parse(o,{header:!0,skipEmptyLines:!0,dynamicTyping:!0,worker:!0,complete:n=>{s(this.processDemand(n))}})},a.postMessage({filePath:this.myState.subfolder+"/"+e,fileSystem:this.fileSystem})})},processDemand(e){this.loadingText="Processing demand data...",console.log("BUILD crossfilter"),this.cfDemand=T(e.data),this.cfDemandLink=this.cfDemand.dimension(r=>r.linkIdsSincePreviousStop),console.log("COUNTING RIDERSHIP");const t={},s=this.cfDemandLink.group();s.reduceSum(r=>r.passengersAtArrival).all().map(r=>{t[r.key]=r.value});const i={};s.reduceSum(r=>r.totalVehicleCapacity).all().map(r=>{i[r.key]=r.value});for(const r of this._transitLinks.features)r.properties.pax=t[r.properties.id],r.properties.cap=i[r.properties.id],r.properties.loadfac=Math.round(1e3*t[r.properties.id]/i[r.properties.id])/1e3;return this.metrics=this.metrics.concat([{field:"pax",name_en:"Passengers",name_de:"Passagiere"},{field:"loadfac",name_en:"Load Factor",name_de:"Auslastung"}]),this.mymap.getSource("transit-source").setData(this._transitLinks),this.loadingText="",[]},async processInputs(e){this.loadingText="Preparing...",this._transitHelper=new w,this._transitHelper.onmessage=async t=>{this.receivedProcessedTransit(t)},this._transitHelper.postMessage({xml:e,projection:this.projection})},async receivedProcessedTransit(e){if(e.data.status){this.loadingText=e.data.status;return}if(e.data.error){console.error(e.data.error),this.$emit("error",e.data.error);return}const{network:t,routeData:s,stopFacilities:i,transitLines:a,mapExtent:r}=e.data;this._network=t,this._routeData=s,this._stopFacilities=i,this._transitLines=a,this._mapExtentXYXY=r,this._transitHelper.terminate(),this.loadingText="Summarizing departures...",await this.processDepartures(),this._transitLinks=await this.constructDepartureFrequencyGeoJson(),this.addTransitToMap(this._transitLinks),this.handleClickedMetric({field:"departures"}),localStorage.setItem(this.$route.fullPath+"-bounds",JSON.stringify(this._mapExtentXYXY)),this.mymap.fitBounds(this._mapExtentXYXY,{animate:!1}),this.vizDetails.demand&&await this.loadDemandData(this.vizDetails.demand),this.loadingText=""},async processDepartures(){this.loadingText="Processing departures...";for(const e in this._transitLines)if(this._transitLines.hasOwnProperty(e)){const t=this._transitLines[e];for(const s of t.transitRoutes)for(const i of s.route)i in this._departures||(this._departures[i]={total:0,routes:new Set}),this._departures[i].total+=s.departures,this._departures[i].routes.add(s.id),this._maximum=Math.max(this._maximum,this._departures[i].total)}},addTransitToMap(e){this._geoTransitLinks=e,this.mymap.addSource("transit-source",{data:e,type:"geojson"}),this.mymap.addLayer({id:"transit-link",source:"transit-source",type:"line",paint:{"line-opacity":1,"line-width":1,"line-color":["get","color"]}}),this.mymap.on("click","transit-link",t=>{this.clickedOnTransitLink(t)}),this.mymap.on("mousemove","transit-link",t=>{this.mymap.getCanvas().style.cursor=t?"pointer":"grab",this.hoveredOnElement(t)}),this.mymap.on("mouseleave","transit-link",()=>{this.mymap.getCanvas().style.cursor="grab",this.mapPopup.remove()})},hoveredOnElement(e){const t=e.features[0].properties;let s='<div class="map-popup">';for(const i of this.metrics){let a=this.$i18n.locale=="de"?i.name_de:i.name_en;a=a.replaceAll(" ","&nbsp;"),isNaN(t[i.field])||(s+=`
          <div style="display: flex">
            <div>${a}:&nbsp;&nbsp;</div>
            <b style="margin-left: auto; text-align: right">${t[i.field]}</b>
          </div>`)}s+="<div>",this.mapPopup.setLngLat(e.lngLat).setHTML(s).addTo(this.mymap)},async constructDepartureFrequencyGeoJson(){const e=[];for(const t in this._departures)if(this._departures.hasOwnProperty(t)){const s=this._network.links[t];if(!s)continue;const i=[[this._network.nodes[s.from].x,this._network.nodes[s.from].y],[this._network.nodes[s.to].x,this._network.nodes[s.to].y]],a=this._departures[t].total,r=.25+.75*(a-1)/this._maximum,o=Math.floor(b*r);let n=!0;for(const c of this._departures[t].routes)this._routeData[c].transportMode==="bus"&&(n=!1);let l={type:"Feature",geometry:{type:"LineString",coordinates:i},properties:{color:n?"#a03919":Z[o],colorBin:o,departures:a,id:t,isRail:n,from:s.from,to:s.to}};l=this.offsetLineByMeters(l,15),e.push(l)}return e.sort(function(t,s){return t.isRail&&!s.isRail?-1:s.isRail&&!t.isRail?1:0}),{type:"FeatureCollection",features:e}},offsetLineByMeters(e,t){try{return M(e,t,{units:"meters"})}catch{}return e},removeStopMarkers(){this.stopMarkers=[]},async showTransitStops(){this.removeStopMarkers();const e=this.selectedRoute,t=this.mymap.getBearing();let s;for(const[i,a]of e.routeProfile.entries()){const r=[this._stopFacilities[a.refId].x,this._stopFacilities[a.refId].y];if(i<e.routeProfile.length-1){const l=k([r[0],r[1]]),c=k([this._stopFacilities[e.routeProfile[i+1].refId].x,this._stopFacilities[e.routeProfile[i+1].refId].y]);s=P(l,c)-t}const o=this.mymap.project([r[0],r[1]]),n={i,bearing:s,xy:{x:Math.floor(o.x),y:Math.floor(o.y)}};this.stopMarkers.push(n)}},showTransitRoute(e){if(!e)return;const t=this._routeData[e];this.selectedRoute=t;const s=this.mymap.getSource("selected-route-data");s?s.setData(t.geojson):this.mymap.addSource("selected-route-data",{data:t.geojson,type:"geojson"}),this.mymap.getLayer("selected-route")||this.mymap.addLayer({id:"selected-route",source:"selected-route-data",type:"line",paint:{"line-opacity":1,"line-width":5,"line-color":"#097c43"}})},removeSelectedRoute(){if(this.selectedRoute){try{this.mymap.removeLayer("selected-route")}catch{}this.selectedRoute=null}},clickedOnTransitLink(e){this.removeStopMarkers(),this.removeSelectedRoute();const t=e.features[0].properties,s=this._departures[t.id].routes;this.calculatePassengerVolumes(t.id);const i=[];for(const a of s)i.push(this._routeData[a]);i.sort(function(a,r){return a.departures>r.departures?-1:1}),this.routesOnLink=i,this.highlightAllAttachedRoutes(),i.length>0&&this.showRouteDetails(i[0].id)},calculatePassengerVolumes(e){if(!this.cfDemandLink||!this.cfDemand)return;this.cfDemandLink.filter(e);const t=this.cfDemand.allFiltered();let s=0;t.map(i=>{s=s+i.passengersBoarding+i.passengersAtArrival-i.passengersAlighting})},removeAttachedRoutes(){for(const e of this._attachedRouteLayers)try{this.mymap.removeLayer("route-"+e),this.mymap.removeSource("source-route-"+e)}catch{}this._attachedRouteLayers=[]},highlightAllAttachedRoutes(){this.removeAttachedRoutes();for(const e of this.routesOnLink)this.mymap.addSource("source-route-"+e.id,{data:e.geojson,type:"geojson"}),this.mymap.addLayer({id:"route-"+e.id,source:"source-route-"+e.id,type:"line",paint:{"line-opacity":.7,"line-width":8,"line-color":"#ccff33"}}),this._attachedRouteLayers.push(e.id)},pressedEscape(){this.removeSelectedRoute(),this.removeStopMarkers(),this.removeAttachedRoutes(),this.selectedRoute=null,this.routesOnLink=[]},pressedArrowKey(e){if(!this.selectedRoute)return;let t=this.routesOnLink.indexOf(this.selectedRoute);t=t+e,!(t<0||t>=this.routesOnLink.length)&&this.showRouteDetails(this.routesOnLink[t].id)},clearData(){var e;this._attachedRouteLayers=[],this._departures={},this._mapExtentXYXY=[180,90,-180,-90],this._maximum=0,this._network={nodes:{},links:{}},this._routeData={},this._stopFacilities={},this._transitLinks=null,this._transitLines={},this.selectedRoute=null,this.cfDemand=null,(e=this.cfDemandLink)==null||e.dispose(),this.resolvers={},this.routesOnLink=[],this.selectedRoute={},this.stopMarkers=[],this._linkData=null,this._geoTransitLinks=null}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.clearData(),this._roadFetcher=new S,this._transitFetcher=new S,this._transitHelper=new w,this.myState.subfolder=this.subfolder,this.myState.yamlConfig=this.yamlConfig??"",this.myState.thumbnail=this.thumbnail,await this.getVizDetails()&&(this.thumbnail||(await this.prepareView(),this.setupMap()))},beforeDestroy(){this.mymap&&this.mymap.remove(),this.clearData(),this.xmlWorker&&this.xmlWorker.terminate(),this._roadFetcher&&this._roadFetcher.terminate(),this._transitFetcher&&this._transitFetcher.terminate(),this._transitHelper&&this._transitHelper.terminate(),this.$store.commit("setFullScreen",!1)}}),Z=R({colormap:"viridis",nshades:b});var Q=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"transit-viz",class:{"hide-thumbnail":!t.thumbnail}},[s("div",{staticClass:"map-container",class:{"hide-thumbnail":!t.thumbnail}},[s("div",{staticClass:"map-styles",attrs:{id:t.mapID}},t._l(t.stopMarkers,function(i){return s("div",{key:i.i,staticClass:"stop-marker",style:{transform:"translate(-50%,-50%) rotate("+i.bearing+"deg)",left:i.xy.x+"px",top:i.xy.y+"px"}})}),0),t.thumbnail?t._e():s("legend-box",{staticClass:"legend",attrs:{rows:t.legendRows}})],1),t.thumbnail?t._e():s("zoom-buttons"),t.thumbnail?t._e():s("collapsible-panel",{staticClass:"left-side",attrs:{darkMode:t.isDarkMode,locked:!0,direction:"left"}},[s("div",{staticClass:"panel-items"},[t.routesOnLink.length>0?s("div",{staticClass:"route-list"},t._l(t.routesOnLink,function(i){return s("div",{key:i.uniqueRouteID,staticClass:"route",class:{highlightedRoute:t.selectedRoute&&i.id===t.selectedRoute.id},on:{click:function(a){return t.showRouteDetails(i.id)}}},[s("div",{staticClass:"route-title"},[t._v(t._s(i.id))]),s("div",{staticClass:"detailed-route-data"},[s("div",{staticClass:"col"},[s("p",[s("b",[t._v(t._s(i.departures)+" departures")])]),s("p",[t._v("First: "+t._s(i.firstDeparture))]),s("p",[t._v("Last: "+t._s(i.lastDeparture))])]),i.passengersAtArrival?s("div",{staticClass:"col"},[s("p",[s("b",[t._v(t._s(i.passengersAtArrival)+" passengers")])]),s("p",[t._v(t._s(i.totalVehicleCapacity)+" capacity")])]):t._e()])])}),0):t._e()])]),t.thumbnail?t._e():s("div",{staticClass:"control-panel",class:{"is-dashboard":t.config!==void 0}},[s("div",{staticClass:"panel-item"},[s("p",{staticClass:"control-label"},[t._v(t._s(t.$t("metrics"))+":")]),s("div",{staticClass:"metric-buttons"},t._l(t.metrics,function(i,a){return s("button",{key:i.field,staticClass:"button is-small metric-button",style:{color:t.activeMetric===i.field?"white":t.buttonColors[a],border:`1px solid ${t.buttonColors[a]}`,"border-right":`0.4rem solid ${t.buttonColors[a]}`,"border-radius":"4px","background-color":t.activeMetric===i.field?t.buttonColors[a]:t.isDarkMode?"#333":"white"},on:{click:function(r){return t.handleClickedMetric(i)}}},[t._v(t._s(t.$i18n.locale==="de"?i.name_de:i.name_en))])}),0)])]),!t.thumbnail&&t.loadingText?s("div",{staticClass:"status-corner"},[s("p",[t._v(t._s(t.loadingText))])]):t._e()],1)},tt=[];var et=p(U,Q,tt,!1,null,"7b8636cf",null,null);const kt=et.exports;export{kt as default};
//# sourceMappingURL=TransitDemand-17ed84bd.js.map
