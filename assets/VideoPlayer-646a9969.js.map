{"version":3,"file":"VideoPlayer-646a9969.js","sources":["../../src/plugins/video-player/VideoPlayer.vue"],"sourcesContent":["<template lang=\"pug\">\n.video-plugin-container(:class=\"{thumbnail}\")\n  h3(v-if=\"!thumbnail\") {{ title }}\n\n  .vid-container\n    video(:controls=\"controls\" :loop='loop' :allowfullscreen='allowfullscreen' :autoplay=\"autoplay\" :muted=\"muted\")\n      source(v-for=\"(src, type) in sources\" :src=\"src\" :type=\"type\" :key=\"type\")\n      p(v-for=\"(src, type) in sources\" :key=\"type\") Video tag not supported. Download the video&nbsp;\n        a(:href=\"src\" target=\"_blank\") here\n\n    //- video-player.vjs-default-skin.vjs-big-play-centered(\n    //-   ref=\"videoPlayer\"\n    //-   :options=\"playerOptions\"\n    //- )\n    //- v-if=\"movieSource\"\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\n// import { videoPlayer } from 'vue-video-player'\n\nimport globalStore from '@/store'\nimport { FileSystem, FileSystemConfig, VisualizationPlugin } from '@/Globals'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\n\n// import '~/video.js/dist/video-js.min.css'\n\nconst MyComponent = defineComponent({\n  name: 'VideoPlayerPlugin',\n  props: {\n    root: { type: String, required: true },\n    subfolder: { type: String, required: true },\n    yamlConfig: String,\n    config: Object,\n    thumbnail: Boolean,\n  },\n\n  data: () => {\n    return {\n      movieSource: '',\n      title: '',\n      myState: {} as any,\n      fileApi: null as FileSystemConfig | null,\n      playerOptions: {\n        muted: false,\n        language: 'en',\n        playbackRates: [0.5, 1.0, 1.5, 2.0, 5.0],\n        preload: 'metadata',\n        responsive: true,\n        fluid: false,\n        playsInline: true,\n        controls: true,\n        sources: [] as any[],\n      },\n    }\n  },\n\n  beforeDestroy() {\n    if (!this.thumbnail) globalStore.commit('setFullScreen', false)\n  },\n\n  mounted() {\n    this.fileApi = this.getFileSystem(this.root)\n\n    this.myState = {\n      subfolder: this.subfolder,\n      yamlConfig: this.yamlConfig,\n      thumbnail: this.thumbnail,\n      imageData: '',\n    }\n\n    this.playerOptions.fluid = !!this.thumbnail\n    if (!this.thumbnail) globalStore.commit('setFullScreen', true)\n\n    if (!this.yamlConfig) {\n      this.buildRouteFromUrl()\n    } else {\n      this.myState.subfolder = this.subfolder\n      this.myState.yamlConfig = this.yamlConfig\n      this.buildMovieSource()\n    }\n\n    this.getVizDetails()\n  },\n  watch: {\n    yamlConfig() {\n      this.myState.yamlConfig = this.yamlConfig\n      this.getVizDetails()\n    },\n\n    subfolder() {\n      this.myState.subfolder = this.subfolder\n      this.getVizDetails()\n    },\n  },\n  methods: {\n    buildMovieSource() {\n      this.movieSource = `${this.fileApi?.baseURL}/${this.myState.subfolder}/${this.myState.yamlConfig}`\n\n      this.playerOptions.sources.push({\n        type: 'video/mp4',\n        src: this.movieSource,\n      })\n    },\n\n    getFileSystem(name: string) {\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\n        (a: FileSystemConfig) => a.slug === name\n      )\n      if (svnProject.length === 0) {\n        console.log('no such project')\n        throw Error\n      }\n      return svnProject[0]\n    },\n\n    // this happens if viz is the full page, not a thumbnail on a project page\n    async buildRouteFromUrl() {\n      const params = this.$route.params\n      if (!params.project || !params.pathMatch) {\n        console.log('I CANT EVEN: NO PROJECT/PARHMATCH')\n        return\n      }\n\n      // project filesystem\n      this.fileApi = this.getFileSystem(params.project)\n\n      // subfolder and config file\n      const sep = 1 + params.pathMatch.lastIndexOf('/')\n      const subfolder = params.pathMatch.substring(0, sep)\n      const config = params.pathMatch.substring(sep)\n\n      this.myState.subfolder = subfolder\n      this.myState.yamlConfig = config\n\n      this.buildMovieSource()\n    },\n\n    async generateBreadcrumbs() {\n      const filesystem = this.getFileSystem(this.$route.params.project)\n      if (!filesystem) return []\n\n      const crumbs = [\n        {\n          label: filesystem.name,\n          url: '/' + filesystem.slug,\n        },\n      ]\n\n      const subfolders = this.myState.subfolder.split('/')\n      let buildFolder = '/'\n      for (const folder of subfolders) {\n        if (!folder) continue\n\n        buildFolder += folder + '/'\n        crumbs.push({\n          label: folder,\n          url: '/' + filesystem.slug + buildFolder,\n        })\n      }\n\n      // save them!\n      globalStore.commit('setBreadCrumbs', crumbs)\n\n      return crumbs\n    },\n\n    async getVizDetails() {\n      this.title = this.myState.yamlConfig.replace(/_/g, ' ')\n      this.title = this.title.substring(0, this.title.lastIndexOf('.'))\n\n      if (this.title) {\n        this.$emit('title', this.title)\n      }\n    },\n  },\n})\n\nexport default MyComponent\n</script>\n\n<style>\n.video-js {\n  position: absolute;\n  width: 100%;\n  height: auto;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: auto 0;\n  background-color: #223;\n}\n</style>\n\n<style scoped lang=\"scss\">\n.video-plugin-container {\n  display: flex;\n  flex-direction: column;\n  background-color: #223;\n  padding: 0 20px 20px 20px;\n  position: relative;\n}\n\n.thumbnail {\n  height: 11rem;\n  // z-index: -1;\n  padding: 0 0;\n}\n\n.vid-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.thumbnail .vid-container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  overflow: hidden;\n}\n\nh3 {\n  color: #ccc;\n  padding: 0.5rem 0;\n  text-align: center;\n}\n</style>\n"],"names":["MyComponent","defineComponent","globalStore","_a","name","svnProject","a","params","sep","subfolder","config","filesystem","crumbs","subfolders","buildFolder","folder"],"mappings":"sDA6BA,MAAAA,EAAAC,EAAA,CACA,KAAA,oBACA,MAAA,CACA,KAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,UAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,WAAA,OACA,OAAA,OACA,UAAA,OACA,EAEA,KAAA,KACA,CACA,YAAA,GACA,MAAA,GACA,QAAA,CAAA,EACA,QAAA,KACA,cAAA,CACA,MAAA,GACA,SAAA,KACA,cAAA,CAAA,GAAA,EAAA,IAAA,EAAA,CAAA,EACA,QAAA,WACA,WAAA,GACA,MAAA,GACA,YAAA,GACA,SAAA,GACA,QAAA,CAAA,CACA,CAAA,GAIA,eAAA,CACA,KAAA,WAAAC,EAAA,OAAA,gBAAA,EAAA,CACA,EAEA,SAAA,CACA,KAAA,QAAA,KAAA,cAAA,KAAA,IAAA,EAEA,KAAA,QAAA,CACA,UAAA,KAAA,UACA,WAAA,KAAA,WACA,UAAA,KAAA,UACA,UAAA,EAAA,EAGA,KAAA,cAAA,MAAA,CAAA,CAAA,KAAA,UACA,KAAA,WAAAA,EAAA,OAAA,gBAAA,EAAA,EAEA,KAAA,YAGA,KAAA,QAAA,UAAA,KAAA,UACA,KAAA,QAAA,WAAA,KAAA,WACA,KAAA,iBAAA,GAJA,KAAA,kBAAA,EAOA,KAAA,cAAA,CACA,EACA,MAAA,CACA,YAAA,CACA,KAAA,QAAA,WAAA,KAAA,WACA,KAAA,cAAA,CACA,EAEA,WAAA,CACA,KAAA,QAAA,UAAA,KAAA,UACA,KAAA,cAAA,CACA,CACA,EACA,QAAA,CACA,kBAAA,OACA,KAAA,YAAA,IAAAC,EAAA,KAAA,UAAA,YAAAA,EAAA,OAAA,IAAA,KAAA,QAAA,SAAA,IAAA,KAAA,QAAA,UAAA,GAEA,KAAA,cAAA,QAAA,KAAA,CACA,KAAA,YACA,IAAA,KAAA,WAAA,CACA,CACA,EAEA,cAAAC,EAAA,CACA,MAAAC,EAAA,KAAA,OAAA,MAAA,YAAA,OACAC,GAAAA,EAAA,OAAAF,CAAA,EAEA,GAAAC,EAAA,SAAA,EACA,cAAA,IAAA,iBAAA,EACA,MAEA,OAAAA,EAAA,CAAA,CACA,EAGA,MAAA,mBAAA,CACA,MAAAE,EAAA,KAAA,OAAA,OACA,GAAA,CAAAA,EAAA,SAAA,CAAAA,EAAA,UAAA,CACA,QAAA,IAAA,mCAAA,EACA,MACA,CAGA,KAAA,QAAA,KAAA,cAAAA,EAAA,OAAA,EAGA,MAAAC,EAAA,EAAAD,EAAA,UAAA,YAAA,GAAA,EACAE,EAAAF,EAAA,UAAA,UAAA,EAAAC,CAAA,EACAE,EAAAH,EAAA,UAAA,UAAAC,CAAA,EAEA,KAAA,QAAA,UAAAC,EACA,KAAA,QAAA,WAAAC,EAEA,KAAA,iBAAA,CACA,EAEA,MAAA,qBAAA,CACA,MAAAC,EAAA,KAAA,cAAA,KAAA,OAAA,OAAA,OAAA,EACA,GAAA,CAAAA,EAAA,MAAA,GAEA,MAAAC,EAAA,CACA,CACA,MAAAD,EAAA,KACA,IAAA,IAAAA,EAAA,IACA,CAAA,EAGAE,EAAA,KAAA,QAAA,UAAA,MAAA,GAAA,EACA,IAAAC,EAAA,IACA,UAAAC,KAAAF,EACAE,IAEAD,GAAAC,EAAA,IACAH,EAAA,KAAA,CACA,MAAAG,EACA,IAAA,IAAAJ,EAAA,KAAAG,CAAA,CACA,GAIA,OAAAZ,EAAA,OAAA,iBAAAU,CAAA,EAEAA,CACA,EAEA,MAAA,eAAA,CACA,KAAA,MAAA,KAAA,QAAA,WAAA,QAAA,KAAA,GAAA,EACA,KAAA,MAAA,KAAA,MAAA,UAAA,EAAA,KAAA,MAAA,YAAA,GAAA,CAAA,EAEA,KAAA,OACA,KAAA,MAAA,QAAA,KAAA,KAAA,CAEA,CACA,CACA,CAAA"}