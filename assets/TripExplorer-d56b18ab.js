import{d as O,n as x,D as A,r as G,g as w,R as j,M as H,e as _,B,U as Z,C as I,S as k}from"./index-2c5e1d98.js";import{d as J}from"./index-c1e13fe7.js";import{s as X}from"./index.esm-97c2f5c6.js";import{r as Q}from"./index-9e6f44a3.js";import{y as tt}from"./index-8048e8dc.js";import{d as V}from"./index-afc11814.js";import{O as et}from"./LineOffsetLayer-92ce6f3a.js";import{P as st}from"./PathOffsetLayer-3176abbd.js";import{D as at,S as it}from"./set-rtl-text-plugin-b2cb8a00.js";import{C as ot}from"./layer-4078ee04.js";import{f as nt}from"./pureFunctionsAny.generated-3fc6f1be.js";import{H as lt}from"./HTTPFileSystem-f986ffa8.js";import{D as rt}from"./DrawingTool-1c8c329c.js";import{V as ct}from"./VizConfigurator-adb2b0c6.js";import{V as ht}from"./VuePlotly-0708e021.js";import{Z as dt}from"./ZoomButtons-ecf6639c.js";import{L as ut}from"./LegendStore-3aadd543.js";import{a as mt}from"./util-ddcf947a.js";import{D as pt}from"./DashboardDataManager-fec95020.js";import{r as ft}from"./cubehelix-658aafe4.js";import{o as vt,t as gt}from"./threshold-6ccfe732.js";import"./line-layer-0fe1d9f9.js";import"./path-layer-a3827a85.js";import"./extends-98964cd2.js";import"./text-layer-059aaf64.js";import"./DataFetcher.worker-c87933e8.js";import"./ColorsAndWidths-c85c3e08.js";import"./rainbow-b588906e.js";import"./LegendBox-5cc74c64.js";import"./fxp-26b9b10f.js";import"./RoadNetworkLoader.worker-48aaa0eb.js";import"./group-f6e6d4c5.js";import"./index-f6506551.js";const yt=O({name:"TimeSliderLinksGl",props:{useRange:Boolean,stops:{type:Array,required:!0},dropdownValue:String},data(){return{sliderValue:0}},watch:{useRange(e){e?this.sliderValue=[this.stops[0],this.stops[this.stops.length-1]]:this.sliderValue=[this.stops[0]],console.log("changed to: "+this.sliderValue)},sliderValue(e){this.$emit("change",e)}},mounted(){}});var wt=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"time-slider-main-content"},[s("b-slider",{attrs:{max:t.stops.length-1,tooltip:!1},model:{value:t.sliderValue,callback:function(a){t.sliderValue=a},expression:"sliderValue"}},t._l(t.stops,function(a,i){return s("b-slider-tick",{key:i,attrs:{value:i}})}),1)],1)},bt=[];var Dt=x(yt,wt,bt,!1,null,"8ae40083",null,null);const Ct=Dt.exports,kt={messages:{en:{selectColumn:"Data:",loading:"Loading...",bandwidths:"Widths: 1 pixel =:",timeOfDay:"",colors:"Colors"},de:{selectColumn:"Datenmengen:",loading:"Laden...",bandwidths:"Linienbreiten: 1 pixel =:",timeOfDay:"",colors:"Farben"}}},_t=O({name:"SelectorPanel",i18n:kt,components:{TimeSlider:Ct},props:{csvData:{type:Object,required:!0},scaleWidth:{type:Number,required:!0},showDiffs:{type:Boolean,required:!0},vizDetails:{type:Object,required:!0}},data(){return{isButtonActive:!1,isColorButtonActive:!1,scaleWidthValue:"",debounceScale:{},handleTimeSliderChanged:{}}},computed:{activeColumn(){return this.csvData.activeColumn},buttonTitle(){return this.activeColumn?this.activeColumn:""+this.$i18n.t("loading")}},watch:{scaleWidth(){this.scaleWidthValue=""+this.scaleWidth},scaleWidthValue(){isNaN(parseFloat(this.scaleWidthValue))||this.debounceScale()}},methods:{getColumns(){return Object.values(this.csvData.dataTable).slice(1).filter(t=>t.name&&t.type!==A.LOOKUP).map(t=>t.name)},gotNewScale(){this.$emit("scale",parseFloat(this.scaleWidthValue))},changeTimeSlider(e){e.length&&e.length===1&&(e=e[0]),this.$emit("slider",{dataset:this.csvData,column:this.getColumns()[e]})},handleClickDropdown(){this.isButtonActive=!this.isButtonActive},handleColorRamp(e){console.log(e),this.isColorButtonActive=!1,this.$emit("colors",e)},clearDropdown(){console.log("boop"),this.isButtonActive=!1},async handleSelectColumn(e){console.log("panel: selected",e),this.isButtonActive=!1,this.$emit("column",{dataset:this.csvData,column:e})}},mounted(){this.debounceScale=V.debounce(this.gotNewScale,500),this.handleTimeSliderChanged=V.debounce(this.changeTimeSlider,250),this.scaleWidthValue=""+this.scaleWidth}});var St=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"config-panel"},[t.vizDetails.useSlider&&t.activeColumn?s("div",{staticClass:"panel-item expand"},[s("p",[s("b",[t._v(t._s(t.activeColumn))])]),s("time-slider",{staticClass:"time-slider",attrs:{useRange:!1,stops:t.getColumns(),dropdownValue:t.activeColumn},on:{change:t.handleTimeSliderChanged}})],1):t._e(),t.vizDetails.useSlider?t._e():s("div",{staticClass:"panel-item"},[s("p",[s("b",[t._v(t._s(t.$t("selectColumn")))])]),s("div",{staticClass:"dropdown is-up full-width",class:{"is-active":t.isButtonActive}},[s("div",{staticClass:"dropdown-trigger"},[s("button",{staticClass:"full-width is-warning button",class:{"is-loading":!t.activeColumn},attrs:{"aria-haspopup":"true","aria-controls":"dropdown-menu-column-selector"},on:{click:t.handleClickDropdown}},[s("b",[t._v(t._s(t.buttonTitle))]),t._m(0)])]),s("div",{staticClass:"dropdown-menu",style:{"max-height":"24rem","overflow-y":"auto",border:"1px solid #ccc"},attrs:{id:"dropdown-menu-column-selector",role:"menu"}},[s("div",{staticClass:"dropdown-content"},t._l(t.getColumns(),function(a){return s("a",{staticClass:"dropdown-item",on:{click:function(i){return t.handleSelectColumn(a)}}},[t._v(t._s(a))])}),0)])])])])},Tt=[function(){var e=this,t=e._self._c;return e._self._setupProxy,t("span",{staticClass:"icon is-small"},[t("i",{staticClass:"fas fa-angle-down",attrs:{"aria-hidden":"true"}})])}];var Lt=x(_t,St,Tt,!1,null,"9e971bc6",null,null);const Rt=Lt.exports;function zt({viewId:e=0,links:t={source:new Float32Array,dest:new Float32Array},colorRampType:s=-1,build:a={},base:i={},widths:o={},widthsBase:r={},newColors:d=new Uint8Array,newWidths:u=new Float32Array,dark:n=!1,projection:p="",scaleWidth:h=1,mapIsIndependent:c=!1,click:b={},paths:m=[]}){const[v,f]=G.useState(w.state.viewState),g=a.dataTable[a.activeColumn],S=i.dataTable[i.activeColumn],T=o.dataTable[o.activeColumn],L=s===0||(g==null?void 0:g.type)==A.STRING;_[e]=l=>{f(l||w.state.viewState)};function P(l){console.log("click!",l),l.coordinate&&(console.log(l.coordinate),b({coordinate:l.coordinate}))}function E(l){f(l),l.center=[l.longitude,l.latitude],c||w.commit("setMapCamera",l)}function z(l){return nt(l,{lowerExp:-6,upperExp:6,precision:5})}function N(l,D,y){try{if(!l)return null;const C=a.csvRowFromLinkRow[y];let R=l.values[C];if(L)return Number.isFinite(R)?`<b>${l.name}</b><p>${z(R)}</p>`:null;let F=null;Number.isFinite(R)&&(F=`<b>${l.name}</b><p>Value: ${z(R)}</p>`);const M=i==null?void 0:i.csvRowFromLinkRow[y];if(M){let $=i?i.dataTable[D.name].values[M]:null,q=R-$;Number.isFinite($)&&(F+=`<p>Base: ${z($)}</p>`,F+=`<p>+/- Base: ${z(q)}</p>`)}return F}catch{return null}}function K({object:l,index:D}){try{let y=N(g,S,D);if(T&&T.name!==g.name){const C=N(T,r.dataTable[r.activeColumn],D);C&&(y=y?y+C:C)}return y?{html:y,style:{color:n?"#ccc":"#223",backgroundColor:n?"#2a3c4f":"white"}}:null}catch(y){return console.warn(y),null}}const U=ot.DEFAULT,Y=new st({id:"pathLayer",data:m,getPath:l=>l.path,getColor:[0,200,128],getWidth:3,widthUnits:"pixels",widthScale:1,widthMinPixels:.5,widthMaxPixels:50,pickable:!0,coordinateSystem:U,opacity:.35,autoHighlight:!0,highlightColor:[255,0,224],offsetDirection:et.LEFT,transitions:{getColor:250,getWidth:250,getPath:0,widthScale:250},parameters:{depthTest:!1}});return j.createElement(at,{layers:[Y],viewState:v,controller:!0,pickingRadius:5,getTooltip:K,getCursor:({isDragging:l,isHovering:D})=>l?"grabbing":D?"pointer":"grab",onClick:P,onViewStateChange:l=>E(l.viewState)},j.createElement(it,{mapStyle:w.getters.mapStyle,mapboxApiAccessToken:H}))}const W="_LINK_OFFSET_",Ft=O({name:"NetworkLinksPlugin",components:{SelectorPanel:Rt,DrawingTool:rt,LinkLayer:zt,ToggleButton:J.ToggleButton,VizConfigurator:ct,VuePlotly:ht,ZoomButtons:dt},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){return{selectedPaths:[],numTrips:0,avgSpeed:0,dayOfWeek:["is-warning","is-warning","is-warning","is-warning","is-warning","",""],vehType:["is-success","",""],currentCoord:[],radius:2e-4,speedData:[],globalState:w.state,layout:{paper_bgcolor:B.dark,plot_bgcolor:B.dark,font:{family:Z,color:"#cccccc"},height:300,margin:{t:8,b:0,l:0,r:0,pad:2},xaxis:{automargin:!0,autorange:!0,title:{text:"Hour",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"Speed",standoff:16},animate:!0},legend:!1},options:{displaylogo:!1,responsive:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"scatter-plot",width:null,height:null}},standaloneYAMLconfig:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},YAMLrequirementsLinks:{},vizDetails:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,server:"",shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},currentUIFilterDefinitions:{},datasets:{},isButtonActiveColumn:!1,linkLayerId:`linklayer-${Math.floor(1e12*Math.random())}`,scaleWidth:0,numLinks:0,showTimeRange:!1,legendStore:new ut,geojsonData:{source:new Float32Array,dest:new Float32Array,linkIds:[],projection:""},fixedColors:["#4e79a7"],myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},csvData:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidth:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidthBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},isDarkMode:this.$store.state.colorScheme===I.DarkMode,isDataLoaded:!1,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",currentWidthDefinition:{columnName:""},myDataManager:this.datamanager||new pt(this.root,this.subfolder),resizer:void 0,dataLoaderWorkers:[],csvRowLookupFromLinkRow:{},colorArray:new Uint8Array,widthArray:new Float32Array}},computed:{fileApi(){return new lt(this.fileSystem,w)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},urlThumbnail(){return this.thumbnailUrl},colorRampType(){var t,s;const e=(s=(t=this.vizDetails.display.color)==null?void 0:t.colorRamp)==null?void 0:s.style;return e===void 0?-1:e},buttonTitle(){return this.csvData.activeColumn||"Loading..."}},watch:{"$store.state.viewState"(){this.vizDetails.mapIsIndependent||_[this.linkLayerId]&&_[this.linkLayerId]()},"$store.state.colorScheme"(){setTimeout(()=>this.isDarkMode=this.$store.state.colorScheme===I.DarkMode,100)},"vizDetails.showDifferences"(){this.generateWidthArray(),this.generateColorArray()}},methods:{toggleDay(e){this.dayOfWeek[e]=this.dayOfWeek[e]?"":"is-warning",this.dayOfWeek=[...this.dayOfWeek]},toggleVehicle(e){this.vehType=["","",""],this.vehType[e]="is-success"},setDataIsLoaded(){this.isDataLoaded=!0},async getVizDetails(){const e=this.myState.yamlConfig,t={showDifferences:!1,datasets:{},display:{color:{},width:{}}};if(this.config){this.vizDetails=Object.assign({},t,this.config);return}(e!=null&&e.endsWith("yaml")||e!=null&&e.endsWith("yml"))&&await this.loadStandaloneYamlConfig();const s=this.vizDetails.title?this.vizDetails.title:e||"Trip Explorer";this.$emit("title",s)},async loadStandaloneYamlConfig(){try{const e=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,t=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=Object.assign({},tt.parse(t)),this.setVizDetails()}catch(e){console.error("failed",""+e)}},async validateYAML(){const e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let t;e?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config);for(const a in this.YAMLrequirementsLinks)a in t||this.$emit("error",{type:k.ERROR,msg:`YAML file missing required key: ${a}`,desc:"Check this.YAMLrequirementsLinks for required keys"});(t.zoom<5||t.zoom>20)&&this.$emit("error",{type:k.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "}),!t.network&&t.geojsonFile&&this.$emit("error",{type:k.WARNING,msg:"YAML field geojsonFile deprecated",desc:"Use YAML field network instad. "}),t.display||this.$emit("error",{type:k.WARNING,msg:"Display properties not set",desc:"Standard values are used"})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const e=await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail),t=await Q.arraybuffer(e),s=mt(t);s&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${s})`)}catch(e){console.error(e)}},toggleShowDiffs(){this.vizDetails.showDifferences=!this.vizDetails.showDifferences},changeConfiguration(e){e.color&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.color=e.color,this.handleNewColor(e.color)),e.width&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.width=e.width,this.handleNewWidth(e.width)),e.dataset&&this.handleNewDataset(e.dataset)},async handleClick(e){console.log("GOT YOU:",e),e.coordinate&&(await this.clickedCoordinate(e.coordinate),await this.runStatisticsForCoord(e.coordinate))},async runStatisticsForCoord(e){this.currentCoord=e,console.log("number of PATHS:",this.selectedPaths);const t=e[0]-this.radius,s=e[0]+this.radius,a=e[1]-this.radius,i=e[1]+this.radius,o={time:[],speeds:[]};for(const r of this.selectedPaths){const d=r.path;console.log("  number of POINTS:",d.length);let u=0;for(let h=0;h<d.length;h++){const c=d[h];c[0]>=t&&c[0]<=s&&c[1]>=a&&c[1]<=i&&(u=h)}console.log("  i:",u);try{const h=r.speeds[u],c=parseInt(r.startTime.substring(0,2));if(h==0)continue;o.time.push(c),o.speeds.push(h)}catch{console.warn("bad index")}const p=o.speeds.reduce((h,c)=>h+c)/o.speeds.length;this.avgSpeed=p}console.log(o),this.speedData=[{x:o.time,y:o.speeds,name:"Speed by Hour",mode:"markers",type:"scatter",textinfo:"label+percent",textposition:"inside",automargin:!0,showlegend:!1,marker:{size:3,color:"#ff4"}}]},async clickedCoordinate(e){const[t,s]=e;console.log({lon:t,lat:s});const a=this.vizDetails.server,i=`${a}/location?lon=${t}&lat=${s}&radius=0.0002`;console.log(i);const o=await fetch(i,{headers:{"Access-Control-Allow-Origin":"*"}}).then(n=>n.json());if(!o.length){this.selectedPaths=[],this.numTrips=0;return}const r=[];this.numTrips=o.length;const d=807;let u=0;for(;u<this.numTrips;){console.log("loading",u);const n=o.slice(u,u+d).map(c=>c.TripID).join(","),p=`${a}/path?trip=${n}`;console.log("path length:",p.length);const h=await fetch(p).then(c=>c.json());for(const c of h){const m=c.Path1.split(",").map(f=>f.split(" ").map(g=>parseFloat(g))),v=c.Speed_path.split(",").map(f=>parseFloat(f));r.push({path:m,speeds:v,startTime:c.start_time})}this.selectedPaths=[...r],await this.$nextTick(),u+=d}},handleNewFilter(e){this.csvData=Object.assign({},this.csvData,{activeColumn:e[0]}),this.csvWidth=Object.assign({},this.csvWidth,{activeColumn:e[0]})},handleNewWidth(e){if(X(e,this.currentWidthDefinition))return;const{columnName:t,dataset:s,scaleFactor:a}=e;if(!s){this.scaleWidth=0;return}a!==void 0&&(this.scaleWidth=a);let i=!0;if(t||(i=!1),e.columnName===this.currentWidthDefinition.columnName&&e.dataset===this.currentWidthDefinition.dataset&&(i=!1),this.currentWidthDefinition=e,!i)return;const o=s?this.datasets[s]:this.csvWidth.dataTable;if(!o)return;if(this.csvWidth.dataTable!==o&&(this.csvWidth.dataTable=o,this.csvWidth.activeColumn=t||"",this.csvWidthBase.activeColumn=t||""),!o[t||""]){const d=`Width: column "${t}" not found in dataset "${this.csvData.datasetKey}"`;console.error(d),this.$emit("error",{type:k.ERROR,msg:d});return}this.csvWidth={datasetKey:s||this.csvWidth.datasetKey,dataTable:o,activeColumn:t||"",csvRowFromLinkRow:s?this.csvRowLookupFromLinkRow[s]:[]},this.generateWidthArray()},handleNewColor(e){this.fixedColors=e.fixedColors;const t=e.columnName;if(!t){this.generateColorArray();return}const s=e.dataset,a=this.datasets[s];if(!a)return;this.csvData.dataTable!==a&&(this.csvData={datasetKey:s,dataTable:a,activeColumn:"",csvRowFromLinkRow:this.csvRowLookupFromLinkRow[s]});const i=this.csvData.dataTable[t];if(!i){const o=`Color: Column "${t}" not found in dataset "${this.csvData.datasetKey}"`;console.error(o),this.$emit("error",{type:k.ERROR,msg:o});return}this.csvData.activeColumn=i.name,this.csvBase.activeColumn=i.name,this.isButtonActiveColumn=!1,this.generateColorArray()},setMapCenterFromVizDetails(){typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number)),this.vizDetails.zoom||(this.vizDetails.zoom=9),this.$store.commit("setMapCamera",{longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom,jump:!1});const e={longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom||10,jump:!1};_[this.linkLayerId]&&_[this.linkLayerId](e)},async setMapCenter(){if(this.vizDetails.center)return this.setMapCenterFromVizDetails();const e=this.geojsonData;if(!e.source.length)return;let t=0,s=0,a=0;if(this.geojsonData.projection!=="Atlantis"){const i=e.source.length/2,o=i<4096?2:1024;for(let r=0;r<i;r+=o)s+=e.source[r*2],a+=e.source[r*2+1],t++;s=s/t,a=a/t}console.log("center",s,a),this.$store.commit("setMapCamera",{longitude:s,latitude:a,bearing:0,pitch:0,zoom:8,jump:!1})},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const e=document.getElementById(`container-${this.linkLayerId}`);this.resizer.observe(e)},moveLogo(){const e=document.getElementById(`container-${this.linkLayerId}`),t=e==null?void 0:e.querySelector(".mapboxgl-ctrl-bottom-left");if(t){const s=e.clientWidth>640?"280px":"36px";t.style.right=s}},async updateStatus(e){this.myState.statusMessage=e},async loadNetwork(){if(!this.myDataManager)throw Error("links: no datamanager");this.myState.statusMessage="Loading network...";const e=this.vizDetails.network||this.vizDetails.geojsonFile;try{const t=await this.myDataManager.getRoadNetwork(e,this.myState.subfolder,this.vizDetails,this.updateStatus);this.numLinks=t.linkIds.length,this.geojsonData=t,t.projection&&(this.vizDetails.projection=""+t.projection),this.setMapCenter(),this.myState.statusMessage="",this.moveLogo(),this.$emit("isLoaded",!0),this.loadCSVFiles()}catch(t){this.myState.statusMessage=""+t;const s=this.vizDetails.title||"Network map";this.$emit("error",`${s}: `+t),this.$emit("isLoaded")}},handleNewDataset(e){console.log("NEW dataset",e);const{key:t,dataTable:s,filename:a}=e,o=Object.keys(s)[0],r=s[o];let d={};for(let n=0;n<r.values.length;n++)d[r.values[n]]=n;const u=[];for(let n=0;n<this.geojsonData.linkIds.length;n++){const p=this.geojsonData.linkIds[n],h=d[p];h!==void 0&&(u[n]=h)}this.csvRowLookupFromLinkRow[t]=u,d={},a&&(this.vizDetails.datasets[t]=a),this.datasets=Object.assign({...this.datasets},{[t]:s}),this.handleDatasetisLoaded(t)},generateWidthArray(){var o,r,d,u;const e=this.geojsonData.linkIds.length,t=new Float32Array(e),s=(r=(o=this.csvWidth)==null?void 0:o.dataTable[this.csvWidth.activeColumn])==null?void 0:r.values,a=(u=(d=this.csvBase)==null?void 0:d.dataTable[this.csvBase.activeColumn])==null?void 0:u.values,i=n=>{const p=this.csvWidth.csvRowFromLinkRow[n],h=s[p];if(this.vizDetails.showDifferences){const c=this.csvBase.csvRowFromLinkRow[n],b=a[c];return Math.abs(h-b)}else return h};for(let n=0;n<e;n++)t[n]=i(n);this.widthArray=t},generateColorArray(){const e=this.fixedColors.map(m=>{const v=ft(m);return[v.r,v.g,v.b,255]}),t=4,s=new Array(this.fixedColors.length-1).fill(0).map((m,v)=>Math.pow(1/this.fixedColors.length*(v+1),t)),a=this.csvData.dataTable,i=this.csvBase.dataTable,o=this.csvData.activeColumn,r=a[o]||{values:[]};i[o];const d=this.colorRampType===0||r.type==A.STRING,u=d?vt().range(e):gt().range(e).domain(s),n=this.geojsonData.linkIds.length,p=new Uint8Array(4*n),h=w.state.isDarkMode?[80,80,80,96]:[212,212,212,40],c=[0,0,0,0],b=m=>{var g;const v=this.csvData.csvRowFromLinkRow[m];let f=(g=a[this.csvData.activeColumn])==null?void 0:g.values[v];if(this.fixedColors.length===1)return e[0];if(!f&&!this.vizDetails.showDifferences)return c;if(d)return u(f);if(this.vizDetails.showDifferences){const S=this.csvBase.csvRowFromLinkRow[m],T=i[o].values[S],L=f-T;return L===0?h:this.isDarkMode?L>0?[255,64,64,255]:[64,96,255,255]:L>0?[255,0,0,255]:[32,64,255,255]}else{let S=f/(r.max||1);return u(S)}};for(let m=0;m<n;m++)p.set(b(m),m*4);this.colorArray=p},loadCSVFiles(){this.myState.statusMessage="Loading datasets...",this.vizDetails.datasets||(this.vizDetails.datasets={}),this.vizDetails.csvFile&&(this.vizDetails.datasets.csvFile=this.vizDetails.csvFile),this.vizDetails.csvBase&&(this.vizDetails.datasets.csvBase=this.vizDetails.csvBase);const e=Object.entries(this.vizDetails.datasets);if(e.length)for(const[t,s]of e)this.loadOneCSVFile(t,s);else this.showSimpleNetworkWithNoDatasets()},showSimpleNetworkWithNoDatasets(){this.csvData={datasetKey:"",dataTable:{[W]:{name:W,type:A.LOOKUP,values:[]}},activeColumn:W,csvRowFromLinkRow:[]};const e=this.geojsonData.source.length/2,t=[...Array(e).keys()];this.csvData.dataTable[W].values=t,this.myState.statusMessage="",this.setDataIsLoaded();const s={fixedColors:this.fixedColors,dataset:"",columnName:"",normalize:""};this.changeConfiguration({color:s})},handleDatasetisLoaded(e){const t=Object.keys(this.datasets);if(e==="csvBase"||e==="base")this.csvBase={datasetKey:e,dataTable:this.datasets[e],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[e],activeColumn:""},this.csvWidthBase={datasetKey:e,dataTable:this.datasets[e],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[e],activeColumn:""};else if(this.csvData.activeColumn===""&&!this.vizDetails.display.color&&!this.vizDetails.display.width){const s=Object.values(this.datasets[e])[0].name;this.csvData={datasetKey:e,dataTable:this.datasets[e],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[e],activeColumn:s}}t.length===Object.keys(this.vizDetails.datasets).length&&(this.setDataIsLoaded(),this.myState.statusMessage="",console.log({DATASETS:this.datasets}))},async loadOneCSVFile(e,t){try{const a=(await this.myDataManager.getDataset({dataset:t})).allRows;console.log("loaded",e),this.myState.statusMessage="Analyzing...";const i={};for(const o of Object.keys(a))o&&(i[o]=a[o]);this.datasets=Object.assign({...this.datasets},{[e]:i}),this.handleNewDataset({key:e,dataTable:i})}catch{this.$emit("error","Could not load "+t),this.$emit("isLoaded")}},handleNewDataColumn(e){const{dataset:t,column:s}=e,a={};if(t.datasetKey===this.csvWidth.datasetKey){const i={...this.vizDetails.display.width};i.columnName=s,a.width=i}if(t.datasetKey===this.csvData.datasetKey){const i={...this.vizDetails.display.color};i.columnName=s,a.color=i}this.changeConfiguration(a)}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig??"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),this.setupLogoMover(),console.log("ok")},beforeDestroy(){delete _[this.linkLayerId];try{for(const e of this.dataLoaderWorkers)e.terminate()}catch{}this.$store.commit("setFullScreen",!1)}});var Wt=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"link-volume-plot",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[s("div",{staticClass:"details-panel"},[s("h3",{staticClass:"center"},[t._v("RELIABILITY EXPLORER")]),s("p",{staticClass:"center"},[s("br"),t._v(t._s(t.numTrips?" ":"Select an intersection."))]),s("div",{staticClass:"statistics"},[s("h3",[t._v("Trips")]),t.numTrips?s("h4",[t._v(t._s(t.numTrips)+" trip"+t._s(t.numTrips==1?"":"s")+" found")]):s("h4",[t._v(" ")]),s("br"),s("p",[t._v("Day of Week")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[0]},on:{click:function(a){return t.toggleDay(0)}}},[t._v("Mo")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[1]},on:{click:function(a){return t.toggleDay(1)}}},[t._v("Tu")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[2]},on:{click:function(a){return t.toggleDay(2)}}},[t._v("We")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[3]},on:{click:function(a){return t.toggleDay(3)}}},[t._v("Th")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[4]},on:{click:function(a){return t.toggleDay(4)}}},[t._v("Fr")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[5]},on:{click:function(a){return t.toggleDay(5)}}},[t._v("Sa")]),s("b-button",{staticClass:"is-small",attrs:{type:t.dayOfWeek[6]},on:{click:function(a){return t.toggleDay(6)}}},[t._v("Su")]),s("br"),s("br"),s("p",[t._v("Vehicle Types")]),s("b-button",{staticClass:"is-small",attrs:{type:t.vehType[0]},on:{click:function(a){return t.toggleVehicle(0)}}},[t._v("All")]),s("b-button",{staticClass:"is-small",attrs:{type:t.vehType[1]},on:{click:function(a){return t.toggleVehicle(1)}}},[t._v("Cars")]),s("b-button",{staticClass:"is-small",attrs:{type:t.vehType[2]},on:{click:function(a){return t.toggleVehicle(2)}}},[t._v("HCV")]),s("br"),s("br")],1),s("div",{staticClass:"reliability"},[s("h3",[t._v("Reliability")]),s("p",[t._v("Speed by time of day")]),s("br"),s("p",[s("b",[t._v("Average speed: "+t._s(Math.round(10*t.avgSpeed)/10))])]),t.speedData.length?s("vue-plotly",{staticClass:"myplot",attrs:{data:t.speedData,layout:t.layout,options:t.options,id:"speed-plot"}}):t._e()],1)]),s("div",{staticClass:"plot-container",attrs:{id:`container-${t.linkLayerId}`}},[s("link-layer",{staticClass:"map-area",attrs:{viewId:t.linkLayerId,links:t.geojsonData,colorRampType:t.colorRampType,build:t.csvData,base:t.csvBase,widths:t.csvWidth,widthsBase:t.csvWidthBase,dark:t.isDarkMode,newColors:t.colorArray,newWidths:t.widthArray,scaleWidth:t.scaleWidth,projection:t.vizDetails.projection,mapIsIndependent:t.vizDetails.mapIsIndependent,click:t.handleClick,paths:t.selectedPaths}}),t.thumbnail?t._e():s("zoom-buttons",{staticClass:"zoom-buttons"}),t.thumbnail?t._e():s("div",{staticClass:"bottom-panel"},[t.myState.statusMessage?s("div",{staticClass:"status-message"},[s("p",[t._v(t._s(t.myState.statusMessage))])]):t._e(),s("div",{directives:[{name:"show",rawName:"v-show",value:t.csvWidth.activeColumn,expression:"csvWidth.activeColumn"}],staticClass:"panel-items"},[s("div",{staticClass:"panel-item config-section"},[s("selector-panel",{attrs:{vizDetails:t.vizDetails,csvData:t.csvWidth,scaleWidth:t.scaleWidth,showDiffs:t.vizDetails.showDifferences},on:{column:t.handleNewDataColumn,slider:t.handleNewDataColumn}})],1),t.vizDetails.datasets.csvBase?s("div",{staticClass:"panel-item diff-section"},[s("toggle-button",{staticClass:"toggle",attrs:{width:40,value:t.vizDetails.showDifferences,sync:!0,labels:!1,color:{checked:"#4b7cc4",unchecked:"#222"}},on:{change:t.toggleShowDiffs}}),s("p",[s("b",[t._v(t._s(t.$t("showDiffs")))])])],1):t._e()])])],1)])},At=[];var $t=x(Ft,Wt,At,!1,null,"985dd4c5",null,null);const me=$t.exports;export{me as default};
//# sourceMappingURL=TripExplorer-d56b18ab.js.map
