import{d as g,g as m,U as f,S as c,B as d,n as p}from"./index-6ca30cbc.js";import{V as y}from"./VuePlotly-34269977.js";import{b as x}from"./DashBoard-72d055ea.js";import"./index-650b7cb7.js";import"./HTTPFileSystem-a263b5e7.js";import"./TopSheet-80ec6121.js";const b=g({name:"BarChartPanel",components:{VuePlotly:y},props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},files:{type:Array,required:!0},config:{type:Object,required:!0},cardTitle:{type:String,required:!0},cardId:String,datamanager:Object},data:()=>({globalState:m.state,id:"bar-"+Math.floor(1e12*Math.random()),plotID:Math.floor(1e12*Math.random()).toString(),className:"",dataSet:{},YAMLrequirementsBar:{dataset:"",x:""},layout:{barmode:"overlay",bargap:.08,height:300,margin:{t:8,b:0,l:0,r:0,pad:2},font:{color:"#444444",family:f},xaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:16},animate:!0},legend:{orientation:"v",x:1,y:1}},data:[],options:{responsive:!0,displaylogo:!1,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"bar-chart",width:null,height:null}}}),async mounted(){this.updateLayout(),this.updateTheme(),this.dataSet=await this.loadData(),this.updateChart(),this.options.toImageButtonOptions.filename=x(this.cardTitle,this.subfolder),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions}),this.$emit("isLoaded"),this.checkWarningsAndErrors()},beforeDestroy(){var t;(t=this.datamanager)==null||t.removeFilterListener(this.config,this.handleFilterChanged)},watch:{"globalState.isDarkMode"(){this.updateTheme()}},methods:{changeDimensions(t){this.layout=Object.assign({},this.layout,t)},checkWarningsAndErrors(){var t=this.cardTitle;t.length==0&&this.$emit("error",{type:c.WARNING,msg:"The plot title is missing!",desc:"Please add a plot title in the .yaml-file (title: 'Example title')"})},updateTheme(){const t={paper_bgcolor:d[this.globalState.colorScheme],plot_bgcolor:d[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},updateLayout(){this.layout.xaxis.title.text=this.config.xAxisTitle||this.config.xAxisName||"",this.layout.yaxis.title.text=this.config.yAxisTitle||this.config.yAxisName||""},async handlePlotlyClick(t){try{const{x:e,y:a,data:i}=t.points[0],s=this.config.groupBy,r=e}catch(e){console.error(e)}},async handleFilterChanged(){if(this.datamanager)try{const{filteredRows:t}=this.datamanager.getFilteredDataset(this.config);if(!t){this.data=[this.data[0]],this.data[0].opacity=1;return}const e=Object.assign({},this.data[0]);e.x=t.x,e.y=t.y,e.opacity=1,e.name="Filtered",e.marker={color:"#ffaf00"},this.data=[this.data[0],e],this.data[0].opacity=.3,this.data[0].name="All"}catch(t){const e=""+t;console.log(e),this.dataSet={}}},async loadData(){if(!this.datamanager)return{};try{this.validateYAML();let t=await this.datamanager.getDataset(this.config);if(!this.config.filters)return t;this.datamanager.addFilterListener(this.config,this.handleFilterChanged);for(const[e,a]of Object.entries(this.config.filters)){const i={dataset:this.config.dataset,column:e,value:a,range:Array.isArray(a)};this.datamanager.setFilter(i)}return{allRows:{}}}catch(t){console.error(""+t)}return{allRows:{}}},validateYAML(){for(const t in this.YAMLrequirementsBar)t in this.config||this.$emit("error",{type:c.ERROR,msg:`Bar chart missing required key: ${t}`,desc:`Bar chart requires ${Object.keys(this.YAMLrequirementsBar)}`})},updateChart(){try{this.config.groupBy?this.updateChartWithGroupBy():this.updateChartSimple()}catch(t){const e=""+t;this.$emit("error",{type:c.ERROR,msg:e})}},updateChartWithGroupBy(){this.className=this.plotID},updateChartSimple(){var h;let t=[];var e=!1;const a=this.dataSet.allRows||{},i=Object.keys(a);if(!i.length)return;let s=this.config.columns||this.config.usedCol;if(!s&&i.length&&(s=i.filter(o=>o!==this.config.x).sort()),this.config.legendName&&(this.config.legendTitles=this.config.legendName),(h=this.config.legendTitles)!=null&&h.length&&(e=!0),this.config.stacked?this.layout.barmode="stack":this.layout.barmode="group",this.config.stacked&&(this.className=this.plotID),!a[this.config.x]){this.$store.commit("error",`${this.cardTitle}: "${this.config.dataset}" x column "${this.config.x}" missing`);return}const r=a[this.config.x];if(!r)throw Error(`File ${this.config.dataset}: Could not find column ${this.config.x}`);t=r.values,this.config.skipFirstRow&&(t=t.slice(1));for(let o=0;o<s.length;o++){const l=s[o],u=e?this.config.legendTitles[o]??l:l;let n=a[l].values;this.config.skipFirstRow&&(n=n.slice(1)),this.config.convertToSeconds&&(n=this.convertToSeconds(n)),this.data.push({x:t,y:n,name:u,type:"bar",textinfo:"label+percent",textposition:"inside",automargin:!0,opacity:1})}},convertToSeconds(t){t=t.map(e=>{try{return e.split(":").reduce((s,r)=>parseInt(r,10)+s*60,0)}catch{return 0}})}}});var S=function(){var e=this,a=e._self._c;return e._self._setupProxy,a("VuePlotly",{staticClass:"myplot",class:e.className,attrs:{data:e.data,layout:e.layout,options:e.options,id:e.id}})},_=[];var v=p(b,S,_,!1,null,"f75c675e",null,null);const k=v.exports;export{k as default};
//# sourceMappingURL=bar-507df8d7.js.map
