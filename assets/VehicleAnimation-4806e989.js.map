{"version":3,"file":"VehicleAnimation-4806e989.js","sources":["../../src/plugins/vehicle-animation/LegendColors.tsx","../../src/plugins/vehicle-animation/SettingsPanel.vue","../../src/plugins/vehicle-animation/DrtRequestLayer.tsx","../../src/plugins/vehicle-animation/TripViz.tsx","../../src/plugins/vehicle-animation/VehicleAnimation.vue"],"sourcesContent":["import { LegendItem } from '@/Globals'\nimport React from 'react'\n\nexport default function Component(props: {\n  title: string\n  description?: string\n  values: number[]\n  items: LegendItem[]\n}) {\n  const listItems = props.items.map((item, i) => (\n    <li key={i} style={{ display: 'flex' }}>\n      {item.label && (\n        <div\n          style={{\n            margin: '0 0.5rem 0.0rem 0',\n            fontWeight: 'bold',\n          }}\n        >\n          {item.label}\n        </div>\n      )}\n      <div\n        style={{\n          width: '100%',\n          height: `3px`,\n          marginTop: '0.5rem',\n          backgroundColor: `rgb(${item.color})`,\n        }}\n      ></div>\n    </li>\n  ))\n\n  return (\n    <div>\n      <h4\n        style={{\n          textAlign: 'left',\n          fontWeight: 'bold',\n          margin: '1rem 0 0.25rem 0',\n          fontSize: '0.8rem',\n        }}\n      >\n        {props.title}\n      </h4>\n      <p>{props.description}</p>\n      <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>{listItems}</ul>\n    </div>\n  )\n}\n","<template lang=\"pug\">\n.settings-panel-content\n  h4 {{ $t('showhide')}}\n\n  .row(:key=\"label\" v-for=\"label in Object.keys(items)\")\n    toggle-button.toggle(\n      :width=\"40\"\n      :value=\"items[label]\"\n      :labels=\"false\"\n      :color=\"{checked: '#4b7cc4', unchecked: '#222'}\"\n      @change=\"$emit('click',label)\")\n    label(v-html=\"$t(label)\")\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      requests: 'DRT&nbsp;Requests',\n      passengers: 'Passengers',\n      search: 'Search',\n      showhide: 'Show/Hide',\n      vehicles: 'Vehicles',\n      routes: 'Routes',\n      speed: 'Speed',\n      backgroundTraffic: 'All Traffic',\n    },\n    de: {\n      requests: 'DRT&nbsp;Anfragen',\n      passengers: 'Passagiere',\n      search: 'Suche',\n      showhide: 'Ein-/Ausblenden',\n      vehicles: 'DRT Fahrzeuge',\n      routes: 'Routen',\n      speed: 'Geschwindigkeit',\n      backgroundTraffic: 'Alle Fahrzeuge',\n    },\n  },\n}\n\nimport { defineComponent } from 'vue'\nimport { ToggleButton } from 'vue-js-toggle-button'\n\nexport default defineComponent({\n  name: 'XSettingsPanel',\n  i18n,\n  components: { ToggleButton },\n  props: {\n    items: { type: Object, required: true },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.settings-panel-content {\n  margin: 2rem 0.25rem 0 0.25rem;\n}\n\nh4 {\n  font-weight: bold;\n  font-size: 0.8rem;\n  margin-bottom: 0.5rem;\n}\n\n.row {\n  display: 'grid';\n  grid-template-columns: 'auto 1fr';\n}\n\nlabel {\n  margin: auto 0 auto 0rem;\n  text-align: 'left';\n}\n\n.toggle {\n  margin-bottom: 0.25rem;\n  margin-right: 0.5rem;\n}\n</style>\n","import { ArcLayer } from '@deck.gl/layers'\n\nconst defaultProps = {\n  currentTime: { type: 'number', value: 0, min: 0 },\n  getTimeStart: { type: 'accessor', value: null },\n  getTimeEnd: { type: 'accessor', value: null },\n  searchFlag: { type: 'number', value: 0 },\n}\n\nexport default class DrtRequestArcLayer extends ArcLayer {\n  getShaders() {\n    const shaders = super.getShaders()\n    shaders.inject = {\n      // Timestamp of the vertex\n      'vs:#decl': `\\\n        attribute float timeStart;\n        attribute float timeEnd;\n        uniform float currentTime;\n        uniform float searchFlag;\n        varying float vTime;\n      `,\n      'vs:#main-start': `\\\n        if (searchFlag == 1.0) {\n          vTime = 999.0;\n        } else if (timeEnd == -1.0 || timeStart > currentTime || timeEnd < currentTime ) {\n          vTime = -1.0;\n          return;\n        } else {\n          float nearBeginning = currentTime - timeStart;\n          float nearEnd = timeEnd - currentTime;\n          vTime = min(nearBeginning, nearEnd);\n        }\n      `,\n      'fs:#decl': `\\\n        uniform float currentTime;\n        uniform float searchFlag;\n        varying float vTime;\n      `,\n      'fs:#main-start': `\\\n      if (searchFlag == 0.0 && vTime == -1.0 ) discard;\n      `,\n      // fade the traces in and out\n      'fs:DECKGL_FILTER_COLOR': `\\\n        if (vTime <= 10.0) color.a *= (vTime / 10.0);\n      `,\n    }\n    return shaders\n  }\n\n  initializeState(params: any) {\n    super.initializeState(params)\n\n    const attributeManager = this.getAttributeManager()\n    attributeManager.addInstanced({\n      timeStart: { size: 1, accessor: 'getTimeStart' },\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\n    })\n  }\n\n  draw(params: any) {\n    const { currentTime } = this.props\n\n    params.uniforms = Object.assign({}, params.uniforms, {\n      currentTime,\n    })\n\n    super.draw(params)\n  }\n}\n\nDrtRequestArcLayer.layerName = 'DrtRequestArcLayer'\nDrtRequestArcLayer.defaultProps = defaultProps\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { StaticMap } from 'react-map-gl'\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core'\nimport DeckGL from '@deck.gl/react'\n\nimport DrtRequestLayer from './DrtRequestLayer'\nimport MovingIconsLayer from '@/layers/moving-icons/moving-icons-layer'\nimport PathTraceLayer from '@/layers/PathTraceLayer'\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\n\nimport globalStore from '@/store'\n\nconst BASE_URL = import.meta.env.BASE_URL\n\nconst ICON_MAPPING = {\n  marker: { x: 0, y: 0, width: 128, height: 128, mask: true },\n  info: { x: 128, y: 0, width: 128, height: 128, mask: true },\n  vehicle: { x: 128, y: 128, width: 128, height: 128, mask: true },\n  diamond: { x: 0, y: 128, width: 128, height: 128, mask: false },\n}\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0,\n})\n\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  position: [-74.05, 40.7, 8000],\n})\n\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight })\n\nconst DEFAULT_THEME = {\n  vehicleColor: [200, 130, 250],\n  trailColor0: [235, 235, 25],\n  trailColor1: [23, 184, 190],\n  effects: [lightingEffect],\n}\n\nconst DRT_REQUEST = {\n  time: 0,\n  fromX: 1,\n  fromY: 2,\n  toX: 3,\n  toY: 4,\n  veh: 5,\n  arrival: 6,\n}\n\nexport default function Component(props: {\n  viewId: number\n  dark: boolean\n  simulationTime: number\n  paths: any[]\n  drtRequests: any[]\n  traces: any[]\n  colors: any\n  center: [number, number]\n  settingsShowLayers: { [label: string]: boolean }\n  vehicleLookup: string[]\n  searchEnabled: boolean\n  onClick: any\n}) {\n  const {\n    simulationTime,\n    paths,\n    traces,\n    drtRequests,\n    settingsShowLayers,\n    center,\n    dark,\n    vehicleLookup,\n    searchEnabled,\n    onClick,\n    viewId,\n  } = props\n\n  const theme = DEFAULT_THEME\n\n  // set initial view\n  const [viewState, setViewState] = useState(\n    center\n      ? ({\n          center: [16, 42],\n          longitude: center[0],\n          latitude: center[1],\n          pitch: 0,\n          bearing: 0,\n          zoom: 10,\n        } as any)\n      : Object.assign({}, globalStore.state.viewState)\n  )\n\n  // register setViewState in global view updater so we can respond to external map motion\n  REACT_VIEW_HANDLES[viewId] = () => {\n    setViewState(globalStore.state.viewState)\n  }\n\n  const arcWidth = 1\n  const [hoverInfo, setHoverInfo] = useState({} as any)\n\n  const layers: any = []\n\n  function handleClick() {\n    console.log(hoverInfo)\n    // send null as message that blank area was clicked\n    if (!hoverInfo.object) {\n      onClick(null)\n    } else {\n      onClick(hoverInfo.object.v)\n    }\n  }\n\n  function renderTooltip({ hoverInfo }: any) {\n    const { object, x, y } = hoverInfo\n\n    if (!object) {\n      return null\n    }\n\n    const vehicleId = vehicleLookup[object.v]\n\n    return (\n      <div\n        className=\"tooltip\"\n        style={{\n          fontSize: '0.8rem',\n          backgroundColor: '#ddddeedd',\n          borderLeft: '6px solid green',\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\n          color: '#223',\n          padding: '1rem 1rem',\n          position: 'absolute',\n          left: x + 40,\n          top: y - 30,\n        }}\n      >\n        <big>\n          <b>{vehicleId}</b>\n        </big>\n        <div>Passagiere: {object.occ} </div>\n      </div>\n    )\n  }\n\n  if (settingsShowLayers.routes)\n    layers.push(\n      //@ts-ignore:\n      new PathTraceLayer({\n        id: 'Routen',\n        data: traces,\n        currentTime: simulationTime,\n        getSourcePosition: (d: any) => d.p0,\n        getTargetPosition: (d: any) => d.p1,\n        getTimeStart: (d: any) => d.t0,\n        getTimeEnd: (d: any) => d.t1,\n        getColor: (d: any) => props.colors[d.occ],\n        getWidth: 1, // (d: any) => 3.0 * (d.occ + 1) - 1,\n        opacity: 0.7,\n        widthMinPixels: 2,\n        rounded: false,\n        shadowEnabled: false,\n        searchFlag: searchEnabled ? 1.0 : 0.0,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [255, 0, 255],\n        onHover: setHoverInfo,\n      })\n    )\n\n  if (settingsShowLayers.vehicles)\n    layers.push(\n      //@ts-ignore\n      new MovingIconsLayer({\n        id: 'Vehicles',\n        data: paths,\n        getPathStart: (d: any) => d.p0,\n        getPathEnd: (d: any) => d.p1,\n        getTimeStart: (d: any) => d.t0,\n        getTimeEnd: (d: any) => d.t1,\n        getIcon: (d: any) => 'vehicle',\n        getColor: (d: any) => props.colors[d.occ],\n        iconMoving: 'vehicle',\n        iconStill: 'diamond',\n        getSize: searchEnabled ? 72 : 54,\n        opacity: 1.0,\n        currentTime: simulationTime,\n        shadowEnabled: false,\n        noAlloc: true,\n        iconAtlas: `${BASE_URL}icon-atlas.png`,\n        iconMapping: ICON_MAPPING,\n        sizeScale: 0.5,\n        billboard: false,\n        pickable: true,\n        depthTest: true,\n        autoHighlight: false,\n        highlightColor: [255, 0, 255],\n        onHover: setHoverInfo,\n        parameters: {\n          depthTest: false,\n        },\n      })\n    )\n\n  if (settingsShowLayers.requests)\n    layers.push(\n      //@ts-ignore:\n      new DrtRequestLayer({\n        id: 'DRT Requests',\n        data: drtRequests,\n        currentTime: simulationTime,\n        getSourcePosition: (d: any) => [d[DRT_REQUEST.fromX], d[DRT_REQUEST.fromY]],\n        getTargetPosition: (d: any) => [d[DRT_REQUEST.toX], d[DRT_REQUEST.toY]],\n        getTimeStart: (d: any) => d[DRT_REQUEST.time],\n        getTimeEnd: (d: any) => d[DRT_REQUEST.arrival],\n        getSourceColor: [255, 0, 255],\n        getTargetColor: [200, 255, 255],\n        getWidth: arcWidth,\n        opacity: 0.5,\n        searchFlag: searchEnabled ? 1.0 : 0.0,\n      })\n    )\n\n  return (\n    <DeckGL\n      layers={layers}\n      effects={theme.effects}\n      pickingRadius={5}\n      viewState={viewState}\n      controller={true}\n      getCursor={() => 'pointer'}\n      onClick={handleClick}\n      onViewStateChange={(e: any) => {\n        globalStore.commit('setMapCamera', e.viewState)\n      }}\n    >\n      {\n        /*\n        // @ts-ignore */\n        <StaticMap mapStyle={globalStore.getters.mapStyle} mapboxApiAccessToken={MAPBOX_TOKEN} />\n      }\n      {renderTooltip({ hoverInfo })}\n    </DeckGL>\n  )\n}\n","<template lang=\"pug\">\n.gl-app(:class=\"{'hide-thumbnail': !thumbnail}\"\n        :style='{\"background\": urlThumbnail}' oncontextmenu=\"return false\")\n\n  trip-viz.anim(v-if=\"!thumbnail\"\n                :center = \"vizDetails.center\"\n                :colors = \"COLOR_OCCUPANCY\"\n                :drtRequests = \"$options.drtRequests\"\n                :dark = \"globalState.isDarkMode\"\n                :paths = \"$options.paths\"\n                :settingsShowLayers = \"SETTINGS\"\n                :searchEnabled = \"searchEnabled\"\n                :simulationTime = \"simulationTime\"\n                :traces = \"$options.traces\"\n                :vehicleLookup = \"vehicleLookup\"\n                :viewId = \"viewId\"\n                :onClick = \"handleClick\")\n\n  zoom-buttons(v-if=\"!thumbnail\")\n\n  //- isLoaded && !thumbnail\")\n  .right-side(v-if=\"isLoaded && !thumbnail\")\n    collapsible-panel(direction=\"right\")\n      .big.clock\n        p {{ myState.clock }}\n\n      .panel-items\n        legend-colors.legend-block(v-if=\"legendItems.length\"\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\n\n        //- legend-colors.legend-block(:title=\"`${$t('requests')}:`\" :items=\"legendRequests\")\n\n        //- .search-panel\n        //-   p.speed-label(:style=\"{margin: '1rem 0 0 0'}\") {{ $t('search') }}\n        //-   form(autocomplete=\"off\")\n        //-   .field\n        //-     p.control.has-icons-left\n        //-       input.input.is-small(type=\"email\" :placeholder=\"`${$t('search')}...`\" v-model=\"searchTerm\")\n        //-       span.icon.is-small.is-left\n        //-         i.fas.fa-search\n\n        settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\n\n        .speed-block\n          p.speed-label {{ $t('speed') }}:\n            br\n            | {{ speed }}x\n\n          b-slider.speed-slider(v-model=\"speed\"\n            :min=\"speedStops[0]\"\n            :max=\"speedStops[speedStops.length-1]\"\n            :duration=\"0\"\n            :dotSize=\"20\"\n            :tooltip=\"true\"\n            tooltip-placement=\"bottom\"\n            :tooltip-formatter=\"val => val + 'x'\"\n          )\n            template(v-for=\"val in speedStops\")\n              b-slider-tick(:value=\"val\" :key=\"val\")\n\n  playback-controls.bottom-area(v-if=\"!thumbnail && isLoaded\"\n      @click='toggleSimulation'\n      @time='setTime'\n      :timeStart = \"timeStart\"\n      :timeEnd = \"timeEnd\"\n      :isRunning = \"myState.isRunning\"\n      :currentTime = \"simulationTime\")\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      requests: 'DRT Requests',\n      passengers: 'Passengers',\n      search: 'Search',\n      showhide: 'Show/Hide',\n      vehicles: 'Vehicles',\n      routes: 'Routes',\n      speed: 'Speed',\n    },\n    de: {\n      requests: 'DRT Anfragen',\n      passengers: 'Passagiere',\n      search: 'Suche',\n      showhide: 'Ein-/Ausblenden',\n      vehicles: 'DRT Fahrzeuge',\n      routes: 'DRT Routen',\n      speed: 'Geschwindigkeit',\n    },\n  },\n}\n\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport { ToggleButton } from 'vue-js-toggle-button'\nimport readBlob from 'read-blob'\nimport YAML from 'yaml'\nimport crossfilter from 'crossfilter2'\nimport { blobToArrayBuffer, blobToBinaryString } from 'blob-util'\n\nimport globalStore from '@/store'\nimport CollapsiblePanel from '@/components/CollapsiblePanel.vue'\nimport LegendColors from './LegendColors'\nimport PlaybackControls from '@/components/PlaybackControls.vue'\nimport SettingsPanel from './SettingsPanel.vue'\nimport ZoomButtons from '@/components/ZoomButtons.vue'\nimport { arrayBufferToBase64, gUnzip } from '@/js/util'\n\nimport {\n  ColorScheme,\n  FileSystem,\n  LegendItem,\n  LegendItemType,\n  FileSystemConfig,\n  VisualizationPlugin,\n  LIGHT_MODE,\n  DARK_MODE,\n  REACT_VIEW_HANDLES,\n} from '@/Globals'\n\nimport TripViz from './TripViz'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\n\nconst MyComponent = defineComponent({\n  name: 'VehicleAnimationPlugin',\n  i18n,\n  components: {\n    CollapsiblePanel,\n    SettingsPanel,\n    LegendColors,\n    TripViz,\n    PlaybackControls,\n    ToggleButton,\n    ZoomButtons,\n  },\n  props: {\n    root: { type: String, required: true },\n    subfolder: { type: String, required: true },\n    configFromDashboard: { type: Object, required: false },\n    yamlConfig: String,\n    thumbnail: Boolean,\n  },\n  data: () => {\n    // const COLOR_OCCUPANCY = {\n    //   Car: [85, 255, 85],\n    //   HCV: [240, 110, 30],\n    // } as any\n    const COLOR_OCCUPANCY = {\n      0: [140, 140, 160],\n      1: [85, 255, 85],\n      2: [255, 255, 85],\n      3: [240, 110, 30],\n      4: [192, 30, 50],\n    } as any\n\n    const SETTINGS = {\n      vehicles: true,\n      routes: true,\n      // requests: false,\n    } as any\n\n    return {\n      viewId: Math.floor(1e12 * Math.random()),\n      COLOR_OCCUPANCY,\n      SETTINGS,\n      legendItems: [\n        { type: LegendItemType.line, color: COLOR_OCCUPANCY[1], value: 1, label: 'Car' },\n        { type: LegendItemType.line, color: COLOR_OCCUPANCY[3], value: 3, label: 'HCV' },\n      ],\n      // legendItems: Object.keys(COLOR_OCCUPANCY).map(key => {\n      //   return {\n      //     type: LegendItemType.line,\n      //     color: COLOR_OCCUPANCY[key],\n      //     value: key,\n      //     label: key,\n      //   }\n      // }),\n\n      legendRequests: [], // { type: LegendItemType.line, color: [255, 0, 255], value: 0, label: '' }],\n\n      vizDetails: {\n        network: '',\n        drtTrips: '',\n        projection: '',\n        title: '',\n        description: '',\n        thumbnail: '',\n        center: [13.45, 52.5],\n        zoom: 10,\n        mapIsIndependent: false,\n        theme: '',\n      },\n\n      myState: {\n        statusMessage: '',\n        clock: '00:00',\n        colorScheme: ColorScheme.DarkMode,\n        isRunning: false,\n        isShowingHelp: false,\n        subfolder: '',\n        yamlConfig: '',\n        thumbnail: false,\n        data: [] as any[],\n      },\n\n      timeStart: 0,\n      timeEnd: 86400,\n\n      traces: crossfilter([]) as crossfilter.Crossfilter<any>,\n      traceStart: {} as crossfilter.Dimension<any, any>,\n      traceEnd: {} as crossfilter.Dimension<any, any>,\n      traceVehicle: {} as crossfilter.Dimension<any, any>,\n\n      paths: crossfilter([]) as crossfilter.Crossfilter<any>,\n      pathStart: {} as crossfilter.Dimension<any, any>,\n      pathEnd: {} as crossfilter.Dimension<any, any>,\n      pathVehicle: {} as crossfilter.Dimension<any, any>,\n\n      requests: crossfilter([]) as crossfilter.Crossfilter<any>,\n      requestStart: {} as crossfilter.Dimension<any, any>,\n      requestEnd: {} as crossfilter.Dimension<any, any>,\n      requestVehicle: {} as crossfilter.Dimension<any, any>,\n\n      simulationTime: 6 * 3600, // 8 * 3600 + 10 * 60 + 10\n\n      timeElapsedSinceLastFrame: 0,\n\n      searchTerm: '',\n      searchEnabled: false,\n\n      globalState: globalStore.state,\n      isDarkMode: globalStore.state.isDarkMode,\n      isLoaded: true,\n      showHelp: false,\n\n      speedStops: [-20, -10, -5, -2, -1, -0.5, -0.25, 0, 0.25, 0.5, 1, 2, 5, 10, 20],\n      speed: 5,\n\n      legendBits: [] as any[],\n      isEmbedded: false,\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\n\n      vehicleLookup: [] as string[],\n      vehicleLookupString: {} as { [id: string]: number },\n      isPausedDueToHiding: false,\n    }\n  },\n  computed: {\n    fileApi(): HTTPFileSystem {\n      return new HTTPFileSystem(this.fileSystem, globalStore)\n    },\n\n    fileSystem(): FileSystemConfig {\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\n        (a: FileSystemConfig) => a.slug === this.root\n      )\n      if (svnProject.length === 0) {\n        console.log('no such project')\n        throw Error\n      }\n      return svnProject[0]\n    },\n\n    urlThumbnail(): string {\n      return this.thumbnailUrl\n    },\n    textColor(): any {\n      const lightmode = {\n        text: '#3498db',\n        bg: '#eeeef480',\n      }\n\n      const darkmode = {\n        text: 'white',\n        bg: '#181518aa',\n      }\n\n      return this.myState.colorScheme === ColorScheme.DarkMode ? darkmode : lightmode\n    },\n  },\n  watch: {\n    '$store.state.viewState'() {\n      if (this.vizDetails.mapIsIndependent) return\n\n      if (!REACT_VIEW_HANDLES[this.viewId]) return\n      REACT_VIEW_HANDLES[this.viewId]()\n    },\n\n    async 'globalState.authAttempts'() {\n      console.log('AUTH CHANGED - Reload')\n      if (!this.yamlConfig) this.buildRouteFromUrl()\n      await this.getVizDetails()\n    },\n\n    'globalState.colorScheme'() {\n      this.isDarkMode = this.globalState.colorScheme === ColorScheme.DarkMode\n      this.updateLegendColors()\n    },\n\n    searchTerm() {\n      const vehicleNumber = this.vehicleLookupString[this.searchTerm]\n      if (vehicleNumber > -1) {\n        console.log('vehicle', vehicleNumber)\n        this.pathVehicle?.filterExact(vehicleNumber)\n        this.traceVehicle?.filterExact(vehicleNumber)\n        this.requestVehicle?.filterExact(vehicleNumber)\n        this.requestStart.filterAll()\n        this.requestEnd.filterAll()\n        this.searchEnabled = true\n      } else {\n        console.log('nope')\n        this.pathVehicle?.filterAll()\n        this.traceVehicle?.filterAll()\n        this.requestVehicle?.filterAll()\n        this.searchEnabled = false\n      }\n      this.updateDatasetFilters()\n    },\n  },\n  methods: {\n    async handleSettingChange(label: string) {\n      console.log(label)\n      this.SETTINGS[label] = !this.SETTINGS[label]\n      this.updateDatasetFilters()\n      this.simulationTime += 1 // this will force a redraw\n    },\n\n    // this happens if viz is the full page, not a thumbnail on a project page\n    buildRouteFromUrl() {\n      const params = this.$route.params\n      if (!params.project || !params.pathMatch) {\n        console.log('I CANT EVEN: NO PROJECT/PARHMATCH')\n        return\n      }\n\n      // subfolder and config file\n      const sep = 1 + params.pathMatch.lastIndexOf('/')\n      const subfolder = params.pathMatch.substring(0, sep)\n      const config = params.pathMatch.substring(sep)\n\n      this.myState.subfolder = subfolder\n      this.myState.yamlConfig = config\n    },\n\n    async getVizDetails() {\n      // first get config\n\n      if (this.configFromDashboard)\n        this.vizDetails = JSON.parse(JSON.stringify(this.configFromDashboard))\n      else {\n        try {\n          // might be a project config:\n          const filename =\n            this.myState.yamlConfig.indexOf('/') > -1\n              ? this.myState.yamlConfig\n              : this.myState.subfolder + '/' + this.myState.yamlConfig\n\n          const text = await this.fileApi.getFileText(filename)\n          this.vizDetails = YAML.parse(text)\n        } catch (err) {\n          console.log('failed')\n          const e = err as any\n          // maybe it failed because password?\n          if (this.fileSystem.needPassword && e.status === 401) {\n            globalStore.commit('requestLogin', this.fileSystem.slug)\n          }\n        }\n      }\n\n      // initial view\n      if (this.vizDetails.theme) this.$store.commit('setTheme', this.vizDetails.theme)\n\n      if (this.vizDetails.center) {\n        this.$store.commit('setMapCamera', {\n          longitude: this.vizDetails.center[0],\n          latitude: this.vizDetails.center[1],\n          zoom: this.vizDetails.zoom || 10,\n          pitch: 20,\n          bearing: 0,\n        })\n      }\n\n      // title\n      const t = this.vizDetails.title ? this.vizDetails.title : 'Agent Animation'\n      this.$emit('title', t)\n\n      this.buildThumbnail()\n    },\n\n    async buildThumbnail() {\n      if (this.thumbnail && this.vizDetails.thumbnail) {\n        try {\n          const blob = await this.fileApi.getFileBlob(\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\n          )\n          const buffer = await readBlob.arraybuffer(blob)\n          const base64 = arrayBufferToBase64(buffer)\n          if (base64)\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    },\n\n    handleClick(vehicleNumber: any) {\n      // null means empty area clicked: clear map.\n      if (vehicleNumber === null) {\n        this.searchTerm = ''\n        return\n      }\n\n      const vehId = this.vehicleLookup[vehicleNumber]\n      console.log(vehId)\n\n      // set -- or clear -- search box!\n      if (this.searchTerm === vehId) this.searchTerm = ''\n      else this.searchTerm = vehId\n    },\n\n    updateLegendColors() {\n      // const theme = this.myState.colorScheme == ColorScheme.LightMode ? LIGHT_MODE : DARK_MODE\n      // this.legendBits = [\n      //   { label: 'susceptible', color: theme.susceptible },\n      //   { label: 'latently infected', color: theme.infectedButNotContagious },\n      //   { label: 'contagious', color: theme.contagious },\n      //   { label: 'symptomatic', color: theme.symptomatic },\n      //   { label: 'seriously ill', color: theme.seriouslyIll },\n      //   { label: 'critical', color: theme.critical },\n      //   { label: 'recovered', color: theme.recovered },\n      // ]\n    },\n\n    setWallClock() {\n      const hour = Math.floor(this.simulationTime / 3600)\n      const minute = Math.floor(this.simulationTime / 60) % 60\n      this.myState.clock = `${hour < 10 ? '0' : ''}${hour}${minute < 10 ? ':0' : ':'}${minute}`\n    },\n\n    setTime(seconds: number) {\n      this.simulationTime = seconds\n      this.setWallClock()\n\n      // only filter if search is disabled and we have data loaded already\n      if (this.traceStart && this.pathStart && this.requestStart) {\n        this.pathStart.filter([0, this.simulationTime])\n        this.pathEnd.filter([this.simulationTime, Infinity])\n\n        // scrub vehicles if search is disabled\n        if (!this.searchEnabled) {\n          this.traceStart.filter([0, this.simulationTime])\n          this.traceEnd.filter([this.simulationTime, Infinity])\n          this.requestStart.filter([0, this.simulationTime])\n          this.requestEnd.filter([this.simulationTime, Infinity])\n        }\n      }\n\n      //@ts-ignore\n      this.$options.paths = this.paths.allFiltered()\n      //@ts-ignore\n      this.$options.traces = this.traces.allFiltered()\n      //@ts-ignore\n      this.$options.drtRequests = this.requests.allFiltered()\n    },\n\n    toggleSimulation() {\n      this.myState.isRunning = !this.myState.isRunning\n      this.timeElapsedSinceLastFrame = Date.now()\n\n      // ok so, many times I mashed the play/pause wondering why things wouldn't\n      // start moving. Turns out a 0x speed is not very helpful! Help the user\n      // out and switch the speed up if they press play.\n      if (this.myState.isRunning && this.speed === 0.0) this.speed = 1.0\n\n      // and begin!\n      if (this.myState.isRunning) this.animate()\n    },\n\n    async parseDrtRequests(requests: any[]) {\n      if (this.vehicleLookup.length) {\n        for (const request of requests) {\n          try {\n            request[5] = this.vehicleLookupString[request[5]]\n          } catch (e) {}\n        }\n      }\n\n      return crossfilter(requests)\n    },\n\n    async parseVehicles(trips: any[]) {\n      const allTrips: any[] = []\n      let vehNumber = -1\n\n      for (const trip of trips) {\n        const path = trip.path\n        const timestamps = trip.timestamps\n        const passengers = trip.passengers\n\n        // attach vehicle ID to each segment so we can click\n        vehNumber++\n        this.vehicleLookup[vehNumber] = trip.id\n        this.vehicleLookupString[trip.id] = vehNumber\n\n        for (let i = 0; i < trip.path.length - 1; i++) {\n          const trip = {\n            t0: timestamps[i],\n            t1: timestamps[i + 1],\n            p0: path[i],\n            p1: path[i + 1],\n            v: vehNumber,\n            occ: passengers[i],\n          }\n          // grey out vehicles that aren't moving\n          if (trip.p0[0] == trip.p1[0] && trip.p0[1] == trip.p1[1]) trip.occ = 0\n\n          allTrips.push(trip)\n        }\n      }\n      return crossfilter(allTrips)\n    },\n\n    setEmbeddedMode() {\n      if ('embed' in this.$route.query) {\n        console.log('EMBEDDED MODE')\n        this.isEmbedded = true\n        this.$store.commit('setShowLeftBar', false)\n        this.$store.commit('setFullWidth', true)\n      }\n    },\n\n    updateDatasetFilters() {\n      // dont' filter if we haven't loaded yet\n      if (!this.traceStart || !this.pathStart || !this.requestStart) return\n\n      // filter out all traces that havent started or already finished\n      if (this.SETTINGS.routes) {\n        if (this.searchEnabled) {\n          this.traceStart.filterAll()\n          this.traceEnd.filterAll()\n        } else {\n          this.traceStart.filter([0, this.simulationTime])\n          this.traceEnd.filter([this.simulationTime, Infinity])\n        }\n        //@ts-ignore\n        this.$options.traces = this.traces.allFiltered()\n      }\n\n      if (this.SETTINGS.vehicles) {\n        this.pathStart.filter([0, this.simulationTime])\n        this.pathEnd.filter([this.simulationTime, Infinity])\n        //@ts-ignore:\n        this.$options.paths = this.paths.allFiltered()\n      }\n\n      if (this.SETTINGS.requests) {\n        if (this.searchEnabled) {\n          this.requestStart.filterAll()\n          this.requestEnd.filterAll()\n        } else {\n          this.requestStart.filter([0, this.simulationTime])\n          this.requestEnd.filter([this.simulationTime, Infinity])\n        }\n        //@ts-ignore\n        this.$options.drtRequests = this.requests.allFiltered()\n      }\n    },\n\n    animate() {\n      if (this.myState.isRunning) {\n        const elapsed = Date.now() - this.timeElapsedSinceLastFrame\n        this.timeElapsedSinceLastFrame += elapsed\n        this.simulationTime += elapsed * this.speed * 0.06\n\n        this.updateDatasetFilters()\n        this.setWallClock()\n        window.requestAnimationFrame(this.animate)\n      }\n    },\n\n    handleVisibilityChange() {\n      if (this.isPausedDueToHiding && !document.hidden) {\n        console.log('unpausing')\n        this.isPausedDueToHiding = false\n        this.toggleSimulation()\n      } else if (this.myState.isRunning && document.hidden) {\n        console.log('pausing')\n        this.isPausedDueToHiding = true\n        this.toggleSimulation()\n      }\n    },\n\n    // convert path/timestamp info into path traces we can use\n    async parseRouteTraces(trips: any[]) {\n      let countTraces = 0\n      let vehNumber = -1\n\n      const traces: any = []\n\n      for (const vehicle of trips) {\n        vehNumber++\n\n        let time = vehicle.timestamps[0]\n        let nextTime = vehicle.timestamps[0]\n\n        let segments: any[] = []\n\n        for (let i = 1; i < vehicle.path.length; i++) {\n          nextTime = vehicle.timestamps[i]\n\n          // same point? start of new path.\n          if (\n            vehicle.path[i][0] === vehicle.path[i - 1][0] &&\n            vehicle.path[i][1] === vehicle.path[i - 1][1]\n          ) {\n            segments.forEach(segment => {\n              segment.t1 = vehicle.timestamps[i - 1]\n            })\n\n            traces.push(...segments)\n\n            segments = []\n            time = nextTime\n          } else {\n            segments.push({\n              t0: time,\n              p0: vehicle.path[i - 1],\n              p1: vehicle.path[i],\n              v: vehNumber,\n              occ: vehicle.passengers[i - 1],\n            })\n          }\n        }\n\n        // save final segments\n        segments.forEach(segment => {\n          segment.t1 = nextTime\n        })\n        traces.push(...segments)\n      }\n\n      return crossfilter(traces)\n    },\n\n    async loadFiles() {\n      let trips: any[] = []\n      let drtRequests: any = []\n\n      const filename = this.myState.subfolder + '/' + this.vizDetails.drtTrips\n      try {\n        if (this.vizDetails.drtTrips.endsWith('json')) {\n          const json = await this.fileApi.getFileJson(filename)\n          trips = json.trips\n          drtRequests = json.drtRequests\n        } else if (this.vizDetails.drtTrips.endsWith('gz')) {\n          const blob = await this.fileApi.getFileBlob(filename)\n          const buffer = await blob.arrayBuffer()\n          // recursively gunzip until it can gunzip no more:\n          const unzipped = gUnzip(buffer)\n          const text = new TextDecoder('utf-8').decode(unzipped)\n          const json = JSON.parse(text)\n          trips = json.trips\n          drtRequests = json.drtRequests\n        }\n      } catch (e) {\n        console.error(e)\n        this.$emit('error', 'Error loading: ' + filename)\n        this.myState.statusMessage = '' + e\n      }\n      return { trips, drtRequests }\n    },\n\n    toggleLoaded(loaded: boolean) {\n      this.isLoaded = loaded\n    },\n\n    rotateColors() {\n      this.myState.colorScheme =\n        this.myState.colorScheme === ColorScheme.DarkMode\n          ? ColorScheme.LightMode\n          : ColorScheme.DarkMode\n      localStorage.setItem('plugin/agent-animation/colorscheme', this.myState.colorScheme)\n    },\n  },\n\n  async mounted() {\n    globalStore.commit('setFullScreen', !this.thumbnail)\n\n    this.myState.thumbnail = this.thumbnail\n    this.myState.yamlConfig = this.yamlConfig ?? ''\n    this.myState.subfolder = this.subfolder\n\n    // EMBED MODE?\n    this.setEmbeddedMode()\n\n    await this.getVizDetails()\n\n    if (this.thumbnail) return\n\n    this.showHelp = false\n    this.updateLegendColors()\n\n    this.setWallClock()\n\n    this.myState.statusMessage = '/ Dateien laden...'\n    console.log('loading files')\n    const { trips, drtRequests } = await this.loadFiles()\n\n    console.log('parsing vehicle motion')\n    this.myState.statusMessage = `${this.$t('vehicles')}...`\n    this.paths = await this.parseVehicles(trips)\n    this.pathStart = this.paths.dimension(d => d.t0)\n    this.pathEnd = this.paths.dimension(d => d.t1)\n    this.pathVehicle = this.paths.dimension(d => d.v)\n\n    console.log('Routes...')\n    this.myState.statusMessage = `${this.$t('routes')}...`\n    this.traces = await this.parseRouteTraces(trips)\n    this.traceStart = this.traces.dimension(d => d.t0)\n    this.traceEnd = this.traces.dimension(d => d.t1)\n    this.traceVehicle = this.traces.dimension(d => d.v)\n\n    console.log('Requests...')\n    this.myState.statusMessage = `${this.$t('requests')}...`\n    this.requests = await this.parseDrtRequests(drtRequests)\n    this.requestStart = this.requests.dimension(d => d[0]) // time0\n    this.requestEnd = this.requests.dimension(d => d[6]) // arrival\n    this.requestVehicle = this.requests.dimension(d => d[5])\n\n    console.log('GO!')\n    this.myState.statusMessage = ''\n\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false)\n\n    this.myState.isRunning = true\n    this.timeElapsedSinceLastFrame = Date.now()\n    this.animate()\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('visibilityChange', this.handleVisibilityChange)\n    globalStore.commit('setFullScreen', false)\n    this.$store.commit('setFullScreen', false)\n    this.myState.isRunning = false\n  },\n})\n\nexport default MyComponent\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.gl-app {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: grid;\n  pointer-events: none;\n  min-height: $thumbnailHeight;\n  background: url('assets/thumbnail.jpg') no-repeat;\n  background-size: cover;\n  grid-template-columns: 1fr min-content;\n  grid-template-rows: auto auto 1fr auto;\n  grid-template-areas:\n    'title         clock'\n    '.           rightside'\n    'playback    rightside';\n}\n\n.gl-app.hide-thumbnail {\n  background: none;\n}\n\n.nav {\n  z-index: 5;\n  grid-column: 1 / 4;\n  grid-row: 1 / 4;\n  box-shadow: 0px 2px 10px #22222266;\n  display: flex;\n  flex-direction: row;\n  margin: auto auto 0 0;\n  background-color: var(--bgPanel);\n  padding: 0rem 3rem;\n\n  a {\n    color: white;\n    text-decoration: none;\n\n    &.router-link-exact-active {\n      color: white;\n    }\n  }\n\n  p {\n    margin: auto 0.5rem auto 0;\n    font-weight: normal;\n    padding: 0 0;\n    color: var(--textFancy);\n  }\n}\n\n.speed-block {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.legend-block {\n  margin-top: 1rem;\n}\n\n.speed-slider {\n  flex: 1;\n  width: 100%;\n  margin: 0.5rem 0.25rem 0.25rem 0rem;\n  padding: 0 0.5rem;\n  font-weight: bold;\n}\n\n.big {\n  padding: 0rem 0;\n  font-size: 2.5rem;\n  line-height: 3.75rem;\n  font-weight: bold;\n}\n\n.right-side {\n  width: 11rem;\n  grid-area: rightside;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  pointer-events: auto;\n  margin-top: auto;\n  margin-bottom: 0;\n  margin-left: auto;\n  z-index: 5;\n}\n\n.bottom-area {\n  grid-area: playback;\n  display: flex;\n  flex-direction: row;\n  margin-top: auto;\n  margin-bottom: 35px;\n  padding: 0.5rem 1rem;\n  pointer-events: auto;\n  width: 100%;\n}\n\n.settings-area {\n  z-index: 20;\n  pointer-events: auto;\n  font-size: 0.8rem;\n  padding: 0.25rem 0;\n  margin: 1.5rem 0rem 0 0;\n}\n\n.anim {\n  grid-column: 1 / 3;\n  grid-row: 1 / 7;\n  pointer-events: auto;\n}\n\n.speed-label {\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.clock {\n  color: white;\n  width: 100%;\n  background-color: #000000cc;\n  border: 3px solid white;\n  color: white;\n}\n\n.clock p {\n  text-align: center;\n  padding: 5px 1.5rem;\n}\n\n.tooltip {\n  padding: 5rem 5rem;\n  background-color: #ccc;\n}\n\n.panel-items {\n  margin: 0.5rem 0.5rem;\n  margin-bottom: 1rem;\n}\n\ninput {\n  border: none;\n  background-color: var(--bgCream);\n  color: #ccc;\n}\n\n.left-side {\n  grid-column: 1/4;\n  grid-row: 1/4;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  pointer-events: auto;\n  margin: 0 auto 0 0;\n  z-index: 1;\n}\n\n@media only screen and (max-width: 640px) {\n  .nav {\n    padding: 0.5rem 0.5rem;\n  }\n\n  .clock {\n    text-align: center;\n  }\n\n  .right-side {\n    font-size: 0.7rem;\n    margin-right: 0.25rem;\n  }\n\n  .big {\n    padding: 0 0rem;\n    margin-top: 0.5rem;\n    font-size: 1.3rem;\n    line-height: 2rem;\n  }\n\n  .side-section {\n    margin-left: 0;\n  }\n\n  .extra-buttons {\n    margin-right: 1rem;\n  }\n  .playback-stuff {\n    padding-right: 1rem;\n  }\n}\n</style>\n"],"names":["Component","props","listItems","item","React","i18n","_sfc_main","defineComponent","ToggleButton","defaultProps","DrtRequestArcLayer","ArcLayer","shaders","params","currentTime","BASE_URL","ICON_MAPPING","ambientLight","AmbientLight","pointLight","PointLight","lightingEffect","LightingEffect","DEFAULT_THEME","DRT_REQUEST","simulationTime","paths","traces","drtRequests","settingsShowLayers","center","dark","vehicleLookup","searchEnabled","onClick","viewId","theme","viewState","setViewState","useState","globalStore","REACT_VIEW_HANDLES","arcWidth","hoverInfo","setHoverInfo","layers","handleClick","renderTooltip","object","x","y","vehicleId","PathTraceLayer","d","MovingIconsLayer","DrtRequestLayer","DeckGL","e","StaticMap","MAPBOX_TOKEN","MyComponent","CollapsiblePanel","SettingsPanel","LegendColors","TripViz","PlaybackControls","ZoomButtons","COLOR_OCCUPANCY","SETTINGS","LegendItemType","ColorScheme","crossfilter","HTTPFileSystem","svnProject","a","lightmode","darkmode","vehicleNumber","_a","_b","_c","_d","_e","_f","label","sep","subfolder","config","filename","text","YAML","err","t","blob","buffer","readBlob","base64","arrayBufferToBase64","vehId","hour","minute","seconds","requests","request","trips","allTrips","vehNumber","trip","path","timestamps","passengers","i","elapsed","vehicle","time","nextTime","segments","segment","json","unzipped","gUnzip","loaded"],"mappings":"m1BAGA,SAAwBA,GAAUC,EAK/B,CACD,MAAMC,EAAYD,EAAM,MAAM,IAAI,CAACE,EAAM,IACvCC,EAAA,cAAC,KAAG,CAAA,IAAK,EAAG,MAAO,CAAE,QAAS,MAAO,CAAA,EAClCD,EAAK,OACJC,EAAA,cAAC,MAAA,CACC,MAAO,CACL,OAAQ,oBACR,WAAY,MACd,CAAA,EAECD,EAAK,KAGV,EAAAC,EAAA,cAAC,MAAA,CACC,MAAO,CACL,MAAO,OACP,OAAQ,MACR,UAAW,SACX,gBAAiB,OAAOD,EAAK,KAAK,GACpC,CAAA,CAEJ,CAAA,CACD,EAED,uBACG,MACC,KAAAC,EAAA,cAAC,KAAA,CACC,MAAO,CACL,UAAW,OACX,WAAY,OACZ,OAAQ,mBACR,SAAU,QACZ,CAAA,EAECH,EAAM,KAAA,EAERG,EAAA,cAAA,IAAA,KAAGH,EAAM,WAAY,kBACrB,KAAG,CAAA,MAAO,CAAE,UAAW,OAAQ,QAAS,EAAG,OAAQ,CAAE,CAAA,EAAIC,CAAU,CACtE,CAEJ,CChCA,MAAAG,GAAA,CACA,SAAA,CACA,GAAA,CACA,SAAA,oBACA,WAAA,aACA,OAAA,SACA,SAAA,YACA,SAAA,WACA,OAAA,SACA,MAAA,QACA,kBAAA,aACA,EACA,GAAA,CACA,SAAA,oBACA,WAAA,aACA,OAAA,QACA,SAAA,kBACA,SAAA,gBACA,OAAA,SACA,MAAA,kBACA,kBAAA,gBACA,CACA,CACA,EAKAC,GAAAC,EAAA,CACA,KAAA,iBAAA,KACAF,GACA,WAAA,CAAAG,aAAAA,EAAAA,YAAA,EACA,MAAA,CACA,MAAA,CAAA,KAAA,OAAA,SAAA,EAAA,CACA,CACA,CAAA,uiBCjDMC,GAAe,CACnB,YAAa,CAAE,KAAM,SAAU,MAAO,EAAG,IAAK,CAAE,EAChD,aAAc,CAAE,KAAM,WAAY,MAAO,IAAK,EAC9C,WAAY,CAAE,KAAM,WAAY,MAAO,IAAK,EAC5C,WAAY,CAAE,KAAM,SAAU,MAAO,CAAE,CACzC,EAEA,MAAqBC,UAA2BC,CAAS,CACvD,YAAa,CACL,MAAAC,EAAU,MAAM,aACtB,OAAAA,EAAQ,OAAS,CAEf,WAAY;AAAA;AAAA;AAAA;AAAA;AAAA,QAOZ,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYlB,WAAY;AAAA;AAAA;AAAA,QAKZ,iBAAkB;AAAA,QAIlB,yBAA0B;AAAA,OAAA,EAIrBA,CACT,CAEA,gBAAgBC,EAAa,CAC3B,MAAM,gBAAgBA,CAAM,EAEH,KAAK,sBACb,aAAa,CAC5B,UAAW,CAAE,KAAM,EAAG,SAAU,cAAe,EAC/C,QAAS,CAAE,KAAM,EAAG,SAAU,YAAa,CAAA,CAC5C,CACH,CAEA,KAAKA,EAAa,CACV,KAAA,CAAE,YAAAC,CAAY,EAAI,KAAK,MAE7BD,EAAO,SAAW,OAAO,OAAO,CAAC,EAAGA,EAAO,SAAU,CACnD,YAAAC,CAAA,CACD,EAED,MAAM,KAAKD,CAAM,CACnB,CACF,CAEAH,EAAmB,UAAY,qBAC/BA,EAAmB,aAAeD,GC3DlC,MAAMM,GAAW,IAEXC,GAAe,CACnB,OAAQ,CAAE,EAAG,EAAG,EAAG,EAAG,MAAO,IAAK,OAAQ,IAAK,KAAM,EAAK,EAC1D,KAAM,CAAE,EAAG,IAAK,EAAG,EAAG,MAAO,IAAK,OAAQ,IAAK,KAAM,EAAK,EAC1D,QAAS,CAAE,EAAG,IAAK,EAAG,IAAK,MAAO,IAAK,OAAQ,IAAK,KAAM,EAAK,EAC/D,QAAS,CAAE,EAAG,EAAG,EAAG,IAAK,MAAO,IAAK,OAAQ,IAAK,KAAM,EAAM,CAChE,EAEMC,GAAe,IAAIC,EAAa,CACpC,MAAO,CAAC,IAAK,IAAK,GAAG,EACrB,UAAW,CACb,CAAC,EAEKC,GAAa,IAAIC,EAAW,CAChC,MAAO,CAAC,IAAK,IAAK,GAAG,EACrB,UAAW,EACX,SAAU,CAAC,OAAQ,KAAM,GAAI,CAC/B,CAAC,EAEKC,GAAiB,IAAIC,EAAe,CAAE,aAAAL,GAAc,WAAAE,EAAY,CAAA,EAEhEI,GAAgB,CACpB,aAAc,CAAC,IAAK,IAAK,GAAG,EAC5B,YAAa,CAAC,IAAK,IAAK,EAAE,EAC1B,YAAa,CAAC,GAAI,IAAK,GAAG,EAC1B,QAAS,CAACF,EAAc,CAC1B,EAEMG,EAAc,CAClB,KAAM,EACN,MAAO,EACP,MAAO,EACP,IAAK,EACL,IAAK,EACL,IAAK,EACL,QAAS,CACX,EAEA,SAAwBxB,GAAUC,EAa/B,CACK,KAAA,CACJ,eAAAwB,EACA,MAAAC,EACA,OAAAC,EACA,YAAAC,EACA,mBAAAC,EACA,OAAAC,EACA,KAAAC,EACA,cAAAC,EACA,cAAAC,EACA,QAAAC,EACA,OAAAC,CACE,EAAAlC,EAEEmC,EAAQb,GAGR,CAACc,EAAWC,CAAY,EAAIC,EAAA,SAChCT,EACK,CACC,OAAQ,CAAC,GAAI,EAAE,EACf,UAAWA,EAAO,CAAC,EACnB,SAAUA,EAAO,CAAC,EAClB,MAAO,EACP,QAAS,EACT,KAAM,EAAA,EAER,OAAO,OAAO,CAAA,EAAIU,EAAY,MAAM,SAAS,CAAA,EAIhCC,EAAAN,CAAM,EAAI,IAAM,CACpBG,EAAAE,EAAY,MAAM,SAAS,CAAA,EAG1C,MAAME,EAAW,EACX,CAACC,EAAWC,CAAY,EAAIL,EAAA,SAAS,CAAS,CAAA,EAE9CM,EAAc,CAAA,EAEpB,SAASC,GAAc,CACrB,QAAQ,IAAIH,CAAS,EAEhBA,EAAU,OAGLT,EAAAS,EAAU,OAAO,CAAC,EAF1BT,EAAQ,IAAI,CAIhB,CAEA,SAASa,EAAc,CAAE,UAAAJ,GAAkB,CACzC,KAAM,CAAE,OAAAK,EAAQ,EAAAC,EAAG,EAAAC,CAAA,EAAMP,EAEzB,GAAI,CAACK,EACI,OAAA,KAGH,MAAAG,EAAYnB,EAAcgB,EAAO,CAAC,EAGtC,OAAA5C,EAAA,cAAC,MAAA,CACC,UAAU,UACV,MAAO,CACL,SAAU,SACV,gBAAiB,YACjB,WAAY,kBACZ,UAAW,iCACX,MAAO,OACP,QAAS,YACT,SAAU,WACV,KAAM6C,EAAI,GACV,IAAKC,EAAI,EACX,CAAA,EAEC9C,EAAA,cAAA,MAAA,KACEA,EAAA,cAAA,IAAA,KAAG+C,CAAU,CAChB,EACC/C,EAAA,cAAA,MAAA,KAAI,eAAa4C,EAAO,IAAI,GAAC,CAAA,CAGpC,CAEA,OAAInB,EAAmB,QACdgB,EAAA,KAEL,IAAIO,EAAe,CACjB,GAAI,SACJ,KAAMzB,EACN,YAAaF,EACb,kBAAoB4B,GAAWA,EAAE,GACjC,kBAAoBA,GAAWA,EAAE,GACjC,aAAeA,GAAWA,EAAE,GAC5B,WAAaA,GAAWA,EAAE,GAC1B,SAAWA,GAAWpD,EAAM,OAAOoD,EAAE,GAAG,EACxC,SAAU,EACV,QAAS,GACT,eAAgB,EAChB,QAAS,GACT,cAAe,GACf,WAAYpB,EAAgB,EAAM,EAClC,SAAU,GACV,cAAe,GACf,eAAgB,CAAC,IAAK,EAAG,GAAG,EAC5B,QAASW,CAAA,CACV,CAAA,EAGDf,EAAmB,UACdgB,EAAA,KAEL,IAAIS,EAAiB,CACnB,GAAI,WACJ,KAAM5B,EACN,aAAe2B,GAAWA,EAAE,GAC5B,WAAaA,GAAWA,EAAE,GAC1B,aAAeA,GAAWA,EAAE,GAC5B,WAAaA,GAAWA,EAAE,GAC1B,QAAUA,GAAW,UACrB,SAAWA,GAAWpD,EAAM,OAAOoD,EAAE,GAAG,EACxC,WAAY,UACZ,UAAW,UACX,QAASpB,EAAgB,GAAK,GAC9B,QAAS,EACT,YAAaR,EACb,cAAe,GACf,QAAS,GACT,UAAW,GAAGV,EAAQ,iBACtB,YAAaC,GACb,UAAW,GACX,UAAW,GACX,SAAU,GACV,UAAW,GACX,cAAe,GACf,eAAgB,CAAC,IAAK,EAAG,GAAG,EAC5B,QAAS4B,EACT,WAAY,CACV,UAAW,EACb,CAAA,CACD,CAAA,EAGDf,EAAmB,UACdgB,EAAA,KAEL,IAAIU,EAAgB,CAClB,GAAI,eACJ,KAAM3B,EACN,YAAaH,EACb,kBAAoB4B,GAAW,CAACA,EAAE7B,EAAY,KAAK,EAAG6B,EAAE7B,EAAY,KAAK,CAAC,EAC1E,kBAAoB6B,GAAW,CAACA,EAAE7B,EAAY,GAAG,EAAG6B,EAAE7B,EAAY,GAAG,CAAC,EACtE,aAAe6B,GAAWA,EAAE7B,EAAY,IAAI,EAC5C,WAAa6B,GAAWA,EAAE7B,EAAY,OAAO,EAC7C,eAAgB,CAAC,IAAK,EAAG,GAAG,EAC5B,eAAgB,CAAC,IAAK,IAAK,GAAG,EAC9B,SAAUkB,EACV,QAAS,GACT,WAAYT,EAAgB,EAAM,CAAA,CACnC,CAAA,EAIH7B,EAAA,cAACoD,EAAA,CACC,OAAAX,EACA,QAAST,EAAM,QACf,cAAe,EACf,UAAAC,EACA,WAAY,GACZ,UAAW,IAAM,UACjB,QAASS,EACT,kBAAoBW,GAAW,CACjBjB,EAAA,OAAO,eAAgBiB,EAAE,SAAS,CAChD,CAAA,kBAKGC,EAAU,CAAA,SAAUlB,EAAY,QAAQ,SAAU,qBAAsBmB,EAAc,EAExFZ,EAAc,CAAE,UAAAJ,EAAW,CAAA,CAGlC,CC/KA,MAAAtC,GAAA,CACA,SAAA,CACA,GAAA,CACA,SAAA,eACA,WAAA,aACA,OAAA,SACA,SAAA,YACA,SAAA,WACA,OAAA,SACA,MAAA,OACA,EACA,GAAA,CACA,SAAA,eACA,WAAA,aACA,OAAA,QACA,SAAA,kBACA,SAAA,gBACA,OAAA,aACA,MAAA,iBACA,CACA,CACA,EAkCAuD,GAAArD,EAAA,CACA,KAAA,yBACA,KAAAF,GACA,WAAA,CACA,iBAAAwD,EACA,cAAAC,GAAA,aACAC,GAAA,QACAC,GACA,iBAAAC,EAAA,aACAzD,EAAA,aACA,YAAA0D,CACA,EACA,MAAA,CACA,KAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,UAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,oBAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,WAAA,OACA,UAAA,OACA,EACA,KAAA,IAAA,CAKA,MAAAC,EAAA,CACA,EAAA,CAAA,IAAA,IAAA,GAAA,EACA,EAAA,CAAA,GAAA,IAAA,EAAA,EACA,EAAA,CAAA,IAAA,IAAA,EAAA,EACA,EAAA,CAAA,IAAA,IAAA,EAAA,EACA,EAAA,CAAA,IAAA,GAAA,EAAA,CAAA,EAGAC,EAAA,CACA,SAAA,GACA,OAAA,EAAA,EAIA,MAAA,CACA,OAAA,KAAA,MAAA,KAAA,KAAA,QAAA,EACA,gBAAAD,EACA,SAAAC,EACA,YAAA,CACA,CAAA,KAAAC,EAAA,KAAA,MAAAF,EAAA,CAAA,EAAA,MAAA,EAAA,MAAA,KAAA,EACA,CAAA,KAAAE,EAAA,KAAA,MAAAF,EAAA,CAAA,EAAA,MAAA,EAAA,MAAA,KAAA,CACA,EAUA,eAAA,CAAA,EAEA,WAAA,CACA,QAAA,GACA,SAAA,GACA,WAAA,GACA,MAAA,GACA,YAAA,GACA,UAAA,GACA,OAAA,CAAA,MAAA,IAAA,EACA,KAAA,GACA,iBAAA,GACA,MAAA,EACA,EAEA,QAAA,CACA,cAAA,GACA,MAAA,QACA,YAAAG,EAAA,SACA,UAAA,GACA,cAAA,GACA,UAAA,GACA,WAAA,GACA,UAAA,GACA,KAAA,CAAA,CACA,EAEA,UAAA,EACA,QAAA,MAEA,OAAAC,EAAA,EAAA,EACA,WAAA,CAAA,EACA,SAAA,CAAA,EACA,aAAA,CAAA,EAEA,MAAAA,EAAA,EAAA,EACA,UAAA,CAAA,EACA,QAAA,CAAA,EACA,YAAA,CAAA,EAEA,SAAAA,EAAA,EAAA,EACA,aAAA,CAAA,EACA,WAAA,CAAA,EACA,eAAA,CAAA,EAEA,eAAA,EAAA,KAEA,0BAAA,EAEA,WAAA,GACA,cAAA,GAEA,YAAA/B,EAAA,MACA,WAAAA,EAAA,MAAA,WACA,SAAA,GACA,SAAA,GAEA,WAAA,CAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,KAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,MAAA,EAEA,WAAA,CAAA,EACA,WAAA,GACA,aAAA,yCAEA,cAAA,CAAA,EACA,oBAAA,CAAA,EACA,oBAAA,EAAA,CAEA,EACA,SAAA,CACA,SAAA,CACA,OAAA,IAAAgC,GAAA,KAAA,WAAAhC,CAAA,CACA,EAEA,YAAA,CACA,MAAAiC,EAAA,KAAA,OAAA,MAAA,YAAA,OACAC,GAAAA,EAAA,OAAA,KAAA,IAAA,EAEA,GAAAD,EAAA,SAAA,EACA,cAAA,IAAA,iBAAA,EACA,MAEA,OAAAA,EAAA,CAAA,CACA,EAEA,cAAA,CACA,OAAA,KAAA,YACA,EACA,WAAA,CACA,MAAAE,EAAA,CACA,KAAA,UACA,GAAA,WAAA,EAGAC,EAAA,CACA,KAAA,QACA,GAAA,WAAA,EAGA,OAAA,KAAA,QAAA,cAAAN,EAAA,SAAAM,EAAAD,CACA,CACA,EACA,MAAA,CACA,0BAAA,CACA,KAAA,WAAA,kBAEAlC,EAAA,KAAA,MAAA,GACAA,EAAA,KAAA,MAAA,GACA,EAEA,KAAA,4BAAA,CACA,QAAA,IAAA,uBAAA,EACA,KAAA,YAAA,KAAA,kBAAA,EACA,MAAA,KAAA,eACA,EAEA,2BAAA,CACA,KAAA,WAAA,KAAA,YAAA,cAAA6B,EAAA,SACA,KAAA,mBAAA,CACA,EAEA,YAAA,iBACA,MAAAO,EAAA,KAAA,oBAAA,KAAA,UAAA,EACAA,EAAA,IACA,QAAA,IAAA,UAAAA,CAAA,GACAC,EAAA,KAAA,cAAA,MAAAA,EAAA,YAAAD,IACAE,EAAA,KAAA,eAAA,MAAAA,EAAA,YAAAF,IACAG,EAAA,KAAA,iBAAA,MAAAA,EAAA,YAAAH,GACA,KAAA,aAAA,YACA,KAAA,WAAA,YACA,KAAA,cAAA,KAEA,QAAA,IAAA,MAAA,GACAI,EAAA,KAAA,cAAA,MAAAA,EAAA,aACAC,EAAA,KAAA,eAAA,MAAAA,EAAA,aACAC,EAAA,KAAA,iBAAA,MAAAA,EAAA,YACA,KAAA,cAAA,IAEA,KAAA,qBAAA,CACA,CACA,EACA,QAAA,CACA,MAAA,oBAAAC,EAAA,CACA,QAAA,IAAAA,CAAA,EACA,KAAA,SAAAA,CAAA,EAAA,CAAA,KAAA,SAAAA,CAAA,EACA,KAAA,qBAAA,EACA,KAAA,gBAAA,CACA,EAGA,mBAAA,CACA,MAAAvE,EAAA,KAAA,OAAA,OACA,GAAA,CAAAA,EAAA,SAAA,CAAAA,EAAA,UAAA,CACA,QAAA,IAAA,mCAAA,EACA,MACA,CAGA,MAAAwE,EAAA,EAAAxE,EAAA,UAAA,YAAA,GAAA,EACAyE,EAAAzE,EAAA,UAAA,UAAA,EAAAwE,CAAA,EACAE,EAAA1E,EAAA,UAAA,UAAAwE,CAAA,EAEA,KAAA,QAAA,UAAAC,EACA,KAAA,QAAA,WAAAC,CACA,EAEA,MAAA,eAAA,CAGA,GAAA,KAAA,oBACA,KAAA,WAAA,KAAA,MAAA,KAAA,UAAA,KAAA,mBAAA,CAAA,MAEA,IAAA,CAEA,MAAAC,EACA,KAAA,QAAA,WAAA,QAAA,GAAA,EAAA,GACA,KAAA,QAAA,WACA,KAAA,QAAA,UAAA,IAAA,KAAA,QAAA,WAEAC,EAAA,MAAA,KAAA,QAAA,YAAAD,CAAA,EACA,KAAA,WAAAE,EAAA,MAAAD,CAAA,QACAE,EAAA,CACA,QAAA,IAAA,QAAA,EACA,MAAAlC,EAAAkC,EAEA,KAAA,WAAA,cAAAlC,EAAA,SAAA,KACAjB,EAAA,OAAA,eAAA,KAAA,WAAA,IAAA,CAEA,CAIA,KAAA,WAAA,OAAA,KAAA,OAAA,OAAA,WAAA,KAAA,WAAA,KAAA,EAEA,KAAA,WAAA,QACA,KAAA,OAAA,OAAA,eAAA,CACA,UAAA,KAAA,WAAA,OAAA,CAAA,EACA,SAAA,KAAA,WAAA,OAAA,CAAA,EACA,KAAA,KAAA,WAAA,MAAA,GACA,MAAA,GACA,QAAA,CAAA,CACA,EAIA,MAAAoD,EAAA,KAAA,WAAA,MAAA,KAAA,WAAA,MAAA,kBACA,KAAA,MAAA,QAAAA,CAAA,EAEA,KAAA,eAAA,CACA,EAEA,MAAA,gBAAA,CACA,GAAA,KAAA,WAAA,KAAA,WAAA,UACA,GAAA,CACA,MAAAC,EAAA,MAAA,KAAA,QAAA,YACA,KAAA,QAAA,UAAA,IAAA,KAAA,WAAA,SAAA,EAEAC,EAAA,MAAAC,EAAA,YAAAF,CAAA,EACAG,EAAAC,EAAAH,CAAA,EACAE,IACA,KAAA,aAAA,sDAAAA,CAAA,WACAvC,EAAA,CACA,QAAA,MAAAA,CAAA,CACA,CAEA,EAEA,YAAAoB,EAAA,CAEA,GAAAA,IAAA,KAAA,CACA,KAAA,WAAA,GACA,MACA,CAEA,MAAAqB,EAAA,KAAA,cAAArB,CAAA,EACA,QAAA,IAAAqB,CAAA,EAGA,KAAA,aAAAA,EAAA,KAAA,WAAA,GACA,KAAA,WAAAA,CACA,EAEA,oBAAA,CAWA,EAEA,cAAA,CACA,MAAAC,EAAA,KAAA,MAAA,KAAA,eAAA,IAAA,EACAC,EAAA,KAAA,MAAA,KAAA,eAAA,EAAA,EAAA,GACA,KAAA,QAAA,MAAA,GAAAD,EAAA,GAAA,IAAA,EAAA,GAAAA,CAAA,GAAAC,EAAA,GAAA,KAAA,GAAA,GAAAA,CAAA,EACA,EAEA,QAAAC,EAAA,CACA,KAAA,eAAAA,EACA,KAAA,aAAA,EAGA,KAAA,YAAA,KAAA,WAAA,KAAA,eACA,KAAA,UAAA,OAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EACA,KAAA,QAAA,OAAA,CAAA,KAAA,eAAA,GAAA,CAAA,EAGA,KAAA,gBACA,KAAA,WAAA,OAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EACA,KAAA,SAAA,OAAA,CAAA,KAAA,eAAA,GAAA,CAAA,EACA,KAAA,aAAA,OAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EACA,KAAA,WAAA,OAAA,CAAA,KAAA,eAAA,GAAA,CAAA,IAKA,KAAA,SAAA,MAAA,KAAA,MAAA,YAAA,EAEA,KAAA,SAAA,OAAA,KAAA,OAAA,YAAA,EAEA,KAAA,SAAA,YAAA,KAAA,SAAA,YAAA,CACA,EAEA,kBAAA,CACA,KAAA,QAAA,UAAA,CAAA,KAAA,QAAA,UACA,KAAA,0BAAA,KAAA,MAKA,KAAA,QAAA,WAAA,KAAA,QAAA,IAAA,KAAA,MAAA,GAGA,KAAA,QAAA,WAAA,KAAA,QAAA,CACA,EAEA,MAAA,iBAAAC,EAAA,CACA,GAAA,KAAA,cAAA,OACA,UAAAC,KAAAD,EACA,GAAA,CACAC,EAAA,CAAA,EAAA,KAAA,oBAAAA,EAAA,CAAA,CAAA,OACA,CAAA,CAIA,OAAAhC,EAAA+B,CAAA,CACA,EAEA,MAAA,cAAAE,EAAA,CACA,MAAAC,EAAA,CAAA,EACA,IAAAC,EAAA,GAEA,UAAAC,KAAAH,EAAA,CACA,MAAAI,EAAAD,EAAA,KACAE,EAAAF,EAAA,WACAG,EAAAH,EAAA,WAGAD,IACA,KAAA,cAAAA,CAAA,EAAAC,EAAA,GACA,KAAA,oBAAAA,EAAA,EAAA,EAAAD,EAEA,QAAAK,EAAA,EAAAA,EAAAJ,EAAA,KAAA,OAAA,EAAAI,IAAA,CACA,MAAAJ,EAAA,CACA,GAAAE,EAAAE,CAAA,EACA,GAAAF,EAAAE,EAAA,CAAA,EACA,GAAAH,EAAAG,CAAA,EACA,GAAAH,EAAAG,EAAA,CAAA,EACA,EAAAL,EACA,IAAAI,EAAAC,CAAA,CAAA,EAGAJ,EAAA,GAAA,CAAA,GAAAA,EAAA,GAAA,CAAA,GAAAA,EAAA,GAAA,CAAA,GAAAA,EAAA,GAAA,CAAA,IAAAA,EAAA,IAAA,GAEAF,EAAA,KAAAE,CAAA,CACA,CACA,CACA,OAAApC,EAAAkC,CAAA,CACA,EAEA,iBAAA,CACA,UAAA,KAAA,OAAA,QACA,QAAA,IAAA,eAAA,EACA,KAAA,WAAA,GACA,KAAA,OAAA,OAAA,iBAAA,EAAA,EACA,KAAA,OAAA,OAAA,eAAA,EAAA,EAEA,EAEA,sBAAA,CAEA,CAAA,KAAA,YAAA,CAAA,KAAA,WAAA,CAAA,KAAA,eAGA,KAAA,SAAA,SACA,KAAA,eACA,KAAA,WAAA,YACA,KAAA,SAAA,cAEA,KAAA,WAAA,OAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EACA,KAAA,SAAA,OAAA,CAAA,KAAA,eAAA,GAAA,CAAA,GAGA,KAAA,SAAA,OAAA,KAAA,OAAA,YAAA,GAGA,KAAA,SAAA,WACA,KAAA,UAAA,OAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EACA,KAAA,QAAA,OAAA,CAAA,KAAA,eAAA,GAAA,CAAA,EAEA,KAAA,SAAA,MAAA,KAAA,MAAA,YAAA,GAGA,KAAA,SAAA,WACA,KAAA,eACA,KAAA,aAAA,YACA,KAAA,WAAA,cAEA,KAAA,aAAA,OAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EACA,KAAA,WAAA,OAAA,CAAA,KAAA,eAAA,GAAA,CAAA,GAGA,KAAA,SAAA,YAAA,KAAA,SAAA,YAAA,GAEA,EAEA,SAAA,CACA,GAAA,KAAA,QAAA,UAAA,CACA,MAAAO,EAAA,KAAA,IAAA,EAAA,KAAA,0BACA,KAAA,2BAAAA,EACA,KAAA,gBAAAA,EAAA,KAAA,MAAA,IAEA,KAAA,qBAAA,EACA,KAAA,aAAA,EACA,OAAA,sBAAA,KAAA,OAAA,CACA,CACA,EAEA,wBAAA,CACA,KAAA,qBAAA,CAAA,SAAA,QACA,QAAA,IAAA,WAAA,EACA,KAAA,oBAAA,GACA,KAAA,iBAAA,GACA,KAAA,QAAA,WAAA,SAAA,SACA,QAAA,IAAA,SAAA,EACA,KAAA,oBAAA,GACA,KAAA,iBAAA,EAEA,EAGA,MAAA,iBAAAR,EAAA,CAEA,IAAAE,EAAA,GAEA,MAAA/E,EAAA,CAAA,EAEA,UAAAsF,KAAAT,EAAA,CACAE,IAEA,IAAAQ,EAAAD,EAAA,WAAA,CAAA,EACAE,EAAAF,EAAA,WAAA,CAAA,EAEAG,EAAA,CAAA,EAEA,QAAAL,EAAA,EAAAA,EAAAE,EAAA,KAAA,OAAAF,IACAI,EAAAF,EAAA,WAAAF,CAAA,EAIAE,EAAA,KAAAF,CAAA,EAAA,CAAA,IAAAE,EAAA,KAAAF,EAAA,CAAA,EAAA,CAAA,GACAE,EAAA,KAAAF,CAAA,EAAA,CAAA,IAAAE,EAAA,KAAAF,EAAA,CAAA,EAAA,CAAA,GAEAK,EAAA,QAAAC,GAAA,CACAA,EAAA,GAAAJ,EAAA,WAAAF,EAAA,CAAA,CAAA,CACA,EAEApF,EAAA,KAAA,GAAAyF,CAAA,EAEAA,EAAA,CAAA,EACAF,EAAAC,GAEAC,EAAA,KAAA,CACA,GAAAF,EACA,GAAAD,EAAA,KAAAF,EAAA,CAAA,EACA,GAAAE,EAAA,KAAAF,CAAA,EACA,EAAAL,EACA,IAAAO,EAAA,WAAAF,EAAA,CAAA,CAAA,CACA,EAKAK,EAAA,QAAAC,GAAA,CACAA,EAAA,GAAAF,CAAA,CACA,EACAxF,EAAA,KAAA,GAAAyF,CAAA,CACA,CAEA,OAAA7C,EAAA5C,CAAA,CACA,EAEA,MAAA,WAAA,CACA,IAAA6E,EAAA,CAAA,EACA5E,EAAA,CAAA,EAEA,MAAA4D,EAAA,KAAA,QAAA,UAAA,IAAA,KAAA,WAAA,SACA,GAAA,CACA,GAAA,KAAA,WAAA,SAAA,SAAA,MAAA,EAAA,CACA,MAAA8B,EAAA,MAAA,KAAA,QAAA,YAAA9B,CAAA,EACAgB,EAAAc,EAAA,MACA1F,EAAA0F,EAAA,WAAA,SACA,KAAA,WAAA,SAAA,SAAA,IAAA,EAAA,CAEA,MAAAxB,EAAA,MADA,MAAA,KAAA,QAAA,YAAAN,CAAA,GACA,cAEA+B,EAAAC,EAAA1B,CAAA,EACAL,EAAA,IAAA,YAAA,OAAA,EAAA,OAAA8B,CAAA,EACAD,EAAA,KAAA,MAAA7B,CAAA,EACAe,EAAAc,EAAA,MACA1F,EAAA0F,EAAA,WACA,QACA7D,EAAA,CACA,QAAA,MAAAA,CAAA,EACA,KAAA,MAAA,QAAA,kBAAA+B,CAAA,EACA,KAAA,QAAA,cAAA,GAAA/B,CACA,CACA,MAAA,CAAA,MAAA+C,EAAA,YAAA5E,EACA,EAEA,aAAA6F,EAAA,CACA,KAAA,SAAAA,CACA,EAEA,cAAA,CACA,KAAA,QAAA,YACA,KAAA,QAAA,cAAAnD,EAAA,SACAA,EAAA,UACAA,EAAA,SACA,aAAA,QAAA,qCAAA,KAAA,QAAA,WAAA,CACA,CACA,EAEA,MAAA,SAAA,CAYA,GAXA9B,EAAA,OAAA,gBAAA,CAAA,KAAA,SAAA,EAEA,KAAA,QAAA,UAAA,KAAA,UACA,KAAA,QAAA,WAAA,KAAA,YAAA,GACA,KAAA,QAAA,UAAA,KAAA,UAGA,KAAA,gBAAA,EAEA,MAAA,KAAA,gBAEA,KAAA,UAAA,OAEA,KAAA,SAAA,GACA,KAAA,mBAAA,EAEA,KAAA,aAAA,EAEA,KAAA,QAAA,cAAA,qBACA,QAAA,IAAA,eAAA,EACA,KAAA,CAAA,MAAAgE,EAAA,YAAA5E,CAAA,EAAA,MAAA,KAAA,UAAA,EAEA,QAAA,IAAA,wBAAA,EACA,KAAA,QAAA,cAAA,GAAA,KAAA,GAAA,UAAA,CAAA,MACA,KAAA,MAAA,MAAA,KAAA,cAAA4E,CAAA,EACA,KAAA,UAAA,KAAA,MAAA,UAAAnD,GAAAA,EAAA,EAAA,EACA,KAAA,QAAA,KAAA,MAAA,UAAAA,GAAAA,EAAA,EAAA,EACA,KAAA,YAAA,KAAA,MAAA,UAAAA,GAAAA,EAAA,CAAA,EAEA,QAAA,IAAA,WAAA,EACA,KAAA,QAAA,cAAA,GAAA,KAAA,GAAA,QAAA,CAAA,MACA,KAAA,OAAA,MAAA,KAAA,iBAAAmD,CAAA,EACA,KAAA,WAAA,KAAA,OAAA,UAAAnD,GAAAA,EAAA,EAAA,EACA,KAAA,SAAA,KAAA,OAAA,UAAAA,GAAAA,EAAA,EAAA,EACA,KAAA,aAAA,KAAA,OAAA,UAAAA,GAAAA,EAAA,CAAA,EAEA,QAAA,IAAA,aAAA,EACA,KAAA,QAAA,cAAA,GAAA,KAAA,GAAA,UAAA,CAAA,MACA,KAAA,SAAA,MAAA,KAAA,iBAAAzB,CAAA,EACA,KAAA,aAAA,KAAA,SAAA,UAAAyB,GAAAA,EAAA,CAAA,CAAA,EACA,KAAA,WAAA,KAAA,SAAA,UAAAA,GAAAA,EAAA,CAAA,CAAA,EACA,KAAA,eAAA,KAAA,SAAA,UAAAA,GAAAA,EAAA,CAAA,CAAA,EAEA,QAAA,IAAA,KAAA,EACA,KAAA,QAAA,cAAA,GAEA,SAAA,iBAAA,mBAAA,KAAA,uBAAA,EAAA,EAEA,KAAA,QAAA,UAAA,GACA,KAAA,0BAAA,KAAA,MACA,KAAA,QAAA,CACA,EAEA,eAAA,CACA,SAAA,oBAAA,mBAAA,KAAA,sBAAA,EACAb,EAAA,OAAA,gBAAA,EAAA,EACA,KAAA,OAAA,OAAA,gBAAA,EAAA,EACA,KAAA,QAAA,UAAA,EACA,CACA,CAAA"}