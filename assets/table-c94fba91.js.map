{"version":3,"file":"table-c94fba91.js","sources":["../../src/dash-panels/table.vue"],"sourcesContent":["<template lang=\"pug\">\nvue-good-table.plugin-panel(\n      :class=\"[globalState.isDarkMode ? 'darktable' : 'lighttable', hideHeader ? 'hide-header' : '', this.config.style == 'topsheet' ? 'topsheet-style' : '']\"\n      :columns=\"columns\"\n      :rows=\"rows\"\n      :fixed-header=\"true\"\n      :pagination-options=\"paginationOptions\"\n      styleClass=\"vgt-table striped bordered condensed\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\nimport 'vue-good-table/src/styles/style.scss'\nimport { VueGoodTable } from 'vue-good-table'\n\nimport globalStore from '@/store'\nimport { FileSystemConfig, Status } from '@/Globals'\nimport DashboardDataManager, { FilterDefinition } from '@/js/DashboardDataManager'\n\nexport default defineComponent({\n  name: 'TablePanel',\n  components: { VueGoodTable },\n  props: {\n    fileSystemConfig: { type: Object as PropType<FileSystemConfig>, required: true },\n    subfolder: { type: String, required: true },\n    files: { type: Array, required: true },\n    config: { type: Object as any, required: true },\n    cardTitle: { type: String, required: true },\n    cardId: String,\n    datamanager: { type: Object as PropType<DashboardDataManager>, required: true },\n  },\n  data: () => {\n    return {\n      globalState: globalStore.state,\n      // dataSet is either x,y or allRows[]\n      dataSet: {} as { x?: any[]; y?: any[]; allRows?: any },\n      id: ('line-' + Math.floor(1e12 * Math.random())) as any,\n      YAMLrequirementsLine: { dataset: '' },\n      YAMLdeprecations: [],\n      columns: [] as any[],\n      rows: [] as any[],\n      paginationOptions: {\n        enabled: true,\n        perPageDropdown: [] as any[],\n        dropdownAllowAll: false,\n        perPage: 5,\n      },\n      dataColumnNames: ['date'],\n      percentColumnNames: ['percent'],\n      hideHeader: undefined as any,\n      isFullsize: false,\n    }\n  },\n  async mounted() {\n    this.dataSet = await this.loadData()\n    this.prepareData()\n\n    this.$emit('isLoaded')\n  },\n\n  beforeDestroy() {\n    this.datamanager?.removeFilterListener(this.config, this.handleFilterChanged)\n  },\n\n  methods: {\n    handleFilterChanged() {\n      if (!this.datamanager) return\n\n      const { filteredRows } = this.datamanager.getFilteredDataset(this.config) as any\n\n      if (!filteredRows || !filteredRows.length) {\n        this.dataSet = { allRows: {} }\n      } else {\n        const allRows = {} as any\n\n        const keys = Object.keys(filteredRows[0])\n        keys.forEach(key => (allRows[key] = { name: key, values: [] as any }))\n\n        filteredRows.forEach((row: any) => {\n          keys.forEach(key => allRows[key].values.push(row[key]))\n        })\n        this.dataSet = { allRows }\n      }\n    },\n\n    async loadData() {\n      if (!this.files.length) return {}\n\n      try {\n        //this.validateYAML()\n        let dataset = await this.datamanager.getDataset(this.config, { highPrecision: true })\n\n        // no filter? we are done\n        if (!this.config.filters) return dataset\n\n        // filter data before returning:\n        this.datamanager.addFilterListener(this.config, this.handleFilterChanged)\n\n        for (const [column, value] of Object.entries(this.config.filters)) {\n          const filter: FilterDefinition = {\n            dataset: this.config.dataset,\n            column: column,\n            value: value,\n            range: Array.isArray(value),\n          }\n          this.datamanager.setFilter(filter)\n        }\n        // empty for now; filtered data will come back later via handleFilterChanged async.\n        return { allRows: {} }\n      } catch (e) {\n        console.error('' + e)\n      }\n      return { allRows: {} }\n    },\n\n    validateYAML() {\n      for (const key in this.YAMLrequirementsLine) {\n        if (key in this.config === false) {\n          this.$emit('error', {\n            type: Status.ERROR,\n            msg: `tablev2: missing required key: ${key}`,\n            desc: JSON.stringify(this.config),\n          })\n        }\n      }\n\n      for (const deprecated of this.YAMLdeprecations) {\n        if (this.config[deprecated]) {\n          this.$emit('error', {\n            type: Status.WARNING,\n            msg: `tablev2: deprecated field: ${deprecated}`,\n            desc: JSON.stringify(this.config),\n          })\n        }\n      }\n    },\n\n    onlyNumbers(array: any[]) {\n      return array.every(element => {\n        return typeof element === 'number' || element == null\n      })\n    },\n\n    onlyDates(array: any[]) {\n      return array.every(element => {\n        return element.length == 10 && element.split('-').length == 3\n      })\n    },\n\n    columnFilterFn(data: any, filterString: string) {\n      return data.toString().includes(filterString.toString())\n    },\n\n    prepareData() {\n      let numberOfValues = 0\n      let data: any\n      let numberColumns = [] as any[]\n      let dateColumns = [] as any[]\n\n      this.columns = []\n      this.rows = []\n\n      // if (this.config.style == 'topsheet' && this.hideHeader == undefined) {\n      //   this.hideHeader = true\n      // }\n\n      // Create columns array for the header\n      Object.entries(this.dataSet.allRows).forEach(([key, value]) => {\n        // this issue tells us that fields with a dot in them require special handling\n        // https://github.com/xaksis/vue-good-table/issues/593\n        // field now either the key (string) or a function which returns row[key]\n        let field: any = key\n        if (field.indexOf('.') > -1) {\n          field = (rowObject: any) => {\n            return rowObject[key]\n          }\n        }\n\n        this.columns.push({\n          label: key.charAt(0).toUpperCase() + key.slice(1),\n          field,\n          hidden: false,\n          filterOptions: {\n            enabled: true,\n            filterFn: this.columnFilterFn,\n          },\n        })\n        data = value\n        numberOfValues = data.values.length\n      })\n\n      // Add empty object for each row\n      for (let i = 0; i < numberOfValues; i++) {\n        this.rows.push({})\n      }\n\n      // Add the data to the row-array and check if all values of a column are numbers or dates\n      Object.entries(this.dataSet.allRows).forEach(([key, value]) => {\n        data = value\n        if (this.onlyNumbers(data.values)) numberColumns.push(key)\n        else if (this.onlyDates(data.values)) dateColumns.push(key)\n        numberOfValues = data.values.length\n        for (let i = 0; i < numberOfValues; i++) {\n          this.rows[i][key] = data.values[i]\n        }\n      })\n\n      // Set the format for the columns. Number, date or percentage (default: text)\n      Object.values(this.columns).forEach(value => {\n        if (numberColumns.includes(value.field))\n          Object.assign(value, { type: 'number', tdClass: 'vgt-right-align-text-for-numbers' })\n        if (dateColumns.includes(value.field) || this.dataColumnNames.includes(value.field)) {\n          Object.assign(value, { type: 'date' })\n          Object.assign(value, { dateInputFormat: 'yyyy-MM-dd' })\n          Object.assign(value, { dateOutputFormat: 'yyyy-MM-dd' })\n        }\n        if (this.percentColumnNames.includes(value.field))\n          Object.assign(value, { type: 'percentage' })\n      })\n\n      // Enable or disable filter options for the rows (YAML option: enableFilter: false/true)\n      // The default is false\n      for (let i = 0; i < this.columns.length; i++) {\n        if (this.config.enableFilter) {\n          this.columns[i].filterOptions.enabled = true\n          this.columns[i].filterOptions.filterFn = this.columnFilterFn\n        } else {\n          this.columns[i].filterOptions.enabled = false\n        }\n      }\n\n      // Show/hide option\n      if (Object.keys(this.config).includes('show') && Object.keys(this.config).includes('hide')) {\n        for (let i = 0; i < this.columns.length; i++) {\n          if (!this.config.show.includes(this.columns[i].field)) {\n            this.columns[i].hidden = true\n          }\n        }\n      } else if (Object.keys(this.config).includes('show')) {\n        for (let i = 0; i < this.columns.length; i++) {\n          if (!this.config.show.includes(this.columns[i].field)) {\n            this.columns[i].hidden = true\n          }\n        }\n      } else if (Object.keys(this.config).includes('hide')) {\n        for (let i = 0; i < this.columns.length; i++) {\n          if (this.config.hide.includes(this.columns[i].field)) {\n            this.columns[i].hidden = true\n          }\n        }\n      }\n\n      // Change Pagination Options Dropdown\n      if (numberOfValues < 5) {\n        this.paginationOptions.perPage = numberOfValues\n        this.paginationOptions = {\n          ...this.paginationOptions,\n          perPageDropdown: [numberOfValues],\n        }\n      } else if (numberOfValues < 10) {\n        this.paginationOptions = {\n          ...this.paginationOptions,\n          perPageDropdown: [5],\n        }\n      } else if (numberOfValues < 20) {\n        this.paginationOptions = {\n          ...this.paginationOptions,\n          perPageDropdown: [5, 10],\n        }\n      } else {\n        this.paginationOptions = {\n          ...this.paginationOptions,\n          perPageDropdown: [5, 10, 20],\n        }\n      }\n\n      // Add settings for topsheet style\n      if (this.config.style == 'topsheet') {\n        this.hideHeader = true\n        this.isFullsize = true\n      }\n\n      // Overwrite templates\n      // Show/Hide header\n      if (this.config.hideHeader != undefined) {\n        this.hideHeader = this.config.hideHeader\n      }\n\n      if (\n        this.isFullsize ||\n        this.config.fullsize ||\n        this.config.showAllRows ||\n        this.config.showallrows ||\n        this.config.showAllrows\n      )\n        this.paginationOptions.enabled = false\n\n      if (numberOfValues < 5) this.paginationOptions.enabled = false\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n// Darkmode Settings\n\n.darktable table.vgt-table {\n  border: none;\n}\n\n.darktable .vgt-table thead th {\n  color: var(--text);\n  background-color: var(--bgMapPanel) !important;\n  background: none;\n  border: none;\n}\n\n.darktable .vgt-table.striped tbody tr:nth-of-type(odd) {\n  background-color: #212121 !important;\n}\n\n.darktable .vgt-table.striped tbody tr:nth-of-type(even) {\n  background-color: var(--bgMapPanel) !important;\n}\n\n.darktable .vgt-table.bordered td {\n  // border-color: var(--bgMapPanel);\n  border: none;\n  color: var(--text);\n}\n\n.darktable .vgt-wrap__footer {\n  background: none;\n  border: none;\n  color: var(--text);\n}\n\n.darktable .footer__row-count__select {\n  color: var(--text);\n}\n\n.darktable .footer__navigation__page-info {\n  color: var(--text);\n}\n\n.darktable .footer__navigation__page-btn {\n  color: var(--text);\n}\n\n.darktable .vgt-input {\n  height: 24px;\n  font-size: 12px;\n  color: var(--text);\n  background-color: #212121;\n  border: none;\n}\n\n.darktable .vgt-input::placeholder {\n  color: var(--text);\n}\n\n// Lightmode Settings\n\n.lighttable table.vgt-table {\n  border: none;\n}\n\n.lighttable .vgt-table thead th {\n  color: var(--text);\n  background-color: var(--bgMapPanel) !important;\n  background: none;\n  border: none;\n}\n\n.lighttable .vgt-table.striped tbody tr:nth-of-type(odd) {\n  background-color: #f6f6f6 !important;\n}\n\n.lighttable .vgt-table.striped tbody tr:nth-of-type(even) {\n  background-color: var(--bgMapPanel) !important;\n}\n\n.lighttable .vgt-table.bordered td {\n  // border-color: var(--bgMapPanel);\n  border: none;\n  color: var(--text);\n}\n\n.lighttable .vgt-wrap__footer {\n  background: none;\n  border: none;\n  background-color: #f6f6f6;\n  color: var(--text);\n}\n\n.lighttable .footer__row-count__select {\n  color: var(--text);\n}\n\n.lighttable .footer__navigation__page-info {\n  color: var(--text);\n}\n\n.lighttable .footer__navigation__page-btn {\n  color: var(--text);\n}\n\n.lighttable .vgt-input {\n  height: 24px;\n  font-size: 12px;\n  color: var(--text);\n  background-color: #f6f6f6;\n  border: none;\n}\n\n.lighttable .vgt-input::placeholder {\n  color: var(--text);\n}\n\n.vgt-table th {\n  padding: 0.4rem 0 0.4rem 0.75rem;\n}\n\n.vgt-wrap__footer {\n  padding: 0.4rem;\n}\n\n.vgt-table,\n.vgt-wrap__footer,\n.footer__row-count__label,\n.footer__row-count__select,\n.footer__navigation__page-info,\n.footer__navigation__page-btn span {\n  font-size: 12px !important;\n}\n\n.vgt-pull-left {\n  margin-top: 4px;\n}\n\n.vgt-table thead * {\n  font-weight: 700;\n}\n\n.vgt-table th.sortable button:hover {\n  cursor: pointer;\n}\n\n// Hide header\n.hide-header .vgt-inner-wrap .vgt-responsive .vgt-table thead,\n.hide-header .vgt-inner-wrap .vgt-fixed-header {\n  display: none;\n}\n\n// Columns right aligned (except the first one\n.topsheet-style .vgt-inner-wrap .vgt-responsive .vgt-table tbody tr td:not(:first-child) {\n  text-align: right;\n  font-weight: bold;\n}\n\n.topsheet-style .vgt-inner-wrap .vgt-responsive .vgt-table tbody tr td {\n  font-size: 1.1rem;\n}\n</style>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n.plugin-panel {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: auto;\n}\n\n@media only screen and (max-width: 640px) {\n}\n</style>\n"],"names":["_sfc_main","defineComponent","VueGoodTable","globalStore","_a","filteredRows","allRows","keys","key","row","dataset","column","value","filter","e","Status","deprecated","array","element","data","filterString","numberOfValues","numberColumns","dateColumns","field","rowObject","i"],"mappings":"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"}