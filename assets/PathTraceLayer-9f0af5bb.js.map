{"version":3,"file":"PathTraceLayer-9f0af5bb.js","sources":["../../node_modules/@deck.gl/core/dist/esm/effects/lighting/point-light.js","../../src/components/PlaybackControls.vue","../../src/layers/moving-icons/moving-icons-layer.ts","../../src/layers/PathTraceLayer.ts"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib/constants';\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nlet idCount = 0;\nexport class PointLight {\n  constructor(props = {}) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"color\", void 0);\n\n    _defineProperty(this, \"intensity\", void 0);\n\n    _defineProperty(this, \"type\", 'point');\n\n    _defineProperty(this, \"position\", void 0);\n\n    _defineProperty(this, \"attenuation\", void 0);\n\n    _defineProperty(this, \"projectedLight\", void 0);\n\n    const {\n      color = DEFAULT_LIGHT_COLOR\n    } = props;\n    const {\n      intensity = DEFAULT_LIGHT_INTENSITY\n    } = props;\n    const {\n      position = DEFAULT_LIGHT_POSITION\n    } = props;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = { ...this\n    };\n  }\n\n  getProjectedLight({\n    layer\n  }) {\n    const {\n      projectedLight\n    } = this;\n    const viewport = layer.context.viewport;\n    const {\n      coordinateSystem,\n      coordinateOrigin\n    } = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n\n}\n\nfunction getAttenuation(props) {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n\n  return DEFAULT_ATTENUATION;\n}\n//# sourceMappingURL=point-light.js.map","<template lang=\"pug\">\n.slider-thingy\n  b-slider.slider(\n    v-model=\"sliderValue\"\n    v-bind=\"sliderOptions\"\n    size=\"is-large\"\n    @dragging=\"dragging\"\n    @dragstart=\"dragStart\"\n    @dragend=\"dragEnd\")\n\n  .buttons\n    .playpause(@click='toggleSimulation')\n      i.button-icon.fa.fa-1x.fa-pause(v-if=\"isRunning\")\n      i.button-icon.fa.fa-1x.fa-play(v-else)\n\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport * as timeConvert from 'convert-seconds'\n\nexport default defineComponent({\n  name: 'PlaybackControls',\n  props: {\n    isRunning: { type: Boolean, required: true },\n    timeStart: { type: Number, required: true },\n    timeEnd: { type: Number, required: true },\n    currentTime: { type: Number, required: true },\n  },\n  data: () => {\n    return {\n      pauseWhileDragging: false,\n      sliderValue: 0,\n      sliderOptions: {\n        min: 0,\n        max: 1000000,\n        clickable: false,\n        duration: 0,\n        lazy: true,\n        tooltip: true,\n        'tooltip-placement': 'top',\n      } as any,\n    }\n  },\n  mounted() {\n    this.sliderOptions['custom-formatter'] = (v: number) => {\n      return this.convertSecondsToClockTimeMinutes(v)\n    }\n    window.addEventListener('keyup', this.onKeyPressed)\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('keyup', this.onKeyPressed)\n  },\n  watch: {\n    currentTime() {\n      this.sliderValue =\n        (1000000.0 * (this.currentTime - this.timeStart)) / (this.timeEnd - this.timeStart)\n    },\n  },\n\n  methods: {\n    toggleSimulation() {\n      this.$emit('click')\n    },\n\n    convertSecondsToClockTimeMinutes(index: number) {\n      const seconds = this.getSecondsFromSlider(index)\n\n      try {\n        const hms = timeConvert(seconds)\n        const minutes = ('00' + hms.minutes).slice(-2)\n        return `${hms.hours}:${minutes}`\n      } catch (e) {\n        return '00:00'\n      }\n    },\n\n    dragStart() {\n      if (this.isRunning) {\n        this.pauseWhileDragging = true\n        this.$emit('click')\n      }\n    },\n\n    dragEnd() {\n      if (this.pauseWhileDragging) this.$emit('click')\n      this.pauseWhileDragging = false\n    },\n\n    dragging(value: number) {\n      this.$emit('time', this.getSecondsFromSlider(value))\n    },\n\n    onKeyPressed(ev: KeyboardEvent) {\n      if (ev.code === 'Space') this.toggleSimulation()\n    },\n\n    getSecondsFromSlider(value: number) {\n      let seconds = ((this.timeEnd - this.timeStart) * value) / 1000000.0\n      if (seconds === this.timeEnd) seconds = this.timeEnd - 1\n      return seconds\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.slider-thingy {\n  display: flex;\n  flex-direction: row;\n  z-index: 1;\n}\n\n.slider {\n  margin: auto 0;\n  flex: 1;\n  font-weight: bold;\n}\n\n.buttons {\n  margin: 0 0 0 2rem;\n}\n\n.playpause {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  color: white;\n  background-color: $themeColor;\n  display: flex;\n  text-align: center;\n  // box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  pointer-events: auto;\n}\n\n.playpause:hover {\n  background-color: #39a8f1;\n  border: 2px solid white;\n}\n\n.button-icon {\n  margin: auto auto;\n}\n\n@media only screen and (max-width: 640px) {\n  .slider-thingy {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .slider {\n    flex: 1;\n    margin: auto 0rem;\n  }\n\n  .buttons {\n    margin: 0.25rem 0 0 2rem;\n  }\n}\n</style>\n","// BC 2021-04-30: this file forked from https://github.com/visgl/deck.gl\n//\n// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { Layer, project32, picking, log } from '@deck.gl/core'\nimport GL from '@luma.gl/constants'\nimport { Model, Geometry } from '@luma.gl/core'\n\nimport vertShader from './icon-layer.glsl.vert?raw'\nimport fragShader from './icon-layer.glsl.frag?raw'\n\nimport IconManager from './icon-manager'\n\nconst DEFAULT_COLOR = [0, 0, 0, 255]\n\nconst defaultProps = {\n  iconAtlas: { type: 'image', value: null, async: true },\n  iconMapping: { type: 'object', value: {}, async: true },\n  sizeScale: { type: 'number', value: 1, min: 0 },\n  billboard: false,\n  sizeUnits: 'pixels',\n  sizeMinPixels: { type: 'number', min: 0, value: 0 }, //  min point radius in pixels\n  sizeMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER }, // max point radius in pixels\n  alphaCutoff: { type: 'number', value: 0.05, min: 0, max: 1 },\n  iconStill: { type: 'object', value: null },\n\n  getIcon: { type: 'accessor', value: (x: any) => x.icon },\n  getColor: { type: 'accessor', value: DEFAULT_COLOR },\n  getSize: { type: 'accessor', value: 1 },\n  getAngle: { type: 'accessor', value: 0 },\n  getPixelOffset: { type: 'accessor', value: [0, 0] },\n\n  getPathStart: { type: 'accessor', value: null },\n  getPathEnd: { type: 'accessor', value: null },\n  getTimeStart: { type: 'accessor', value: null },\n  getTimeEnd: { type: 'accessor', value: null },\n  currentTime: { type: 'number', value: 0 },\n\n  pickable: { type: 'boolean', value: true },\n  onIconError: { type: 'function', value: null, compare: false, optional: true },\n}\n\nexport default class IconLayer extends Layer {\n  getShaders() {\n    return super.getShaders({ vs: vertShader, fs: fragShader, modules: [project32, picking] })\n  }\n\n  initializeState() {\n    this.state = {\n      iconManager: new IconManager(this.context.gl, {\n        onUpdate: this._onUpdate.bind(this),\n        onError: this._onError.bind(this) as any,\n      }),\n    }\n\n    const attributeManager = this.getAttributeManager()\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceTimestamps: {\n        size: 1,\n        accessor: 'getTimeStart',\n      },\n      instanceTimestampsNext: {\n        size: 1,\n        accessor: 'getTimeEnd',\n      },\n      instanceStartPositions: {\n        size: 2,\n        accessor: 'getPathStart',\n      },\n      instanceEndPositions: {\n        size: 2,\n        accessor: 'getPathEnd',\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1,\n      },\n      instanceOffsets: { size: 2, accessor: 'getIcon', transform: this.getInstanceOffset },\n      instanceIconFrames: { size: 4, accessor: 'getIcon', transform: this.getInstanceIconFrame },\n      instanceColorModes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getIcon',\n        transform: this.getInstanceColorMode,\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR,\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle',\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset',\n      },\n    })\n    /* eslint-enable max-len */\n  }\n\n  /* eslint-disable max-statements, complexity */\n  updateState({ oldProps, props, changeFlags }: any) {\n    super.updateState({ props, oldProps, changeFlags })\n\n    const attributeManager = this.getAttributeManager()\n    const { iconAtlas, iconMapping, data, getIcon } = props\n    const { iconManager } = this.state\n\n    iconManager.setProps({ loadOptions: props.loadOptions })\n\n    let iconMappingChanged = false\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas')\n\n    // prepacked iconAtlas from user\n    if (prePacked) {\n      if (oldProps.iconAtlas !== props.iconAtlas) {\n        iconManager.setProps({ iconAtlas, autoPacking: false })\n      }\n\n      if (oldProps.iconMapping !== props.iconMapping) {\n        iconManager.setProps({ iconMapping })\n        iconMappingChanged = true\n      }\n    } else {\n      // otherwise, use autoPacking\n      iconManager.setProps({ autoPacking: true })\n    }\n\n    // handle data changed\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon))\n    ) {\n      iconManager.setProps({ data, getIcon })\n    }\n\n    if (iconMappingChanged) {\n      attributeManager.invalidate('instanceOffsets')\n      attributeManager.invalidate('instanceIconFrames')\n      attributeManager.invalidate('instanceColorModes')\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const { gl } = this.context\n      this.state.model?.delete()\n      this.state.model = this._getModel(gl)\n      attributeManager.invalidateAll()\n    }\n  }\n  /* eslint-enable max-statements, complexity */\n\n  get isLoaded() {\n    return super.isLoaded && this.state.iconManager.isLoaded\n  }\n\n  finalizeState() {\n    super.finalizeState()\n    // Release resources held by the icon manager\n    this.state.iconManager.finalize()\n  }\n\n  draw({ uniforms }: any) {\n    const {\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels,\n      sizeUnits,\n      billboard,\n      alphaCutoff,\n      currentTime,\n      iconStill,\n      pickable,\n    } = this.props\n\n    const { iconManager } = this.state\n    const { viewport } = this.context\n\n    const iconsTexture = iconManager.getTexture()\n    if (iconsTexture) {\n      this.state.model\n        .setUniforms(uniforms)\n        .setUniforms({\n          iconsTexture,\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n          sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\n          sizeMinPixels,\n          sizeMaxPixels,\n          billboard,\n          alphaCutoff,\n          currentTime,\n          pickable,\n          iconStillOffsets: this.getInstanceOffset(iconStill),\n          iconStillFrames: this.getInstanceIconFrame(iconStill),\n        })\n        .draw()\n    }\n  }\n\n  _getModel(gl: any) {\n    // The icon-layer vertex shader uses 2d positions\n    // specifed via: attribute vec2 positions;\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1]\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        attributes: {\n          // The size must be explicitly passed here otherwise luma.gl\n          // will default to assuming that positions are 3D (x,y,z)\n          positions: {\n            size: 2,\n            value: new Float32Array(positions),\n          },\n        },\n      }),\n      isInstanced: true,\n    })\n  }\n\n  _onUpdate() {\n    this.setNeedsRedraw()\n  }\n\n  _onError(evt: any) {\n    const { onIconError } = this.getCurrentLayer().props\n    if (onIconError) {\n      onIconError(evt)\n    } else {\n      log.error(evt.error)()\n    }\n  }\n\n  getInstanceOffset(icon: any) {\n    const rect = this.state.iconManager.getIconMapping(icon)\n    return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0]\n  }\n\n  getInstanceColorMode(icon: any) {\n    const mapping = this.state.iconManager.getIconMapping(icon)\n    return mapping.mask ? 1 : 0\n  }\n\n  getInstanceIconFrame(icon: any) {\n    const rect = this.state.iconManager.getIconMapping(icon)\n    return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0]\n  }\n}\n\nIconLayer.layerName = 'FlatIconLayer'\nIconLayer.defaultProps = defaultProps\n","import { LineLayer } from '@deck.gl/layers'\n\nconst defaultProps = {\n  currentTime: { type: 'number', value: 0, min: 0 },\n  getTimeStart: { type: 'accessor', value: null },\n  getTimeEnd: { type: 'accessor', value: null },\n  searchFlag: { type: 'number', value: 0 },\n}\n\nexport default class PathTraceLayer extends LineLayer {\n  getShaders() {\n    const shaders = super.getShaders()\n    shaders.inject = {\n      // Timestamp of the vertex\n      'vs:#decl': `\\\n        attribute float timeStart;\n        attribute float timeEnd;\n        uniform float currentTime;\n        uniform float searchFlag;\n        varying float vTime;\n      `,\n      'vs:#main-start': `\\\n        if (searchFlag == 1.0) {\n          vTime = 999.0;\n        } else if(timeStart > currentTime || timeEnd < currentTime ) {\n          vTime = -1.0;\n          return;\n        } else {\n          float nearBeginning = currentTime - timeStart;\n          float nearEnd = timeEnd - currentTime;\n          vTime = min(nearBeginning, nearEnd);\n        }\n      `,\n      'fs:#decl': `\\\n        uniform float currentTime;\n        varying float vTime;\n        uniform float searchFlag;\n      `,\n      'fs:#main-start': `\\\n        if (searchFlag == 0.0 && vTime == -1.0 ) discard;\n      `,\n      // fade the traces in and out\n      'fs:DECKGL_FILTER_COLOR': `\\\n        if (searchFlag == 0.0 && vTime <= 10.0) color.a *= (vTime / 10.0);\n      `,\n    }\n    return shaders\n  }\n\n  initializeState(params: any) {\n    super.initializeState(params)\n\n    const attributeManager = this.getAttributeManager()\n    attributeManager.addInstanced({\n      timeStart: { size: 1, accessor: 'getTimeStart' },\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\n    })\n  }\n\n  draw(params: any) {\n    const { currentTime, searchFlag } = this.props\n\n    params.uniforms = Object.assign({}, params.uniforms, {\n      currentTime,\n      searchFlag,\n    })\n\n    super.draw(params)\n  }\n}\n\nPathTraceLayer.layerName = 'PathTraceLayer'\nPathTraceLayer.defaultProps = defaultProps\n"],"names":["DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","props","_defineProperty","color","intensity","position","getAttenuation","layer","projectedLight","viewport","coordinateSystem","coordinateOrigin","projectPosition","COORDINATE_SYSTEM","_sfc_main","defineComponent","v","index","seconds","hms","timeConvert","minutes","value","ev","DEFAULT_COLOR","defaultProps","x","IconLayer","Layer","vertShader","fragShader","project32","picking","IconManager","GL","oldProps","changeFlags","attributeManager","iconAtlas","iconMapping","data","getIcon","iconManager","iconMappingChanged","gl","_a","uniforms","sizeScale","sizeMinPixels","sizeMaxPixels","sizeUnits","billboard","alphaCutoff","currentTime","iconStill","pickable","iconsTexture","positions","Model","Geometry","evt","onIconError","log","icon","rect","PathTraceLayer","LineLayer","shaders","params","searchFlag"],"mappings":"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","x_google_ignoreList":[0]}